// Generated by Haxe 4.0.0-rc.1+e9fdf59


// !!! MANUAL EDIT. ADDED. Need to get access to the starter method or else it's lost in this scope.
var starterRef = null;



(function ($hx_exports, $global) { "use strict";
$hx_exports["kha"] = $hx_exports["kha"] || {};
$hx_exports["kha"]["input"] = $hx_exports["kha"]["input"] || {};
;$hx_exports["kha"]["_Color"] = $hx_exports["kha"]["_Color"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.main = function() {
	iron_object_BoneAnimation.skinMaxBones = 17;
	iron_object_LightObject.cascadeCount = 4;
	iron_object_LightObject.cascadeSplitFactor = 0.800000011920929;
	armory_system_Starter.numAssets = 551;
	armory_system_Starter.drawLoading = armory_trait_internal_LoadingScreen.render;
	armory_system_Starter.main("scene_splash_screen",1,false,true,false,1280,720,1,true,armory_renderpath_RenderPathCreator.get);
};

// !!! MANUAL EDIT. ADDED. Use starterRef to call the, well, starter.
starterRef = Main.main;



Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
var _$UInt_UInt_$Impl_$ = {};
$hxClasses["_UInt.UInt_Impl_"] = _$UInt_UInt_$Impl_$;
_$UInt_UInt_$Impl_$.__name__ = "_UInt.UInt_Impl_";
_$UInt_UInt_$Impl_$.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a > b;
	}
};
_$UInt_UInt_$Impl_$.gte = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a >= b;
	}
};
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	var int = this1;
	if(int < 0) {
		return 4294967296.0 + int;
	} else {
		return int + 0.0;
	}
};
var iron_Trait = function() {
	this._render2D = null;
	this._render = null;
	this._lateUpdate = null;
	this._update = null;
	this._remove = null;
	this._init = null;
	this._add = null;
	this.name = "";
};
$hxClasses["iron.Trait"] = iron_Trait;
iron_Trait.__name__ = "iron.Trait";
iron_Trait.prototype = {
	remove: function() {
		this.object.removeTrait(this);
	}
	,notifyOnAdd: function(f) {
		if(this._add == null) {
			this._add = [];
		}
		this._add.push(f);
	}
	,notifyOnInit: function(f) {
		if(this._init == null) {
			this._init = [];
		}
		this._init.push(f);
		iron_App.notifyOnInit(f);
	}
	,notifyOnRemove: function(f) {
		if(this._remove == null) {
			this._remove = [];
		}
		this._remove.push(f);
	}
	,notifyOnUpdate: function(f) {
		if(this._update == null) {
			this._update = [];
		}
		this._update.push(f);
		iron_App.notifyOnUpdate(f);
	}
	,notifyOnRender2D: function(f) {
		if(this._render2D == null) {
			this._render2D = [];
		}
		this._render2D.push(f);
		iron_App.notifyOnRender2D(f);
	}
	,__class__: iron_Trait
};
var arm_ArrowProjectileObject = function() {
	this.lifeTime = 0;
	this.beginDropTime = 0;
	this.removeHitDelay = 0;
	this.spawnCalled = false;
	this.body = null;
	this.myFaction = -1;
	iron_Trait.call(this);
	this.setupEventLinks();
};
$hxClasses["arm.ArrowProjectileObject"] = arm_ArrowProjectileObject;
arm_ArrowProjectileObject.__name__ = "arm.ArrowProjectileObject";
arm_ArrowProjectileObject.__super__ = iron_Trait;
arm_ArrowProjectileObject.prototype = $extend(iron_Trait.prototype,{
	setupEventLinks: function() {
		armory_trait_physics_bullet_PhysicsWorld.active.notifyOnPreUpdate($bind(this,this.preUpdate));
		this.notifyOnUpdate($bind(this,this.update));
		this.notifyOnRemove($bind(this,this.removed));
	}
	,removePreUpdateLink: function() {
		armory_trait_physics_bullet_PhysicsWorld.active.removePreUpdate($bind(this,this.preUpdate));
	}
	,spawned: function(arg_faction) {
		var _gthis = this;
		this.myFaction = arg_faction;
		this.body = this.object.getTrait(armory_trait_physics_bullet_RigidBody);
		this.physics = armory_trait_physics_bullet_PhysicsWorld.active;
		this.body.disableGravity();
		this.body.body.setActivationState(1);
		var _this = this.object.transform.world;
		var vecForward_x = _this.self._10;
		var vecForward_y = _this.self._11;
		var vecForward_z = _this.self._12;
		var vecForward_w = 1.0;
		var n = Math.sqrt(vecForward_x * vecForward_x + vecForward_y * vecForward_y + vecForward_z * vecForward_z);
		if(n > 0.0) {
			var invN = 1.0 / n;
			vecForward_x *= invN;
			vecForward_y *= invN;
			vecForward_z *= invN;
		}
		this.body.setLinearVelocity(vecForward_x * 1300,vecForward_y * 1300,vecForward_z * 1300);
		this.beginDropTime = kha_Scheduler.time() + 1.2 + custom_$lib_CustomLib.getRandomFloat(0,0.26);
		this.lifeTime = kha_Scheduler.time() + 10;
		var arrowMat = custom_$lib_CustomGame.aryStr_resource_arrow_materialList[this.myFaction];
		custom_$lib_CustomLib.getMaterial(arrowMat,function(mat) {
			if(_gthis.object != null) {
				custom_$lib_CustomLib.setTexturesFromMaterial_obj(_gthis.object,mat);
			}
		});
		this.spawnCalled = true;
	}
	,removed: function() {
		if(!this.spawnCalled) {
			return;
		}
		this.removePreUpdateLink();
	}
	,preUpdate: function() {
		if(!this.spawnCalled) {
			return;
		}
	}
	,update: function() {
		if(!this.spawnCalled) {
			return;
		}
		if(this.body != null && this.removeHitDelay == 0) {
			var rbs = this.physics.getContacts(this.body);
			if(rbs != null) {
				var _g = 0;
				while(_g < rbs.length) {
					var rb = rbs[_g];
					++_g;
					if(rb.object != null) {
						var customObjectRef = rb.object.getTrait(arm_CustomObject);
						var personAIObjectTrait = rb.object.getTrait(arm_PersonAIObject);
						var playerObjectTrait = rb.object.getTrait(arm_PlayerObject);
						var arrowProjectileObjectTrait = rb.object.getTrait(arm_ArrowProjectileObject);
						var rigidBodyTrait = rb.object.getTrait(armory_trait_physics_bullet_RigidBody);
						var isOtherTrigger = false;
						var passThroughException = false;
						if(rigidBodyTrait != null) {
							isOtherTrigger = (rigidBodyTrait.body.getCollisionFlags() & 4) != 0;
						}
						passThroughException = !rb.object.visible;
						var personObjectTrait = null;
						if(playerObjectTrait != null) {
							personObjectTrait = playerObjectTrait;
						} else if(personAIObjectTrait != null) {
							personObjectTrait = personAIObjectTrait;
						}
						if(personObjectTrait != null) {
							var playerDealt = this.myFaction == 0 && personObjectTrait.myFaction != 0;
							if(playerDealt || custom_$lib_CustomGame.factionHates(this.myFaction,personObjectTrait.myFaction)) {
								if(playerDealt && custom_$lib_CustomGame.superArrowDamage) {
									personObjectTrait.takeDamage(9001);
								} else {
									personObjectTrait.takeDamage(6);
								}
								if(personObjectTrait.currentHealth <= 0 && playerDealt) {
									if(personObjectTrait.myFaction == 2) {
										custom_$lib_CustomGame.playerRefTrait.score += 10;
									} else if(personObjectTrait.myFaction == 1) {
										custom_$lib_CustomGame.playerRefTrait.score -= 20;
									}
								}
								this.object.remove();
								return;
							}
						} else if(!(arrowProjectileObjectTrait != null || isOtherTrigger || passThroughException)) {
							this.body.setLinearFactor(0,0,0);
							this.body.setAngularFactor(0,0,0);
							this.body.disableGravity();
							this.body.setLinearVelocity(0,0,0);
							this.body.setAngularFactor(0,0,0);
							if(customObjectRef._isWall) {
								this.object.remove();
								return;
							} else {
								this.removeHitDelay = kha_Scheduler.time() + 3;
							}
						}
					}
				}
			}
			if(this.beginDropTime != 0) {
				if(this.beginDropTime <= kha_Scheduler.time()) {
					this.beginDropTime = 0;
					this.body.enableGravity();
					this.body.setAngularFactor(0,0,0);
					this.body.setGravity(new iron_math_Vec4(0,0,-45));
				}
			} else {
				var myVel = this.body.getLinearVelocity();
				if(Math.sqrt(myVel.x * myVel.x + myVel.y * myVel.y + myVel.z * myVel.z) > 20) {
					this.body.syncTransform();
				}
			}
		}
		if(this.removeHitDelay != 0 && this.removeHitDelay <= kha_Scheduler.time()) {
			this.object.remove();
			return;
		}
		if(this.lifeTime <= kha_Scheduler.time()) {
			this.object.remove();
			return;
		}
	}
	,__class__: arm_ArrowProjectileObject
});
var arm_CustomGameInit = function() {
	this.myAssignedSceneName = "";
	this.nextSquadSpawnTime = 0;
	iron_Trait.call(this);
	iron_Scene.active.notifyOnInit($bind(this,this.init));
	this.notifyOnUpdate($bind(this,this.update));
	this.notifyOnRemove($bind(this,this.removed));
};
$hxClasses["arm.CustomGameInit"] = arm_CustomGameInit;
arm_CustomGameInit.__name__ = "arm.CustomGameInit";
arm_CustomGameInit.__super__ = iron_Trait;
arm_CustomGameInit.prototype = $extend(iron_Trait.prototype,{
	setupArcadeMode: function() {
		custom_$lib_CustomGame.currentGameMode = 1;
		custom_$lib_CustomGame.gameEndTime = custom_$lib_CustomLib.getCurrentTime() + custom_$lib_CustomGame.arcadeModeDuration;
		var tmp = custom_$lib_CustomGame.buildTimerString_update();
		this.txtTimer.text = "Timer: " + tmp;
		this.nextSquadSpawnTime = custom_$lib_CustomLib.getCurrentTime() + custom_$lib_CustomLib.randomInRange_float(1.8,4.8);
		var startingSquads = custom_$lib_CustomLib.randomInRange_int(7,9);
		var _g = 0;
		var _g1 = startingSquads;
		while(_g < _g1) {
			var i = _g++;
			var squad_x = custom_$lib_CustomLib.randomInRange_float(-1080,1080);
			var squad_y = custom_$lib_CustomLib.randomInRange_float(-1080,1080);
			custom_$lib_CustomGame.spawnRandomArcherSquad(squad_x,squad_y);
		}
		custom_$lib_CustomGame.playerSpeedFactor = 1.4;
	}
	,init: function() {
		this.thePlayerCanvas = this.object.getTrait(armory_trait_internal_CanvasScript);
		if(this.myAssignedSceneName == "") {
			this.myAssignedSceneName = custom_$lib_CustomLib.getActiveSceneName();
		}
		if(!this.thePlayerCanvas.get_ready()) {
			if(custom_$lib_CustomLib.getActiveSceneName() == this.myAssignedSceneName) {
				iron_system_Tween.timer(0.5,$bind(this,this.init));
			}
			return;
		}
		custom_$lib_CustomGame.currentSceneName = custom_$lib_CustomLib.getActiveSceneName();
		custom_$lib_CustomGame.currentSceneStartTime = custom_$lib_CustomLib.getCurrentTime();
		this.txtTimer = this.thePlayerCanvas.getElement("txtTimer");
		haxe_Log.trace("CUSTOMGAMEINIT...",{ fileName : "arm/CustomGameInit.hx", lineNumber : 127, className : "arm.CustomGameInit", methodName : "init"});
		haxe_Log.trace("object.uid? " + this.object.uid,{ fileName : "arm/CustomGameInit.hx", lineNumber : 128, className : "arm.CustomGameInit", methodName : "init"});
		if(iron_Scene.active != null) {
			haxe_Log.trace("iron.Scene.active.uid? " + " " + iron_Scene.active.uid,{ fileName : "arm/CustomGameInit.hx", lineNumber : 130, className : "arm.CustomGameInit", methodName : "init"});
		}
		if(iron_Scene.global != null) {
			haxe_Log.trace("iron.Scene.global.uid? " + " " + iron_Scene.global.uid,{ fileName : "arm/CustomGameInit.hx", lineNumber : 134, className : "arm.CustomGameInit", methodName : "init"});
		}
		if(iron_Scene.active.root != null) {
			haxe_Log.trace("iron.Scene.active.root.uid? " + " " + iron_Scene.active.root.uid,{ fileName : "arm/CustomGameInit.hx", lineNumber : 138, className : "arm.CustomGameInit", methodName : "init"});
		}
		custom_$lib_CustomGame.currentAllyCount = 0;
		custom_$lib_CustomGame.currentEnemyCount = 0;
		custom_$lib_CustomGame.currentGameMode = 0;
		custom_$lib_CustomGame.gameEndTime = 0;
		custom_$lib_CustomGame.playerSpeedFactor = 1.0;
		var arcadeModeTest = this.object.getTrait(arm_Game_$ArcadeMode);
		if(arcadeModeTest != null) {
			this.setupArcadeMode();
		}
		var imgCrosshair = this.thePlayerCanvas.getElement("imgCrosshair");
		var UseNightCrosshair_Test = this.object.getTrait(arm_UseNightCrosshair);
		if(UseNightCrosshair_Test != null) {
			imgCrosshair.asset = "crosshair_night.png";
		} else {
			imgCrosshair.asset = "crosshair.png";
		}
		var childrenClone = this.object.children.slice();
		var _g = 0;
		while(_g < childrenClone.length) {
			var thisChild = childrenClone[_g];
			++_g;
			var testinstance = new arm_CustomObject();
			thisChild.addTrait(testinstance);
		}
	}
	,update: function() {
		switch(custom_$lib_CustomGame.currentGameMode) {
		case 0:
			break;
		case 1:
			if(custom_$lib_CustomLib.getCurrentTime() >= custom_$lib_CustomGame.gameEndTime) {
				custom_$lib_CustomGame.endGame(true,custom_$lib_CustomGame.playerRefTrait.score);
				return;
			} else {
				var tmp = custom_$lib_CustomGame.buildTimerString_update();
				this.txtTimer.text = "Timer: " + tmp;
			}
			var totalArchers = custom_$lib_CustomGame.currentAllyCount + custom_$lib_CustomGame.currentEnemyCount;
			if(totalArchers < 50 && custom_$lib_CustomLib.getCurrentTime() >= this.nextSquadSpawnTime) {
				this.nextSquadSpawnTime = custom_$lib_CustomLib.getCurrentTime() + custom_$lib_CustomLib.randomInRange_float(1.8,4.8);
				var squad_x = custom_$lib_CustomLib.randomInRange_float(-1080,1080);
				var squad_y = custom_$lib_CustomLib.randomInRange_float(-1080,1080);
				custom_$lib_CustomGame.spawnRandomArcherSquad(squad_x,squad_y);
			}
			break;
		}
	}
	,removed: function() {
	}
	,__class__: arm_CustomGameInit
});
var arm_CustomObject = function() {
	this._isWall = false;
	this._isGround = false;
	iron_Trait.call(this);
	this.notifyOnAdd($bind(this,this.added));
};
$hxClasses["arm.CustomObject"] = arm_CustomObject;
arm_CustomObject.__name__ = "arm.CustomObject";
arm_CustomObject.__super__ = iron_Trait;
arm_CustomObject.prototype = $extend(iron_Trait.prototype,{
	added: function() {
		if(this.object != null) {
			var templateObjectTest = this.object.getTrait(arm_TemplateObject);
			if(templateObjectTest != null) {
				var rigidBodyTest = this.object.getTrait(armory_trait_physics_bullet_RigidBody);
				if(rigidBodyTest != null) {
					haxe_Log.trace("***TEMPLATE FOUND: " + this.object.name,{ fileName : "arm/CustomObject.hx", lineNumber : 47, className : "arm.CustomObject", methodName : "added"});
					rigidBodyTest.disableGravity();
				}
				this.object.removeTrait(templateObjectTest);
				templateObjectTest.remove();
			}
			if(this.object.getTrait(arm_MARKER_$spawnEnemy) != null) {
				if(!custom_$lib_CustomGame.canSpawnThings) {
					return;
				}
				custom_$lib_CustomLib.spawnObject_quat(custom_$lib_CustomGame.currentSceneName + "_" + "person_cylinder_template",this.object.transform.loc,this.object.transform.rot,new iron_math_Vec4(6,6,12.8),function(o) {
					custom_$lib_CustomGame.currentEnemyCount += 1;
					var traitGen = new arm_PersonAIObject();
					o.addTrait(traitGen);
					traitGen.spawned(2);
					o.transform.rotate(new iron_math_Vec4(0,0,1),180 * (Math.PI / 180));
					custom_$lib_CustomLib.snapToGround(o);
					o.transform.buildMatrix();
					o.getTrait(armory_trait_physics_bullet_RigidBody).syncTransform();
				},null,true);
				custom_$lib_CustomLib.setObjectVisibility(this.object,false);
				this.object.remove();
				return;
			}
			if(this.object.getTrait(arm_MARKER_$spawnAlly) != null) {
				if(!custom_$lib_CustomGame.canSpawnThings) {
					return;
				}
				custom_$lib_CustomLib.spawnObject_quat(custom_$lib_CustomGame.currentSceneName + "_" + "person_cylinder_template",this.object.transform.loc,this.object.transform.rot,new iron_math_Vec4(6,6,12.8),function(o1) {
					custom_$lib_CustomGame.currentAllyCount += 1;
					var traitGen1 = new arm_PersonAIObject();
					o1.addTrait(traitGen1);
					traitGen1.spawned(1);
					o1.transform.rotate(new iron_math_Vec4(0,0,1),180 * (Math.PI / 180));
					custom_$lib_CustomLib.snapToGround(o1);
					o1.transform.buildMatrix();
					o1.getTrait(armory_trait_physics_bullet_RigidBody).syncTransform();
				},null,true);
				custom_$lib_CustomLib.setObjectVisibility(this.object,false);
				this.object.remove();
				return;
			}
			if(this.object.getTrait(arm_MARKER_$spawnPlayer) != null) {
				custom_$lib_CustomLib.spawnObject_quat(custom_$lib_CustomGame.currentSceneName + "_" + "person_cylinder_template",this.object.transform.loc,this.object.transform.rot,new iron_math_Vec4(6,6,12.8),function(o2) {
					var traitGen2 = new arm_PlayerObject();
					o2.addTrait(traitGen2);
					traitGen2.spawned(0);
					o2.transform.rotate(new iron_math_Vec4(0,0,1),180 * (Math.PI / 180));
					custom_$lib_CustomLib.snapToGround(o2);
					o2.transform.buildMatrix();
					o2.getTrait(armory_trait_physics_bullet_RigidBody).syncTransform();
					custom_$lib_CustomGame.playerRef = o2;
					custom_$lib_CustomGame.playerRefTrait = traitGen2;
				},null,true);
				custom_$lib_CustomLib.setObjectVisibility(this.object,false);
				this.object.remove();
				return;
			}
			var groundObjectTrait = this.object.getTrait(arm_GroundObject);
			if(groundObjectTrait != null) {
				this._isGround = true;
				this.object.removeTrait(groundObjectTrait);
				groundObjectTrait.remove();
			}
			var wallObjectTrait = this.object.getTrait(arm_WallObject);
			if(wallObjectTrait != null) {
				this._isWall = true;
				this.object.removeTrait(wallObjectTrait);
				wallObjectTrait.remove();
			}
		}
	}
	,isGround: function() {
		return this._isGround;
	}
	,__class__: arm_CustomObject
});
var arm_EndScreenLogic = function() {
	this.nextSceneName = "";
	this.scoreStore = 0;
	this.wasVictory = false;
	this.endedSceneName = "";
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
	this.notifyOnRemove($bind(this,this.removed));
};
$hxClasses["arm.EndScreenLogic"] = arm_EndScreenLogic;
arm_EndScreenLogic.__name__ = "arm.EndScreenLogic";
arm_EndScreenLogic.__super__ = iron_Trait;
arm_EndScreenLogic.prototype = $extend(iron_Trait.prototype,{
	removed: function() {
		armory_system_Event.remove("btnNext_clicked");
		armory_system_Event.remove("btnRestart_clicked");
		armory_system_Event.remove("btnBackToSplash_clicked");
		armory_system_Event.remove("btnQuit_clicked");
	}
	,init: function() {
		var thaCanvas = this.object.getTrait(armory_trait_internal_CanvasScript);
		if(!thaCanvas.get_ready()) {
			if(custom_$lib_CustomLib.getActiveSceneName() == "scene_end") {
				iron_system_Tween.timer(0.5,$bind(this,this.init));
			}
			return;
		}
		var mouse = iron_system_Input.getMouse();
		if(mouse.locked) {
			mouse.unlock();
		}
		var eleRef = thaCanvas.getElement("txtTitle");
		var otherVariable = thaCanvas.getElement("txtScore");
		var lastLine = thaCanvas.getElement("txtExtraLine");
		var btnNext = thaCanvas.getElement("btnNext");
		this.nextSceneName = custom_$lib_CustomGame.getNextSceneName(this.endedSceneName);
		if(!this.wasVictory || this.nextSceneName == "") {
			btnNext.visible = false;
		} else {
			btnNext.visible = true;
		}
		if(this.wasVictory == true) {
			eleRef.text = "VICTORY";
			eleRef.color = -16482560;
			iron_system_Tween.timer(0.72,function() {
				if(custom_$lib_CustomLib.getActiveSceneName() == "scene_end") {
					custom_$lib_CustomLib.playSound("victory.ogg",0.31);
				}
			});
		} else {
			eleRef.text = "GAME OVER";
			eleRef.color = -7143424;
			iron_system_Tween.timer(0.72,function() {
				if(custom_$lib_CustomLib.getActiveSceneName() == "scene_end") {
					custom_$lib_CustomLib.playSound("lost.ogg",0.29);
				}
			});
		}
		otherVariable.text = "Your score was " + this.scoreStore + ".";
		if(custom_$lib_CustomGame.currentGameMode == 1 && !this.wasVictory && custom_$lib_CustomGame.gameEndTime != 0) {
			var lastedTime = custom_$lib_CustomGame.arcadeModeDuration - (custom_$lib_CustomGame.gameEndTime - custom_$lib_CustomLib.getCurrentTime());
			var timerString = custom_$lib_CustomGame.buildTimeString(lastedTime);
			lastLine.text = "You lasted " + timerString + ".";
		}
		armory_system_Event.add("btnNext_clicked",$bind(this,this.btnNext_clicked));
		armory_system_Event.add("btnRestart_clicked",$bind(this,this.btnRestart_clicked));
		armory_system_Event.add("btnBackToSplash_clicked",$bind(this,this.btnBack_clicked));
		armory_system_Event.add("btnQuit_clicked",$bind(this,this.btnQuit_clicked));
	}
	,btnNext_clicked: function() {
		haxe_Log.trace("***NEXT CLICKED. Ended scene: " + this.endedSceneName + " " + " Next Scene: " + this.nextSceneName,{ fileName : "arm/EndScreenLogic.hx", lineNumber : 136, className : "arm.EndScreenLogic", methodName : "btnNext_clicked"});
		if(this.wasVictory && this.nextSceneName != "") {
			custom_$lib_CustomGame.gotoPreLevel(this.nextSceneName);
		}
	}
	,btnRestart_clicked: function() {
		haxe_Log.trace("AND WHAT IS THE SCENE THAT JUST ENDED " + this.endedSceneName,{ fileName : "arm/EndScreenLogic.hx", lineNumber : 148, className : "arm.EndScreenLogic", methodName : "btnRestart_clicked"});
		iron_Scene.setActive(this.endedSceneName,function(o) {
		});
	}
	,btnBack_clicked: function() {
		iron_Scene.setActive("scene_splash_screen",function(o) {
		});
	}
	,btnQuit_clicked: function() {
		kha_System.stop();
	}
	,__class__: arm_EndScreenLogic
});
var arm_FastRotate = function() {
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
	this.notifyOnUpdate($bind(this,this.update));
};
$hxClasses["arm.FastRotate"] = arm_FastRotate;
arm_FastRotate.__name__ = "arm.FastRotate";
arm_FastRotate.__super__ = iron_Trait;
arm_FastRotate.prototype = $extend(iron_Trait.prototype,{
	init: function() {
	}
	,update: function() {
		this.object.transform.rotate(new iron_math_Vec4(0,0,1),0.004);
	}
	,__class__: arm_FastRotate
});
var arm_Game_$ArcadeMode = function() {
	iron_Trait.call(this);
};
$hxClasses["arm.Game_ArcadeMode"] = arm_Game_$ArcadeMode;
arm_Game_$ArcadeMode.__name__ = "arm.Game_ArcadeMode";
arm_Game_$ArcadeMode.__super__ = iron_Trait;
arm_Game_$ArcadeMode.prototype = $extend(iron_Trait.prototype,{
	__class__: arm_Game_$ArcadeMode
});
var arm_GoalArea = function() {
	this.nextNearbyCheck = 0;
	this.myAppearCondition = 0;
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
	this.notifyOnUpdate($bind(this,this.update));
};
$hxClasses["arm.GoalArea"] = arm_GoalArea;
arm_GoalArea.__name__ = "arm.GoalArea";
arm_GoalArea.__super__ = iron_Trait;
arm_GoalArea.prototype = $extend(iron_Trait.prototype,{
	init: function() {
		this.checkmark_meshRef = custom_$lib_CustomLib.getDirectChild(this.object,"checkmark_mesh");
		this.rigidBodyTrait = this.object.getTrait(armory_trait_physics_bullet_RigidBody);
		this.physics = armory_trait_physics_bullet_PhysicsWorld.active;
		custom_$lib_CustomLib.setObjectVisibility(this.object,false);
		var Goal_RemoveAllEnemiesConditionTest = this.object.getTrait(arm_Goal_$RemoveAllEnemiesCondition);
		var Goal_RemoveNearbyEnemiesConditionTest = this.object.getTrait(arm_Goal_$RemoveNearbyEnemiesCondition);
		if(Goal_RemoveAllEnemiesConditionTest != null) {
			this.myAppearCondition = 1;
			custom_$lib_CustomLib.setObjectVisibility(this.checkmark_meshRef,false);
		} else if(Goal_RemoveNearbyEnemiesConditionTest != null) {
			this.nextNearbyCheck = custom_$lib_CustomLib.getCurrentTime() + 2;
			this.myAppearCondition = 2;
			custom_$lib_CustomLib.setObjectVisibility(this.checkmark_meshRef,false);
		} else {
			this.myAppearCondition = 0;
			custom_$lib_CustomLib.setObjectVisibility(this.checkmark_meshRef,true);
		}
	}
	,update: function() {
		this.checkmark_meshRef.transform.rotate(new iron_math_Vec4(0,0,1),0.011);
		if(this.myAppearCondition == 0) {
			if(this.rigidBodyTrait != null) {
				var rbs = this.physics.getContacts(this.rigidBodyTrait);
				if(rbs != null) {
					var _g = 0;
					while(_g < rbs.length) {
						var rb = rbs[_g];
						++_g;
						if(rb.object != null) {
							var playerTraitTest = rb.object.getTrait(arm_PlayerObject);
							if(playerTraitTest != null) {
								custom_$lib_CustomGame.endGame(true,playerTraitTest.score);
							}
						}
					}
				}
			}
		} else if(this.myAppearCondition == 1) {
			if(custom_$lib_CustomGame.currentEnemyCount <= 0) {
				this.myAppearCondition = 0;
				custom_$lib_CustomLib.setObjectVisibility(this.checkmark_meshRef,true);
				custom_$lib_CustomGame.playerRefTrait.goalVisibleNotice();
			}
		} else if(this.myAppearCondition == 2) {
			if(custom_$lib_CustomLib.getCurrentTime() > this.nextNearbyCheck) {
				this.nextNearbyCheck = custom_$lib_CustomLib.getCurrentTime() + 2;
				var isEnemyNearby = false;
				var theScene = custom_$lib_CustomLib.getActiveScene();
				var _g1 = 0;
				var _g11 = theScene.root.children;
				while(_g1 < _g11.length) {
					var thatChild = _g11[_g1];
					++_g1;
					var personAI_TraitTest = thatChild.getTrait(arm_PersonAIObject);
					if(personAI_TraitTest != null) {
						if(personAI_TraitTest.myFaction == 2) {
							var theDist = custom_$lib_CustomLib.getDistance(this.object.transform.loc,thatChild.transform.loc);
							if(theDist < 300) {
								isEnemyNearby = true;
								break;
							}
						}
					}
				}
				if(!isEnemyNearby) {
					this.myAppearCondition = 0;
					custom_$lib_CustomLib.setObjectVisibility(this.checkmark_meshRef,true);
					custom_$lib_CustomGame.playerRefTrait.goalVisibleNotice();
				}
			}
		}
	}
	,__class__: arm_GoalArea
});
var arm_Goal_$RemoveAllEnemiesCondition = function() {
	iron_Trait.call(this);
};
$hxClasses["arm.Goal_RemoveAllEnemiesCondition"] = arm_Goal_$RemoveAllEnemiesCondition;
arm_Goal_$RemoveAllEnemiesCondition.__name__ = "arm.Goal_RemoveAllEnemiesCondition";
arm_Goal_$RemoveAllEnemiesCondition.__super__ = iron_Trait;
arm_Goal_$RemoveAllEnemiesCondition.prototype = $extend(iron_Trait.prototype,{
	__class__: arm_Goal_$RemoveAllEnemiesCondition
});
var arm_Goal_$RemoveNearbyEnemiesCondition = function() {
	iron_Trait.call(this);
};
$hxClasses["arm.Goal_RemoveNearbyEnemiesCondition"] = arm_Goal_$RemoveNearbyEnemiesCondition;
arm_Goal_$RemoveNearbyEnemiesCondition.__name__ = "arm.Goal_RemoveNearbyEnemiesCondition";
arm_Goal_$RemoveNearbyEnemiesCondition.__super__ = iron_Trait;
arm_Goal_$RemoveNearbyEnemiesCondition.prototype = $extend(iron_Trait.prototype,{
	__class__: arm_Goal_$RemoveNearbyEnemiesCondition
});
var arm_GroundObject = function() {
	iron_Trait.call(this);
};
$hxClasses["arm.GroundObject"] = arm_GroundObject;
arm_GroundObject.__name__ = "arm.GroundObject";
arm_GroundObject.__super__ = iron_Trait;
arm_GroundObject.prototype = $extend(iron_Trait.prototype,{
	__class__: arm_GroundObject
});
var arm_InstructionsLogic = function() {
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
	this.notifyOnRemove($bind(this,this.removed));
};
$hxClasses["arm.InstructionsLogic"] = arm_InstructionsLogic;
arm_InstructionsLogic.__name__ = "arm.InstructionsLogic";
arm_InstructionsLogic.__super__ = iron_Trait;
arm_InstructionsLogic.prototype = $extend(iron_Trait.prototype,{
	removed: function() {
		armory_system_Event.remove("btnBackToSplash_clicked");
	}
	,init: function() {
		armory_system_Event.add("btnBackToSplash_clicked",$bind(this,this.btnBackToSplash_clicked));
	}
	,btnBackToSplash_clicked: function() {
		iron_Scene.setActive("scene_splash_screen",function(o) {
		});
	}
	,__class__: arm_InstructionsLogic
});
var arm_Level1_$preTextLogic = function() {
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
	this.notifyOnRemove($bind(this,this.removed));
};
$hxClasses["arm.Level1_preTextLogic"] = arm_Level1_$preTextLogic;
arm_Level1_$preTextLogic.__name__ = "arm.Level1_preTextLogic";
arm_Level1_$preTextLogic.__super__ = iron_Trait;
arm_Level1_$preTextLogic.prototype = $extend(iron_Trait.prototype,{
	removed: function() {
		armory_system_Event.remove("btnBack_clicked");
		armory_system_Event.remove("btnStart_clicked");
	}
	,init: function() {
		this.thaCanvas = this.object.getTrait(armory_trait_internal_CanvasScript);
		haxe_Log.trace("IS IT READY? " + Std.string(this.thaCanvas.get_ready()),{ fileName : "arm/Level1_preTextLogic.hx", lineNumber : 48, className : "arm.Level1_preTextLogic", methodName : "init"});
		if(!this.thaCanvas.get_ready()) {
			if(custom_$lib_CustomLib.getActiveSceneName() == "scene_level_pre") {
				iron_system_Tween.timer(0.5,$bind(this,this.init));
			}
			return;
		}
		var txtTitle = this.thaCanvas.getElement("txtTitle");
		var imgPreText = this.thaCanvas.getElement("imgPreText");
		var imgScreenshot = this.thaCanvas.getElement("imgScreenshot");
		txtTitle.text = this.titleText;
		imgPreText.asset = this.preTextImageName;
		imgScreenshot.asset = this.screenshotName;
		armory_system_Event.add("btnBack_clicked",$bind(this,this.btnBack_clicked));
		armory_system_Event.add("btnStart_clicked",$bind(this,this.btnStart_clicked));
	}
	,btnBack_clicked: function() {
		iron_Scene.setActive("scene_level_select",function(o) {
		});
	}
	,btnStart_clicked: function() {
		haxe_Log.trace("PRETEXT: btnStart_clicked " + this.sceneToStart,{ fileName : "arm/Level1_preTextLogic.hx", lineNumber : 84, className : "arm.Level1_preTextLogic", methodName : "btnStart_clicked"});
		iron_Scene.setActive(this.sceneToStart,function(o) {
		});
	}
	,__class__: arm_Level1_$preTextLogic
});
var arm_LevelSelectLogic = function() {
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
	this.notifyOnRemove($bind(this,this.removed));
};
$hxClasses["arm.LevelSelectLogic"] = arm_LevelSelectLogic;
arm_LevelSelectLogic.__name__ = "arm.LevelSelectLogic";
arm_LevelSelectLogic.__super__ = iron_Trait;
arm_LevelSelectLogic.prototype = $extend(iron_Trait.prototype,{
	removed: function() {
		armory_system_Event.remove("btnBackToSplash_clicked");
		armory_system_Event.remove("btnSelectLevel1_clicked");
		armory_system_Event.remove("btnSelectLevel2_clicked");
		armory_system_Event.remove("btnSelectLevel3_clicked");
	}
	,init: function() {
		armory_system_Event.add("btnBackToSplash_clicked",$bind(this,this.btnBackToSplash_clicked));
		armory_system_Event.add("btnSelectLevel1_clicked",$bind(this,this.btnSelectLevel1_clicked));
		armory_system_Event.add("btnSelectLevel2_clicked",$bind(this,this.btnSelectLevel2_clicked));
		armory_system_Event.add("btnSelectLevel3_clicked",$bind(this,this.btnSelectLevel3_clicked));
	}
	,btnBackToSplash_clicked: function() {
		iron_Scene.setActive("scene_splash_screen",function(o) {
		});
	}
	,btnSelectLevel1_clicked: function() {
		custom_$lib_CustomGame.gotoPreLevel("scene_level_1");
	}
	,btnSelectLevel2_clicked: function() {
		custom_$lib_CustomGame.gotoPreLevel("scene_level_2");
	}
	,btnSelectLevel3_clicked: function() {
		custom_$lib_CustomGame.gotoPreLevel("scene_level_3");
	}
	,btnSelectLevel4_clicked: function() {
	}
	,__class__: arm_LevelSelectLogic
});
var arm_MARKER_$spawnAlly = function() {
	iron_Trait.call(this);
};
$hxClasses["arm.MARKER_spawnAlly"] = arm_MARKER_$spawnAlly;
arm_MARKER_$spawnAlly.__name__ = "arm.MARKER_spawnAlly";
arm_MARKER_$spawnAlly.__super__ = iron_Trait;
arm_MARKER_$spawnAlly.prototype = $extend(iron_Trait.prototype,{
	__class__: arm_MARKER_$spawnAlly
});
var arm_MARKER_$spawnEnemy = function() {
	iron_Trait.call(this);
};
$hxClasses["arm.MARKER_spawnEnemy"] = arm_MARKER_$spawnEnemy;
arm_MARKER_$spawnEnemy.__name__ = "arm.MARKER_spawnEnemy";
arm_MARKER_$spawnEnemy.__super__ = iron_Trait;
arm_MARKER_$spawnEnemy.prototype = $extend(iron_Trait.prototype,{
	__class__: arm_MARKER_$spawnEnemy
});
var arm_MARKER_$spawnPlayer = function() {
	iron_Trait.call(this);
};
$hxClasses["arm.MARKER_spawnPlayer"] = arm_MARKER_$spawnPlayer;
arm_MARKER_$spawnPlayer.__name__ = "arm.MARKER_spawnPlayer";
arm_MARKER_$spawnPlayer.__super__ = iron_Trait;
arm_MARKER_$spawnPlayer.prototype = $extend(iron_Trait.prototype,{
	__class__: arm_MARKER_$spawnPlayer
});
var arm_PersonObject = function() {
	this.myFaction = -1;
	this.zVec = new iron_math_Vec4(0.0,0.0,1.0);
	this.xVec = new iron_math_Vec4(1.0,0.0,0.0);
	this.dir = new iron_math_Vec4();
	this.fireArrowIntent = false;
	this.idealYawAngle = 0;
	this.currentHealth = 0;
	this.reloadDelay = 0;
	this.autoHealDelay = 0;
	this.groundFloatTime = 0;
	this.groundStickyTime = 0;
	this.jumpResetBlockDelay = 0;
	this.jumpsAllowed = 0;
	this.maxJumpsAllowed = 1;
	this._pitch = 90 * (Math.PI / 180);
	this.jump = false;
	this.moveRight = false;
	this.moveLeft = false;
	this.moveBackward = false;
	this.moveForward = false;
	this.vecJumpForceMag = 32;
	this.spawnCalled = false;
	iron_Trait.call(this);
	this.setupEventLinks();
};
$hxClasses["arm.PersonObject"] = arm_PersonObject;
arm_PersonObject.__name__ = "arm.PersonObject";
arm_PersonObject.__super__ = iron_Trait;
arm_PersonObject.prototype = $extend(iron_Trait.prototype,{
	setupEventLinks: function() {
		armory_trait_physics_bullet_PhysicsWorld.active.notifyOnPreUpdate($bind(this,this.preUpdate));
		this.notifyOnUpdate($bind(this,this.update));
		this.notifyOnRemove($bind(this,this.removed));
	}
	,removePreUpdateLink: function() {
		armory_trait_physics_bullet_PhysicsWorld.active.removePreUpdate($bind(this,this.preUpdate));
	}
	,spawned: function(arg_faction) {
		var _gthis = this;
		this.idealYawAngle = this.getYawAngle();
		this.myFaction = arg_faction;
		this.currentHealth = this.getMaxHealth();
		var myMeshMat = custom_$lib_CustomGame.aryStr_resource_person_materialList[this.myFaction];
		var myArrowMat = custom_$lib_CustomGame.aryStr_resource_arrow_materialList[this.myFaction];
		custom_$lib_CustomLib.setObjectVisibility(this.object,false);
		this.personArmatureObject = custom_$lib_CustomLib.getDirectChild(this.object,"person_armature");
		this.personArmatureAnimation = custom_$lib_CustomLib.getArmatureAnimationOfObject(this.personArmatureObject);
		this.bowObject = custom_$lib_CustomLib.getDirectChild(this.object,"person_bow_mesh");
		this.arrowObject = custom_$lib_CustomLib.getDirectChild(this.object,"person_arrow_mesh");
		custom_$lib_CustomLib.getMaterial(myMeshMat,function(mat) {
			var myMeshObject = custom_$lib_CustomLib.getDirectChild(_gthis.personArmatureObject,"person_mesh");
			if(myMeshObject != null) {
				var tempMeshRef = js_Boot.__cast(myMeshObject , iron_object_MeshObject);
				custom_$lib_CustomLib.setTexturesFromMaterial(tempMeshRef,mat);
			}
		});
		custom_$lib_CustomLib.getMaterial(myArrowMat,function(mat1) {
			if(_gthis.arrowObject != null) {
				custom_$lib_CustomLib.setTexturesFromMaterial_obj(_gthis.arrowObject,mat1);
			}
		});
		this.body = this.object.getTrait(armory_trait_physics_bullet_RigidBody);
		this.physics = armory_trait_physics_bullet_PhysicsWorld.active;
		this.CustomSetDamping(0.0,0.0);
		if(this.body != null) {
			this.body.setGravity(new iron_math_Vec4(0,0,-56));
			this.body.setFriction(0);
			this.body.body.setActivationState(1);
		}
		if(this.object.animation != null) {
			this.animationPlayer = js_Boot.__cast(this.object.animation , iron_object_BoneAnimation);
		} else {
			var armatureTest = custom_$lib_CustomLib.getDirectChild(this.object,"person_armature");
			if(armatureTest != null) {
				var someAnim = custom_$lib_CustomLib.getArmatureAnimationOfObject(armatureTest);
				this.animationPlayer = someAnim;
			}
		}
		this.spawnCalled = true;
	}
	,removed: function() {
		if(!this.spawnCalled) {
			return;
		}
		this.removePreUpdateLink();
	}
	,preUpdate: function() {
		if(!this.spawnCalled) {
			return;
		}
	}
	,update: function() {
		var _gthis = this;
		if(!this.spawnCalled) {
			return;
		}
		if(this.body == null || !this.body.ready) {
			return;
		}
		if(this.body != null) {
			if(this.jumpResetBlockDelay <= kha_Scheduler.time()) {
				var myLoc = this.object.transform.loc;
				var physics = armory_trait_physics_bullet_PhysicsWorld.active;
				var rayCastResult = physics.rayCast(this.object.transform.loc,new iron_math_Vec4(myLoc.x,myLoc.y,myLoc.z - 14.1));
				if(rayCastResult != null) {
					var tempRef = rayCastResult.object.getTrait(arm_CustomObject);
					if(tempRef != null && tempRef.isGround()) {
						if(this.groundFloatTime == 0) {
							var pointHit = physics.hitPointWorld;
							this.body.disableGravity();
							this.object.transform.loc = new iron_math_Vec4(myLoc.x,myLoc.y,pointHit.z + 12 + 1.5);
							this.object.transform.buildMatrix();
							this.body.syncTransform();
							if(this.body != null) {
								this.body.syncTransform();
							}
						}
						this.jumpsAllowed = this.maxJumpsAllowed;
						this.groundFloatTime = kha_Scheduler.time() + 0.2;
					}
				}
			}
			if(this.groundFloatTime != 0) {
				if(this.groundFloatTime <= kha_Scheduler.time()) {
					this.groundFloatTime = 0;
					this.body.enableGravity();
					this.body.setGravity(new iron_math_Vec4(0,0,-56));
				} else {
					var myVel = this.body.getLinearVelocity();
					this.body.setLinearVelocity(myVel.x,myVel.y,0);
				}
			}
			var rbs = this.physics.getContacts(this.body);
			if(rbs != null) {
				var _g = 0;
				while(_g < rbs.length) {
					var rb = rbs[_g];
					++_g;
					if(rb.object != null) {
						var tempRef1 = rb.object.getTrait(arm_CustomObject);
						if(tempRef1 != null) {
							if(tempRef1.isGround() && this.jumpResetBlockDelay <= kha_Scheduler.time()) {
								this.jumpsAllowed = this.maxJumpsAllowed;
								this.groundStickyTime = kha_Scheduler.time() + 0.2;
							}
						}
					}
				}
			}
		}
		if(this.jump) {
			if(this.jumpsAllowed > 0) {
				var myVel1 = this.body.getLinearVelocity();
				this.body.setLinearVelocity(myVel1.x,myVel1.y,0);
				if(this.myFaction == 0 && custom_$lib_CustomGame.playerSuperJump) {
					this.body.applyImpulse(new iron_math_Vec4(0,0,this.vecJumpForceMag * 6));
				} else {
					this.body.applyImpulse(new iron_math_Vec4(0,0,this.vecJumpForceMag));
				}
				this.jumpsAllowed -= 1;
				this.jumpResetBlockDelay = kha_Scheduler.time() + 0.35;
				this.groundStickyTime = 0;
				this.groundFloatTime = 0;
				this.body.enableGravity();
				this.body.setGravity(new iron_math_Vec4(0,0,-56));
			}
			this.jump = false;
		}
		var _this = this.object.transform.world;
		var v_x = _this.self._10;
		var v_y = _this.self._11;
		var v_z = _this.self._12;
		var v_w = 1.0;
		var _this1 = this.object.transform.world;
		var v_x1 = _this1.self._00;
		var v_y1 = _this1.self._01;
		var v_z1 = _this1.self._02;
		var v_w1 = 1.0;
		var _this2 = this.dir;
		_this2.x = 0;
		_this2.y = 0;
		_this2.z = 0;
		_this2.w = 1.0;
		if(this.moveForward) {
			var _this3 = this.dir;
			_this3.x += v_x;
			_this3.y += v_y;
			_this3.z += v_z;
		}
		if(this.moveBackward) {
			var _this4 = this.dir;
			v_x *= -1;
			v_y *= -1;
			v_z *= -1;
			_this4.x += v_x;
			_this4.y += v_y;
			_this4.z += v_z;
		}
		if(this.moveLeft) {
			var _this5 = this.dir;
			v_x1 *= -1;
			v_y1 *= -1;
			v_z1 *= -1;
			_this5.x += v_x1;
			_this5.y += v_y1;
			_this5.z += v_z1;
		}
		if(this.moveRight) {
			var _this6 = this.dir;
			_this6.x += v_x1;
			_this6.y += v_y1;
			_this6.z += v_z1;
		}
		if(this.body != null) {
			if(this.moveForward || this.moveBackward || this.moveLeft || this.moveRight) {
				var _this7 = this.dir;
				var f = this.getMoveSpeed();
				_this7.x *= f;
				_this7.y *= f;
				_this7.z *= f;
				this.body.activate();
				var myVel2 = this.body.getLinearVelocity();
				this.body.setLinearVelocity(myVel2.x * 0.94 + this.dir.x,myVel2.y * 0.94 + this.dir.y,myVel2.z);
				this.object.transform.buildMatrix();
				this.body.syncTransform();
			} else {
				var myVel3 = this.body.getLinearVelocity();
				this.body.setLinearVelocity(myVel3.x * 0.8,myVel3.y * 0.8,myVel3.z);
			}
			this.body.setAngularFactor(0,0,0);
		}
		if(this.autoHealDelay <= kha_Scheduler.time()) {
			this.autoHealDelay = kha_Scheduler.time() + 6;
			this.currentHealth += this.getAutoHealAmount();
			if(this.currentHealth > this.getMaxHealth()) {
				this.currentHealth = this.getMaxHealth();
			}
		}
		if(this.fireArrowIntent && this.reloadDelay <= kha_Scheduler.time()) {
			this.reloadDelay = kha_Scheduler.time() + this.getReloadTime();
			var vecFireOrigin = this.getArrowFirePoint();
			var _this8 = this.object.transform.world;
			var myForward_x = _this8.self._10;
			var myForward_y = _this8.self._11;
			var myForward_z = _this8.self._12;
			var myForward_w = 1.0;
			var myPitch = this.getPitchAngle() - 90 * (Math.PI / 180);
			custom_$lib_CustomGame.playSoundForPlayer("woosh.ogg",this.object.transform.loc,0.15,0.16);
			var thewhat = new iron_math_Quat(this.object.transform.rot.x,this.object.transform.rot.y,this.object.transform.rot.z,this.object.transform.rot.w);
			var _this9 = this.object.transform.world;
			var _this10 = new iron_math_Vec4(_this9.self._00,_this9.self._01,_this9.self._02);
			var n = Math.sqrt(_this10.x * _this10.x + _this10.y * _this10.y + _this10.z * _this10.z);
			if(n > 0.0) {
				var invN = 1.0 / n;
				_this10.x *= invN;
				_this10.y *= invN;
				_this10.z *= invN;
			}
			custom_$lib_CustomLib.rotateQuatByAxisAngle(thewhat,_this10,myPitch);
			custom_$lib_CustomLib.spawnObject_quat(custom_$lib_CustomGame.currentSceneName + "_" + "person_ap_temp",new iron_math_Vec4(vecFireOrigin.x,vecFireOrigin.y,vecFireOrigin.z),thewhat,new iron_math_Vec4(0.12,0.42,0.12),function(o) {
				var traitGen = new arm_ArrowProjectileObject();
				o.addTrait(traitGen);
				traitGen.spawned(_gthis.myFaction);
			},null,true);
		}
	}
	,killed: function() {
		this.object.remove();
	}
	,getArrowFirePoint: function() {
		var myLoc = this.object.transform.loc;
		var _this = this.object.transform.world;
		var myForward_x = _this.self._10;
		var myForward_y = _this.self._11;
		var myForward_z = _this.self._12;
		var myForward_w = 1.0;
		var n = Math.sqrt(myForward_x * myForward_x + myForward_y * myForward_y + myForward_z * myForward_z);
		if(n > 0.0) {
			var invN = 1.0 / n;
			myForward_x *= invN;
			myForward_y *= invN;
			myForward_z *= invN;
		}
		return new iron_math_Vec4(myLoc.x + myForward_x * 3.9,myLoc.y + myForward_y * 3.9,myLoc.z + 7.4);
	}
	,CustomSetDamping: function(arg_linearDamping,arg_angularDamping) {
		if(this.body != null) {
			this.body.linearDamping = arg_linearDamping;
			this.body.angularDamping = arg_angularDamping;
			this.body.body.setDamping(arg_linearDamping,arg_angularDamping);
		}
	}
	,getYawAngle: function() {
		var _this = this.object.transform.rot;
		var roll = NaN;
		var yaw = 0.0;
		var pitch = 0.0;
		var test = _this.x * _this.y + _this.z * _this.w;
		if(test > 0.499) {
			roll = 2 * Math.atan2(_this.x,_this.w);
			yaw = 1.5707963267948966;
			pitch = 0;
		}
		if(test < -0.499) {
			roll = -2 * Math.atan2(_this.x,_this.w);
			yaw = -1.5707963267948966;
			pitch = 0;
		}
		if(isNaN(roll)) {
			var a = 2 * _this.z * _this.z;
			var b = _this.y * _this.y;
			roll = Math.atan2(2 * _this.y * _this.w - 2 * _this.x * _this.z,1.0 - 2 * b - a);
			b = _this.x * _this.x;
			pitch = Math.atan2(2 * _this.x * _this.w - 2 * _this.y * _this.z,1.0 - 2 * b - a);
			yaw = Math.asin(2 * test);
		}
		var inlVec4_x = pitch;
		var inlVec4_y = roll;
		var inlVec4_z = yaw;
		var inlVec4_w = 1.0;
		return inlVec4_z;
	}
	,getPitchAngle: function() {
		return this._pitch;
	}
	,getMaxHealth: function() {
		return 30;
	}
	,getReloadTime: function() {
		return custom_$lib_CustomLib.getRandomFloat(1.4,2.4);
	}
	,getAutoHealAmount: function() {
		return 2;
	}
	,takeDamage: function(arg_damage) {
		this.currentHealth -= arg_damage;
		var choice = custom_$lib_CustomLib.randomInRange_int(1,5);
		custom_$lib_CustomGame.playSoundForPlayer("hit_" + choice + ".ogg",this.object.transform.loc,0.19,0.09);
		if(this.currentHealth <= 0) {
			this.killed();
		}
	}
	,getMoveSpeed: function() {
		return 1.;
	}
	,__class__: arm_PersonObject
});
var arm_PersonAIObject = function() {
	this.expirationTime = 0;
	this.enemyObject = null;
	this.nextLongThink = 0;
	arm_PersonObject.call(this);
};
$hxClasses["arm.PersonAIObject"] = arm_PersonAIObject;
arm_PersonAIObject.__name__ = "arm.PersonAIObject";
arm_PersonAIObject.__super__ = arm_PersonObject;
arm_PersonAIObject.prototype = $extend(arm_PersonObject.prototype,{
	spawned: function(arg_faction) {
		arm_PersonObject.prototype.spawned.call(this,arg_faction);
	}
	,setupEventLinks: function() {
		armory_trait_physics_bullet_PhysicsWorld.active.notifyOnPreUpdate($bind(this,this.preUpdate));
		this.notifyOnUpdate($bind(this,this.update));
		this.notifyOnRemove($bind(this,this.removed));
	}
	,removePreUpdateLink: function() {
		armory_trait_physics_bullet_PhysicsWorld.active.removePreUpdate($bind(this,this.preUpdate));
	}
	,removed: function() {
		arm_PersonObject.prototype.removed.call(this);
	}
	,preUpdate: function() {
		if(!this.spawnCalled) {
			return;
		}
		arm_PersonObject.prototype.preUpdate.call(this);
	}
	,update: function() {
		if(!this.spawnCalled) {
			return;
		}
		arm_PersonObject.prototype.update.call(this);
		if(this.expirationTime != 0 && custom_$lib_CustomLib.getCurrentTime() >= this.expirationTime) {
			this.checkArcherCounts();
			this.object.remove();
			return;
		}
		if(!(custom_$lib_CustomLib.getCurrentTime() - custom_$lib_CustomGame.currentSceneStartTime > 0.6)) {
			return;
		}
		this.fireArrowIntent = false;
		if(this.enemyObject != null) {
			var lookAng = custom_$lib_CustomLib.getLookAngle(this.object.transform.loc,this.enemyObject.transform.loc);
			var thatQuat = new iron_math_Quat();
			var f = 0.;
			var c1 = Math.cos(f);
			var s1 = Math.sin(f);
			f = lookAng.y / 2;
			var c2 = Math.cos(f);
			var s2 = Math.sin(f);
			f = lookAng.z / 2;
			var c3 = Math.cos(f);
			var s3 = Math.sin(f);
			thatQuat.x = s1 * c2 * c3 + c1 * s2 * s3;
			thatQuat.y = c1 * s2 * c3 + s1 * c2 * s3;
			thatQuat.z = c1 * c2 * s3 - s1 * s2 * c3;
			thatQuat.w = c1 * c2 * c3 - s1 * s2 * s3;
			this._pitch = lookAng.x + 90 * (Math.PI / 180);
			this.object.transform.rot = thatQuat;
			this.body.syncTransform();
			this.fireArrowIntent = true;
		}
		if(this.nextLongThink <= kha_Scheduler.time()) {
			var theScene = custom_$lib_CustomLib.getActiveScene();
			var myLoc = this.object.transform.loc;
			var objClosestYet = null;
			var bestDistanceYet = 1400;
			var sceneActive = custom_$lib_CustomLib.getActiveScene();
			var _g = 0;
			var _g1 = iron_Scene.active.root.children;
			while(_g < _g1.length) {
				var thisChild = _g1[_g];
				++_g;
				if(thisChild != this.object) {
					var playerTrait = thisChild.getTrait(arm_PlayerObject);
					var personAITrait = thisChild.getTrait(arm_PersonAIObject);
					var personTrait = null;
					if(playerTrait != null) {
						personTrait = playerTrait;
					} else if(personAITrait != null) {
						personTrait = personAITrait;
					}
					if(personTrait != null) {
						if(custom_$lib_CustomGame.factionHates(this.myFaction,personTrait.myFaction)) {
							var otherLoc = thisChild.transform.loc;
							var distTo = custom_$lib_CustomLib.getDistance(myLoc,otherLoc);
							if(distTo < bestDistanceYet) {
								var myEyeLocation = new iron_math_Vec4(this.object.transform.loc.x,this.object.transform.loc.y,this.object.transform.loc.z + 21);
								var targetCenter = new iron_math_Vec4(thisChild.transform.loc.x,thisChild.transform.loc.y,thisChild.transform.loc.z + 12);
								var rayCastResult = this.physics.rayCast(myEyeLocation,targetCenter);
								if(rayCastResult != null) {
									if(rayCastResult.object.uid == thisChild.uid) {
										bestDistanceYet = distTo;
										objClosestYet = thisChild;
									}
								}
							}
						}
					}
				}
			}
			if(objClosestYet != null) {
				this.enemyObject = objClosestYet;
			} else {
				this.enemyObject = null;
			}
			this.nextLongThink = kha_Scheduler.time() + 1.0;
		}
	}
	,killed: function() {
		this.checkArcherCounts();
		arm_PersonObject.prototype.killed.call(this);
	}
	,checkArcherCounts: function() {
		switch(this.myFaction) {
		case 0:
			break;
		case 1:
			custom_$lib_CustomGame.currentAllyCount -= 1;
			break;
		case 2:
			custom_$lib_CustomGame.currentEnemyCount -= 1;
			break;
		default:
		}
	}
	,setExpirationTimer: function(arg_lifeTime) {
		this.expirationTime = custom_$lib_CustomLib.getCurrentTime() + arg_lifeTime;
	}
	,__class__: arm_PersonAIObject
});
var arm_PlayDance1 = function() {
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
};
$hxClasses["arm.PlayDance1"] = arm_PlayDance1;
arm_PlayDance1.__name__ = "arm.PlayDance1";
arm_PlayDance1.__super__ = iron_Trait;
arm_PlayDance1.prototype = $extend(iron_Trait.prototype,{
	init: function() {
		var myAnim = custom_$lib_CustomLib.getArmatureAnimationOfObject(this.object);
		myAnim.play("dance_1",null,0,1,true);
	}
	,__class__: arm_PlayDance1
});
var arm_PlayDance2 = function() {
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
};
$hxClasses["arm.PlayDance2"] = arm_PlayDance2;
arm_PlayDance2.__name__ = "arm.PlayDance2";
arm_PlayDance2.__super__ = iron_Trait;
arm_PlayDance2.prototype = $extend(iron_Trait.prototype,{
	init: function() {
		var myAnim = custom_$lib_CustomLib.getArmatureAnimationOfObject(this.object);
		myAnim.play("dance_2",null,0,1,true);
	}
	,__class__: arm_PlayDance2
});
var arm_PlayDance3 = function() {
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
};
$hxClasses["arm.PlayDance3"] = arm_PlayDance3;
arm_PlayDance3.__name__ = "arm.PlayDance3";
arm_PlayDance3.__super__ = iron_Trait;
arm_PlayDance3.prototype = $extend(iron_Trait.prototype,{
	init: function() {
		var myAnim = custom_$lib_CustomLib.getArmatureAnimationOfObject(this.object);
		myAnim.play("dance_3",null,0,1,true);
	}
	,__class__: arm_PlayDance3
});
var arm_PlayerObject = function() {
	this.camera = null;
	this.cameraLocOffset = new iron_math_Vec4(0,0.97,12.33);
	this.score = 0;
	this.canvas = null;
	this.targetCameraFOV = 0;
	this.zoomedIn = false;
	this.lockingAllowed = true;
	this.topDownView = false;
	arm_PersonObject.call(this);
};
$hxClasses["arm.PlayerObject"] = arm_PlayerObject;
arm_PlayerObject.__name__ = "arm.PlayerObject";
arm_PlayerObject.__super__ = arm_PersonObject;
arm_PlayerObject.prototype = $extend(arm_PersonObject.prototype,{
	spawned: function(arg_faction) {
		arm_PersonObject.prototype.spawned.call(this,arg_faction);
		if(!this.topDownView) {
			custom_$lib_CustomLib.setObjectVisibility(this.bowObject,false);
			custom_$lib_CustomLib.setObjectVisibility(this.arrowObject,false);
			var myMeshObject = custom_$lib_CustomLib.getDirectChild(this.personArmatureObject,"person_mesh");
			if(myMeshObject != null) {
				custom_$lib_CustomLib.setObjectVisibility(myMeshObject,false);
			}
		}
		this.canvas = custom_$lib_CustomLib.getActiveScene().getTrait(armory_trait_internal_CanvasScript);
		this.ui_txtScore = this.canvas.getElement("txtScore");
		this.ui_txtHealth = this.canvas.getElement("txtHealth");
		this.ui_txtNotice = this.canvas.getElement("txtNotice");
		this.ui_imgPlayerHealthBar = this.canvas.getElement("imgPlayerHealthBar");
		var camera_container_ref = iron_Scene.active.getChild(custom_$lib_CustomGame.currentSceneName + "_" + "camera_player_container");
		if(camera_container_ref == null) {
			haxe_Log.trace("!!! CRITICAL ERROR. Player camera container not found, camera not attached!",{ fileName : "arm/PlayerObject.hx", lineNumber : 147, className : "arm.PlayerObject", methodName : "spawned"});
		} else {
			var _this = this.object.transform.world;
			var _this1 = new iron_math_Vec4(_this.self._10,_this.self._11,_this.self._12);
			var n = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
			if(n > 0.0) {
				var invN = 1.0 / n;
				_this1.x *= invN;
				_this1.y *= invN;
				_this1.z *= invN;
			}
			var vecForward = _this1;
			haxe_Log.trace("WHAT IS VECFORWARD " + Std.string(vecForward),{ fileName : "arm/PlayerObject.hx", lineNumber : 151, className : "arm.PlayerObject", methodName : "spawned"});
			var _this2 = camera_container_ref.transform.loc;
			_this2.x = 0;
			_this2.y = 0;
			_this2.z = 0;
			_this2.w = 1.0;
			var _this3 = this.object.transform.rot;
			var roll = NaN;
			var yaw = 0.0;
			var pitch = 0.0;
			var test = _this3.x * _this3.y + _this3.z * _this3.w;
			if(test > 0.499) {
				roll = 2 * Math.atan2(_this3.x,_this3.w);
				yaw = 1.5707963267948966;
				pitch = 0;
			}
			if(test < -0.499) {
				roll = -2 * Math.atan2(_this3.x,_this3.w);
				yaw = -1.5707963267948966;
				pitch = 0;
			}
			if(isNaN(roll)) {
				var a = 2 * _this3.z * _this3.z;
				var b = _this3.y * _this3.y;
				roll = Math.atan2(2 * _this3.y * _this3.w - 2 * _this3.x * _this3.z,1.0 - 2 * b - a);
				b = _this3.x * _this3.x;
				pitch = Math.atan2(2 * _this3.x * _this3.w - 2 * _this3.y * _this3.z,1.0 - 2 * b - a);
				yaw = Math.asin(2 * test);
			}
			var myEuler_x = pitch;
			var myEuler_y = roll;
			var myEuler_z = yaw;
			var myEuler_w = 1.0;
			var _this4 = camera_container_ref.transform.rot;
			var f = 0.;
			var c1 = Math.cos(f);
			var s1 = Math.sin(f);
			f = 0.;
			var c2 = Math.cos(f);
			var s2 = Math.sin(f);
			f = myEuler_z / 2;
			var c3 = Math.cos(f);
			var s3 = Math.sin(f);
			_this4.x = s1 * c2 * c3 + c1 * s2 * s3;
			_this4.y = c1 * s2 * c3 + s1 * c2 * s3;
			_this4.z = c1 * c2 * s3 - s1 * s2 * c3;
			_this4.w = c1 * c2 * c3 - s1 * s2 * s3;
			camera_container_ref.transform.buildMatrix();
			custom_$lib_CustomLib.setParent(camera_container_ref,this.object);
			if(!this.topDownView) {
				var _this5 = camera_container_ref.transform.loc;
				_this5.x = this.cameraLocOffset.x * vecForward.x / this.object.transform.scale.x;
				_this5.y = this.cameraLocOffset.y * vecForward.y / this.object.transform.scale.y;
				_this5.z = this.cameraLocOffset.z / this.object.transform.scale.z;
				_this5.w = 1.0;
			} else {
				var _this6 = camera_container_ref.transform.loc;
				_this6.x = this.cameraLocOffset.x * vecForward.x / this.object.transform.scale.x;
				_this6.y = this.cameraLocOffset.y * vecForward.y / this.object.transform.scale.y;
				_this6.z = this.cameraLocOffset.z / this.object.transform.scale.z + 14;
				_this6.w = 1.0;
			}
			camera_container_ref.transform.buildMatrix();
			var cameraTemp = custom_$lib_CustomLib.getDirectChild(camera_container_ref,"camera_player");
			this.camera = js_Boot.__cast(cameraTemp , iron_object_CameraObject);
			haxe_Log.trace("camera null? " + Std.string(cameraTemp != null) + " " + Std.string(this.camera != null),{ fileName : "arm/PlayerObject.hx", lineNumber : 185, className : "arm.PlayerObject", methodName : "spawned"});
			if(this.camera != null) {
				custom_$lib_CustomLib.setCameraFOV(this.camera,0.8);
				var mouse = iron_system_Input.getMouse();
				if(this.lockingAllowed) {
					if(!mouse.locked) {
						mouse.lock();
					}
				}
				if(this.topDownView) {
					this.camera.transform.rot.x = 0;
				}
				var _this7 = this.camera.transform.rot;
				var roll1 = NaN;
				var yaw1 = 0.0;
				var pitch1 = 0.0;
				var test1 = _this7.x * _this7.y + _this7.z * _this7.w;
				if(test1 > 0.499) {
					roll1 = 2 * Math.atan2(_this7.x,_this7.w);
					yaw1 = 1.5707963267948966;
					pitch1 = 0;
				}
				if(test1 < -0.499) {
					roll1 = -2 * Math.atan2(_this7.x,_this7.w);
					yaw1 = -1.5707963267948966;
					pitch1 = 0;
				}
				if(isNaN(roll1)) {
					var a1 = 2 * _this7.z * _this7.z;
					var b1 = _this7.y * _this7.y;
					roll1 = Math.atan2(2 * _this7.y * _this7.w - 2 * _this7.x * _this7.z,1.0 - 2 * b1 - a1);
					b1 = _this7.x * _this7.x;
					pitch1 = Math.atan2(2 * _this7.x * _this7.w - 2 * _this7.y * _this7.z,1.0 - 2 * b1 - a1);
					yaw1 = Math.asin(2 * test1);
				}
				var cameraEuler_x = pitch1;
				var cameraEuler_y = roll1;
				var cameraEuler_z = yaw1;
				var cameraEuler_w = 1.0;
				var daQuat_x = 0.0;
				var daQuat_y = 0.0;
				var daQuat_z = 0.0;
				var daQuat_w = 1.0;
				var f1 = 90 * (Math.PI / 180) / 2;
				var c11 = Math.cos(f1);
				var s11 = Math.sin(f1);
				f1 = cameraEuler_y / 2;
				var c21 = Math.cos(f1);
				var s21 = Math.sin(f1);
				f1 = cameraEuler_z / 2;
				var c31 = Math.cos(f1);
				var s31 = Math.sin(f1);
				daQuat_x = s11 * c21 * c31 + c11 * s21 * s31;
				daQuat_y = c11 * s21 * c31 + s11 * c21 * s31;
				daQuat_z = c11 * c21 * s31 - s11 * s21 * c31;
				daQuat_w = c11 * c21 * c31 - s11 * s21 * s31;
				var _this8 = this.camera.transform.rot;
				_this8.x = daQuat_x;
				_this8.y = daQuat_y;
				_this8.z = daQuat_z;
				_this8.w = daQuat_w;
				this.camera.transform.buildMatrix();
			}
		}
		this.zoomedIn = false;
		this.targetCameraFOV = 0.8;
	}
	,setupEventLinks: function() {
		armory_trait_physics_bullet_PhysicsWorld.active.notifyOnPreUpdate($bind(this,this.preUpdate));
		this.notifyOnUpdate($bind(this,this.update));
		this.notifyOnRemove($bind(this,this.removed));
	}
	,removePreUpdateLink: function() {
		armory_trait_physics_bullet_PhysicsWorld.active.removePreUpdate($bind(this,this.preUpdate));
	}
	,removed: function() {
		arm_PersonObject.prototype.removed.call(this);
	}
	,preUpdate: function() {
		if(!this.spawnCalled) {
			return;
		}
		arm_PersonObject.prototype.preUpdate.call(this);
		if(iron_system_Input.occupied || this.body != null && !this.body.ready) {
			return;
		}
		var mouse = iron_system_Input.getMouse();
		var kb = iron_system_Input.getKeyboard();
		if(this.lockingAllowed && mouse.started() && !mouse.locked) {
			mouse.lock();
		} else if(kb.started("escape") && mouse.locked) {
			mouse.unlock();
		}
		if(mouse.locked || mouse.down()) {
			var _this = this.camera.transform.world;
			var headForward_x = _this.self._10;
			var headForward_y = _this.self._11;
			var headForward_z = _this.self._12;
			var headForward_w = 1.0;
			var _this1 = this.camera.transform.world;
			var headUp_x = _this1.self._20;
			var headUp_y = _this1.self._21;
			var headUp_z = _this1.self._22;
			var headUp_w = 1.0;
			var _this2 = this.camera.transform.world;
			var headRight_x = _this2.self._00;
			var headRight_y = _this2.self._01;
			var headRight_z = _this2.self._02;
			var headRight_w = 1.0;
			var rotateAmount_x = -mouse.movementX / 250 * 0.258;
			var rotateAmount_y = -mouse.movementY / 250 * 0.258;
			this.object.transform.rotate(this.zVec,rotateAmount_x);
			var _this3 = this.camera.transform.rot;
			var roll = NaN;
			var yaw = 0.0;
			var pitch = 0.0;
			var test = _this3.x * _this3.y + _this3.z * _this3.w;
			if(test > 0.499) {
				roll = 2 * Math.atan2(_this3.x,_this3.w);
				yaw = 1.5707963267948966;
				pitch = 0;
			}
			if(test < -0.499) {
				roll = -2 * Math.atan2(_this3.x,_this3.w);
				yaw = -1.5707963267948966;
				pitch = 0;
			}
			if(isNaN(roll)) {
				var a = 2 * _this3.z * _this3.z;
				var b = _this3.y * _this3.y;
				roll = Math.atan2(2 * _this3.y * _this3.w - 2 * _this3.x * _this3.z,1.0 - 2 * b - a);
				b = _this3.x * _this3.x;
				pitch = Math.atan2(2 * _this3.x * _this3.w - 2 * _this3.y * _this3.z,1.0 - 2 * b - a);
				yaw = Math.asin(2 * test);
			}
			var cameraEuler_x = pitch;
			var cameraEuler_y = roll;
			var cameraEuler_z = yaw;
			var cameraEuler_w = 1.0;
			var newCameraPitch = cameraEuler_x + rotateAmount_y;
			if(!this.topDownView) {
				if(newCameraPitch > arm_PlayerObject.cameraPitchMaxUp_Absolute) {
					var _this4 = this.camera.transform.rot;
					var f = arm_PlayerObject.cameraPitchMaxUp_Absolute / 2;
					var c1 = Math.cos(f);
					var s1 = Math.sin(f);
					f = cameraEuler_y / 2;
					var c2 = Math.cos(f);
					var s2 = Math.sin(f);
					f = cameraEuler_z / 2;
					var c3 = Math.cos(f);
					var s3 = Math.sin(f);
					_this4.x = s1 * c2 * c3 + c1 * s2 * s3;
					_this4.y = c1 * s2 * c3 + s1 * c2 * s3;
					_this4.z = c1 * c2 * s3 - s1 * s2 * c3;
					_this4.w = c1 * c2 * c3 - s1 * s2 * s3;
					this.camera.transform.buildMatrix();
				} else if(newCameraPitch < arm_PlayerObject.cameraPitchMaxDown_Absolute) {
					var _this5 = this.camera.transform.rot;
					var f1 = arm_PlayerObject.cameraPitchMaxDown_Absolute / 2;
					var c11 = Math.cos(f1);
					var s11 = Math.sin(f1);
					f1 = cameraEuler_y / 2;
					var c21 = Math.cos(f1);
					var s21 = Math.sin(f1);
					f1 = cameraEuler_z / 2;
					var c31 = Math.cos(f1);
					var s31 = Math.sin(f1);
					_this5.x = s11 * c21 * c31 + c11 * s21 * s31;
					_this5.y = c11 * s21 * c31 + s11 * c21 * s31;
					_this5.z = c11 * c21 * s31 - s11 * s21 * c31;
					_this5.w = c11 * c21 * c31 - s11 * s21 * s31;
					this.camera.transform.buildMatrix();
				} else if(Math.abs(rotateAmount_y) > 0.001) {
					this.camera.transform.rotate(this.xVec,rotateAmount_y);
				}
			}
			if(this.body != null) {
				this.body.syncTransform();
			}
			this.object.transform.buildMatrix();
		}
		if(!this.topDownView) {
			var mouseRightDown = mouse.down("right");
			if(mouseRightDown) {
				if(!this.zoomedIn) {
					this.zoomedIn = true;
					this.targetCameraFOV = 0.4;
				}
			} else if(!mouseRightDown && this.zoomedIn) {
				if(this.zoomedIn) {
					this.zoomedIn = false;
					this.targetCameraFOV = 0.8;
				}
			}
			var currentFOV = custom_$lib_CustomLib.getCameraFOV(this.camera);
			var deltaFOV = this.targetCameraFOV - currentFOV;
			if(Math.abs(deltaFOV) < 0.0008) {
				if(Math.abs(deltaFOV) > 0.0001) {
					custom_$lib_CustomLib.setCameraFOV(this.camera,this.targetCameraFOV);
				}
			} else {
				var newFOV = currentFOV + deltaFOV * 0.07;
				custom_$lib_CustomLib.setCameraFOV(this.camera,newFOV);
			}
		}
	}
	,update: function() {
		if(!this.spawnCalled) {
			return;
		}
		var keyboard = iron_system_Input.getKeyboard();
		var mouse = iron_system_Input.getMouse();
		this.moveForward = keyboard.down("w");
		this.moveRight = keyboard.down("d");
		this.moveBackward = keyboard.down("s");
		this.moveLeft = keyboard.down("a");
		this.jump = keyboard.started("space");
		this.fireArrowIntent = mouse.down("left");
		arm_PersonObject.prototype.update.call(this);
		if(keyboard.down("control") && keyboard.down("c")) {
			custom_$lib_CustomGame.cancelGame();
			return;
		}
		this.camera.buildMatrix();
		if(this.ui_txtScore != null) {
			this.ui_txtScore.text = "Score: " + this.score;
		}
		if(this.ui_txtHealth != null) {
			var tmp = "Health: " + this.currentHealth + " / ";
			var tmp1 = this.getMaxHealth();
			this.ui_txtHealth.text = tmp + tmp1;
		}
		if(this.ui_imgPlayerHealthBar != null) {
			var healthFraction = this.currentHealth / this.getMaxHealth();
			var suggestedHealthBarWidth = Math.round(Math.max(healthFraction * 220,1));
			this.ui_imgPlayerHealthBar.width = suggestedHealthBarWidth;
			if(healthFraction >= 0.70) {
				this.ui_imgPlayerHealthBar.asset = "player_healthbar_green.png";
			} else if(healthFraction >= 0.35) {
				this.ui_imgPlayerHealthBar.asset = "player_healthbar_yellow.png";
			} else {
				this.ui_imgPlayerHealthBar.asset = "player_healthbar_red.png";
			}
		}
	}
	,getArrowFirePoint: function() {
		var myLoc = this.object.transform.loc;
		if(this.camera == null) {
			return myLoc;
		}
		var _this = this.object.transform.world;
		var myForward_x = _this.self._10;
		var myForward_y = _this.self._11;
		var myForward_z = _this.self._12;
		var myForward_w = 1.0;
		var n = Math.sqrt(myForward_x * myForward_x + myForward_y * myForward_y + myForward_z * myForward_z);
		if(n > 0.0) {
			var invN = 1.0 / n;
			myForward_x *= invN;
			myForward_y *= invN;
			myForward_z *= invN;
		}
		var _this1 = this.camera.transform.world;
		var cameraForward_x = _this1.self._20;
		var cameraForward_y = _this1.self._21;
		var cameraForward_z = _this1.self._22;
		var cameraForward_w = 1.0;
		var n1 = Math.sqrt(cameraForward_x * cameraForward_x + cameraForward_y * cameraForward_y + cameraForward_z * cameraForward_z);
		if(n1 > 0.0) {
			var invN1 = 1.0 / n1;
			cameraForward_x *= invN1;
			cameraForward_y *= invN1;
			cameraForward_z *= invN1;
		}
		cameraForward_x *= -1;
		cameraForward_y *= -1;
		cameraForward_z *= -1;
		return new iron_math_Vec4(myLoc.x + 8 * myForward_x,myLoc.y + 8 * myForward_y,myLoc.z + this.cameraLocOffset.z + cameraForward_z * 15);
	}
	,getYawAngle: function() {
		var _this = this.object.transform.rot;
		var roll = NaN;
		var yaw = 0.0;
		var pitch = 0.0;
		var test = _this.x * _this.y + _this.z * _this.w;
		if(test > 0.499) {
			roll = 2 * Math.atan2(_this.x,_this.w);
			yaw = 1.5707963267948966;
			pitch = 0;
		}
		if(test < -0.499) {
			roll = -2 * Math.atan2(_this.x,_this.w);
			yaw = -1.5707963267948966;
			pitch = 0;
		}
		if(isNaN(roll)) {
			var a = 2 * _this.z * _this.z;
			var b = _this.y * _this.y;
			roll = Math.atan2(2 * _this.y * _this.w - 2 * _this.x * _this.z,1.0 - 2 * b - a);
			b = _this.x * _this.x;
			pitch = Math.atan2(2 * _this.x * _this.w - 2 * _this.y * _this.z,1.0 - 2 * b - a);
			yaw = Math.asin(2 * test);
		}
		var inlVec4_x = pitch;
		var inlVec4_y = roll;
		var inlVec4_z = yaw;
		var inlVec4_w = 1.0;
		return inlVec4_z;
	}
	,getPitchAngle: function() {
		if(this.camera == null) {
			return 0;
		}
		if(!this.topDownView) {
			var _this = this.camera.transform.rot;
			var roll = NaN;
			var yaw = 0.0;
			var pitch = 0.0;
			var test = _this.x * _this.y + _this.z * _this.w;
			if(test > 0.499) {
				roll = 2 * Math.atan2(_this.x,_this.w);
				yaw = 1.5707963267948966;
				pitch = 0;
			}
			if(test < -0.499) {
				roll = -2 * Math.atan2(_this.x,_this.w);
				yaw = -1.5707963267948966;
				pitch = 0;
			}
			if(isNaN(roll)) {
				var a = 2 * _this.z * _this.z;
				var b = _this.y * _this.y;
				roll = Math.atan2(2 * _this.y * _this.w - 2 * _this.x * _this.z,1.0 - 2 * b - a);
				b = _this.x * _this.x;
				pitch = Math.atan2(2 * _this.x * _this.w - 2 * _this.y * _this.z,1.0 - 2 * b - a);
				yaw = Math.asin(2 * test);
			}
			var inlVec4_x = pitch;
			var inlVec4_y = roll;
			var inlVec4_z = yaw;
			var inlVec4_w = 1.0;
			return inlVec4_x;
		} else {
			return 90 * (Math.PI / 180);
		}
	}
	,getMaxHealth: function() {
		return 100;
	}
	,getReloadTime: function() {
		if(!custom_$lib_CustomGame.playerRapidArrow) {
			return 0.17;
		} else {
			return 0;
		}
	}
	,getAutoHealAmount: function() {
		return 4;
	}
	,killed: function() {
		custom_$lib_CustomGame.endGame(false,this.score);
	}
	,takeDamage: function(arg_damage) {
		if(custom_$lib_CustomGame.playerInvincible) {
			return;
		}
		arm_PersonObject.prototype.takeDamage.call(this,arg_damage);
	}
	,goalVisibleNotice: function() {
		this.ui_txtNotice.text = "Goal available!";
	}
	,getMoveSpeed: function() {
		if(custom_$lib_CustomGame.playerSpeedy) {
			return arm_PersonObject.prototype.getMoveSpeed.call(this) * 2.1;
		} else {
			return arm_PersonObject.prototype.getMoveSpeed.call(this) * custom_$lib_CustomGame.playerSpeedFactor;
		}
	}
	,__class__: arm_PlayerObject
});
var arm_ShearTest = function() {
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
};
$hxClasses["arm.ShearTest"] = arm_ShearTest;
arm_ShearTest.__name__ = "arm.ShearTest";
arm_ShearTest.__super__ = iron_Trait;
arm_ShearTest.prototype = $extend(iron_Trait.prototype,{
	init: function() {
	}
	,__class__: arm_ShearTest
});
var arm_SlowRotate = function() {
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
	this.notifyOnUpdate($bind(this,this.update));
};
$hxClasses["arm.SlowRotate"] = arm_SlowRotate;
arm_SlowRotate.__name__ = "arm.SlowRotate";
arm_SlowRotate.__super__ = iron_Trait;
arm_SlowRotate.prototype = $extend(iron_Trait.prototype,{
	init: function() {
	}
	,update: function() {
		this.object.transform.rotate(new iron_math_Vec4(0,0,1),0.00017);
	}
	,__class__: arm_SlowRotate
});
var arm_SplashScreenLogic = function() {
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
	this.notifyOnRemove($bind(this,this.removed));
};
$hxClasses["arm.SplashScreenLogic"] = arm_SplashScreenLogic;
arm_SplashScreenLogic.__name__ = "arm.SplashScreenLogic";
arm_SplashScreenLogic.__super__ = iron_Trait;
arm_SplashScreenLogic.prototype = $extend(iron_Trait.prototype,{
	removed: function() {
		armory_system_Event.remove("btnStoryMode_clicked");
		armory_system_Event.remove("btnArcadeMode_clicked");
		armory_system_Event.remove("btnInstructions_clicked");
		armory_system_Event.remove("btnQuit_clicked");
	}
	,init: function() {
		armory_system_Event.add("btnStoryMode_clicked",$bind(this,this.btnStoryMode_clicked));
		armory_system_Event.add("btnArcadeMode_clicked",$bind(this,this.btnArcadeMode_clicked));
		armory_system_Event.add("btnInstructions_clicked",$bind(this,this.btnInstructions_clicked));
		armory_system_Event.add("btnQuit_clicked",$bind(this,this.btnQuit_clicked));
	}
	,btnStoryMode_clicked: function() {
		iron_Scene.setActive("scene_level_select",function(o) {
		});
	}
	,btnArcadeMode_clicked: function() {
		iron_Scene.setActive("scene_arcade",function(o) {
		});
	}
	,btnInstructions_clicked: function() {
		iron_Scene.setActive("scene_instructions",function(o) {
		});
	}
	,btnQuit_clicked: function() {
		kha_System.stop();
	}
	,__class__: arm_SplashScreenLogic
});
var arm_TemplateObject = function() {
	iron_Trait.call(this);
};
$hxClasses["arm.TemplateObject"] = arm_TemplateObject;
arm_TemplateObject.__name__ = "arm.TemplateObject";
arm_TemplateObject.__super__ = iron_Trait;
arm_TemplateObject.prototype = $extend(iron_Trait.prototype,{
	__class__: arm_TemplateObject
});
var arm_UseNightCrosshair = function() {
	iron_Trait.call(this);
};
$hxClasses["arm.UseNightCrosshair"] = arm_UseNightCrosshair;
arm_UseNightCrosshair.__name__ = "arm.UseNightCrosshair";
arm_UseNightCrosshair.__super__ = iron_Trait;
arm_UseNightCrosshair.prototype = $extend(iron_Trait.prototype,{
	__class__: arm_UseNightCrosshair
});
var arm_WallObject = function() {
	iron_Trait.call(this);
};
$hxClasses["arm.WallObject"] = arm_WallObject;
arm_WallObject.__name__ = "arm.WallObject";
arm_WallObject.__super__ = iron_Trait;
arm_WallObject.prototype = $extend(iron_Trait.prototype,{
	__class__: arm_WallObject
});
var armory_data_Config = function() { };
$hxClasses["armory.data.Config"] = armory_data_Config;
armory_data_Config.__name__ = "armory.data.Config";
var armory_logicnode_LogicNode = function(tree) {
	this.name = "";
	this.tree = tree;
};
$hxClasses["armory.logicnode.LogicNode"] = armory_logicnode_LogicNode;
armory_logicnode_LogicNode.__name__ = "armory.logicnode.LogicNode";
armory_logicnode_LogicNode.prototype = {
	get: function(from) {
		return this;
	}
	,__class__: armory_logicnode_LogicNode
};
var armory_logicnode_LogicTree = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.logicnode.LogicTree"] = armory_logicnode_LogicTree;
armory_logicnode_LogicTree.__name__ = "armory.logicnode.LogicTree";
armory_logicnode_LogicTree.__super__ = iron_Trait;
armory_logicnode_LogicTree.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_logicnode_LogicTree
});
var armory_object_Uniforms = function() { };
$hxClasses["armory.object.Uniforms"] = armory_object_Uniforms;
armory_object_Uniforms.__name__ = "armory.object.Uniforms";
armory_object_Uniforms.register = function() {
	iron_object_Uniforms.externalTextureLinks = [armory_object_Uniforms.textureLink];
	iron_object_Uniforms.externalVec3Links = [armory_object_Uniforms.vec3Link];
	iron_object_Uniforms.externalFloatLinks = [armory_object_Uniforms.floatLink];
};
armory_object_Uniforms.textureLink = function(object,mat,link) {
	if(link == "_smaaSearch") {
		var _this = iron_Scene.active.embedded;
		if(__map_reserved["smaa_search.png"] != null) {
			return _this.getReserved("smaa_search.png");
		} else {
			return _this.h["smaa_search.png"];
		}
	} else if(link == "_smaaArea") {
		var _this1 = iron_Scene.active.embedded;
		if(__map_reserved["smaa_area.png"] != null) {
			return _this1.getReserved("smaa_area.png");
		} else {
			return _this1.h["smaa_area.png"];
		}
	} else if(link == "_lensTexture") {
		var _this2 = iron_Scene.active.embedded;
		if(__map_reserved["lenstexture.jpg"] != null) {
			return _this2.getReserved("lenstexture.jpg");
		} else {
			return _this2.h["lenstexture.jpg"];
		}
	} else if(link == "_lutTexture") {
		var _this3 = iron_Scene.active.embedded;
		if(__map_reserved["luttexture.jpg"] != null) {
			return _this3.getReserved("luttexture.jpg");
		} else {
			return _this3.h["luttexture.jpg"];
		}
	} else if(link == "_cloudsTexture") {
		var _this4 = iron_Scene.active.embedded;
		if(__map_reserved["cloudstexture.png"] != null) {
			return _this4.getReserved("cloudstexture.png");
		} else {
			return _this4.h["cloudstexture.png"];
		}
	}
	return null;
};
armory_object_Uniforms.vec3Link = function(object,mat,link) {
	var v = null;
	return v;
};
armory_object_Uniforms.floatLink = function(object,mat,link) {
	return null;
};
var armory_renderpath_Inc = function() { };
$hxClasses["armory.renderpath.Inc"] = armory_renderpath_Inc;
armory_renderpath_Inc.__name__ = "armory.renderpath.Inc";
armory_renderpath_Inc.init = function(_path) {
	armory_renderpath_Inc.path = _path;
};
armory_renderpath_Inc.bindShadowMap = function() {
	var _g = 0;
	var _g1 = iron_Scene.active.lights;
	while(_g < _g1.length) {
		var l = _g1[_g];
		++_g;
		if(!l.visible || !l.data.raw.cast_shadow || l.data.raw.type != "sun") {
			continue;
		}
		var n = "shadowMap";
		armory_renderpath_Inc.path.bindTarget(n,n);
		break;
	}
	var _g2 = 0;
	var _g3 = armory_renderpath_Inc.pointIndex;
	while(_g2 < _g3) {
		var i = _g2++;
		var n1 = "shadowMapPoint[" + i + "]";
		armory_renderpath_Inc.path.bindTarget(n1,n1);
	}
	var _g4 = 0;
	var _g5 = armory_renderpath_Inc.spotIndex;
	while(_g4 < _g5) {
		var i1 = _g4++;
		var n2 = "shadowMapSpot[" + i1 + "]";
		armory_renderpath_Inc.path.bindTarget(n2,n2);
	}
};
armory_renderpath_Inc.shadowMapName = function(l) {
	if(l.data.raw.type == "sun") {
		return "shadowMap";
	}
	if(l.data.raw.type == "point") {
		return "shadowMapPoint[" + armory_renderpath_Inc.pointIndex + "]";
	} else {
		return "shadowMapSpot[" + armory_renderpath_Inc.spotIndex + "]";
	}
};
armory_renderpath_Inc.getShadowMap = function(l) {
	var target = armory_renderpath_Inc.shadowMapName(l);
	var _this = armory_renderpath_Inc.path.renderTargets;
	var rt = __map_reserved[target] != null ? _this.getReserved(target) : _this.h[target];
	if(rt == null) {
		if(armory_renderpath_Inc.path.light.data.raw.shadowmap_cube) {
			var size = armory_renderpath_Inc.path.light.data.raw.shadowmap_size;
			var t = new iron_RenderTargetRaw();
			t.name = target;
			t.width = size;
			t.height = size;
			t.format = "DEPTH16";
			t.is_cubemap = true;
			rt = armory_renderpath_Inc.path.createRenderTarget(t);
		} else {
			var sizew = armory_renderpath_Inc.path.light.data.raw.shadowmap_size;
			var sizeh = sizew;
			if(l.data.raw.type == "sun") {
				sizew *= iron_object_LightObject.cascadeCount;
			}
			var t1 = new iron_RenderTargetRaw();
			t1.name = target;
			t1.width = sizew;
			t1.height = sizeh;
			t1.format = "DEPTH16";
			rt = armory_renderpath_Inc.path.createRenderTarget(t1);
		}
	}
	return target;
};
armory_renderpath_Inc.drawShadowMap = function() {
	armory_renderpath_Inc.pointIndex = 0;
	armory_renderpath_Inc.spotIndex = 0;
	var _g = 0;
	var _g1 = iron_Scene.active.lights;
	while(_g < _g1.length) {
		var l = _g1[_g];
		++_g;
		if(!l.visible || !l.data.raw.cast_shadow) {
			continue;
		}
		armory_renderpath_Inc.path.light = l;
		var shadowmap = armory_renderpath_Inc.getShadowMap(l);
		var faces = l.data.raw.shadowmap_cube ? 6 : 1;
		var _g2 = 0;
		var _g11 = faces;
		while(_g2 < _g11) {
			var i = _g2++;
			if(faces > 1) {
				armory_renderpath_Inc.path.currentFace = i;
			}
			armory_renderpath_Inc.path.setTarget(shadowmap);
			armory_renderpath_Inc.path.clearTarget(null,1.0);
			armory_renderpath_Inc.path.drawMeshes("shadowmap");
		}
		armory_renderpath_Inc.path.currentFace = -1;
		if(l.data.raw.type == "point") {
			armory_renderpath_Inc.pointIndex++;
		} else if(l.data.raw.type == "spot" || l.data.raw.type == "area") {
			armory_renderpath_Inc.spotIndex++;
		}
	}
};
armory_renderpath_Inc.initTranslucency = function() {
	armory_renderpath_Inc.path.createDepthBuffer("main","DEPTH24");
	var t = new iron_RenderTargetRaw();
	t.name = "accum";
	t.width = 0;
	t.height = 0;
	t.displayp = null;
	t.format = "RGBA64";
	t.scale = armory_renderpath_Inc.superSample;
	t.depth_buffer = "main";
	armory_renderpath_Inc.path.createRenderTarget(t);
	var t1 = new iron_RenderTargetRaw();
	t1.name = "revealage";
	t1.width = 0;
	t1.height = 0;
	t1.displayp = null;
	t1.format = "R16";
	t1.scale = armory_renderpath_Inc.superSample;
	t1.depth_buffer = "main";
	armory_renderpath_Inc.path.createRenderTarget(t1);
	armory_renderpath_Inc.path.loadShader("shader_datas/translucent_resolve/translucent_resolve");
};
armory_renderpath_Inc.drawTranslucency = function(target) {
	armory_renderpath_Inc.path.setTarget("accum");
	armory_renderpath_Inc.path.clearTarget(-16777216);
	armory_renderpath_Inc.path.setTarget("revealage");
	armory_renderpath_Inc.path.clearTarget(-1);
	armory_renderpath_Inc.path.setTarget("accum",["revealage"]);
	armory_renderpath_Inc.bindShadowMap();
	armory_renderpath_Inc.path.drawMeshes("translucent");
	armory_renderpath_Inc.path.setTarget(target);
	armory_renderpath_Inc.path.bindTarget("accum","gbuffer0");
	armory_renderpath_Inc.path.bindTarget("revealage","gbuffer1");
	armory_renderpath_Inc.path.drawShader("shader_datas/translucent_resolve/translucent_resolve");
};
var armory_renderpath_RenderPathDeferred = function() { };
$hxClasses["armory.renderpath.RenderPathDeferred"] = armory_renderpath_RenderPathDeferred;
armory_renderpath_RenderPathDeferred.__name__ = "armory.renderpath.RenderPathDeferred";
armory_renderpath_RenderPathDeferred.drawMeshes = function() {
	armory_renderpath_RenderPathDeferred.path.drawMeshes("mesh");
};
armory_renderpath_RenderPathDeferred.init = function(_path) {
	armory_renderpath_RenderPathDeferred.path = _path;
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/world_pass/world_pass");
	armory_renderpath_Inc.initTranslucency();
	armory_renderpath_RenderPathDeferred.path.createDepthBuffer("main","DEPTH24");
	var t = new iron_RenderTargetRaw();
	t.name = "gbuffer0";
	t.width = 0;
	t.height = 0;
	t.displayp = null;
	t.format = "RGBA64";
	t.scale = armory_renderpath_Inc.superSample;
	t.depth_buffer = "main";
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t);
	var t1 = new iron_RenderTargetRaw();
	t1.name = "tex";
	t1.width = 0;
	t1.height = 0;
	t1.displayp = null;
	t1.format = "RGBA64";
	t1.scale = armory_renderpath_Inc.superSample;
	t1.depth_buffer = "main";
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t1);
	var t2 = new iron_RenderTargetRaw();
	t2.name = "buf";
	t2.width = 0;
	t2.height = 0;
	t2.displayp = null;
	t2.format = "RGBA64";
	t2.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t2);
	var t3 = new iron_RenderTargetRaw();
	t3.name = "gbuffer1";
	t3.width = 0;
	t3.height = 0;
	t3.displayp = null;
	t3.format = "RGBA64";
	t3.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t3);
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/deferred_light/deferred_light");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/ssao_pass/ssao_pass");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/blur_edge_pass/blur_edge_pass_x");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/blur_edge_pass/blur_edge_pass_y");
	var t4 = new iron_RenderTargetRaw();
	t4.name = "singlea";
	t4.width = 0;
	t4.height = 0;
	t4.displayp = null;
	t4.format = "R8";
	t4.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t4);
	var t5 = new iron_RenderTargetRaw();
	t5.name = "singleb";
	t5.width = 0;
	t5.height = 0;
	t5.displayp = null;
	t5.format = "R8";
	t5.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t5);
	var t6 = new iron_RenderTargetRaw();
	t6.name = "bufa";
	t6.width = 0;
	t6.height = 0;
	t6.displayp = null;
	t6.format = "RGBA32";
	t6.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t6);
	var t7 = new iron_RenderTargetRaw();
	t7.name = "bufb";
	t7.width = 0;
	t7.height = 0;
	t7.displayp = null;
	t7.format = "RGBA32";
	t7.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t7);
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/compositor_pass/compositor_pass");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/smaa_edge_detect/smaa_edge_detect");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/smaa_blend_weight/smaa_blend_weight");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/smaa_neighborhood_blend/smaa_neighborhood_blend");
};
armory_renderpath_RenderPathDeferred.commands = function() {
	armory_renderpath_RenderPathDeferred.path.setTarget("gbuffer0");
	armory_renderpath_RenderPathDeferred.path.clearTarget(null,1.0);
	armory_renderpath_RenderPathDeferred.path.setTarget("gbuffer0",["gbuffer1"]);
	armory_renderpath_RenderPathCreator.drawMeshes();
	if(armory_data_Config.raw.rp_ssgi != false) {
		armory_renderpath_RenderPathDeferred.path.setTarget("singlea");
		armory_renderpath_RenderPathDeferred.path.bindTarget("_main","gbufferD");
		armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/ssao_pass/ssao_pass");
		armory_renderpath_RenderPathDeferred.path.setTarget("singleb");
		armory_renderpath_RenderPathDeferred.path.bindTarget("singlea","tex");
		armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/blur_edge_pass/blur_edge_pass_x");
		armory_renderpath_RenderPathDeferred.path.setTarget("singlea");
		armory_renderpath_RenderPathDeferred.path.bindTarget("singleb","tex");
		armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/blur_edge_pass/blur_edge_pass_y");
	}
	armory_renderpath_Inc.drawShadowMap();
	armory_renderpath_RenderPathDeferred.path.setDepthFrom("tex","gbuffer1");
	armory_renderpath_RenderPathDeferred.path.setTarget("tex");
	armory_renderpath_RenderPathDeferred.path.bindTarget("_main","gbufferD");
	armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
	armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer1","gbuffer1");
	if(armory_data_Config.raw.rp_ssgi != false) {
		armory_renderpath_RenderPathDeferred.path.bindTarget("singlea","ssaotex");
	} else {
		armory_renderpath_RenderPathDeferred.path.bindTarget("empty_white","ssaotex");
	}
	var voxelao_pass = false;
	armory_renderpath_Inc.bindShadowMap();
	if(voxelao_pass) {
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/deferred_light/deferred_light_VoxelAOvar");
	} else {
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/deferred_light/deferred_light");
	}
	armory_renderpath_RenderPathDeferred.path.setDepthFrom("tex","gbuffer0");
	armory_renderpath_RenderPathDeferred.path.setTarget("tex");
	armory_renderpath_RenderPathDeferred.path.drawSkydome("shader_datas/world_pass/world_pass");
	armory_renderpath_Inc.drawTranslucency("tex");
	var framebuffer = "";
	armory_renderpath_RenderPathCreator.finalTarget = armory_renderpath_RenderPathDeferred.path.currentTarget;
	armory_renderpath_RenderPathDeferred.path.setTarget("buf");
	armory_renderpath_RenderPathDeferred.path.bindTarget("tex","tex");
	if(!armory_renderpath_RenderPathDeferred.path.isProbe) {
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/compositor_pass/compositor_pass");
	} else {
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/copy_pass/copy_pass");
	}
	armory_renderpath_RenderPathDeferred.path.setTarget("bufa");
	armory_renderpath_RenderPathDeferred.path.clearTarget(0);
	armory_renderpath_RenderPathDeferred.path.bindTarget("buf","colorTex");
	armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/smaa_edge_detect/smaa_edge_detect");
	armory_renderpath_RenderPathDeferred.path.setTarget("bufb");
	armory_renderpath_RenderPathDeferred.path.clearTarget(0);
	armory_renderpath_RenderPathDeferred.path.bindTarget("bufa","edgesTex");
	armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/smaa_blend_weight/smaa_blend_weight");
	armory_renderpath_RenderPathDeferred.path.setTarget(framebuffer);
	armory_renderpath_RenderPathDeferred.path.bindTarget("buf","colorTex");
	armory_renderpath_RenderPathDeferred.path.bindTarget("bufb","blendTex");
	armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/smaa_neighborhood_blend/smaa_neighborhood_blend");
};
var armory_renderpath_RenderPathCreator = function() { };
$hxClasses["armory.renderpath.RenderPathCreator"] = armory_renderpath_RenderPathCreator;
armory_renderpath_RenderPathCreator.__name__ = "armory.renderpath.RenderPathCreator";
armory_renderpath_RenderPathCreator.get = function() {
	armory_renderpath_RenderPathCreator.path = new iron_RenderPath();
	armory_renderpath_Inc.init(armory_renderpath_RenderPathCreator.path);
	armory_renderpath_RenderPathDeferred.init(armory_renderpath_RenderPathCreator.path);
	armory_renderpath_RenderPathCreator.path.commands = armory_renderpath_RenderPathDeferred.commands;
	return armory_renderpath_RenderPathCreator.path;
};
var armory_system_Event = function() { };
$hxClasses["armory.system.Event"] = armory_system_Event;
armory_system_Event.__name__ = "armory.system.Event";
armory_system_Event.get = function(name) {
	var _this = armory_system_Event.events;
	if(__map_reserved[name] != null) {
		return _this.getReserved(name);
	} else {
		return _this.h[name];
	}
};
armory_system_Event.add = function(name,onEvent,mask) {
	if(mask == null) {
		mask = -1;
	}
	var e = { name : name, onEvent : onEvent, mask : mask};
	var _this = armory_system_Event.events;
	var entries = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
	if(entries != null) {
		entries.push(e);
	} else {
		var _this1 = armory_system_Event.events;
		var value = [e];
		if(__map_reserved[name] != null) {
			_this1.setReserved(name,value);
		} else {
			_this1.h[name] = value;
		}
	}
	return e;
};
armory_system_Event.remove = function(name) {
	armory_system_Event.events.remove(name);
};
var armory_system_Starter = function() { };
$hxClasses["armory.system.Starter"] = armory_system_Starter;
armory_system_Starter.__name__ = "armory.system.Starter";
armory_system_Starter.main = function(scene,mode,resize,min,max,w,h,msaa,vsync,getRenderPath) {
	var start = function() {
		if(armory_system_Starter.tasks > 0) {
			return;
		}
		if(armory_data_Config.raw == null) {
			armory_data_Config.raw = { };
		}
		var c = armory_data_Config.raw;
		if(c.window_mode == null) {
			c.window_mode = mode;
		}
		if(c.window_resizable == null) {
			c.window_resizable = resize;
		}
		if(c.window_minimizable == null) {
			c.window_minimizable = min;
		}
		if(c.window_maximizable == null) {
			c.window_maximizable = max;
		}
		if(c.window_w == null) {
			c.window_w = w;
		}
		if(c.window_h == null) {
			c.window_h = h;
		}
		if(c.window_msaa == null) {
			c.window_msaa = msaa;
		}
		if(c.window_vsync == null) {
			c.window_vsync = vsync;
		}
		armory_object_Uniforms.register();
		var windowMode = c.window_mode == 0 ? 0 : 1;
		var windowFeatures = 0;
		if(c.window_resizable) {
			windowFeatures = windowFeatures | 1;
		}
		if(c.window_maximizable) {
			windowFeatures = windowFeatures | 4;
		}
		if(c.window_minimizable) {
			windowFeatures = windowFeatures | 2;
		}
		try {
			kha_System.start(new kha_SystemOptions("cdawalt_blender_game",c.window_w,c.window_h,new kha_WindowOptions(null,null,null,null,null,null,null,windowFeatures,windowMode),new kha_FramebufferOptions(null,c.window_vsync,null,null,null,c.window_msaa)),function($window) {
				iron_App.init(function() {
					var load = null;
					load = function(g) {
						if(iron_Scene.active != null && iron_Scene.active.ready) {
							iron_App.removeRender2D(load);
						} else {
							armory_system_Starter.drawLoading(g,iron_data_Data.assetsLoaded,armory_system_Starter.numAssets);
						}
					};
					iron_App.notifyOnRender2D(load);
					iron_Scene.setActive(scene,function(object) {
						iron_RenderPath.setActive(getRenderPath());
					});
				});
			});
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(!kha_SystemImpl.gl2) {
				haxe_Log.trace("This project was not compiled with legacy shaders flag - please use WebGL 2 capable browser.",{ fileName : "Sources/armory/system/Starter.hx", lineNumber : 68, className : "armory.system.Starter", methodName : "main"});
			}
		}
	};
	var loadLibAmmo = function(name) {
		kha_Assets.loadBlobFromPath(name,function(b) {
			var print = function(s) {
				haxe_Log.trace(s,{ fileName : "Sources/armory/system/Starter.hx", lineNumber : 77, className : "armory.system.Starter", methodName : "main"});
			};
			var loaded = function() {
				armory_system_Starter.tasks--;
				start();
			};
			(1, eval)(b.toString());
			Ammo({print:print}).then(loaded);
		},null,{ fileName : "Sources/armory/system/Starter.hx", lineNumber : 76, className : "armory.system.Starter", methodName : "main"});
	};
	armory_system_Starter.tasks = 1;
	armory_system_Starter.tasks++;
	loadLibAmmo("ammo.js");
	armory_system_Starter.tasks--;
	start();
};
var armory_trait_WalkNavigation = function() {
	this.ease = 1.0;
	this.yvec = new iron_math_Vec4();
	this.xvec = new iron_math_Vec4();
	this.dir = new iron_math_Vec4();
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
};
$hxClasses["armory.trait.WalkNavigation"] = armory_trait_WalkNavigation;
armory_trait_WalkNavigation.__name__ = "armory.trait.WalkNavigation";
armory_trait_WalkNavigation.__super__ = iron_Trait;
armory_trait_WalkNavigation.prototype = $extend(iron_Trait.prototype,{
	init: function() {
		this.keyboard = iron_system_Input.getKeyboard();
		this.gamepad = iron_system_Input.getGamepad();
		this.mouse = iron_system_Input.getMouse();
		try {
			this.camera = js_Boot.__cast(this.object , iron_object_CameraObject);
		} catch( msg ) {
			var msg1 = ((msg) instanceof js__$Boot_HaxeError) ? msg.val : msg;
			if(typeof(msg1) == "string") {
				haxe_Log.trace("Error occurred: " + msg1 + "\nWalkNavigation trait should be used with a camera object.",{ fileName : "Sources/armory/trait/WalkNavigation.hx", lineNumber : 38, className : "armory.trait.WalkNavigation", methodName : "init"});
			} else {
				throw msg;
			}
		}
		if(this.camera != null) {
			this.notifyOnUpdate($bind(this,this.update));
		}
	}
	,update: function() {
		if(!armory_trait_WalkNavigation.enabled || iron_system_Input.occupied) {
			return;
		}
		var moveForward = this.keyboard.down("w") || this.keyboard.down("up");
		var moveBackward = this.keyboard.down("s") || this.keyboard.down("down");
		var strafeLeft = this.keyboard.down("a") || this.keyboard.down("left");
		var strafeRight = this.keyboard.down("d") || this.keyboard.down("right");
		var strafeUp = this.keyboard.down("e");
		var strafeDown = this.keyboard.down("q");
		var fast = this.keyboard.down("shift") ? 2.0 : this.keyboard.down("alt") ? 0.5 : 1.0;
		if(this.gamepad != null) {
			var leftStickY = Math.abs(this.gamepad.leftStick.y) > 0.05;
			var leftStickX = Math.abs(this.gamepad.leftStick.x) > 0.05;
			var r1 = this.gamepad.down("r1") > 0.0;
			var l1 = this.gamepad.down("l1") > 0.0;
			var rightStickX = Math.abs(this.gamepad.rightStick.x) > 0.1;
			var rightStickY = Math.abs(this.gamepad.rightStick.y) > 0.1;
			if(leftStickY || leftStickX || r1 || l1 || rightStickX || rightStickY) {
				var _this = this.dir;
				_this.x = 0;
				_this.y = 0;
				_this.z = 0;
				_this.w = 1.0;
				if(leftStickY) {
					var _this1 = this.yvec;
					var _this2 = this.camera;
					var v_x = -_this2.transform.local.self._20;
					var v_y = -_this2.transform.local.self._21;
					var v_z = -_this2.transform.local.self._22;
					var v_w = 1.0;
					_this1.x = v_x;
					_this1.y = v_y;
					_this1.z = v_z;
					_this1.w = v_w;
					var _this3 = this.yvec;
					var f = this.gamepad.leftStick.y;
					_this3.x *= f;
					_this3.y *= f;
					_this3.z *= f;
					var _this4 = this.dir;
					var v = this.yvec;
					_this4.x += v.x;
					_this4.y += v.y;
					_this4.z += v.z;
				}
				if(leftStickX) {
					var _this5 = this.xvec;
					var _this6 = this.camera;
					var v_x1 = _this6.transform.local.self._00;
					var v_y1 = _this6.transform.local.self._01;
					var v_z1 = _this6.transform.local.self._02;
					var v_w1 = 1.0;
					_this5.x = v_x1;
					_this5.y = v_y1;
					_this5.z = v_z1;
					_this5.w = v_w1;
					var _this7 = this.xvec;
					var f1 = this.gamepad.leftStick.x;
					_this7.x *= f1;
					_this7.y *= f1;
					_this7.z *= f1;
					var _this8 = this.dir;
					var v1 = this.xvec;
					_this8.x += v1.x;
					_this8.y += v1.y;
					_this8.z += v1.z;
				}
				if(r1) {
					var _this9 = this.dir;
					_this9.x += 0;
					_this9.y += 0;
					_this9.z += 1;
				}
				if(l1) {
					var _this10 = this.dir;
					_this10.x += 0;
					_this10.y += 0;
					_this10.z += -1;
				}
				var d = 0.016666666666666666 * iron_system_Time.scale * 5.0 * fast;
				this.camera.transform.move(this.dir,d);
				if(rightStickX) {
					this.camera.transform.rotate(new iron_math_Vec4(0.0,0.0,1.0),-this.gamepad.rightStick.x / 15.0);
				}
				if(rightStickY) {
					var _this11 = this.camera;
					this.camera.transform.rotate(new iron_math_Vec4(_this11.transform.local.self._00,_this11.transform.local.self._01,_this11.transform.local.self._02),this.gamepad.rightStick.y / 15.0);
				}
			}
		}
		if(moveForward || moveBackward || strafeRight || strafeLeft || strafeUp || strafeDown) {
			this.ease += 0.016666666666666666 * iron_system_Time.scale * 15;
			if(this.ease > 1.0) {
				this.ease = 1.0;
			}
			var _this12 = this.dir;
			_this12.x = 0;
			_this12.y = 0;
			_this12.z = 0;
			_this12.w = 1.0;
			if(moveForward) {
				var _this13 = this.dir;
				var _this14 = this.camera;
				var inlVec4_x = -_this14.transform.local.self._20;
				var inlVec4_y = -_this14.transform.local.self._21;
				var inlVec4_z = -_this14.transform.local.self._22;
				var inlVec4_w = 1.0;
				var _this15 = this.camera;
				var inlVec4_x1 = -_this15.transform.local.self._20;
				var inlVec4_y1 = -_this15.transform.local.self._21;
				var inlVec4_z1 = -_this15.transform.local.self._22;
				var inlVec4_w1 = 1.0;
				var _this16 = this.camera;
				var inlVec4_x2 = -_this16.transform.local.self._20;
				var inlVec4_y2 = -_this16.transform.local.self._21;
				var inlVec4_z2 = -_this16.transform.local.self._22;
				var inlVec4_w2 = 1.0;
				_this13.x += inlVec4_x;
				_this13.y += inlVec4_y1;
				_this13.z += inlVec4_z2;
			}
			if(moveBackward) {
				var _this17 = this.dir;
				var _this18 = this.camera;
				var inlVec4_x3 = -_this18.transform.local.self._20;
				var inlVec4_y3 = -_this18.transform.local.self._21;
				var inlVec4_z3 = -_this18.transform.local.self._22;
				var inlVec4_w3 = 1.0;
				var _this19 = this.camera;
				var inlVec4_x4 = -_this19.transform.local.self._20;
				var inlVec4_y4 = -_this19.transform.local.self._21;
				var inlVec4_z4 = -_this19.transform.local.self._22;
				var inlVec4_w4 = 1.0;
				var _this20 = this.camera;
				var inlVec4_x5 = -_this20.transform.local.self._20;
				var inlVec4_y5 = -_this20.transform.local.self._21;
				var inlVec4_z5 = -_this20.transform.local.self._22;
				var inlVec4_w5 = 1.0;
				_this17.x += -inlVec4_x3;
				_this17.y += -inlVec4_y4;
				_this17.z += -inlVec4_z5;
			}
			if(strafeRight) {
				var _this21 = this.dir;
				var _this22 = this.camera;
				var inlVec4_x6 = _this22.transform.local.self._00;
				var inlVec4_y6 = _this22.transform.local.self._01;
				var inlVec4_z6 = _this22.transform.local.self._02;
				var inlVec4_w6 = 1.0;
				var _this23 = this.camera;
				var inlVec4_x7 = _this23.transform.local.self._00;
				var inlVec4_y7 = _this23.transform.local.self._01;
				var inlVec4_z7 = _this23.transform.local.self._02;
				var inlVec4_w7 = 1.0;
				var _this24 = this.camera;
				var inlVec4_x8 = _this24.transform.local.self._00;
				var inlVec4_y8 = _this24.transform.local.self._01;
				var inlVec4_z8 = _this24.transform.local.self._02;
				var inlVec4_w8 = 1.0;
				_this21.x += inlVec4_x6;
				_this21.y += inlVec4_y7;
				_this21.z += inlVec4_z8;
			}
			if(strafeLeft) {
				var _this25 = this.dir;
				var _this26 = this.camera;
				var inlVec4_x9 = _this26.transform.local.self._00;
				var inlVec4_y9 = _this26.transform.local.self._01;
				var inlVec4_z9 = _this26.transform.local.self._02;
				var inlVec4_w9 = 1.0;
				var _this27 = this.camera;
				var inlVec4_x10 = _this27.transform.local.self._00;
				var inlVec4_y10 = _this27.transform.local.self._01;
				var inlVec4_z10 = _this27.transform.local.self._02;
				var inlVec4_w10 = 1.0;
				var _this28 = this.camera;
				var inlVec4_x11 = _this28.transform.local.self._00;
				var inlVec4_y11 = _this28.transform.local.self._01;
				var inlVec4_z11 = _this28.transform.local.self._02;
				var inlVec4_w11 = 1.0;
				_this25.x += -inlVec4_x9;
				_this25.y += -inlVec4_y10;
				_this25.z += -inlVec4_z11;
			}
			if(strafeUp) {
				var _this29 = this.dir;
				_this29.x += 0;
				_this29.y += 0;
				_this29.z += 1;
			}
			if(strafeDown) {
				var _this30 = this.dir;
				_this30.x += 0;
				_this30.y += 0;
				_this30.z += -1;
			}
		} else {
			this.ease -= 0.016666666666666666 * iron_system_Time.scale * 20.0 * this.ease;
			if(this.ease < 0.0) {
				this.ease = 0.0;
			}
		}
		var d1 = 0.016666666666666666 * iron_system_Time.scale * 5.0 * fast * this.ease;
		if(d1 > 0.0) {
			this.camera.transform.move(this.dir,d1);
		}
		if(this.mouse.down()) {
			this.camera.transform.rotate(new iron_math_Vec4(0.0,0.0,1.0),-this.mouse.movementX / 200);
			var _this31 = this.camera;
			this.camera.transform.rotate(new iron_math_Vec4(_this31.transform.local.self._00,_this31.transform.local.self._01,_this31.transform.local.self._02),-this.mouse.movementY / 200);
		}
	}
	,__class__: armory_trait_WalkNavigation
});
var iron_App = function(_appReady) {
	_appReady();
	kha_System.notifyOnFrames(iron_App.render);
	kha_Scheduler.addTimeTask(iron_App.update,0,0.016666666666666666 * iron_system_Time.scale);
};
$hxClasses["iron.App"] = iron_App;
iron_App.__name__ = "iron.App";
iron_App.init = function(_appReady) {
	new iron_App(_appReady);
};
iron_App.update = function() {
	if(iron_Scene.active == null || !iron_Scene.active.ready) {
		return;
	}
	if(iron_App.pauseUpdates) {
		return;
	}
	iron_App.startTime = kha_Scheduler.realTime();
	iron_Scene.active.updateFrame();
	var i = 0;
	var l = iron_App.traitUpdates.length;
	while(i < l) {
		if(iron_App.traitInits.length > 0) {
			var _g = 0;
			var _g1 = iron_App.traitInits;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				if(iron_App.traitInits.length > 0) {
					f();
				} else {
					break;
				}
			}
			iron_App.traitInits.splice(0,iron_App.traitInits.length);
		}
		iron_App.traitUpdates[i]();
		if(l <= iron_App.traitUpdates.length) {
			++i;
		} else {
			l = iron_App.traitUpdates.length;
		}
	}
	i = 0;
	l = iron_App.traitLateUpdates.length;
	while(i < l) {
		iron_App.traitLateUpdates[i]();
		if(l <= iron_App.traitLateUpdates.length) {
			++i;
		} else {
			l = iron_App.traitLateUpdates.length;
		}
	}
	if(iron_App.onEndFrames != null) {
		var _g2 = 0;
		var _g11 = iron_App.onEndFrames;
		while(_g2 < _g11.length) {
			var f1 = _g11[_g2];
			++_g2;
			f1();
		}
	}
	iron_object_Animation.endFrame();
	iron_App.updateTime = kha_Scheduler.realTime() - iron_App.startTime;
	if(iron_App.lastw == -1) {
		iron_App.lastw = kha_System.windowWidth();
		iron_App.lasth = kha_System.windowHeight();
	}
	if(iron_App.lastw != kha_System.windowWidth() || iron_App.lasth != kha_System.windowHeight()) {
		if(iron_App.onResize != null) {
			iron_App.onResize();
		} else if(iron_Scene.active != null && iron_Scene.active.camera != null) {
			iron_Scene.active.camera.buildProjection();
		}
	}
	iron_App.lastw = kha_System.windowWidth();
	iron_App.lasth = kha_System.windowHeight();
};
iron_App.render = function(frames) {
	var frame = frames[0];
	iron_App.framebuffer = frame;
	iron_system_Time.update();
	if(iron_Scene.active == null || !iron_Scene.active.ready) {
		iron_App.render2D(frame);
		return;
	}
	iron_App.startTime = kha_Scheduler.realTime();
	if(iron_App.traitInits.length > 0) {
		var _g = 0;
		var _g1 = iron_App.traitInits;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(iron_App.traitInits.length > 0) {
				f();
			} else {
				break;
			}
		}
		iron_App.traitInits.splice(0,iron_App.traitInits.length);
	}
	iron_Scene.active.renderFrame(frame.get_g4());
	var _g2 = 0;
	var _g11 = iron_App.traitRenders;
	while(_g2 < _g11.length) {
		var f1 = _g11[_g2];
		++_g2;
		if(iron_App.traitRenders.length > 0) {
			f1(frame.get_g4());
		} else {
			break;
		}
	}
	iron_App.render2D(frame);
	iron_App.renderPathTime = kha_Scheduler.realTime() - iron_App.startTime;
};
iron_App.render2D = function(frame) {
	if(iron_App.traitRenders2D.length > 0) {
		frame.get_g2().begin(false);
		var _g = 0;
		var _g1 = iron_App.traitRenders2D;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(iron_App.traitRenders2D.length > 0) {
				f(frame.get_g2());
			} else {
				break;
			}
		}
		frame.get_g2().end();
	}
};
iron_App.notifyOnInit = function(f) {
	iron_App.traitInits.push(f);
};
iron_App.removeInit = function(f) {
	HxOverrides.remove(iron_App.traitInits,f);
};
iron_App.notifyOnUpdate = function(f) {
	iron_App.traitUpdates.push(f);
};
iron_App.removeUpdate = function(f) {
	HxOverrides.remove(iron_App.traitUpdates,f);
};
iron_App.removeLateUpdate = function(f) {
	HxOverrides.remove(iron_App.traitLateUpdates,f);
};
iron_App.removeRender = function(f) {
	HxOverrides.remove(iron_App.traitRenders,f);
};
iron_App.notifyOnRender2D = function(f) {
	iron_App.traitRenders2D.push(f);
};
iron_App.removeRender2D = function(f) {
	HxOverrides.remove(iron_App.traitRenders2D,f);
};
iron_App.notifyOnReset = function(f) {
	if(iron_App.onResets == null) {
		iron_App.onResets = [];
	}
	iron_App.onResets.push(f);
};
iron_App.notifyOnEndFrame = function(f) {
	if(iron_App.onEndFrames == null) {
		iron_App.onEndFrames = [];
	}
	iron_App.onEndFrames.push(f);
};
iron_App.prototype = {
	__class__: iron_App
};
var iron_data_Data = function() { };
$hxClasses["iron.data.Data"] = iron_data_Data;
iron_data_Data.__name__ = "iron.data.Data";
iron_data_Data.getMesh = function(file,name,done) {
	var handle = file + name;
	var _this = iron_data_Data.cachedMeshes;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingMeshes;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingMeshes;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_MeshData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedMeshes;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		b.handle = handle;
		var _g = 0;
		var _this4 = iron_data_Data.loadingMeshes;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingMeshes.remove(handle);
	});
};
iron_data_Data.getLight = function(file,name,done) {
	var handle = file + name;
	var _this = iron_data_Data.cachedLights;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingLights;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingLights;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_LightData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedLights;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingLights;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingLights.remove(handle);
	});
};
iron_data_Data.getCamera = function(file,name,done) {
	var handle = file + name;
	var _this = iron_data_Data.cachedCameras;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingCameras;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingCameras;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_CameraData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedCameras;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingCameras;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingCameras.remove(handle);
	});
};
iron_data_Data.getMaterial = function(file,name,done) {
	var handle = file + name;
	var _this = iron_data_Data.cachedMaterials;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingMaterials;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingMaterials;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_MaterialData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedMaterials;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingMaterials;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingMaterials.remove(handle);
	});
};
iron_data_Data.getParticle = function(file,name,done) {
	var handle = file + name;
	var _this = iron_data_Data.cachedParticles;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingParticles;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingParticles;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_ParticleData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedParticles;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingParticles;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingParticles.remove(handle);
	});
};
iron_data_Data.getWorld = function(file,name,done) {
	if(name == null) {
		done(null);
		return;
	}
	var handle = file + name;
	var _this = iron_data_Data.cachedWorlds;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingWorlds;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingWorlds;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_WorldData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedWorlds;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingWorlds;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingWorlds.remove(handle);
	});
};
iron_data_Data.getShader = function(file,name,done,overrideContext) {
	var cacheName = name;
	if(overrideContext != null) {
		cacheName += "2";
	}
	var _this = iron_data_Data.cachedShaders;
	var cached = __map_reserved[cacheName] != null ? _this.getReserved(cacheName) : _this.h[cacheName];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingShaders;
	var loading = __map_reserved[cacheName] != null ? _this1.getReserved(cacheName) : _this1.h[cacheName];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingShaders;
	var value = [done];
	if(__map_reserved[cacheName] != null) {
		_this2.setReserved(cacheName,value);
	} else {
		_this2.h[cacheName] = value;
	}
	iron_data_ShaderData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedShaders;
		if(__map_reserved[cacheName] != null) {
			_this3.setReserved(cacheName,b);
		} else {
			_this3.h[cacheName] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingShaders;
		var _g1 = __map_reserved[cacheName] != null ? _this4.getReserved(cacheName) : _this4.h[cacheName];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingShaders.remove(cacheName);
	},overrideContext);
};
iron_data_Data.getSceneRaw = function(file,done) {
	var _this = iron_data_Data.cachedSceneRaws;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingSceneRaws;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingSceneRaws;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var compressed = StringTools.endsWith(file,".zip");
	var isJson = StringTools.endsWith(file,".json");
	var ext = compressed || isJson || StringTools.endsWith(file,".arm") ? "" : ".arm";
	iron_data_Data.getBlob(file + ext,function(b) {
		var compressed1 = compressed;
		var parsed = null;
		if(isJson) {
			var s = b.toString();
			if(s.charAt(0) == "{") {
				parsed = JSON.parse(s);
			} else {
				var i = new haxe_io_BytesInput(b.toBytes());
				i.set_bigEndian(false);
				parsed = iron_system_ArmPack.read(i);
			}
		} else {
			var i1 = new haxe_io_BytesInput(b.toBytes());
			i1.set_bigEndian(false);
			parsed = iron_system_ArmPack.read(i1);
		}
		iron_data_Data.returnSceneRaw(file,parsed);
	});
};
iron_data_Data.returnSceneRaw = function(file,parsed) {
	var _this = iron_data_Data.cachedSceneRaws;
	if(__map_reserved[file] != null) {
		_this.setReserved(file,parsed);
	} else {
		_this.h[file] = parsed;
	}
	var _g = 0;
	var _this1 = iron_data_Data.loadingSceneRaws;
	var _g1 = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		f(parsed);
	}
	iron_data_Data.loadingSceneRaws.remove(file);
};
iron_data_Data.getMeshRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getLightRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getCameraRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getMaterialRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getParticleRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getWorldRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getShaderRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getSpeakerRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getBlob = function(file,done) {
	var _this = iron_data_Data.cachedBlobs;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingBlobs;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingBlobs;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var p = file.charAt(0) == "/" || file.charAt(1) == ":" ? file : iron_data_Data.dataPath + file;
	kha_Assets.loadBlobFromPath(p,function(b) {
		var _this3 = iron_data_Data.cachedBlobs;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingBlobs;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingBlobs.remove(file);
		iron_data_Data.assetsLoaded++;
	},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 364, className : "iron.data.Data", methodName : "getBlob"});
};
iron_data_Data.getImage = function(file,done,readable,format) {
	if(format == null) {
		format = "RGBA32";
	}
	if(readable == null) {
		readable = false;
	}
	var _this = iron_data_Data.cachedImages;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingImages;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingImages;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var p = file.charAt(0) == "/" || file.charAt(1) == ":" ? file : iron_data_Data.dataPath + file;
	kha_Assets.loadImageFromPath(p,readable,function(b) {
		var _this3 = iron_data_Data.cachedImages;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingImages;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingImages.remove(file);
		iron_data_Data.assetsLoaded++;
	},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 389, className : "iron.data.Data", methodName : "getImage"});
};
iron_data_Data.getSound = function(file,done) {
	if(StringTools.endsWith(file,".wav")) {
		file = file.substring(0,file.length - 4) + ".ogg";
	}
	var _this = iron_data_Data.cachedSounds;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingSounds;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingSounds;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var p = file.charAt(0) == "/" || file.charAt(1) == ":" ? file : iron_data_Data.dataPath + file;
	kha_Assets.loadSoundFromPath(p,function(b) {
		b.uncompress(function() {
			var _this3 = iron_data_Data.cachedSounds;
			if(__map_reserved[file] != null) {
				_this3.setReserved(file,b);
			} else {
				_this3.h[file] = b;
			}
			var _g = 0;
			var _this4 = iron_data_Data.loadingSounds;
			var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f(b);
			}
			iron_data_Data.loadingSounds.remove(file);
			iron_data_Data.assetsLoaded++;
		});
	},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 431, className : "iron.data.Data", methodName : "getSound"});
};
iron_data_Data.getFont = function(file,done) {
	var _this = iron_data_Data.cachedFonts;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingFonts;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingFonts;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var p = file.charAt(0) == "/" || file.charAt(1) == ":" ? file : iron_data_Data.dataPath + file;
	kha_Assets.loadFontFromPath(p,function(b) {
		var _this3 = iron_data_Data.cachedFonts;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingFonts;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingFonts.remove(file);
		iron_data_Data.assetsLoaded++;
	},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 482, className : "iron.data.Data", methodName : "getFont"});
};
var iron_system_Input = function() { };
$hxClasses["iron.system.Input"] = iron_system_Input;
iron_system_Input.__name__ = "iron.system.Input";
iron_system_Input.reset = function() {
	iron_system_Input.occupied = false;
	if(iron_system_Input.mouse != null) {
		iron_system_Input.mouse.reset();
	}
	if(iron_system_Input.pen != null) {
		iron_system_Input.pen.reset();
	}
	if(iron_system_Input.keyboard != null) {
		iron_system_Input.keyboard.reset();
	}
	var _g = 0;
	var _g1 = iron_system_Input.gamepads;
	while(_g < _g1.length) {
		var gamepad = _g1[_g];
		++_g;
		gamepad.reset();
	}
};
iron_system_Input.endFrame = function() {
	if(iron_system_Input.mouse != null) {
		iron_system_Input.mouse.endFrame();
	}
	if(iron_system_Input.pen != null) {
		iron_system_Input.pen.endFrame();
	}
	if(iron_system_Input.keyboard != null) {
		iron_system_Input.keyboard.endFrame();
	}
	var _g = 0;
	var _g1 = iron_system_Input.gamepads;
	while(_g < _g1.length) {
		var gamepad = _g1[_g];
		++_g;
		gamepad.endFrame();
	}
	if(iron_system_Input.virtualButtons != null) {
		var _this = iron_system_Input.virtualButtons;
		var vb = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(vb.hasNext()) {
			var vb1 = vb.next();
			vb1.started = vb1.released = false;
		}
	}
};
iron_system_Input.getMouse = function() {
	if(!iron_system_Input.registered) {
		iron_system_Input.registered = true;
		iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
		iron_App.notifyOnReset(iron_system_Input.reset);
	}
	if(iron_system_Input.mouse == null) {
		iron_system_Input.mouse = new iron_system_Mouse();
	}
	return iron_system_Input.mouse;
};
iron_system_Input.getKeyboard = function() {
	if(!iron_system_Input.registered) {
		iron_system_Input.registered = true;
		iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
		iron_App.notifyOnReset(iron_system_Input.reset);
	}
	if(iron_system_Input.keyboard == null) {
		iron_system_Input.keyboard = new iron_system_Keyboard();
	}
	return iron_system_Input.keyboard;
};
iron_system_Input.getGamepad = function(i) {
	if(i == null) {
		i = 0;
	}
	if(i >= 4) {
		return null;
	}
	if(!iron_system_Input.registered) {
		iron_system_Input.registered = true;
		iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
		iron_App.notifyOnReset(iron_system_Input.reset);
	}
	while(iron_system_Input.gamepads.length <= i) iron_system_Input.gamepads.push(new iron_system_Gamepad(iron_system_Input.gamepads.length));
	if(iron_system_Input.gamepads[i].connected) {
		return iron_system_Input.gamepads[i];
	} else {
		return null;
	}
};
var iron_object_Object = function() {
	this.isEmpty = false;
	this.properties = null;
	this.culledShadow = false;
	this.culledMesh = false;
	this.culled = false;
	this.visibleShadow = true;
	this.visibleMesh = true;
	this.visible = true;
	this.animation = null;
	this.lods = null;
	this.children = [];
	this.parent = null;
	this.traits = [];
	this.constraints = null;
	this.name = "";
	this.raw = null;
	this.uid = iron_object_Object.uidCounter++;
	this.urandom = iron_object_Object.seededRandom();
	this.transform = new iron_object_Transform(this);
	this.isEmpty = js_Boot.getClass(this) == iron_object_Object;
	if(this.isEmpty && iron_Scene.active != null) {
		iron_Scene.active.empties.push(this);
	}
};
$hxClasses["iron.object.Object"] = iron_object_Object;
iron_object_Object.__name__ = "iron.object.Object";
iron_object_Object.seededRandom = function() {
	iron_object_Object.seed = (iron_object_Object.seed * 9301 + 49297) % 233280;
	return iron_object_Object.seed / 233280.0;
};
iron_object_Object.prototype = {
	addChild: function(o,parentInverse) {
		if(parentInverse == null) {
			parentInverse = false;
		}
		if(o.parent == this) {
			return;
		}
		this.children.push(o);
		o.parent = this;
		if(parentInverse) {
			o.transform.applyParentInverse();
		}
	}
	,removeChild: function(o,keepTransform) {
		if(keepTransform == null) {
			keepTransform = false;
		}
		if(keepTransform) {
			o.transform.applyParent();
		}
		o.parent = null;
		o.transform.buildMatrix();
		HxOverrides.remove(this.children,o);
	}
	,remove: function() {
		if(this.isEmpty && iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.empties,this);
		}
		if(this.animation != null) {
			this.animation.remove();
		}
		while(this.children.length > 0) this.children[0].remove();
		while(this.traits.length > 0) this.traits[0].remove();
		if(this.parent != null) {
			HxOverrides.remove(this.parent.children,this);
			this.parent = null;
		}
	}
	,getChild: function(name) {
		if(this.name == name) {
			return this;
		} else {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var r = c.getChild(name);
				if(r != null) {
					return r;
				}
			}
		}
		return null;
	}
	,getChildOfType: function(type) {
		if(js_Boot.__instanceof(this,type)) {
			return this;
		} else {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var r = c.getChildOfType(type);
				if(r != null) {
					return r;
				}
			}
		}
		return null;
	}
	,addTrait: function(t) {
		this.traits.push(t);
		t.object = this;
		if(t._add != null) {
			var _g = 0;
			var _g1 = t._add;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
			t._add = null;
		}
	}
	,removeTrait: function(t) {
		if(t._init != null) {
			var _g = 0;
			var _g1 = t._init;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				iron_App.removeInit(f);
			}
			t._init = null;
		}
		if(t._update != null) {
			var _g2 = 0;
			var _g11 = t._update;
			while(_g2 < _g11.length) {
				var f1 = _g11[_g2];
				++_g2;
				iron_App.removeUpdate(f1);
			}
			t._update = null;
		}
		if(t._lateUpdate != null) {
			var _g3 = 0;
			var _g12 = t._lateUpdate;
			while(_g3 < _g12.length) {
				var f2 = _g12[_g3];
				++_g3;
				iron_App.removeLateUpdate(f2);
			}
			t._lateUpdate = null;
		}
		if(t._render != null) {
			var _g4 = 0;
			var _g13 = t._render;
			while(_g4 < _g13.length) {
				var f3 = _g13[_g4];
				++_g4;
				iron_App.removeRender(f3);
			}
			t._render = null;
		}
		if(t._render2D != null) {
			var _g5 = 0;
			var _g14 = t._render2D;
			while(_g5 < _g14.length) {
				var f4 = _g14[_g5];
				++_g5;
				iron_App.removeRender2D(f4);
			}
			t._render2D = null;
		}
		if(t._remove != null) {
			var _g6 = 0;
			var _g15 = t._remove;
			while(_g6 < _g15.length) {
				var f5 = _g15[_g6];
				++_g6;
				f5();
			}
			t._remove = null;
		}
		HxOverrides.remove(this.traits,t);
	}
	,getTrait: function(c) {
		var _g = 0;
		var _g1 = this.traits;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if((t == null ? null : js_Boot.getClass(t)) == c) {
				return t;
			}
		}
		return null;
	}
	,getParentArmature: function(name) {
		var _g = 0;
		var _g1 = iron_Scene.active.animations;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.armature != null && a.armature.name == name) {
				return a;
			}
		}
		return null;
	}
	,setupAnimation: function(oactions) {
		var _gthis = this;
		if(this.raw.parent_bone != null) {
			iron_Scene.active.notifyOnInit(function() {
				var banim = _gthis.getParentArmature(_gthis.parent.name);
				if(banim != null) {
					banim.addBoneChild(_gthis.raw.parent_bone,_gthis);
				}
			});
		}
		if(oactions == null) {
			return;
		}
		this.animation = new iron_object_ObjectAnimation(this,oactions);
	}
	,__class__: iron_object_Object
};
var iron_Scene = function() {
	this.traitRemoves = [];
	this.traitInits = [];
	this.groups = null;
	this.uid = iron_Scene.uidCounter++;
	this.meshes = [];
	this.lights = [];
	this.cameras = [];
	this.speakers = [];
	this.empties = [];
	this.animations = [];
	this.armatures = [];
	this.embedded = new haxe_ds_StringMap();
	this.root = new iron_object_Object();
	this.root.name = "Root";
	this.traitInits = [];
	this.traitRemoves = [];
	if(iron_Scene.global == null) {
		iron_Scene.global = new iron_object_Object();
	}
};
$hxClasses["iron.Scene"] = iron_Scene;
iron_Scene.__name__ = "iron.Scene";
iron_Scene.create = function(format,done) {
	iron_Scene.active = new iron_Scene();
	iron_Scene.active.ready = false;
	iron_Scene.active.raw = format;
	iron_data_Data.getWorld(format.name,format.world_ref,function(world) {
		iron_Scene.active.world = world;
		iron_Scene.active.addScene(format.name,null,function(sceneObject) {
			if(iron_Scene.active.cameras.length == 0) {
				haxe_Log.trace("No camera found for scene \"" + format.name + "\"",{ fileName : "Sources/iron/Scene.hx", lineNumber : 100, className : "iron.Scene", methodName : "create"});
			}
			iron_Scene.active.camera = iron_Scene.active.getCamera(format.camera_ref);
			iron_Scene.active.ready = true;
			var _g = 0;
			var _g1 = iron_Scene.active.traitInits;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
			iron_Scene.active.traitInits = [];
			iron_Scene.active.sceneParent = sceneObject;
			done(sceneObject);
		});
	});
};
iron_Scene.setActive = function(sceneName,done) {
	if(!iron_Scene.framePassed) {
		return;
	}
	iron_Scene.framePassed = false;
	if(iron_Scene.active != null) {
		iron_Scene.active.remove();
	}
	iron_data_Data.getSceneRaw(sceneName,function(format) {
		iron_Scene.create(format,function(o) {
			if(done != null) {
				done(o);
			}
		});
	});
};
iron_Scene.generateTransform = function(object,transform) {
	var tmp;
	if(object.transform != null) {
		var a = object.transform.values;
		tmp = new iron_math_Mat4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]);
	} else {
		tmp = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	}
	transform.world = tmp;
	var _this = transform.world;
	var loc = transform.loc;
	var quat = transform.rot;
	var scale = transform.scale;
	loc.x = _this.self._30;
	loc.y = _this.self._31;
	loc.z = _this.self._32;
	var _this1 = iron_math_Mat4.helpVec;
	_this1.x = _this.self._00;
	_this1.y = _this.self._01;
	_this1.z = _this.self._02;
	_this1.w = 1.0;
	var _this2 = _this1;
	scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
	var _this3 = iron_math_Mat4.helpVec;
	_this3.x = _this.self._10;
	_this3.y = _this.self._11;
	_this3.z = _this.self._12;
	_this3.w = 1.0;
	var _this4 = _this3;
	scale.y = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
	var _this5 = iron_math_Mat4.helpVec;
	_this5.x = _this.self._20;
	_this5.y = _this.self._21;
	_this5.z = _this.self._22;
	_this5.w = 1.0;
	var _this6 = _this5;
	scale.z = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
	var _this7 = _this.self;
	var m3 = _this7._12;
	var m4 = _this7._22;
	var m5 = _this7._32;
	var m6 = _this7._13;
	var m7 = _this7._23;
	var m8 = _this7._33;
	var c00 = _this7._11 * (m4 * m8 - m5 * m7) - _this7._21 * (m3 * m8 - m5 * m6) + _this7._31 * (m3 * m7 - m4 * m6);
	var m31 = _this7._12;
	var m41 = _this7._22;
	var m51 = _this7._32;
	var m61 = _this7._13;
	var m71 = _this7._23;
	var m81 = _this7._33;
	var c01 = _this7._10 * (m41 * m81 - m51 * m71) - _this7._20 * (m31 * m81 - m51 * m61) + _this7._30 * (m31 * m71 - m41 * m61);
	var m32 = _this7._11;
	var m42 = _this7._21;
	var m52 = _this7._31;
	var m62 = _this7._13;
	var m72 = _this7._23;
	var m82 = _this7._33;
	var c02 = _this7._10 * (m42 * m82 - m52 * m72) - _this7._20 * (m32 * m82 - m52 * m62) + _this7._30 * (m32 * m72 - m42 * m62);
	var m33 = _this7._11;
	var m43 = _this7._21;
	var m53 = _this7._31;
	var m63 = _this7._12;
	var m73 = _this7._22;
	var m83 = _this7._32;
	var c03 = _this7._10 * (m43 * m83 - m53 * m73) - _this7._20 * (m33 * m83 - m53 * m63) + _this7._30 * (m33 * m73 - m43 * m63);
	if(_this7._00 * c00 - _this7._01 * c01 + _this7._02 * c02 - _this7._03 * c03 < 0.0) {
		scale.x = -scale.x;
	}
	var invs = 1.0 / scale.x;
	iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
	iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
	iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
	invs = 1.0 / scale.y;
	iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
	iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
	iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
	invs = 1.0 / scale.z;
	iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
	iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
	iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
	var m = iron_math_Mat4.helpMat;
	var m11 = m.self._00;
	var m12 = m.self._10;
	var m13 = m.self._20;
	var m21 = m.self._01;
	var m22 = m.self._11;
	var m23 = m.self._21;
	var m311 = m.self._02;
	var m321 = m.self._12;
	var m331 = m.self._22;
	var tr = m11 + m22 + m331;
	var s = 0.0;
	if(tr > 0) {
		s = 0.5 / Math.sqrt(tr + 1.0);
		quat.w = 0.25 / s;
		quat.x = (m321 - m23) * s;
		quat.y = (m13 - m311) * s;
		quat.z = (m21 - m12) * s;
	} else if(m11 > m22 && m11 > m331) {
		s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
		quat.w = (m321 - m23) / s;
		quat.x = 0.25 * s;
		quat.y = (m12 + m21) / s;
		quat.z = (m13 + m311) / s;
	} else if(m22 > m331) {
		s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
		quat.w = (m13 - m311) / s;
		quat.x = (m12 + m21) / s;
		quat.y = 0.25 * s;
		quat.z = (m23 + m321) / s;
	} else {
		s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
		quat.w = (m21 - m12) / s;
		quat.x = (m13 + m311) / s;
		quat.y = (m23 + m321) / s;
		quat.z = 0.25 * s;
	}
	if(object.local_only != null) {
		transform.localOnly = object.local_only;
	}
	if(transform.object.parent != null) {
		transform.update();
	}
};
iron_Scene.createTraits = function(traits,object) {
	if(traits == null) {
		return;
	}
	var _g = 0;
	while(_g < traits.length) {
		var t = traits[_g];
		++_g;
		if(t.type == "Script") {
			var args = [];
			if(t.parameters != null) {
				var _g1 = 0;
				var _g11 = t.parameters;
				while(_g1 < _g11.length) {
					var param = _g11[_g1];
					++_g1;
					args.push(iron_Scene.parseArg(param));
				}
			}
			var traitInst = iron_Scene.createTraitClassInstance(t.class_name,args);
			if(traitInst == null) {
				haxe_Log.trace("Error: Trait '" + t.class_name + "' referenced in object '" + object.name + "' not found",{ fileName : "Sources/iron/Scene.hx", lineNumber : 659, className : "iron.Scene", methodName : "createTraits"});
				continue;
			}
			if(t.props != null) {
				var _g2 = 0;
				var _g12 = t.props.length / 2 | 0;
				while(_g2 < _g12) {
					var i = _g2++;
					var pname = t.props[i * 2];
					var pval = t.props[i * 2 + 1];
					if(pval != "") {
						Reflect.setProperty(traitInst,pname,iron_Scene.parseArg(pval));
					}
				}
			}
			object.addTrait(traitInst);
		}
	}
};
iron_Scene.parseArg = function(str) {
	if(str == "true") {
		return true;
	} else if(str == "false") {
		return false;
	} else if(str == "null") {
		return null;
	} else if(str.charAt(0) == "'") {
		return StringTools.replace(str,"'","");
	} else if(str.charAt(0) == "\"") {
		return StringTools.replace(str,"\"","");
	} else if(str.charAt(0) == "[") {
		str = StringTools.replace(str,"[","");
		str = StringTools.replace(str,"]","");
		str = StringTools.replace(str," ","");
		var ar = [];
		var vals = str.split(",");
		var _g = 0;
		while(_g < vals.length) {
			var v = vals[_g];
			++_g;
			ar.push(iron_Scene.parseArg(v));
		}
		return ar;
	} else {
		var f = parseFloat(str);
		var i = Std.parseInt(str);
		if(f == i) {
			return i;
		} else {
			return f;
		}
	}
};
iron_Scene.createConstraints = function(constraints,object) {
	if(constraints == null) {
		return;
	}
	object.constraints = [];
	var _g = 0;
	while(_g < constraints.length) {
		var c = constraints[_g];
		++_g;
		var constr = new iron_object_Constraint(c);
		object.constraints.push(constr);
	}
};
iron_Scene.createTraitClassInstance = function(traitName,args) {
	var cname = $hxClasses[traitName];
	if(cname == null) {
		return null;
	}
	return Type.createInstance(cname,args);
};
iron_Scene.prototype = {
	remove: function() {
		var _g = 0;
		var _g1 = this.traitRemoves;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		var _g2 = 0;
		var _g3 = this.meshes;
		while(_g2 < _g3.length) {
			var o = _g3[_g2];
			++_g2;
			o.remove();
		}
		var _g4 = 0;
		var _g5 = this.lights;
		while(_g4 < _g5.length) {
			var o1 = _g5[_g4];
			++_g4;
			o1.remove();
		}
		var _g6 = 0;
		var _g7 = this.cameras;
		while(_g6 < _g7.length) {
			var o2 = _g7[_g6];
			++_g6;
			o2.remove();
		}
		var _g8 = 0;
		var _g9 = this.speakers;
		while(_g8 < _g9.length) {
			var o3 = _g9[_g8];
			++_g8;
			o3.remove();
		}
		var _g10 = 0;
		var _g11 = this.empties;
		while(_g10 < _g11.length) {
			var o4 = _g11[_g10];
			++_g10;
			o4.remove();
		}
		this.groups = null;
		this.root.remove();
	}
	,updateFrame: function() {
		if(!this.ready) {
			return;
		}
		var _g = 0;
		var _g1 = this.animations;
		while(_g < _g1.length) {
			var anim = _g1[_g];
			++_g;
			anim.update(0.016666666666666666 * iron_system_Time.scale);
		}
		var _g2 = 0;
		var _g3 = this.empties;
		while(_g2 < _g3.length) {
			var e = _g3[_g2];
			++_g2;
			if(e != null && e.parent != null) {
				e.transform.update();
			}
		}
	}
	,renderFrame: function(g) {
		if(!this.ready || iron_RenderPath.active == null) {
			return;
		}
		iron_Scene.framePassed = true;
		if(this.camera != null) {
			this.camera.renderFrame(g);
		} else {
			iron_RenderPath.active.renderFrame(g);
		}
	}
	,addObject: function(parent) {
		var object = new iron_object_Object();
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,getChild: function(name) {
		return this.root.getChild(name);
	}
	,getTrait: function(c) {
		if(this.root.children.length > 0) {
			return this.root.children[0].getTrait(c);
		} else {
			return null;
		}
	}
	,getCamera: function(name) {
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.name == name) {
				return c;
			}
		}
		return null;
	}
	,addMeshObject: function(data,materials,parent) {
		var object = new iron_object_MeshObject(data,materials);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addLightObject: function(data,parent) {
		var object = new iron_object_LightObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addCameraObject: function(data,parent) {
		var object = new iron_object_CameraObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addSpeakerObject: function(data,parent) {
		var object = new iron_object_SpeakerObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addScene: function(sceneName,parent,done) {
		var _gthis = this;
		if(parent == null) {
			parent = this.addObject();
			parent.name = sceneName;
		}
		iron_data_Data.getSceneRaw(sceneName,function(format) {
			iron_Scene.createTraits(format.traits,parent);
			_gthis.loadEmbeddedData(format.embedded_datas,function() {
				var objectsTraversed = 0;
				var objectsCount = _gthis.getObjectsCount(format.objects);
				var traverseObjects = null;
				traverseObjects = function(parent1,objects,parentObject,done1) {
					if(objects == null) {
						return;
					}
					var _g = 0;
					var _g1 = objects.length;
					while(_g < _g1) {
						var i = _g++;
						var o = [objects[i]];
						if(o[0].spawn != null && o[0].spawn == false) {
							if((objectsTraversed += 1) == objectsCount) {
								done1();
							}
							continue;
						}
						var o1 = o[0];
						var traverseObjects1 = (function(o2) {
							return function(object) {
								if(object != null) {
									traverseObjects(object,o2[0].children,o2[0],done1);
								}
								if((objectsTraversed += 1) == objectsCount) {
									done1();
								}
							};
						})(o);
						_gthis.createObject(o1,format,parent1,parentObject,traverseObjects1);
					}
				};
				if(format.objects == null || format.objects.length == 0) {
					done(parent);
				} else {
					traverseObjects(parent,format.objects,null,function() {
						done(parent);
					});
				}
			});
		});
	}
	,getObjectsCount: function(objects,discardNoSpawn) {
		if(discardNoSpawn == null) {
			discardNoSpawn = true;
		}
		if(objects == null) {
			return 0;
		}
		var result = objects.length;
		var _g = 0;
		while(_g < objects.length) {
			var o = objects[_g];
			++_g;
			if(discardNoSpawn && o.spawn != null && o.spawn == false) {
				continue;
			}
			if(o.children != null) {
				result += this.getObjectsCount(o.children);
			}
		}
		return result;
	}
	,spawnObject: function(name,parent,done,spawnChildren) {
		if(spawnChildren == null) {
			spawnChildren = true;
		}
		var _gthis = this;
		var objectsTraversed = 0;
		var obj = this.getObj(this.raw,name);
		var objectsCount = spawnChildren ? this.getObjectsCount([obj],false) : 1;
		var spawnObjectTree = null;
		spawnObjectTree = function(obj1,parent1,parentObject,done1) {
			_gthis.createObject(obj1,_gthis.raw,parent1,parentObject,function(object) {
				if(spawnChildren && obj1.children != null) {
					var _g = 0;
					var _g1 = obj1.children;
					while(_g < _g1.length) {
						var child = _g1[_g];
						++_g;
						spawnObjectTree(child,object,obj1,done1);
					}
				}
				if((objectsTraversed += 1) == objectsCount && done1 != null) {
					done1(object);
				}
			});
		};
		spawnObjectTree(obj,parent,null,done);
	}
	,getObj: function(format,name) {
		return this.traverseObjs(format.objects,name);
	}
	,traverseObjs: function(children,name) {
		var _g = 0;
		while(_g < children.length) {
			var o = children[_g];
			++_g;
			if(o.name == name) {
				return o;
			}
			if(o.children != null) {
				var res = this.traverseObjs(o.children,name);
				if(res != null) {
					return res;
				}
			}
		}
		return null;
	}
	,createObject: function(o,format,parent,parentObject,done) {
		var _gthis = this;
		var sceneName = format.name;
		if(o.type == "camera_object") {
			iron_data_Data.getCamera(sceneName,o.data_ref,function(b) {
				var object = _gthis.addCameraObject(b,parent);
				_gthis.returnObject(object,o,done);
			});
		} else if(o.type == "light_object") {
			iron_data_Data.getLight(sceneName,o.data_ref,function(b1) {
				var object1 = _gthis.addLightObject(b1,parent);
				_gthis.returnObject(object1,o,done);
			});
		} else if(o.type == "mesh_object") {
			if(o.material_refs == null || o.material_refs.length == 0) {
				var object2 = this.addObject(parent);
				this.returnObject(object2,o,done);
			} else {
				var this1 = new Array(o.material_refs.length);
				var materials = this1;
				var materialsLoaded = 0;
				var _g = 0;
				var _g1 = o.material_refs.length;
				while(_g < _g1) {
					var i = [_g++];
					var ref = o.material_refs[i[0]];
					var tmp = (function(i1) {
						return function(mat) {
							materials[i1[0]] = mat;
							materialsLoaded += 1;
							if(materialsLoaded == o.material_refs.length) {
								var ref1 = o.data_ref.split("/");
								var object_file = "";
								var data_ref = "";
								if(ref1.length == 2) {
									object_file = ref1[0];
									data_ref = ref1[1];
								} else {
									object_file = sceneName;
									data_ref = o.data_ref;
								}
								if(parentObject != null && parentObject.bone_actions != null) {
									var bactions = [];
									var _g2 = 0;
									var _g11 = parentObject.bone_actions;
									while(_g2 < _g11.length) {
										var ref2 = _g11[_g2];
										++_g2;
										iron_data_Data.getSceneRaw(ref2,(function() {
											return function(action) {
												bactions.push(action);
												if(bactions.length == parentObject.bone_actions.length) {
													var armature = null;
													var _g3 = 0;
													var _g12 = _gthis.armatures;
													while(_g3 < _g12.length) {
														var a = _g12[_g3];
														++_g3;
														if(a.uid == parent.uid) {
															armature = a;
															break;
														}
													}
													if(armature == null) {
														var _g21 = 0;
														var _g31 = _gthis.armatures;
														while(_g21 < _g31.length) {
															var a1 = _g31[_g21];
															++_g21;
															if(a1.name == parent.name) {
																parent.name += "." + parent.uid;
																break;
															}
														}
														armature = new iron_data_Armature(parent.uid,parent.name,bactions);
														_gthis.armatures.push(armature);
													}
													_gthis.returnMeshObject(object_file,data_ref,sceneName,armature,materials,parent,o,done);
												}
											};
										})());
									}
								} else {
									_gthis.returnMeshObject(object_file,data_ref,sceneName,null,materials,parent,o,done);
								}
							}
						};
					})(i);
					iron_data_Data.getMaterial(sceneName,ref,tmp);
				}
			}
		} else if(o.type == "speaker_object") {
			var object3 = this.addSpeakerObject(iron_data_Data.getSpeakerRawByName(format.speaker_datas,o.data_ref),parent);
			this.returnObject(object3,o,done);
		} else if(o.type == "object") {
			var object4 = this.addObject(parent);
			this.returnObject(object4,o,function(ro) {
				if(o.group_ref != null) {
					var spawned = 0;
					var object_refs = _gthis.getGroupObjectRefs(o.group_ref);
					if(object_refs.length == 0) {
						done(ro);
					} else {
						var _g4 = 0;
						while(_g4 < object_refs.length) {
							var s = object_refs[_g4];
							++_g4;
							_gthis.spawnObject(s,ro,function(so) {
								if((spawned += 1) == object_refs.length) {
									done(ro);
								}
							});
						}
					}
				} else {
					done(ro);
				}
			});
		} else {
			done(null);
		}
	}
	,getGroupObjectRefs: function(group_ref) {
		var _g = 0;
		var _g1 = this.raw.groups;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			if(g.name == group_ref) {
				return g.object_refs;
			}
		}
		return null;
	}
	,returnMeshObject: function(object_file,data_ref,sceneName,armature,materials,parent,o,done) {
		var _gthis = this;
		iron_data_Data.getMesh(object_file,data_ref,function(mesh) {
			if(mesh.isSkinned) {
				var g = mesh.geom;
				if(armature != null) {
					g.addArmature(armature);
				} else {
					g.addAction(mesh.format.objects,"none");
				}
			}
			var object = _gthis.addMeshObject(mesh,materials,parent);
			if(o.particle_refs != null) {
				var _g = 0;
				var _g1 = o.particle_refs;
				while(_g < _g1.length) {
					var ref = _g1[_g];
					++_g;
					(js_Boot.__cast(object , iron_object_MeshObject)).setupParticleSystem(sceneName,ref);
				}
			}
			if(o.tilesheet_ref != null) {
				(js_Boot.__cast(object , iron_object_MeshObject)).setupTilesheet(sceneName,o.tilesheet_ref,o.tilesheet_action_ref);
			}
			_gthis.returnObject(object,o,done);
		});
	}
	,returnObject: function(object,o,done) {
		var _gthis = this;
		if(object != null && o.object_actions != null) {
			var oactions = [];
			while(oactions.length < o.object_actions.length) oactions.push(null);
			var actionsLoaded = 0;
			var _g = 0;
			var _g1 = o.object_actions.length;
			while(_g < _g1) {
				var i = [_g++];
				var ref = o.object_actions[i[0]];
				if(ref == "null") {
					actionsLoaded += 1;
					continue;
				}
				iron_data_Data.getSceneRaw(ref,(function(i1) {
					return function(action) {
						oactions[i1[0]] = action;
						actionsLoaded += 1;
						if(actionsLoaded == o.object_actions.length) {
							_gthis.returnObjectLoaded(object,o,oactions,done);
						}
					};
				})(i));
			}
		} else {
			this.returnObjectLoaded(object,o,null,done);
		}
	}
	,returnObjectLoaded: function(object,o,oactions,done) {
		if(object != null) {
			object.raw = o;
			object.name = o.name;
			if(o.visible != null) {
				object.visible = o.visible;
			}
			if(o.visible_mesh != null) {
				object.visibleMesh = o.visible_mesh;
			}
			if(o.visible_shadow != null) {
				object.visibleShadow = o.visible_shadow;
			}
			iron_Scene.createConstraints(o.constraints,object);
			iron_Scene.generateTransform(o,object.transform);
			object.setupAnimation(oactions);
			if(o.properties != null) {
				object.properties = new haxe_ds_StringMap();
				var _g = 0;
				var _g1 = o.properties;
				while(_g < _g1.length) {
					var p = _g1[_g];
					++_g;
					var key = p.name;
					var _this = object.properties;
					var value = p.value;
					if(__map_reserved[key] != null) {
						_this.setReserved(key,value);
					} else {
						_this.h[key] = value;
					}
				}
			}
			iron_Scene.createTraits(o.traits,object);
		}
		done(object);
	}
	,loadEmbeddedData: function(datas,done) {
		var _gthis = this;
		if(datas == null) {
			done();
			return;
		}
		var loaded = 0;
		var _g = 0;
		while(_g < datas.length) {
			var file = [datas[_g]];
			++_g;
			iron_data_Data.getImage(file[0],(function(file1) {
				return function(image) {
					var _this = _gthis.embedded;
					if(__map_reserved[file1[0]] != null) {
						_this.setReserved(file1[0],image);
					} else {
						_this.h[file1[0]] = image;
					}
					loaded += 1;
					if(loaded == datas.length) {
						done();
					}
				};
			})(file));
		}
	}
	,notifyOnInit: function(f) {
		if(this.ready) {
			f();
		} else {
			this.traitInits.push(f);
		}
	}
	,notifyOnRemove: function(f) {
		this.traitRemoves.push(f);
	}
	,__class__: iron_Scene
};
var iron_system_Time = function() { };
$hxClasses["iron.system.Time"] = iron_system_Time;
iron_system_Time.__name__ = "iron.system.Time";
iron_system_Time.update = function() {
	iron_system_Time.realDelta = kha_Scheduler.realTime() - iron_system_Time.last;
	iron_system_Time.last = kha_Scheduler.realTime();
};
var armory_trait_internal_Bridge = $hx_exports["iron"] = function() { };
$hxClasses["armory.trait.internal.Bridge"] = armory_trait_internal_Bridge;
armory_trait_internal_Bridge.__name__ = "armory.trait.internal.Bridge";
armory_trait_internal_Bridge.log = function(s) {
	haxe_Log.trace(s,{ fileName : "Sources/armory/trait/internal/Bridge.hx", lineNumber : 14, className : "armory.trait.internal.Bridge", methodName : "log"});
};
var armory_trait_internal_CameraController = function() {
	this.jump = false;
	this.moveRight = false;
	this.moveLeft = false;
	this.moveBackward = false;
	this.moveForward = false;
	var _gthis = this;
	iron_Trait.call(this);
	iron_Scene.active.notifyOnInit(function() {
		_gthis.transform = _gthis.object.transform;
		_gthis.body = _gthis.object.getTrait(armory_trait_physics_bullet_RigidBody);
		_gthis.camera = js_Boot.__cast(_gthis.object.getChildOfType(iron_object_CameraObject) , iron_object_CameraObject);
	});
	this.notifyOnUpdate(function() {
		var keyboard = iron_system_Input.getKeyboard();
		_gthis.moveForward = keyboard.down("w");
		_gthis.moveRight = keyboard.down("d");
		_gthis.moveBackward = keyboard.down("s");
		_gthis.moveLeft = keyboard.down("a");
		_gthis.jump = keyboard.started("space");
	});
};
$hxClasses["armory.trait.internal.CameraController"] = armory_trait_internal_CameraController;
armory_trait_internal_CameraController.__name__ = "armory.trait.internal.CameraController";
armory_trait_internal_CameraController.__super__ = iron_Trait;
armory_trait_internal_CameraController.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_internal_CameraController
});
var armory_trait_internal_CanvasScript = function(canvasName) {
	this.onReady = null;
	this.canvas = null;
	var _gthis = this;
	iron_Trait.call(this);
	iron_data_Data.getBlob(canvasName + ".json",function(blob) {
		iron_data_Data.getFont("font_default.ttf",function(f) {
			_gthis.cui = new zui_Zui({ font : f, theme : zui_Themes.light});
			var c = JSON.parse(blob.toString());
			if(c.assets == null || c.assets.length == 0) {
				_gthis.canvas = c;
			} else {
				var loaded = 0;
				var _g = 0;
				var _g1 = c.assets;
				while(_g < _g1.length) {
					var asset = [_g1[_g]];
					++_g;
					var file = asset[0].name;
					iron_data_Data.getImage(file,(function(asset1) {
						return function(image) {
							zui_Canvas.assetMap.h[asset1[0].id] = image;
							if((loaded += 1) >= c.assets.length) {
								_gthis.canvas = c;
							}
						};
					})(asset));
				}
			}
		});
	});
	this.notifyOnRender2D(function(g) {
		if(_gthis.canvas == null) {
			return;
		}
		var events = zui_Canvas.draw(_gthis.cui,_gthis.canvas,g);
		var _g2 = 0;
		while(_g2 < events.length) {
			var e = events[_g2];
			++_g2;
			var all = armory_system_Event.get(e);
			if(all != null) {
				var _g3 = 0;
				while(_g3 < all.length) {
					var entry = all[_g3];
					++_g3;
					entry.onEvent();
				}
			}
		}
		if(_gthis.onReady != null) {
			_gthis.onReady();
			_gthis.onReady = null;
		}
	});
};
$hxClasses["armory.trait.internal.CanvasScript"] = armory_trait_internal_CanvasScript;
armory_trait_internal_CanvasScript.__name__ = "armory.trait.internal.CanvasScript";
armory_trait_internal_CanvasScript.__super__ = iron_Trait;
armory_trait_internal_CanvasScript.prototype = $extend(iron_Trait.prototype,{
	get_ready: function() {
		return this.canvas != null;
	}
	,notifyOnReady: function(f) {
		this.onReady = f;
	}
	,getElement: function(name) {
		var _g = 0;
		var _g1 = this.canvas.elements;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.name == name) {
				return e;
			}
		}
		return null;
	}
	,getHandle: function(name) {
		return zui_Canvas.h.children[this.getElement(name).id];
	}
	,__class__: armory_trait_internal_CanvasScript
	,__properties__: {get_ready:"get_ready"}
});
var armory_trait_internal_DebugConsole = function(scaleFactor) {
	if(scaleFactor == null) {
		scaleFactor = 1.0;
	}
	this.debugDrawSet = false;
	this.selectedType = "";
	this.benchTime = 0.0;
	this.benchFrames = 0;
	this.benchmark = false;
	this.graphB = null;
	this.graphA = null;
	this.graph = null;
	this.physTimeAvg = 0.0;
	this.physTime = 0.0;
	this.animTimeAvg = 0.0;
	this.animTime = 0.0;
	this.updateTimeAvg = 0.0;
	this.updateTime = 0.0;
	this.renderPathTimeAvg = 0.0;
	this.renderPathTime = 0.0;
	this.frameTimeAvgMax = 0.0;
	this.frameTimeAvgMin = 0.0;
	this.frameTimeAvg = 0.0;
	this.frames = 0;
	this.totalTime = 0.0;
	this.frameTime = 0.0;
	this.lastTime = 0.0;
	this.scaleFactor = 1.0;
	this.visible = true;
	var _gthis = this;
	iron_Trait.call(this);
	this.scaleFactor = scaleFactor;
	iron_data_Data.getFont("font_default.ttf",function(font) {
		var theme = Reflect.copy(zui_Themes.dark);
		theme.WINDOW_BG_COL = -300871407;
		_gthis.ui = new zui_Zui({ scaleFactor : scaleFactor, font : font, theme : theme});
		_gthis.notifyOnRender2D($bind(_gthis,_gthis.render2D));
		_gthis.notifyOnUpdate($bind(_gthis,_gthis.update));
		if(armory_trait_internal_DebugConsole.haxeTrace == null) {
			armory_trait_internal_DebugConsole.haxeTrace = haxe_Log.trace;
			haxe_Log.trace = armory_trait_internal_DebugConsole.consoleTrace;
		}
		kha_input_Keyboard.get().notify(null,null,function(char) {
			if(char == "~") {
				_gthis.visible = !_gthis.visible;
			} else if(char == "[") {
				armory_trait_internal_DebugConsole.f -= 0.1;
			} else if(char == "]") {
				armory_trait_internal_DebugConsole.f += 0.1;
			}
		});
	});
};
$hxClasses["armory.trait.internal.DebugConsole"] = armory_trait_internal_DebugConsole;
armory_trait_internal_DebugConsole.__name__ = "armory.trait.internal.DebugConsole";
armory_trait_internal_DebugConsole.consoleTrace = function(v,inf) {
	armory_trait_internal_DebugConsole.lastTraces.unshift(Std.string(v));
	if(armory_trait_internal_DebugConsole.lastTraces.length > 10) {
		armory_trait_internal_DebugConsole.lastTraces.pop();
	}
	armory_trait_internal_DebugConsole.haxeTrace(v,inf);
};
armory_trait_internal_DebugConsole.__super__ = iron_Trait;
armory_trait_internal_DebugConsole.prototype = $extend(iron_Trait.prototype,{
	selectObject: function(o) {
		var _gthis = this;
		this.selectedObject = o;
		if(!this.debugDrawSet) {
			this.debugDrawSet = true;
			armory_trait_internal_DebugDraw.notifyOnRender(function(draw) {
				if(_gthis.selectedObject != null) {
					draw.bounds(_gthis.selectedObject.transform);
				}
			});
		}
	}
	,updateGraph: function() {
		if(this.graph == null) {
			this.graphA = kha_Image.createRenderTarget(280,33);
			this.graphB = kha_Image.createRenderTarget(280,33);
			this.graph = this.graphA;
		} else {
			this.graph = this.graph == this.graphA ? this.graphB : this.graphA;
		}
		var graphPrev = this.graph == this.graphA ? this.graphB : this.graphA;
		this.graph.get_g2().begin(true,0);
		this.graph.get_g2().set_color(-1);
		this.graph.get_g2().drawImage(graphPrev,-3,0);
		var avg = Math.round(this.frameTimeAvg * 1000);
		var miss = avg > 16.7 ? (avg - 16.7) / 16.7 : 0.0;
		this.graph.get_g2().set_color(kha__$Color_Color_$Impl_$.fromFloats(miss,1 - miss,0,1.0));
		this.graph.get_g2().fillRect(277,33 - avg,3,avg);
		this.graph.get_g2().set_color(-16777216);
		this.graph.get_g2().fillRect(277,16,3,1);
		this.graph.get_g2().end();
	}
	,render2D: function(g) {
		var _gthis = this;
		if(!this.visible) {
			return;
		}
		var hwin = zui_Handle.global.nest(0,null);
		var htab = zui_Handle.global.nest(1,{ position : 0});
		var ww = 280 * this.scaleFactor | 0;
		var wx = kha_System.windowWidth() - ww;
		var wy = 0;
		var wh = kha_System.windowHeight();
		var bindG = true;
		if(bindG) {
			g.end();
		}
		this.ui.begin(g);
		if(this.ui.window(hwin,wx,wy,ww,wh,true)) {
			var tmp = this.ui.tab(htab,"");
			if(this.ui.tab(htab,"Scene")) {
				if(this.ui.panel(zui_Handle.global.nest(2,{ selected : true}),"Outliner")) {
					this.ui.indent();
					var i = 0;
					var drawList = null;
					drawList = function(h,o) {
						if(o.name.charAt(0) == ".") {
							return;
						}
						var b = false;
						if(_gthis.selectedObject == o) {
							_gthis.ui.g.set_color(-14656100);
							var _this = _gthis.ui;
							_gthis.ui.g.fillRect(0,_gthis.ui._y,_gthis.ui._windowW,_this.t.ELEMENT_H * _this.SCALE);
							_gthis.ui.g.set_color(-1);
						}
						if(o.children.length > 0) {
							_gthis.ui.row([0.076923076923076927,0.92307692307692313]);
							b = _gthis.ui.panel(h.nest(i,{ selected : true}),"",0,true);
							_gthis.ui.text(o.name);
						} else {
							_gthis.ui._x += 18;
							_gthis.ui.text(o.name);
							_gthis.ui._x -= 18;
						}
						if(_gthis.ui.isReleased) {
							_gthis.selectObject(o);
						}
						i += 1;
						if(b) {
							var _g = 0;
							var _g1 = o.children;
							while(_g < _g1.length) {
								var c = _g1[_g];
								++_g;
								_gthis.ui.indent();
								drawList(h,c);
								_gthis.ui.unindent();
							}
						}
					};
					var _g2 = 0;
					var _g11 = iron_Scene.active.root.children;
					while(_g2 < _g11.length) {
						var c1 = _g11[_g2];
						++_g2;
						var tmp1 = zui_Handle.global.nest(3,null);
						drawList(tmp1,c1);
					}
					this.ui.unindent();
				}
				if(this.selectedObject == null) {
					this.selectedType = "";
				}
				if(this.ui.panel(zui_Handle.global.nest(4,{ selected : true}),"Properties " + this.selectedType)) {
					this.ui.indent();
					if(this.selectedObject != null) {
						var h1 = zui_Handle.global.nest(5,null);
						h1.selected = this.selectedObject.visible;
						this.selectedObject.visible = this.ui.check(h1,"Visible");
						var loc = this.selectedObject.transform.loc;
						var scale = this.selectedObject.transform.scale;
						var _this1 = this.selectedObject.transform.rot;
						var roll = NaN;
						var yaw = 0.0;
						var pitch = 0.0;
						var test = _this1.x * _this1.y + _this1.z * _this1.w;
						if(test > 0.499) {
							roll = 2 * Math.atan2(_this1.x,_this1.w);
							yaw = 1.5707963267948966;
							pitch = 0;
						}
						if(test < -0.499) {
							roll = -2 * Math.atan2(_this1.x,_this1.w);
							yaw = -1.5707963267948966;
							pitch = 0;
						}
						if(isNaN(roll)) {
							var a = 2 * _this1.z * _this1.z;
							var b1 = _this1.y * _this1.y;
							roll = Math.atan2(2 * _this1.y * _this1.w - 2 * _this1.x * _this1.z,1.0 - 2 * b1 - a);
							b1 = _this1.x * _this1.x;
							pitch = Math.atan2(2 * _this1.x * _this1.w - 2 * _this1.y * _this1.z,1.0 - 2 * b1 - a);
							yaw = Math.asin(2 * test);
						}
						var rot_x = pitch;
						var rot_y = roll;
						var rot_z = yaw;
						var rot_w = 1.0;
						var dim = this.selectedObject.transform.dim;
						rot_x *= 57.29579143313326;
						rot_y *= 57.29579143313326;
						rot_z *= 57.29579143313326;
						var f = 0.0;
						this.ui.row(armory_trait_internal_DebugConsole.row4);
						this.ui.text("Location");
						h1 = zui_Handle.global.nest(6,null);
						h1.text = iron_math_Math.roundfp(loc.x) + "";
						f = parseFloat(this.ui.textInput(h1,"X"));
						if(this.ui.changed) {
							loc.x = f;
						}
						h1 = zui_Handle.global.nest(7,null);
						h1.text = iron_math_Math.roundfp(loc.y) + "";
						f = parseFloat(this.ui.textInput(h1,"Y"));
						if(this.ui.changed) {
							loc.y = f;
						}
						h1 = zui_Handle.global.nest(8,null);
						h1.text = iron_math_Math.roundfp(loc.z) + "";
						f = parseFloat(this.ui.textInput(h1,"Z"));
						if(this.ui.changed) {
							loc.z = f;
						}
						this.ui.row(armory_trait_internal_DebugConsole.row4);
						this.ui.text("Rotation");
						h1 = zui_Handle.global.nest(9,null);
						h1.text = iron_math_Math.roundfp(rot_x) + "";
						f = parseFloat(this.ui.textInput(h1,"X"));
						var changed = false;
						if(this.ui.changed) {
							changed = true;
							rot_x = f;
						}
						h1 = zui_Handle.global.nest(10,null);
						h1.text = iron_math_Math.roundfp(rot_y) + "";
						f = parseFloat(this.ui.textInput(h1,"Y"));
						if(this.ui.changed) {
							changed = true;
							rot_y = f;
						}
						h1 = zui_Handle.global.nest(11,null);
						h1.text = iron_math_Math.roundfp(rot_z) + "";
						f = parseFloat(this.ui.textInput(h1,"Z"));
						if(this.ui.changed) {
							changed = true;
							rot_z = f;
						}
						if(changed && this.selectedObject.name != "Scene") {
							rot_x *= 0.01745328888888889;
							rot_y *= 0.01745328888888889;
							rot_z *= 0.01745328888888889;
							var _this2 = this.selectedObject.transform.rot;
							var f1 = rot_x / 2;
							var c11 = Math.cos(f1);
							var s1 = Math.sin(f1);
							f1 = rot_y / 2;
							var c2 = Math.cos(f1);
							var s2 = Math.sin(f1);
							f1 = rot_z / 2;
							var c3 = Math.cos(f1);
							var s3 = Math.sin(f1);
							_this2.x = s1 * c2 * c3 + c11 * s2 * s3;
							_this2.y = c11 * s2 * c3 + s1 * c2 * s3;
							_this2.z = c11 * c2 * s3 - s1 * s2 * c3;
							_this2.w = c11 * c2 * c3 - s1 * s2 * s3;
							this.selectedObject.transform.buildMatrix();
							var rb = this.selectedObject.getTrait(armory_trait_physics_bullet_RigidBody);
							if(rb != null) {
								rb.syncTransform();
							}
						}
						this.ui.row(armory_trait_internal_DebugConsole.row4);
						this.ui.text("Scale");
						h1 = zui_Handle.global.nest(12,null);
						h1.text = iron_math_Math.roundfp(scale.x) + "";
						f = parseFloat(this.ui.textInput(h1,"X"));
						if(this.ui.changed) {
							scale.x = f;
						}
						h1 = zui_Handle.global.nest(13,null);
						h1.text = iron_math_Math.roundfp(scale.y) + "";
						f = parseFloat(this.ui.textInput(h1,"Y"));
						if(this.ui.changed) {
							scale.y = f;
						}
						h1 = zui_Handle.global.nest(14,null);
						h1.text = iron_math_Math.roundfp(scale.z) + "";
						f = parseFloat(this.ui.textInput(h1,"Z"));
						if(this.ui.changed) {
							scale.z = f;
						}
						this.ui.row(armory_trait_internal_DebugConsole.row4);
						this.ui.text("Dimensions");
						h1 = zui_Handle.global.nest(15,null);
						h1.text = iron_math_Math.roundfp(dim.x) + "";
						f = parseFloat(this.ui.textInput(h1,"X"));
						if(this.ui.changed) {
							dim.x = f;
						}
						h1 = zui_Handle.global.nest(16,null);
						h1.text = iron_math_Math.roundfp(dim.y) + "";
						f = parseFloat(this.ui.textInput(h1,"Y"));
						if(this.ui.changed) {
							dim.y = f;
						}
						h1 = zui_Handle.global.nest(17,null);
						h1.text = iron_math_Math.roundfp(dim.z) + "";
						f = parseFloat(this.ui.textInput(h1,"Z"));
						if(this.ui.changed) {
							dim.z = f;
						}
						this.selectedObject.transform.dirty = true;
						if(this.selectedObject.traits.length > 0) {
							this.ui.text("Traits:");
							var _g3 = 0;
							var _g12 = this.selectedObject.traits;
							while(_g3 < _g12.length) {
								var t = _g12[_g3];
								++_g3;
								var tmp2 = this.ui;
								var c4 = t == null ? null : js_Boot.getClass(t);
								tmp2.text(c4.__name__);
							}
						}
						if(this.selectedObject.name == "Scene") {
							this.selectedType = "(Scene)";
							var p = iron_Scene.active.world.probe;
							var tmp3 = this.ui;
							var tmp4 = zui_Handle.global.nest(18,{ value : p.raw.strength});
							p.raw.strength = tmp3.slider(tmp4,"Env Strength",0.0,5.0,true);
						} else if(((this.selectedObject) instanceof iron_object_LightObject)) {
							this.selectedType = "(Light)";
							var light = js_Boot.__cast(this.selectedObject , iron_object_LightObject);
							var tmp5 = this.ui.slider(zui_Handle.global.nest(19,{ value : light.data.raw.strength / 10}),"Strength",0.0,5.0,true);
							light.data.raw.strength = tmp5 * 10;
						} else if(((this.selectedObject) instanceof iron_object_CameraObject)) {
							this.selectedType = "(Camera)";
							var cam = js_Boot.__cast(this.selectedObject , iron_object_CameraObject);
							var fovHandle = zui_Handle.global.nest(20,{ value : (cam.data.raw.fov * 100 | 0) / 100});
							cam.data.raw.fov = this.ui.slider(fovHandle,"FoV",0.3,2.0,true);
							if(this.ui.changed) {
								cam.buildProjection();
							}
						} else {
							this.selectedType = "(Object)";
						}
					}
					this.ui.unindent();
				}
			}
			var avg = Math.round(this.frameTimeAvg * 10000) / 10;
			var fpsAvg = avg > 0 ? Math.round(1000 / avg) : 0;
			if(this.ui.tab(htab,"" + avg + " ms")) {
				if(this.ui.panel(zui_Handle.global.nest(21,{ selected : true}),"Performance")) {
					if(this.graph != null) {
						this.ui.image(this.graph);
					}
					this.ui.indent();
					this.ui.row(armory_trait_internal_DebugConsole.lrow);
					this.ui.text("Frame");
					this.ui.text("" + avg + " ms / " + fpsAvg + " fps",2);
					this.ui.row(armory_trait_internal_DebugConsole.lrow);
					this.ui.text("Render-path");
					this.ui.text(Math.round(this.renderPathTimeAvg * 10000) / 10 + " ms",2);
					this.ui.row(armory_trait_internal_DebugConsole.lrow);
					this.ui.text("Script");
					this.ui.text(Math.round((this.updateTimeAvg - this.physTimeAvg - this.animTimeAvg) * 10000) / 10 + " ms",2);
					this.ui.row(armory_trait_internal_DebugConsole.lrow);
					this.ui.text("Animation");
					this.ui.text(Math.round(this.animTimeAvg * 10000) / 10 + " ms",2);
					this.ui.row(armory_trait_internal_DebugConsole.lrow);
					this.ui.text("Physics");
					this.ui.text(Math.round(this.physTimeAvg * 10000) / 10 + " ms",2);
					this.ui.unindent();
				}
				if(this.ui.panel(zui_Handle.global.nest(22,{ selected : false}),"Draw")) {
					this.ui.indent();
					this.ui.row(armory_trait_internal_DebugConsole.lrow);
					var numMeshes = iron_Scene.active.meshes.length;
					this.ui.text("Meshes");
					this.ui.text(numMeshes + "",2);
					this.ui.row(armory_trait_internal_DebugConsole.lrow);
					this.ui.text("Draw calls");
					this.ui.text(iron_RenderPath.drawCalls + "",2);
					this.ui.row(armory_trait_internal_DebugConsole.lrow);
					this.ui.text("Tris mesh");
					this.ui.text(iron_RenderPath.numTrisMesh + "",2);
					this.ui.row(armory_trait_internal_DebugConsole.lrow);
					this.ui.text("Tris shadow");
					this.ui.text(iron_RenderPath.numTrisShadow + "",2);
					this.ui.row(armory_trait_internal_DebugConsole.lrow);
					this.ui.text("Culled");
					this.ui.text(iron_RenderPath.culled + " / " + numMeshes * 2,2);
					this.ui.unindent();
				}
				if(this.ui.panel(zui_Handle.global.nest(23,{ selected : false}),"Render Targets")) {
					this.ui.indent();
					this.ui.imageInvertY = true;
					var _this3 = iron_RenderPath.active.renderTargets;
					var rt = new haxe_ds__$StringMap_StringMapIterator(_this3,_this3.arrayKeys());
					while(rt.hasNext()) {
						var rt1 = rt.next();
						this.ui.text(rt1.raw.name);
						if(rt1.image != null && !rt1.is3D) {
							this.ui.image(rt1.image);
						}
					}
					this.ui.imageInvertY = false;
					this.ui.unindent();
				}
				if(this.ui.panel(zui_Handle.global.nest(24,{ selected : false}),"Cached Materials")) {
					this.ui.indent();
					var _this4 = iron_data_Data.cachedMaterials;
					var c5 = new haxe_ds__$StringMap_StringMapIterator(_this4,_this4.arrayKeys());
					while(c5.hasNext()) {
						var c6 = c5.next();
						this.ui.text(c6.name);
					}
					this.ui.unindent();
				}
				if(this.ui.panel(zui_Handle.global.nest(25,{ selected : false}),"Cached Shaders")) {
					this.ui.indent();
					var _this5 = iron_data_Data.cachedShaders;
					var c7 = new haxe_ds__$StringMap_StringMapIterator(_this5,_this5.arrayKeys());
					while(c7.hasNext()) {
						var c8 = c7.next();
						this.ui.text(c8.name);
					}
					this.ui.unindent();
				}
			}
			if(this.ui.tab(htab,armory_trait_internal_DebugConsole.lastTraces[0] == "" ? "Console" : HxOverrides.substr(armory_trait_internal_DebugConsole.lastTraces[0],0,20))) {
				if(this.ui.panel(zui_Handle.global.nest(26,{ selected : false}),"Script")) {
					this.ui.indent();
					var t1 = this.ui.textInput(zui_Handle.global.nest(27,null));
					if(this.ui.button("Run")) {
						try {
							haxe_Log.trace("> " + t1,{ fileName : "Sources/armory/trait/internal/DebugConsole.hx", lineNumber : 449, className : "armory.trait.internal.DebugConsole", methodName : "render2D"});
							eval(t1);
						} catch( e ) {
							haxe_Log.trace(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "Sources/armory/trait/internal/DebugConsole.hx", lineNumber : 450, className : "armory.trait.internal.DebugConsole", methodName : "render2D"});
						}
					}
					this.ui.unindent();
				}
				if(this.ui.panel(zui_Handle.global.nest(28,{ selected : true}),"Log")) {
					this.ui.indent();
					if(this.ui.button("Clear")) {
						armory_trait_internal_DebugConsole.lastTraces[0] = "";
						armory_trait_internal_DebugConsole.lastTraces.splice(1,armory_trait_internal_DebugConsole.lastTraces.length - 1);
					}
					var _g4 = 0;
					var _g13 = armory_trait_internal_DebugConsole.lastTraces;
					while(_g4 < _g13.length) {
						var t2 = _g13[_g4];
						++_g4;
						this.ui.text(t2);
					}
					this.ui.unindent();
				}
			}
			if(armory_trait_internal_DebugConsole.watchNodes.length > 0 && this.ui.tab(htab,"Watch")) {
				var _g5 = 0;
				var _g14 = armory_trait_internal_DebugConsole.watchNodes;
				while(_g5 < _g14.length) {
					var n = _g14[_g5];
					++_g5;
					this.ui.text(n.tree.object.name + "." + n.tree.name + "." + n.name + " = " + Std.string(n.get(0)));
				}
			}
			this.ui.separator();
		}
		this.ui.end(bindG);
		if(bindG) {
			g.begin(false);
		}
		this.totalTime += this.frameTime;
		this.renderPathTime += iron_App.renderPathTime;
		this.frames++;
		if(this.totalTime > 1.0) {
			hwin.redraws = 1;
			var t3 = this.totalTime / this.frames;
			if(this.frameTimeAvg > 0) {
				if(t3 < this.frameTimeAvgMin || this.frameTimeAvgMin == 0) {
					this.frameTimeAvgMin = t3;
				}
				if(t3 > this.frameTimeAvgMax || this.frameTimeAvgMax == 0) {
					this.frameTimeAvgMax = t3;
				}
			}
			this.frameTimeAvg = t3;
			if(this.benchmark) {
				this.benchFrames++;
				if(this.benchFrames > 10) {
					this.benchTime += t3;
				}
				if(this.benchFrames == 20) {
					haxe_Log.trace((this.benchTime / 10 * 1000000 | 0) / 1000,{ fileName : "Sources/armory/trait/internal/DebugConsole.hx", lineNumber : 495, className : "armory.trait.internal.DebugConsole", methodName : "render2D"});
				}
			}
			this.renderPathTimeAvg = this.renderPathTime / this.frames;
			this.updateTimeAvg = this.updateTime / this.frames;
			this.animTimeAvg = this.animTime / this.frames;
			this.physTimeAvg = this.physTime / this.frames;
			this.totalTime = 0;
			this.renderPathTime = 0;
			this.updateTime = 0;
			this.animTime = 0;
			this.physTime = 0;
			this.frames = 0;
			if(htab.position == 2) {
				g.end();
				this.updateGraph();
				g.begin(false);
			}
		}
		this.frameTime = kha_Scheduler.realTime() - this.lastTime;
		this.lastTime = kha_Scheduler.realTime();
	}
	,update: function() {
		armory_trait_WalkNavigation.enabled = !(this.ui.isScrolling || this.ui.currentWindow != null && this.ui.currentWindow.dragging);
		this.updateTime += iron_App.updateTime;
		this.animTime += iron_object_Animation.animationTime;
		this.physTime += armory_trait_physics_bullet_PhysicsWorld.physTime;
	}
	,__class__: armory_trait_internal_DebugConsole
});
var iron_math_Vec4 = function(x,y,z,w) {
	if(w == null) {
		w = 1.0;
	}
	if(z == null) {
		z = 0.0;
	}
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["iron.math.Vec4"] = iron_math_Vec4;
iron_math_Vec4.__name__ = "iron.math.Vec4";
iron_math_Vec4.prototype = {
	toString: function() {
		return "(" + this.x + ", " + this.y + ", " + this.z + ", " + this.w + ")";
	}
	,__class__: iron_math_Vec4
};
var armory_trait_internal_DebugDraw = function() {
	this.lines = 0;
	this.strength = 0.02;
	this.color = -65536;
	armory_trait_internal_DebugDraw.inst = this;
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",2);
	structure.add("col",2);
	this.pipeline = new kha_graphics4_PipelineState();
	this.pipeline.inputLayout = [structure];
	this.pipeline.fragmentShader = kha_Shaders.line_deferred_frag;
	this.pipeline.vertexShader = kha_Shaders.line_vert;
	this.pipeline.depthWrite = true;
	this.pipeline.depthMode = 4;
	this.pipeline.cullMode = 2;
	this.pipeline.compile();
	this.vpID = this.pipeline.getConstantLocation("VP");
	this.vp = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.vertexBuffer = new kha_graphics4_VertexBuffer(1200,structure,1);
	this.indexBuffer = new kha_graphics4_IndexBuffer(1800,1);
};
$hxClasses["armory.trait.internal.DebugDraw"] = armory_trait_internal_DebugDraw;
armory_trait_internal_DebugDraw.__name__ = "armory.trait.internal.DebugDraw";
armory_trait_internal_DebugDraw.notifyOnRender = function(f) {
	if(armory_trait_internal_DebugDraw.inst == null) {
		armory_trait_internal_DebugDraw.inst = new armory_trait_internal_DebugDraw();
	}
	iron_RenderPath.notifyOnContext("mesh",function(g4,i,len) {
		armory_trait_internal_DebugDraw.g = g4;
		if(i == 0) {
			armory_trait_internal_DebugDraw.inst.begin();
		}
		f(armory_trait_internal_DebugDraw.inst);
		if(i == len - 1) {
			armory_trait_internal_DebugDraw.inst.end();
		}
	});
};
armory_trait_internal_DebugDraw.prototype = {
	bounds: function(t) {
		var _this = t.world;
		armory_trait_internal_DebugDraw.v = new iron_math_Vec4(_this.self._30,_this.self._31,_this.self._32,_this.self._33);
		var dx = t.dim.x / 2;
		var dy = t.dim.y / 2;
		var dz = t.dim.z / 2;
		var _this1 = t.world;
		var up_x = _this1.self._20;
		var up_y = _this1.self._21;
		var up_z = _this1.self._22;
		var up_w = 1.0;
		var _this2 = t.world;
		var look_x = _this2.self._10;
		var look_y = _this2.self._11;
		var look_z = _this2.self._12;
		var look_w = 1.0;
		var _this3 = t.world;
		var right_x = _this3.self._00;
		var right_y = _this3.self._01;
		var right_z = _this3.self._02;
		var right_w = 1.0;
		var n = Math.sqrt(up_x * up_x + up_y * up_y + up_z * up_z);
		if(n > 0.0) {
			var invN = 1.0 / n;
			up_x *= invN;
			up_y *= invN;
			up_z *= invN;
		}
		var n1 = Math.sqrt(look_x * look_x + look_y * look_y + look_z * look_z);
		if(n1 > 0.0) {
			var invN1 = 1.0 / n1;
			look_x *= invN1;
			look_y *= invN1;
			look_z *= invN1;
		}
		var n2 = Math.sqrt(right_x * right_x + right_y * right_y + right_z * right_z);
		if(n2 > 0.0) {
			var invN2 = 1.0 / n2;
			right_x *= invN2;
			right_y *= invN2;
			right_z *= invN2;
		}
		var _this4 = armory_trait_internal_DebugDraw.vx;
		_this4.x = right_x;
		_this4.y = right_y;
		_this4.z = right_z;
		_this4.w = right_w;
		var _this5 = armory_trait_internal_DebugDraw.vx;
		_this5.x *= dx;
		_this5.y *= dx;
		_this5.z *= dx;
		var _this6 = armory_trait_internal_DebugDraw.vy;
		_this6.x = look_x;
		_this6.y = look_y;
		_this6.z = look_z;
		_this6.w = look_w;
		var _this7 = armory_trait_internal_DebugDraw.vy;
		_this7.x *= dy;
		_this7.y *= dy;
		_this7.z *= dy;
		var _this8 = armory_trait_internal_DebugDraw.vz;
		_this8.x = up_x;
		_this8.y = up_y;
		_this8.z = up_z;
		_this8.w = up_w;
		var _this9 = armory_trait_internal_DebugDraw.vz;
		_this9.x *= dz;
		_this9.y *= dz;
		_this9.z *= dz;
		this.lineb(-1,-1,-1,1,-1,-1);
		this.lineb(-1,1,-1,1,1,-1);
		this.lineb(-1,-1,1,1,-1,1);
		this.lineb(-1,1,1,1,1,1);
		this.lineb(-1,-1,-1,-1,1,-1);
		this.lineb(-1,-1,1,-1,1,1);
		this.lineb(1,-1,-1,1,1,-1);
		this.lineb(1,-1,1,1,1,1);
		this.lineb(-1,-1,-1,-1,-1,1);
		this.lineb(-1,1,-1,-1,1,1);
		this.lineb(1,-1,-1,1,-1,1);
		this.lineb(1,1,-1,1,1,1);
	}
	,lineb: function(a,b,c,d,e,f) {
		var _this = armory_trait_internal_DebugDraw.v1;
		var v = armory_trait_internal_DebugDraw.v;
		_this.x = v.x;
		_this.y = v.y;
		_this.z = v.z;
		_this.w = v.w;
		var _this1 = armory_trait_internal_DebugDraw.t;
		var v1 = armory_trait_internal_DebugDraw.vx;
		_this1.x = v1.x;
		_this1.y = v1.y;
		_this1.z = v1.z;
		_this1.w = v1.w;
		var _this2 = armory_trait_internal_DebugDraw.t;
		_this2.x *= a;
		_this2.y *= a;
		_this2.z *= a;
		var _this3 = armory_trait_internal_DebugDraw.v1;
		var v2 = armory_trait_internal_DebugDraw.t;
		_this3.x += v2.x;
		_this3.y += v2.y;
		_this3.z += v2.z;
		var _this4 = armory_trait_internal_DebugDraw.t;
		var v3 = armory_trait_internal_DebugDraw.vy;
		_this4.x = v3.x;
		_this4.y = v3.y;
		_this4.z = v3.z;
		_this4.w = v3.w;
		var _this5 = armory_trait_internal_DebugDraw.t;
		_this5.x *= b;
		_this5.y *= b;
		_this5.z *= b;
		var _this6 = armory_trait_internal_DebugDraw.v1;
		var v4 = armory_trait_internal_DebugDraw.t;
		_this6.x += v4.x;
		_this6.y += v4.y;
		_this6.z += v4.z;
		var _this7 = armory_trait_internal_DebugDraw.t;
		var v5 = armory_trait_internal_DebugDraw.vz;
		_this7.x = v5.x;
		_this7.y = v5.y;
		_this7.z = v5.z;
		_this7.w = v5.w;
		var _this8 = armory_trait_internal_DebugDraw.t;
		_this8.x *= c;
		_this8.y *= c;
		_this8.z *= c;
		var _this9 = armory_trait_internal_DebugDraw.v1;
		var v6 = armory_trait_internal_DebugDraw.t;
		_this9.x += v6.x;
		_this9.y += v6.y;
		_this9.z += v6.z;
		var _this10 = armory_trait_internal_DebugDraw.v2;
		var v7 = armory_trait_internal_DebugDraw.v;
		_this10.x = v7.x;
		_this10.y = v7.y;
		_this10.z = v7.z;
		_this10.w = v7.w;
		var _this11 = armory_trait_internal_DebugDraw.t;
		var v8 = armory_trait_internal_DebugDraw.vx;
		_this11.x = v8.x;
		_this11.y = v8.y;
		_this11.z = v8.z;
		_this11.w = v8.w;
		var _this12 = armory_trait_internal_DebugDraw.t;
		_this12.x *= d;
		_this12.y *= d;
		_this12.z *= d;
		var _this13 = armory_trait_internal_DebugDraw.v2;
		var v9 = armory_trait_internal_DebugDraw.t;
		_this13.x += v9.x;
		_this13.y += v9.y;
		_this13.z += v9.z;
		var _this14 = armory_trait_internal_DebugDraw.t;
		var v10 = armory_trait_internal_DebugDraw.vy;
		_this14.x = v10.x;
		_this14.y = v10.y;
		_this14.z = v10.z;
		_this14.w = v10.w;
		var _this15 = armory_trait_internal_DebugDraw.t;
		_this15.x *= e;
		_this15.y *= e;
		_this15.z *= e;
		var _this16 = armory_trait_internal_DebugDraw.v2;
		var v11 = armory_trait_internal_DebugDraw.t;
		_this16.x += v11.x;
		_this16.y += v11.y;
		_this16.z += v11.z;
		var _this17 = armory_trait_internal_DebugDraw.t;
		var v12 = armory_trait_internal_DebugDraw.vz;
		_this17.x = v12.x;
		_this17.y = v12.y;
		_this17.z = v12.z;
		_this17.w = v12.w;
		var _this18 = armory_trait_internal_DebugDraw.t;
		_this18.x *= f;
		_this18.y *= f;
		_this18.z *= f;
		var _this19 = armory_trait_internal_DebugDraw.v2;
		var v13 = armory_trait_internal_DebugDraw.t;
		_this19.x += v13.x;
		_this19.y += v13.y;
		_this19.z += v13.z;
		var v14 = armory_trait_internal_DebugDraw.v1;
		var v21 = armory_trait_internal_DebugDraw.v2;
		this.line(v14.x,v14.y,v14.z,v21.x,v21.y,v21.z);
	}
	,line: function(x1,y1,z1,x2,y2,z2) {
		if(this.lines >= 300) {
			this.end();
			this.begin();
		}
		var camera = iron_Scene.active.camera;
		var l_x = camera.transform.local.self._00;
		var l_y = camera.transform.local.self._01;
		var l_z = camera.transform.local.self._02;
		var l_w = 1.0;
		var v_x = camera.transform.local.self._10;
		var v_y = camera.transform.local.self._11;
		var v_z = camera.transform.local.self._12;
		var v_w = 1.0;
		l_x += v_x;
		l_y += v_y;
		l_z += v_z;
		var i = this.lines * 24;
		this.vbData[i] = x1;
		this.vbData[i + 1] = y1;
		this.vbData[i + 2] = z1;
		this.vbData[i + 3] = ((this.color & 16711680) >>> 16) * 0.00392156862745098;
		this.vbData[i + 4] = ((this.color & 65280) >>> 8) * 0.00392156862745098;
		this.vbData[i + 5] = (this.color & 255) * 0.00392156862745098;
		this.vbData[i + 6] = x2;
		this.vbData[i + 7] = y2;
		this.vbData[i + 8] = z2;
		this.vbData[i + 9] = ((this.color & 16711680) >>> 16) * 0.00392156862745098;
		this.vbData[i + 10] = ((this.color & 65280) >>> 8) * 0.00392156862745098;
		this.vbData[i + 11] = (this.color & 255) * 0.00392156862745098;
		this.vbData[i + 12] = x2 + this.strength * l_x;
		this.vbData[i + 13] = y2 + this.strength * l_y;
		this.vbData[i + 14] = z2 + this.strength * l_z;
		this.vbData[i + 15] = ((this.color & 16711680) >>> 16) * 0.00392156862745098;
		this.vbData[i + 16] = ((this.color & 65280) >>> 8) * 0.00392156862745098;
		this.vbData[i + 17] = (this.color & 255) * 0.00392156862745098;
		this.vbData[i + 18] = x1 + this.strength * l_x;
		this.vbData[i + 19] = y1 + this.strength * l_y;
		this.vbData[i + 20] = z1 + this.strength * l_z;
		this.vbData[i + 21] = ((this.color & 16711680) >>> 16) * 0.00392156862745098;
		this.vbData[i + 22] = ((this.color & 65280) >>> 8) * 0.00392156862745098;
		this.vbData[i + 23] = (this.color & 255) * 0.00392156862745098;
		i = this.lines * 6;
		this.ibData[i] = this.lines * 4;
		this.ibData[i + 1] = this.lines * 4 + 1;
		this.ibData[i + 2] = this.lines * 4 + 2;
		this.ibData[i + 3] = this.lines * 4 + 2;
		this.ibData[i + 4] = this.lines * 4 + 3;
		this.ibData[i + 5] = this.lines * 4;
		this.lines++;
	}
	,begin: function() {
		this.lines = 0;
		this.vbData = this.vertexBuffer.lock();
		this.ibData = this.indexBuffer.lock();
	}
	,end: function() {
		this.vertexBuffer.unlock();
		this.indexBuffer.unlock();
		armory_trait_internal_DebugDraw.g.setVertexBuffer(this.vertexBuffer);
		armory_trait_internal_DebugDraw.g.setIndexBuffer(this.indexBuffer);
		armory_trait_internal_DebugDraw.g.setPipeline(this.pipeline);
		var camera = iron_Scene.active.camera;
		var _this = this.vp;
		var m = camera.V;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		var _this1 = this.vp;
		var m1 = camera.P;
		var a00 = _this1.self._00;
		var a01 = _this1.self._01;
		var a02 = _this1.self._02;
		var a03 = _this1.self._03;
		var a10 = _this1.self._10;
		var a11 = _this1.self._11;
		var a12 = _this1.self._12;
		var a13 = _this1.self._13;
		var a20 = _this1.self._20;
		var a21 = _this1.self._21;
		var a22 = _this1.self._22;
		var a23 = _this1.self._23;
		var a30 = _this1.self._30;
		var a31 = _this1.self._31;
		var a32 = _this1.self._32;
		var a33 = _this1.self._33;
		var b0 = m1.self._00;
		var b1 = m1.self._10;
		var b2 = m1.self._20;
		var b3 = m1.self._30;
		_this1.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._01;
		b1 = m1.self._11;
		b2 = m1.self._21;
		b3 = m1.self._31;
		_this1.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._02;
		b1 = m1.self._12;
		b2 = m1.self._22;
		b3 = m1.self._32;
		_this1.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._03;
		b1 = m1.self._13;
		b2 = m1.self._23;
		b3 = m1.self._33;
		_this1.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		armory_trait_internal_DebugDraw.g.setMatrix(this.vpID,this.vp.self);
		armory_trait_internal_DebugDraw.g.drawIndexedVertices(0,this.lines * 6);
	}
	,__class__: armory_trait_internal_DebugDraw
};
var armory_trait_internal_LoadingScreen = function() { };
$hxClasses["armory.trait.internal.LoadingScreen"] = armory_trait_internal_LoadingScreen;
armory_trait_internal_LoadingScreen.__name__ = "armory.trait.internal.LoadingScreen";
armory_trait_internal_LoadingScreen.render = function(g,assetsLoaded,assetsTotal) {
	g.set_color(-3200189);
	g.fillRect(0,kha_System.windowHeight() - 6,kha_System.windowWidth() / assetsTotal * assetsLoaded,6);
};
var armory_trait_physics_bullet_ContactPair = function(a,b) {
	this.a = a;
	this.b = b;
};
$hxClasses["armory.trait.physics.bullet.ContactPair"] = armory_trait_physics_bullet_ContactPair;
armory_trait_physics_bullet_ContactPair.__name__ = "armory.trait.physics.bullet.ContactPair";
armory_trait_physics_bullet_ContactPair.prototype = {
	__class__: armory_trait_physics_bullet_ContactPair
};
var armory_trait_physics_bullet_PhysicsWorld = function(timeScale,timeStep,solverIterations) {
	if(solverIterations == null) {
		solverIterations = 10;
	}
	if(timeStep == null) {
		timeStep = 0.016666666666666666;
	}
	if(timeScale == null) {
		timeScale = 1.0;
	}
	this.vec2 = null;
	this.vec1 = null;
	this.pairCache = false;
	this.hitNormalWorld = new iron_math_Vec4();
	this.hitPointWorld = new iron_math_Vec4();
	this.solverIterations = 10;
	this.maxSteps = 1;
	this.timeStep = 0.016666666666666666;
	this.timeScale = 1.0;
	this.preUpdates = null;
	this.gimpactRegistered = false;
	iron_Trait.call(this);
	if(armory_trait_physics_bullet_PhysicsWorld.nullvec || this.vec1 == null || this.vec2 == null) {
		armory_trait_physics_bullet_PhysicsWorld.nullvec = false;
		this.vec1 = new Ammo.btVector3(0,0,0);
		this.vec2 = new Ammo.btVector3(0,0,0);
	}
	if(armory_trait_physics_bullet_PhysicsWorld.active != null && !armory_trait_physics_bullet_PhysicsWorld.sceneRemoved) {
		return;
	}
	armory_trait_physics_bullet_PhysicsWorld.sceneRemoved = false;
	this.timeScale = timeScale;
	this.timeStep = timeStep;
	this.maxSteps = timeStep < 0.016666666666666666 ? 10 : 1;
	this.solverIterations = solverIterations;
	if(armory_trait_physics_bullet_PhysicsWorld.active == null) {
		this.createPhysics();
	} else {
		this.world = armory_trait_physics_bullet_PhysicsWorld.active.world;
		this.dispatcher = armory_trait_physics_bullet_PhysicsWorld.active.dispatcher;
		this.gimpactRegistered = armory_trait_physics_bullet_PhysicsWorld.active.gimpactRegistered;
	}
	this.contacts = [];
	this.rbMap = new haxe_ds_IntMap();
	armory_trait_physics_bullet_PhysicsWorld.active = this;
	this._lateUpdate = [$bind(this,this.lateUpdate)];
	iron_App.traitLateUpdates.splice(0,0,$bind(this,this.lateUpdate));
	iron_Scene.active.notifyOnRemove(function() {
		armory_trait_physics_bullet_PhysicsWorld.sceneRemoved = true;
	});
};
$hxClasses["armory.trait.physics.bullet.PhysicsWorld"] = armory_trait_physics_bullet_PhysicsWorld;
armory_trait_physics_bullet_PhysicsWorld.__name__ = "armory.trait.physics.bullet.PhysicsWorld";
armory_trait_physics_bullet_PhysicsWorld.__super__ = iron_Trait;
armory_trait_physics_bullet_PhysicsWorld.prototype = $extend(iron_Trait.prototype,{
	reset: function() {
		var rb = armory_trait_physics_bullet_PhysicsWorld.active.rbMap.iterator();
		while(rb.hasNext()) {
			var rb1 = rb.next();
			this.removeRigidBody(rb1);
		}
	}
	,createPhysics: function() {
		var broadphase = new Ammo.btDbvtBroadphase();
		var collisionConfiguration = new Ammo.btDefaultCollisionConfiguration();
		this.dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration);
		var solver = new Ammo.btSequentialImpulseConstraintSolver();
		var g = iron_Scene.active.raw.gravity;
		var gravity = g == null ? new iron_math_Vec4(0,0,-9.81) : new iron_math_Vec4(g[0],g[1],g[2]);
		this.world = new Ammo.btDiscreteDynamicsWorld(this.dispatcher,broadphase,solver,collisionConfiguration);
		this.setGravity(gravity);
	}
	,setGravity: function(v) {
		this.vec1.setValue(v.x,v.y,v.z);
		this.world.setGravity(this.vec1);
	}
	,addRigidBody: function(body) {
		this.world.addRigidBody(body.body,body.group,body.group);
		this.rbMap.h[body.id] = body;
	}
	,removeRigidBody: function(body) {
		if(body.destroyed) {
			return;
		}
		body.destroyed = true;
		if(this.world != null) {
			this.world.removeRigidBody(body.body);
		}
		this.rbMap.remove(body.id);
		body["delete"]();
	}
	,getContacts: function(body) {
		if(this.contacts.length == 0) {
			return null;
		}
		var res = [];
		var _g = 0;
		var _g1 = this.contacts.length;
		while(_g < _g1) {
			var i = _g++;
			var c = this.contacts[i];
			var rb = null;
			if(c.a == body.body.userIndex) {
				rb = this.rbMap.h[c.b];
			} else if(c.b == body.body.userIndex) {
				rb = this.rbMap.h[c.a];
			}
			if(rb != null && res.indexOf(rb) == -1) {
				res.push(rb);
			}
		}
		return res;
	}
	,getContactPairs: function(body) {
		if(this.contacts.length == 0) {
			return null;
		}
		var res = [];
		var _g = 0;
		var _g1 = this.contacts.length;
		while(_g < _g1) {
			var i = _g++;
			var c = this.contacts[i];
			if(c.a == body.body.userIndex) {
				res.push(c);
			} else if(c.b == body.body.userIndex) {
				res.push(c);
			}
		}
		return res;
	}
	,lateUpdate: function() {
		var t = 0.016666666666666666 * iron_system_Time.scale * this.timeScale;
		if(t == 0.0) {
			return;
		}
		var startTime = kha_Scheduler.realTime();
		if(this.preUpdates != null) {
			var _g = 0;
			var _g1 = this.preUpdates;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
		}
		this.world.stepSimulation(this.timeStep,this.maxSteps,t);
		this.updateContacts();
		var rb = this.rbMap.iterator();
		while(rb.hasNext()) {
			var rb1 = rb.next();
			rb1.physicsUpdate();
		}
		armory_trait_physics_bullet_PhysicsWorld.physTime = kha_Scheduler.realTime() - startTime;
	}
	,updateContacts: function() {
		this.contacts = [];
		var disp = this.dispatcher;
		var numManifolds = disp.getNumManifolds();
		var _g = 0;
		var _g1 = numManifolds;
		while(_g < _g1) {
			var i = _g++;
			var contactManifold = disp.getManifoldByIndexInternal(i);
			var body0 = Ammo.btRigidBody.prototype;
			var body01 = contactManifold.getBody0();
			var body02 = body0.upcast(body01);
			var body1 = Ammo.btRigidBody.prototype;
			var body11 = contactManifold.getBody1();
			var body12 = body1.upcast(body11);
			var numContacts = contactManifold.getNumContacts();
			var pt = null;
			var posA = null;
			var posB = null;
			var nor = null;
			var cp = null;
			var _g2 = 0;
			var _g11 = numContacts;
			while(_g2 < _g11) {
				var j = _g2++;
				pt = contactManifold.getContactPoint(j);
				posA = pt.get_m_positionWorldOnA();
				posB = pt.get_m_positionWorldOnB();
				nor = pt.get_m_normalWorldOnB();
				cp = new armory_trait_physics_bullet_ContactPair(body02.userIndex,body12.userIndex);
				cp.posA = new iron_math_Vec4(posA.x(),posA.y(),posA.z());
				cp.posB = new iron_math_Vec4(posB.x(),posB.y(),posB.z());
				cp.normOnB = new iron_math_Vec4(nor.x(),nor.y(),nor.z());
				cp.impulse = pt.getAppliedImpulse();
				cp.distance = pt.getDistance();
				this.contacts.push(cp);
			}
		}
	}
	,pickClosest: function(inputX,inputY) {
		var camera = iron_Scene.active.camera;
		var start = new iron_math_Vec4();
		var end = new iron_math_Vec4();
		iron_math_RayCaster.getDirection(start,end,inputX,inputY,camera);
		var _this = camera.transform.world;
		return this.rayCast(new iron_math_Vec4(_this.self._30,_this.self._31,_this.self._32,_this.self._33),end);
	}
	,rayCast: function(from,to) {
		var rayFrom = this.vec1;
		var rayTo = this.vec2;
		rayFrom.setValue(from.x,from.y,from.z);
		rayTo.setValue(to.x,to.y,to.z);
		var rayCallback = new Ammo.ClosestRayResultCallback(rayFrom,rayTo);
		var worldDyn = this.world;
		var worldCol = worldDyn;
		worldCol.rayTest(rayFrom,rayTo,rayCallback);
		var rb = null;
		var rc = rayCallback;
		if(rc.hasHit()) {
			var co = rayCallback.get_m_collisionObject();
			var body = Ammo.btRigidBody.prototype.upcast(co);
			var hit = rayCallback.get_m_hitPointWorld();
			var _this = this.hitPointWorld;
			var x = hit.x();
			var y = hit.y();
			var z = hit.z();
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = 1.0;
			var norm = rayCallback.get_m_hitNormalWorld();
			var _this1 = this.hitNormalWorld;
			var x1 = norm.x();
			var y1 = norm.y();
			var z1 = norm.z();
			_this1.x = x1;
			_this1.y = y1;
			_this1.z = z1;
			_this1.w = 1.0;
			rb = this.rbMap.h[body.userIndex];
		}
		Ammo.destroy(rayCallback);
		return rb;
	}
	,notifyOnPreUpdate: function(f) {
		if(this.preUpdates == null) {
			this.preUpdates = [];
		}
		this.preUpdates.push(f);
	}
	,removePreUpdate: function(f) {
		HxOverrides.remove(this.preUpdates,f);
	}
	,__class__: armory_trait_physics_bullet_PhysicsWorld
});
var kha_math_FastMatrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.FastMatrix4"] = kha_math_FastMatrix4;
kha_math_FastMatrix4.__name__ = "kha.math.FastMatrix4";
kha_math_FastMatrix4.prototype = {
	__class__: kha_math_FastMatrix4
};
var iron_math_Mat4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this.self = new kha_math_FastMatrix4(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
};
$hxClasses["iron.math.Mat4"] = iron_math_Mat4;
iron_math_Mat4.__name__ = "iron.math.Mat4";
iron_math_Mat4.prototype = {
	__class__: iron_math_Mat4
};
var iron_math_Quat = function(x,y,z,w) {
	if(w == null) {
		w = 1.0;
	}
	if(z == null) {
		z = 0.0;
	}
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["iron.math.Quat"] = iron_math_Quat;
iron_math_Quat.__name__ = "iron.math.Quat";
iron_math_Quat.prototype = {
	__class__: iron_math_Quat
};
var armory_trait_physics_bullet_RigidBody = function(shape,mass,friction,restitution,group,params,flags) {
	if(group == null) {
		group = 1;
	}
	if(restitution == null) {
		restitution = 0.0;
	}
	if(friction == null) {
		friction = 0.5;
	}
	if(mass == null) {
		mass = 1.0;
	}
	if(shape == null) {
		shape = 0;
	}
	this.heightData = null;
	this.onContact = null;
	this.onReady = null;
	this.id = 0;
	this.ready = false;
	this.body = null;
	this.trigger = false;
	this.group = 1;
	this.ccd = false;
	this.destroyed = false;
	this.transform = null;
	iron_Trait.call(this);
	if(armory_trait_physics_bullet_RigidBody.nullvec) {
		armory_trait_physics_bullet_RigidBody.nullvec = false;
		armory_trait_physics_bullet_RigidBody.vec1 = new Ammo.btVector3(0,0,0);
		armory_trait_physics_bullet_RigidBody.vec2 = new Ammo.btVector3(0,0,0);
		armory_trait_physics_bullet_RigidBody.vec3 = new Ammo.btVector3(0,0,0);
		armory_trait_physics_bullet_RigidBody.quat1 = new Ammo.btQuaternion(0,0,0,0);
		armory_trait_physics_bullet_RigidBody.trans1 = new Ammo.btTransform();
		armory_trait_physics_bullet_RigidBody.trans2 = new Ammo.btTransform();
	}
	this.shape = shape;
	this.mass = mass;
	this.friction = friction;
	this.restitution = restitution;
	this.group = group;
	if(params == null) {
		params = [0.04,0.1,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0];
	}
	if(flags == null) {
		flags = [false,false,false];
	}
	this.linearDamping = params[0];
	this.angularDamping = params[1];
	this.linearFactors = [params[2],params[3],params[4]];
	this.angularFactors = [params[5],params[6],params[7]];
	this.collisionMargin = params[8];
	this.deactivationParams = [params[9],params[10],params[11]];
	this.animated = flags[0];
	this.trigger = flags[1];
	this.ccd = flags[2];
	this.notifyOnAdd($bind(this,this.init));
};
$hxClasses["armory.trait.physics.bullet.RigidBody"] = armory_trait_physics_bullet_RigidBody;
armory_trait_physics_bullet_RigidBody.__name__ = "armory.trait.physics.bullet.RigidBody";
armory_trait_physics_bullet_RigidBody.__super__ = iron_Trait;
armory_trait_physics_bullet_RigidBody.prototype = $extend(iron_Trait.prototype,{
	withMargin: function(f) {
		return f - f * this.collisionMargin;
	}
	,notifyOnReady: function(f) {
		this.onReady = f;
		if(this.ready) {
			this.onReady();
		}
	}
	,init: function() {
		if(this.ready) {
			return;
		}
		this.ready = true;
		if(!((this.object) instanceof iron_object_MeshObject)) {
			return;
		}
		this.transform = this.object.transform;
		this.physics = armory_trait_physics_bullet_PhysicsWorld.active;
		if(this.shape == 0) {
			var f = this.transform.dim.x / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setX(f - f * this.collisionMargin);
			var f1 = this.transform.dim.y / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setY(f1 - f1 * this.collisionMargin);
			var f2 = this.transform.dim.z / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setZ(f2 - f2 * this.collisionMargin);
			this.btshape = new Ammo.btBoxShape(armory_trait_physics_bullet_RigidBody.vec1);
		} else if(this.shape == 1) {
			var f3 = this.transform.dim.x / 2;
			this.btshape = new Ammo.btSphereShape(f3 - f3 * this.collisionMargin);
		} else if(this.shape == 2) {
			var shapeConvex = this.fillConvexHull(this.transform.scale,this.collisionMargin);
			this.btshape = shapeConvex;
		} else if(this.shape == 4) {
			var f4 = this.transform.dim.x / 2;
			var f5 = this.transform.dim.z;
			var coneZ = new Ammo.btConeShapeZ(f4 - f4 * this.collisionMargin,f5 - f5 * this.collisionMargin);
			var cone = coneZ;
			this.btshape = cone;
		} else if(this.shape == 5) {
			var f6 = this.transform.dim.x / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setX(f6 - f6 * this.collisionMargin);
			var f7 = this.transform.dim.y / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setY(f7 - f7 * this.collisionMargin);
			var f8 = this.transform.dim.z / 2;
			armory_trait_physics_bullet_RigidBody.vec1.setZ(f8 - f8 * this.collisionMargin);
			var cylZ = new Ammo.btCylinderShapeZ(armory_trait_physics_bullet_RigidBody.vec1);
			var cyl = cylZ;
			this.btshape = cyl;
		} else if(this.shape == 6) {
			var r = this.transform.dim.x / 2;
			var f9 = this.transform.dim.z - r * 2;
			var capsZ = new Ammo.btCapsuleShapeZ(r - r * this.collisionMargin,f9 - f9 * this.collisionMargin);
			var caps = capsZ;
			this.btshape = caps;
		} else if(this.shape == 3) {
			var meshInterface = this.fillTriangleMesh(this.transform.scale);
			if(this.mass > 0) {
				var shapeGImpact = new Ammo.btGImpactMeshShape(meshInterface);
				shapeGImpact.updateBound();
				var shapeConcave = shapeGImpact;
				this.btshape = shapeConcave;
				if(!this.physics.gimpactRegistered) {
					new Ammo.GImpactCollisionAlgorithm().registerAlgorithm(this.physics.dispatcher);
					this.physics.gimpactRegistered = true;
				}
			} else {
				var shapeBvh = new Ammo.btBvhTriangleMeshShape(meshInterface,true,true);
				var shapeTri = shapeBvh;
				var shapeConcave1 = shapeTri;
				this.btshape = shapeConcave1;
			}
		} else if(this.shape == 7) {
			var length = this.heightData.length;
			if(armory_trait_physics_bullet_RigidBody.ammoArray == -1) {
				armory_trait_physics_bullet_RigidBody.ammoArray = Ammo._malloc(length);
			}
			var _g = 0;
			var _g1 = length;
			while(_g < _g1) {
				var i = _g++;
				Ammo.HEAPU8[armory_trait_physics_bullet_RigidBody.ammoArray + i] = this.heightData.b[i];
			}
			var slice = Math.sqrt(length) | 0;
			var axis = 2;
			var dataType = 5;
			this.btshape = new Ammo.btHeightfieldTerrainShape(slice,slice,armory_trait_physics_bullet_RigidBody.ammoArray,0.00392156862745098,0,1,axis,dataType,false);
			armory_trait_physics_bullet_RigidBody.vec1.setX(this.transform.dim.x / slice);
			armory_trait_physics_bullet_RigidBody.vec1.setY(this.transform.dim.y / slice);
			armory_trait_physics_bullet_RigidBody.vec1.setZ(this.transform.dim.z);
			this.btshape.setLocalScaling(armory_trait_physics_bullet_RigidBody.vec1);
		}
		armory_trait_physics_bullet_RigidBody.trans1.setIdentity();
		armory_trait_physics_bullet_RigidBody.vec1.setX(this.transform.world.self._30);
		armory_trait_physics_bullet_RigidBody.vec1.setY(this.transform.world.self._31);
		armory_trait_physics_bullet_RigidBody.vec1.setZ(this.transform.world.self._32);
		armory_trait_physics_bullet_RigidBody.trans1.setOrigin(armory_trait_physics_bullet_RigidBody.vec1);
		var _this = armory_trait_physics_bullet_RigidBody.quat;
		var m = this.transform.world;
		var _this1 = iron_math_Quat.helpMat;
		_this1.self._00 = m.self._00;
		_this1.self._01 = m.self._01;
		_this1.self._02 = m.self._02;
		_this1.self._03 = m.self._03;
		_this1.self._10 = m.self._10;
		_this1.self._11 = m.self._11;
		_this1.self._12 = m.self._12;
		_this1.self._13 = m.self._13;
		_this1.self._20 = m.self._20;
		_this1.self._21 = m.self._21;
		_this1.self._22 = m.self._22;
		_this1.self._23 = m.self._23;
		_this1.self._30 = m.self._30;
		_this1.self._31 = m.self._31;
		_this1.self._32 = m.self._32;
		_this1.self._33 = m.self._33;
		var _this2 = iron_math_Quat.helpMat;
		var _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this2.self._00;
		_this3.y = _this2.self._01;
		_this3.z = _this2.self._02;
		_this3.w = 1.0;
		var _this4 = _this3;
		var scale = 1.0 / Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		_this2.self._00 *= scale;
		_this2.self._01 *= scale;
		_this2.self._02 *= scale;
		var _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this2.self._10;
		_this5.y = _this2.self._11;
		_this5.z = _this2.self._12;
		_this5.w = 1.0;
		var _this6 = _this5;
		scale = 1.0 / Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		_this2.self._10 *= scale;
		_this2.self._11 *= scale;
		_this2.self._12 *= scale;
		var _this7 = iron_math_Mat4.helpVec;
		_this7.x = _this2.self._20;
		_this7.y = _this2.self._21;
		_this7.z = _this2.self._22;
		_this7.w = 1.0;
		var _this8 = _this7;
		scale = 1.0 / Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
		_this2.self._20 *= scale;
		_this2.self._21 *= scale;
		_this2.self._22 *= scale;
		_this2.self._03 = 0.0;
		_this2.self._13 = 0.0;
		_this2.self._23 = 0.0;
		_this2.self._30 = 0.0;
		_this2.self._31 = 0.0;
		_this2.self._32 = 0.0;
		_this2.self._33 = 1.0;
		var m1 = iron_math_Quat.helpMat;
		var m11 = m1.self._00;
		var m12 = m1.self._10;
		var m13 = m1.self._20;
		var m21 = m1.self._01;
		var m22 = m1.self._11;
		var m23 = m1.self._21;
		var m31 = m1.self._02;
		var m32 = m1.self._12;
		var m33 = m1.self._22;
		var tr = m11 + m22 + m33;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			_this.w = 0.25 / s;
			_this.x = (m32 - m23) * s;
			_this.y = (m13 - m31) * s;
			_this.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			_this.w = (m32 - m23) / s;
			_this.x = 0.25 * s;
			_this.y = (m12 + m21) / s;
			_this.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			_this.w = (m13 - m31) / s;
			_this.x = (m12 + m21) / s;
			_this.y = 0.25 * s;
			_this.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			_this.w = (m21 - m12) / s;
			_this.x = (m13 + m31) / s;
			_this.y = (m23 + m32) / s;
			_this.z = 0.25 * s;
		}
		armory_trait_physics_bullet_RigidBody.quat1.setValue(armory_trait_physics_bullet_RigidBody.quat.x,armory_trait_physics_bullet_RigidBody.quat.y,armory_trait_physics_bullet_RigidBody.quat.z,armory_trait_physics_bullet_RigidBody.quat.w);
		armory_trait_physics_bullet_RigidBody.trans1.setRotation(armory_trait_physics_bullet_RigidBody.quat1);
		var centerOfMassOffset = armory_trait_physics_bullet_RigidBody.trans2;
		centerOfMassOffset.setIdentity();
		this.motionState = new Ammo.btDefaultMotionState(armory_trait_physics_bullet_RigidBody.trans1,centerOfMassOffset);
		armory_trait_physics_bullet_RigidBody.vec1.setX(0);
		armory_trait_physics_bullet_RigidBody.vec1.setY(0);
		armory_trait_physics_bullet_RigidBody.vec1.setZ(0);
		var inertia = armory_trait_physics_bullet_RigidBody.vec1;
		if(this.mass > 0) {
			this.btshape.calculateLocalInertia(this.mass,inertia);
		}
		var bodyCI = new Ammo.btRigidBodyConstructionInfo(this.mass,this.motionState,this.btshape,inertia);
		this.body = new Ammo.btRigidBody(bodyCI);
		var bodyColl = this.body;
		bodyColl.setFriction(this.friction);
		if(this.shape == 1 || this.shape == 5 || this.shape == 4 || this.shape == 6) {
			this.angularDamping += this.friction;
		}
		bodyColl.setRestitution(this.restitution);
		if(this.deactivationParams != null) {
			this.setDeactivationParams(this.deactivationParams[0],this.deactivationParams[1],this.deactivationParams[2]);
		} else {
			this.setActivationState(4);
		}
		if(this.linearDamping != 0.04 || this.angularDamping != 0.1) {
			this.body.setDamping(this.linearDamping,this.angularDamping);
		}
		if(this.linearFactors != null) {
			this.setLinearFactor(this.linearFactors[0],this.linearFactors[1],this.linearFactors[2]);
		}
		if(this.angularFactors != null) {
			this.setAngularFactor(this.angularFactors[0],this.angularFactors[1],this.angularFactors[2]);
		}
		var CF_NO_CONTACT_RESPONSE = 4;
		if(this.trigger) {
			bodyColl.setCollisionFlags(bodyColl.getCollisionFlags() | CF_NO_CONTACT_RESPONSE);
		}
		if(this.ccd) {
			this.setCcd(this.transform.radius);
		}
		this.bodyScaleX = this.currentScaleX = this.transform.scale.x;
		this.bodyScaleY = this.currentScaleY = this.transform.scale.y;
		this.bodyScaleZ = this.currentScaleZ = this.transform.scale.z;
		this.id = armory_trait_physics_bullet_RigidBody.nextId;
		armory_trait_physics_bullet_RigidBody.nextId++;
		this.body.userIndex = this.id;
		this.physics.addRigidBody(this);
		this.notifyOnRemove($bind(this,this.removeFromWorld));
		if(this.onReady != null) {
			this.onReady();
		}
		Ammo.destroy(bodyCI);
	}
	,physicsUpdate: function() {
		if(!this.ready) {
			return;
		}
		if(this.object.animation != null || this.animated) {
			this.syncTransform();
		} else {
			var bodyColl = this.body;
			var trans = bodyColl.getWorldTransform();
			var p = trans.getOrigin();
			var q = trans.getRotation();
			var qw = q;
			var _this = this.transform.loc;
			var x = p.x();
			var y = p.y();
			var z = p.z();
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = 1.0;
			var _this1 = this.transform.rot;
			var x1 = qw.x();
			var y1 = qw.y();
			var z1 = qw.z();
			var w = qw.w();
			_this1.x = x1;
			_this1.y = y1;
			_this1.z = z1;
			_this1.w = w;
			if(this.object.parent != null) {
				var ptransform = this.object.parent.transform;
				this.transform.loc.x -= ptransform.world.self._30;
				this.transform.loc.y -= ptransform.world.self._31;
				this.transform.loc.z -= ptransform.world.self._32;
			}
			this.transform.buildMatrix();
		}
		if(this.onContact != null) {
			var rbs = this.physics.getContacts(this);
			if(rbs != null) {
				var _g = 0;
				while(_g < rbs.length) {
					var rb = rbs[_g];
					++_g;
					var _g1 = 0;
					var _g11 = this.onContact;
					while(_g1 < _g11.length) {
						var f = _g11[_g1];
						++_g1;
						f(rb);
					}
				}
			}
		}
	}
	,removeFromWorld: function() {
		if(this.physics != null) {
			this.physics.removeRigidBody(this);
		}
	}
	,activate: function() {
		var bodyColl = this.body;
		bodyColl.activate(false);
	}
	,disableGravity: function() {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(0,0,0);
		this.body.setGravity(armory_trait_physics_bullet_RigidBody.vec1);
	}
	,enableGravity: function() {
		this.body.setGravity(this.physics.world.getGravity());
	}
	,setGravity: function(v) {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(v.x,v.y,v.z);
		this.body.setGravity(armory_trait_physics_bullet_RigidBody.vec1);
	}
	,setActivationState: function(newState) {
		var bodyColl = this.body;
		bodyColl.setActivationState(newState);
	}
	,setDeactivationParams: function(linearThreshold,angularThreshold,time) {
		this.body.setSleepingThresholds(linearThreshold,angularThreshold);
	}
	,applyForce: function(force,loc) {
		this.activate();
		armory_trait_physics_bullet_RigidBody.vec1.setValue(force.x,force.y,force.z);
		if(loc == null) {
			this.body.applyCentralForce(armory_trait_physics_bullet_RigidBody.vec1);
		} else {
			armory_trait_physics_bullet_RigidBody.vec2.setValue(loc.x,loc.y,loc.z);
			this.body.applyForce(armory_trait_physics_bullet_RigidBody.vec1,armory_trait_physics_bullet_RigidBody.vec2);
		}
	}
	,applyImpulse: function(impulse,loc) {
		this.activate();
		armory_trait_physics_bullet_RigidBody.vec1.setValue(impulse.x,impulse.y,impulse.z);
		if(loc == null) {
			this.body.applyCentralImpulse(armory_trait_physics_bullet_RigidBody.vec1);
		} else {
			armory_trait_physics_bullet_RigidBody.vec2.setValue(loc.x,loc.y,loc.z);
			this.body.applyImpulse(armory_trait_physics_bullet_RigidBody.vec1,armory_trait_physics_bullet_RigidBody.vec2);
		}
	}
	,applyTorque: function(torque) {
		this.activate();
		armory_trait_physics_bullet_RigidBody.vec1.setValue(torque.x,torque.y,torque.z);
		this.body.applyTorque(armory_trait_physics_bullet_RigidBody.vec1);
	}
	,applyTorqueImpulse: function(torque) {
		this.activate();
		armory_trait_physics_bullet_RigidBody.vec1.setValue(torque.x,torque.y,torque.z);
		this.body.applyTorqueImpulse(armory_trait_physics_bullet_RigidBody.vec1);
	}
	,setLinearFactor: function(x,y,z) {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(x,y,z);
		this.body.setLinearFactor(armory_trait_physics_bullet_RigidBody.vec1);
	}
	,setAngularFactor: function(x,y,z) {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(x,y,z);
		this.body.setAngularFactor(armory_trait_physics_bullet_RigidBody.vec1);
	}
	,getLinearVelocity: function() {
		var v = this.body.getLinearVelocity();
		return new iron_math_Vec4(v.x(),v.y(),v.z());
	}
	,setLinearVelocity: function(x,y,z) {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(x,y,z);
		this.body.setLinearVelocity(armory_trait_physics_bullet_RigidBody.vec1);
	}
	,getAngularVelocity: function() {
		var v = this.body.getAngularVelocity();
		return new iron_math_Vec4(v.x(),v.y(),v.z());
	}
	,setAngularVelocity: function(x,y,z) {
		armory_trait_physics_bullet_RigidBody.vec1.setValue(x,y,z);
		this.body.setAngularVelocity(armory_trait_physics_bullet_RigidBody.vec1);
	}
	,setFriction: function(f) {
		var bodyColl = this.body;
		bodyColl.setFriction(f);
		this.friction = f;
	}
	,notifyOnContact: function(f) {
		if(this.onContact == null) {
			this.onContact = [];
		}
		this.onContact.push(f);
	}
	,removeContact: function(f) {
		HxOverrides.remove(this.onContact,f);
	}
	,setScale: function(v) {
		this.currentScaleX = v.x;
		this.currentScaleY = v.y;
		this.currentScaleZ = v.z;
		armory_trait_physics_bullet_RigidBody.vec1.setX(v.x / this.bodyScaleX);
		armory_trait_physics_bullet_RigidBody.vec1.setY(v.y / this.bodyScaleY);
		armory_trait_physics_bullet_RigidBody.vec1.setZ(v.z / this.bodyScaleZ);
		this.btshape.setLocalScaling(armory_trait_physics_bullet_RigidBody.vec1);
		var worldDyn = this.physics.world;
		var worldCol = worldDyn;
		worldCol.updateSingleAabb(this.body);
	}
	,syncTransform: function() {
		var t = this.transform;
		t.buildMatrix();
		armory_trait_physics_bullet_RigidBody.vec1.setValue(t.world.self._30,t.world.self._31,t.world.self._32);
		armory_trait_physics_bullet_RigidBody.trans1.setOrigin(armory_trait_physics_bullet_RigidBody.vec1);
		var _this = armory_trait_physics_bullet_RigidBody.quat;
		var m = t.world;
		var _this1 = iron_math_Quat.helpMat;
		_this1.self._00 = m.self._00;
		_this1.self._01 = m.self._01;
		_this1.self._02 = m.self._02;
		_this1.self._03 = m.self._03;
		_this1.self._10 = m.self._10;
		_this1.self._11 = m.self._11;
		_this1.self._12 = m.self._12;
		_this1.self._13 = m.self._13;
		_this1.self._20 = m.self._20;
		_this1.self._21 = m.self._21;
		_this1.self._22 = m.self._22;
		_this1.self._23 = m.self._23;
		_this1.self._30 = m.self._30;
		_this1.self._31 = m.self._31;
		_this1.self._32 = m.self._32;
		_this1.self._33 = m.self._33;
		var _this2 = iron_math_Quat.helpMat;
		var _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this2.self._00;
		_this3.y = _this2.self._01;
		_this3.z = _this2.self._02;
		_this3.w = 1.0;
		var _this4 = _this3;
		var scale = 1.0 / Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		_this2.self._00 *= scale;
		_this2.self._01 *= scale;
		_this2.self._02 *= scale;
		var _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this2.self._10;
		_this5.y = _this2.self._11;
		_this5.z = _this2.self._12;
		_this5.w = 1.0;
		var _this6 = _this5;
		scale = 1.0 / Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		_this2.self._10 *= scale;
		_this2.self._11 *= scale;
		_this2.self._12 *= scale;
		var _this7 = iron_math_Mat4.helpVec;
		_this7.x = _this2.self._20;
		_this7.y = _this2.self._21;
		_this7.z = _this2.self._22;
		_this7.w = 1.0;
		var _this8 = _this7;
		scale = 1.0 / Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
		_this2.self._20 *= scale;
		_this2.self._21 *= scale;
		_this2.self._22 *= scale;
		_this2.self._03 = 0.0;
		_this2.self._13 = 0.0;
		_this2.self._23 = 0.0;
		_this2.self._30 = 0.0;
		_this2.self._31 = 0.0;
		_this2.self._32 = 0.0;
		_this2.self._33 = 1.0;
		var m1 = iron_math_Quat.helpMat;
		var m11 = m1.self._00;
		var m12 = m1.self._10;
		var m13 = m1.self._20;
		var m21 = m1.self._01;
		var m22 = m1.self._11;
		var m23 = m1.self._21;
		var m31 = m1.self._02;
		var m32 = m1.self._12;
		var m33 = m1.self._22;
		var tr = m11 + m22 + m33;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			_this.w = 0.25 / s;
			_this.x = (m32 - m23) * s;
			_this.y = (m13 - m31) * s;
			_this.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			_this.w = (m32 - m23) / s;
			_this.x = 0.25 * s;
			_this.y = (m12 + m21) / s;
			_this.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			_this.w = (m13 - m31) / s;
			_this.x = (m12 + m21) / s;
			_this.y = 0.25 * s;
			_this.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			_this.w = (m21 - m12) / s;
			_this.x = (m13 + m31) / s;
			_this.y = (m23 + m32) / s;
			_this.z = 0.25 * s;
		}
		armory_trait_physics_bullet_RigidBody.quat1.setValue(armory_trait_physics_bullet_RigidBody.quat.x,armory_trait_physics_bullet_RigidBody.quat.y,armory_trait_physics_bullet_RigidBody.quat.z,armory_trait_physics_bullet_RigidBody.quat.w);
		armory_trait_physics_bullet_RigidBody.trans1.setRotation(armory_trait_physics_bullet_RigidBody.quat1);
		this.body.setCenterOfMassTransform(armory_trait_physics_bullet_RigidBody.trans1);
		if(this.currentScaleX != t.scale.x || this.currentScaleY != t.scale.y || this.currentScaleZ != t.scale.z) {
			this.setScale(t.scale);
		}
		this.activate();
	}
	,setCcd: function(sphereRadius,motionThreshold) {
		if(motionThreshold == null) {
			motionThreshold = 1e-7;
		}
		var bodyColl = this.body;
		bodyColl.setCcdSweptSphereRadius(sphereRadius);
		bodyColl.setCcdMotionThreshold(motionThreshold);
	}
	,fillConvexHull: function(scale,margin) {
		var data = (js_Boot.__cast(this.object , iron_object_MeshObject)).data;
		var shape = armory_trait_physics_bullet_RigidBody.convexHullCache.h[data.__id__];
		if(shape != null) {
			armory_trait_physics_bullet_RigidBody.usersCache.set(data,armory_trait_physics_bullet_RigidBody.usersCache.h[data.__id__] + 1);
			return shape;
		}
		shape = new Ammo.btConvexHullShape();
		armory_trait_physics_bullet_RigidBody.convexHullCache.set(data,shape);
		armory_trait_physics_bullet_RigidBody.usersCache.set(data,1);
		var positions = data.geom.positions;
		var sx = scale.x * (1.0 - margin) * 3.0518509475997192e-005;
		var sy = scale.y * (1.0 - margin) * 3.0518509475997192e-005;
		var sz = scale.z * (1.0 - margin) * 3.0518509475997192e-005;
		if(data.raw.scale_pos != null) {
			sx *= data.raw.scale_pos;
			sy *= data.raw.scale_pos;
			sz *= data.raw.scale_pos;
		}
		var _g = 0;
		var _g1 = positions.length / 4 | 0;
		while(_g < _g1) {
			var i = _g++;
			armory_trait_physics_bullet_RigidBody.vec1.setX(positions[i * 4] * sx);
			armory_trait_physics_bullet_RigidBody.vec1.setY(positions[i * 4 + 1] * sy);
			armory_trait_physics_bullet_RigidBody.vec1.setZ(positions[i * 4 + 2] * sz);
			shape.addPoint(armory_trait_physics_bullet_RigidBody.vec1,true);
		}
		return shape;
	}
	,fillTriangleMesh: function(scale) {
		var data = (js_Boot.__cast(this.object , iron_object_MeshObject)).data;
		var triangleMesh = armory_trait_physics_bullet_RigidBody.triangleMeshCache.h[data.__id__];
		if(triangleMesh != null) {
			armory_trait_physics_bullet_RigidBody.usersCache.set(data,armory_trait_physics_bullet_RigidBody.usersCache.h[data.__id__] + 1);
			return triangleMesh;
		}
		triangleMesh = new Ammo.btTriangleMesh(true,true);
		armory_trait_physics_bullet_RigidBody.triangleMeshCache.set(data,triangleMesh);
		armory_trait_physics_bullet_RigidBody.usersCache.set(data,1);
		var positions = data.geom.positions;
		var indices = data.geom.indices;
		var sx = scale.x * 3.0518509475997192e-005;
		var sy = scale.y * 3.0518509475997192e-005;
		var sz = scale.z * 3.0518509475997192e-005;
		if(data.raw.scale_pos != null) {
			sx *= data.raw.scale_pos;
			sy *= data.raw.scale_pos;
			sz *= data.raw.scale_pos;
		}
		var _g = 0;
		while(_g < indices.length) {
			var ar = indices[_g];
			++_g;
			var _g1 = 0;
			var _g11 = ar.length / 3 | 0;
			while(_g1 < _g11) {
				var i = _g1++;
				armory_trait_physics_bullet_RigidBody.vec1.setX(positions[ar[i * 3] * 4] * sx);
				armory_trait_physics_bullet_RigidBody.vec1.setY(positions[ar[i * 3] * 4 + 1] * sy);
				armory_trait_physics_bullet_RigidBody.vec1.setZ(positions[ar[i * 3] * 4 + 2] * sz);
				armory_trait_physics_bullet_RigidBody.vec2.setX(positions[ar[i * 3 + 1] * 4] * sx);
				armory_trait_physics_bullet_RigidBody.vec2.setY(positions[ar[i * 3 + 1] * 4 + 1] * sy);
				armory_trait_physics_bullet_RigidBody.vec2.setZ(positions[ar[i * 3 + 1] * 4 + 2] * sz);
				armory_trait_physics_bullet_RigidBody.vec3.setX(positions[ar[i * 3 + 2] * 4] * sx);
				armory_trait_physics_bullet_RigidBody.vec3.setY(positions[ar[i * 3 + 2] * 4 + 1] * sy);
				armory_trait_physics_bullet_RigidBody.vec3.setZ(positions[ar[i * 3 + 2] * 4 + 2] * sz);
				triangleMesh.addTriangle(armory_trait_physics_bullet_RigidBody.vec1,armory_trait_physics_bullet_RigidBody.vec2,armory_trait_physics_bullet_RigidBody.vec3);
			}
		}
		return triangleMesh;
	}
	,'delete': function() {
		Ammo.destroy(this.motionState);
		Ammo.destroy(this.body);
		if(this.shape == 2 || this.shape == 3) {
			var data = (js_Boot.__cast(this.object , iron_object_MeshObject)).data;
			var i = armory_trait_physics_bullet_RigidBody.usersCache.h[data.__id__] - 1;
			armory_trait_physics_bullet_RigidBody.usersCache.set(data,i);
			if(i <= 0) {
				Ammo.destroy(this.btshape);
				if(this.shape == 2) {
					armory_trait_physics_bullet_RigidBody.convexHullCache.remove(data);
				} else {
					armory_trait_physics_bullet_RigidBody.triangleMeshCache.remove(data);
				}
			}
		} else {
			Ammo.destroy(this.btshape);
		}
	}
	,deleteShape: function() {
		Ammo.destroy(this.btshape);
	}
	,__class__: armory_trait_physics_bullet_RigidBody
});
var custom_$lib_CustomGame = function() { };
$hxClasses["custom_lib.CustomGame"] = custom_$lib_CustomGame;
custom_$lib_CustomGame.__name__ = "custom_lib.CustomGame";
custom_$lib_CustomGame.playSoundForPlayer = function(arg_soundPath,arg_soundLocation,arg_baseVolume,arg_attenuation) {
	if(arg_attenuation == null) {
		arg_attenuation = 1.0;
	}
	if(arg_baseVolume == null) {
		arg_baseVolume = 1.0;
	}
	if(custom_$lib_CustomLib.getCurrentTime() - custom_$lib_CustomGame.currentSceneStartTime > 0.6) {
		if(custom_$lib_CustomGame.playerRef != null) {
			custom_$lib_CustomLib.playSoundAtLocation(arg_soundPath,custom_$lib_CustomGame.playerRef.transform.loc,arg_soundLocation,arg_baseVolume,arg_attenuation);
		}
	}
};
custom_$lib_CustomGame.spawnRandomArcherSquad = function(arg_spawnLoc_x,arg_spawnLoc_y) {
	var destFaction;
	if(Math.random() <= 0.34) {
		destFaction = 1;
	} else {
		destFaction = 2;
	}
	var expirationTime = custom_$lib_CustomLib.randomInRange_float(32,45);
	var spawnLoc = new iron_math_Vec4(arg_spawnLoc_x + custom_$lib_CustomLib.randomInRange_float(-210,210),arg_spawnLoc_y + custom_$lib_CustomLib.randomInRange_float(-210,210),600 + custom_$lib_CustomLib.randomInRange_float(0,80));
	var spawnAng = new iron_math_Vec4(0,0,custom_$lib_CustomLib.randomInRange_float(0,2 * Math.PI));
	var squadSize = custom_$lib_CustomLib.randomInRange_int(3,5);
	var _g = 0;
	var _g1 = squadSize;
	while(_g < _g1) {
		var i = _g++;
		custom_$lib_CustomLib.spawnObject(custom_$lib_CustomGame.currentSceneName + "_" + "person_cylinder_template",spawnLoc,spawnAng,new iron_math_Vec4(6,6,12.8),function(o) {
			if(destFaction == 2) {
				custom_$lib_CustomGame.currentEnemyCount += 1;
			} else if(destFaction == 1) {
				custom_$lib_CustomGame.currentAllyCount += 1;
			}
			var traitGen = new arm_PersonAIObject();
			o.addTrait(traitGen);
			traitGen.spawned(destFaction);
			traitGen.setExpirationTimer(expirationTime);
		});
	}
};
custom_$lib_CustomGame.buildTimeString = function(arg_rawSeconds) {
	var minutesLeft = Math.floor(arg_rawSeconds / 60);
	var secondsLeft = Math.floor(arg_rawSeconds - minutesLeft * 60);
	if(secondsLeft < 10) {
		return minutesLeft + ":" + "0" + secondsLeft;
	} else {
		return minutesLeft + ":" + secondsLeft;
	}
};
custom_$lib_CustomGame.buildTimerString_update = function() {
	var timeLeft = custom_$lib_CustomGame.gameEndTime - custom_$lib_CustomLib.getCurrentTime();
	var timeString = custom_$lib_CustomGame.buildTimeString(timeLeft);
	return timeString;
};
custom_$lib_CustomGame.gotoPreLevel = function(arg_sceneName) {
	iron_Scene.setActive("scene_level_pre",function(o) {
		switch(arg_sceneName) {
		case "scene_level_1":
			var theTrait = o.getTrait(arm_Level1_$preTextLogic);
			theTrait.sceneToStart = "scene_level_1";
			theTrait.titleText = "Level 1";
			theTrait.preTextImageName = "level_1_pre_text.png";
			theTrait.screenshotName = "level_1_screenshot.png";
			break;
		case "scene_level_2":
			var theTrait1 = o.getTrait(arm_Level1_$preTextLogic);
			theTrait1.sceneToStart = "scene_level_2";
			theTrait1.titleText = "Level 2";
			theTrait1.preTextImageName = "level_2_pre_text.png";
			theTrait1.screenshotName = "level_2_screenshot.png";
			break;
		case "scene_level_3":
			var theTrait2 = o.getTrait(arm_Level1_$preTextLogic);
			theTrait2.sceneToStart = "scene_level_3";
			theTrait2.titleText = "Level 3";
			theTrait2.preTextImageName = "level_3_pre_text.png";
			theTrait2.screenshotName = "level_3_screenshot.png";
			break;
		case "scene_level_4":
			var theTrait3 = o.getTrait(arm_Level1_$preTextLogic);
			theTrait3.sceneToStart = "scene_level_4";
			theTrait3.titleText = "Level 4";
			theTrait3.preTextImageName = "level_4_pre_text.png";
			theTrait3.screenshotName = "level_4_screenshot.png";
			break;
		default:
		}
	});
};
custom_$lib_CustomGame.getNextSceneName = function(arg_ofScene) {
	switch(arg_ofScene) {
	case "scene_level_1":
		return "scene_level_2";
	case "scene_level_2":
		return "scene_level_3";
	case "scene_level_3":
		return "";
	case "scene_level_4":
		return "";
	}
	return "";
};
custom_$lib_CustomGame.endGame = function(arg_victory,arg_score) {
	var mouse = iron_system_Input.getMouse();
	if(mouse.locked) {
		mouse.unlock();
	}
	var thisSceneName = custom_$lib_CustomLib.getActiveSceneName();
	custom_$lib_CustomLib.changeScene("scene_end",function(o) {
		var theTrait = o.getTrait(arm_EndScreenLogic);
		theTrait.wasVictory = arg_victory;
		theTrait.scoreStore = arg_score;
		theTrait.endedSceneName = thisSceneName;
	});
};
custom_$lib_CustomGame.cancelGame = function() {
	var mouse = iron_system_Input.getMouse();
	if(mouse.locked) {
		mouse.unlock();
	}
	custom_$lib_CustomLib.changeScene("scene_splash_screen",function(o) {
	});
};
custom_$lib_CustomGame.factionHates = function(arg_myFaction,arg_otherFaction) {
	switch(arg_myFaction) {
	case -1:
		return false;
	case 0:
		return arg_otherFaction == 2;
	case 1:
		return arg_otherFaction == 2;
	case 2:
		if(arg_otherFaction != 1) {
			return arg_otherFaction == 0;
		} else {
			return true;
		}
		break;
	}
};
var custom_$lib_CustomLib = function() { };
$hxClasses["custom_lib.CustomLib"] = custom_$lib_CustomLib;
custom_$lib_CustomLib.__name__ = "custom_lib.CustomLib";
custom_$lib_CustomLib.getArmatureAnimationOfObject = function(arg_obj) {
	var _g = 0;
	var _g1 = iron_Scene.active.animations;
	while(_g < _g1.length) {
		var thisAnimation = _g1[_g];
		++_g;
		if(thisAnimation.armature != null) {
			if(thisAnimation.armature.uid == arg_obj.uid) {
				return js_Boot.__cast(thisAnimation , iron_object_BoneAnimation);
			}
		}
	}
	return null;
};
custom_$lib_CustomLib.getDirectChild = function(arg_obj,arg_strSearchName) {
	var _g = 0;
	var _g1 = arg_obj.children;
	while(_g < _g1.length) {
		var thisChild = _g1[_g];
		++_g;
		var filteredName;
		var periodPos = thisChild.name.indexOf(".");
		if(periodPos != -1) {
			filteredName = thisChild.name.substring(0,periodPos);
		} else {
			filteredName = thisChild.name;
		}
		if(filteredName == arg_strSearchName) {
			return thisChild;
		}
	}
	return null;
};
custom_$lib_CustomLib.snapToGround = function(arg_obj) {
	var rayCastResult = armory_trait_physics_bullet_PhysicsWorld.active.rayCast(arg_obj.transform.loc,new iron_math_Vec4(arg_obj.transform.loc.x,arg_obj.transform.loc.y,arg_obj.transform.loc.z - 600));
	if(rayCastResult != null) {
		if(rayCastResult.object != null) {
			var pointHit = armory_trait_physics_bullet_PhysicsWorld.active.hitPointWorld;
			arg_obj.transform.loc = new iron_math_Vec4(arg_obj.transform.loc.x,arg_obj.transform.loc.y,pointHit.z + 12 + 2.4);
			arg_obj.transform.buildMatrix();
			var rigidBodyTest = rayCastResult.object.getTrait(armory_trait_physics_bullet_RigidBody);
			if(rigidBodyTest != null) {
				rigidBodyTest.syncTransform();
			}
		}
	}
};
custom_$lib_CustomLib.setObjectVisibility = function(arg_obj,arg_visible) {
	arg_obj.visible = arg_visible;
	arg_obj.visibleMesh = arg_visible;
	arg_obj.visibleShadow = arg_visible;
};
custom_$lib_CustomLib.playSound = function(arg_soundPath,arg_volume) {
	if(arg_volume == null) {
		arg_volume = 1.0;
	}
	iron_data_Data.getSound(arg_soundPath,function(sound) {
		var someAudioChannel = iron_system_Audio.play(sound,false,false);
		if(someAudioChannel != null) {
			someAudioChannel.set_volume(arg_volume);
		}
	});
};
custom_$lib_CustomLib.playSoundAtLocation = function(arg_soundPath,arg_listenerLocation,arg_soundLocation,arg_baseVolume,arg_attenuation) {
	if(arg_attenuation == null) {
		arg_attenuation = 1.0;
	}
	if(arg_baseVolume == null) {
		arg_baseVolume = 1.0;
	}
	var vx = arg_listenerLocation.x - arg_soundLocation.x;
	var vy = arg_listenerLocation.y - arg_soundLocation.y;
	var vz = arg_listenerLocation.z - arg_soundLocation.z;
	var listenerDistance = Math.sqrt(vx * vx + vy * vy + vz * vz);
	var volInfluence = 1.0 - Math.min(listenerDistance * arg_attenuation / 100.0,1.0);
	custom_$lib_CustomLib.playSound(arg_soundPath,arg_baseVolume * volInfluence);
};
custom_$lib_CustomLib.setParent = function(arg_objChild,arg_objParent) {
	if(arg_objChild.parent == arg_objParent) {
		return;
	}
	var parent;
	var isUnparent = false;
	isUnparent = arg_objParent == iron_Scene.active.root;
	if(arg_objChild.parent != null) {
		arg_objChild.parent.removeChild(arg_objChild,isUnparent);
		arg_objParent.addChild(arg_objChild,!isUnparent);
	}
};
custom_$lib_CustomLib.changeScene = function(arg_newSceneName,arg_funDone) {
	iron_Scene.setActive(arg_newSceneName,function(o) {
		arg_funDone(o);
	});
};
custom_$lib_CustomLib.getLookAngle = function(vfrom,vto) {
	var vecDelta_x = vto.x - vfrom.x;
	var vecDelta_y = vto.y - vfrom.y;
	var vecDelta_z = vto.z - vfrom.z;
	var vecDelta_w = 1.0;
	var yawAng = Math.atan2(vecDelta_y,vecDelta_x) - 90 * (Math.PI / 180);
	var floorLength = Math.sqrt(vecDelta_x * vecDelta_x + vecDelta_y * vecDelta_y);
	var pitchAng = Math.atan2(vecDelta_z,floorLength);
	return new iron_math_Vec4(pitchAng,0,yawAng);
};
custom_$lib_CustomLib.getCameraFOV = function(arg_camera) {
	return arg_camera.data.raw.fov;
};
custom_$lib_CustomLib.setCameraFOV = function(arg_camera,arg_fov) {
	arg_camera.data.raw.fov = arg_fov;
	arg_camera.buildProjection();
};
custom_$lib_CustomLib.getActiveScene = function() {
	return iron_Scene.active;
};
custom_$lib_CustomLib.getActiveSceneName = function() {
	return iron_Scene.active.raw.name;
};
custom_$lib_CustomLib.getMaterial = function(arg_strMatName,arg_funDone) {
	iron_data_Data.getMaterial(iron_Scene.active.raw.name,arg_strMatName,function(mat) {
		arg_funDone(mat);
	});
};
custom_$lib_CustomLib.spawnObject = function(arg_strTemplateName,arg_vecLoc,arg_vecAngEuler,arg_vecScale,arg_funDone,arg_objParent,arg_blnIncludeChildren) {
	if(arg_blnIncludeChildren == null) {
		arg_blnIncludeChildren = true;
	}
	iron_Scene.active.spawnObject(arg_strTemplateName,arg_objParent,function(o) {
		o.transform.loc = arg_vecLoc;
		o.transform.setRotation(arg_vecAngEuler.x,arg_vecAngEuler.y,arg_vecAngEuler.z);
		o.transform.scale = arg_vecScale;
		o.transform.buildMatrix();
		var rigidBody = o.getTrait(armory_trait_physics_bullet_RigidBody);
		if(rigidBody != null) {
			rigidBody.syncTransform();
		}
		o.visible = true;
		arg_funDone(o);
	},arg_blnIncludeChildren);
};
custom_$lib_CustomLib.spawnObject_quat = function(arg_strTemplateName,arg_vecLoc,arg_qatAng,arg_vecScale,arg_funDone,arg_objParent,arg_blnIncludeChildren) {
	if(arg_blnIncludeChildren == null) {
		arg_blnIncludeChildren = true;
	}
	iron_Scene.active.spawnObject(arg_strTemplateName,arg_objParent,function(o) {
		o.transform.loc = arg_vecLoc;
		o.transform.rot = arg_qatAng;
		o.transform.scale = arg_vecScale;
		o.transform.buildMatrix();
		var rigidBody = o.getTrait(armory_trait_physics_bullet_RigidBody);
		if(rigidBody != null) {
			rigidBody.syncTransform();
		}
		o.visible = true;
		arg_funDone(o);
	},arg_blnIncludeChildren);
};
custom_$lib_CustomLib.rotateQuatByAxisAngle = function(arg_dest,axis,f) {
	var _this = custom_$lib_CustomLib.tempQ;
	var s = Math.sin(f * 0.5);
	_this.x = axis.x * s;
	_this.y = axis.y * s;
	_this.z = axis.z * s;
	_this.w = Math.cos(f * 0.5);
	var l = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z + _this.w * _this.w);
	if(l == 0.0) {
		_this.x = 0;
		_this.y = 0;
		_this.z = 0;
		_this.w = 0;
	} else {
		l = 1.0 / l;
		_this.x *= l;
		_this.y *= l;
		_this.z *= l;
		_this.w *= l;
	}
	var q1 = custom_$lib_CustomLib.tempQ;
	var q1x = q1.x;
	var q1y = q1.y;
	var q1z = q1.z;
	var q1w = q1.w;
	var q2x = arg_dest.x;
	var q2y = arg_dest.y;
	var q2z = arg_dest.z;
	var q2w = arg_dest.w;
	arg_dest.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
	arg_dest.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
	arg_dest.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
	arg_dest.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
};
custom_$lib_CustomLib.setTexturesFromMaterial = function(arg_objMesh,arg_mat) {
	var _g = 0;
	var _g1 = arg_objMesh.materials.length;
	while(_g < _g1) {
		var i = _g++;
		var done = function(newMat) {
		};
		arg_objMesh.materials[i] = new iron_data_MaterialData(arg_objMesh.materials[i].raw,done,"");
		arg_objMesh.materials[i].contexts[0].textures = arg_mat.contexts[0].textures;
	}
};
custom_$lib_CustomLib.setTexturesFromMaterial_obj = function(arg_obj,arg_mat) {
	var arg_objMesh = js_Boot.__cast(arg_obj , iron_object_MeshObject);
	var _g = 0;
	var _g1 = arg_objMesh.materials.length;
	while(_g < _g1) {
		var i = _g++;
		var done = function(newMat) {
		};
		arg_objMesh.materials[i] = new iron_data_MaterialData(arg_objMesh.materials[i].raw,done,"");
		arg_objMesh.materials[i].contexts[0].textures = arg_mat.contexts[0].textures;
	}
};
custom_$lib_CustomLib.getCurrentTime = function() {
	return kha_Scheduler.time();
};
custom_$lib_CustomLib.getDistance = function(arg_vec1,arg_vec2) {
	var vx = arg_vec1.x - arg_vec2.x;
	var vy = arg_vec1.y - arg_vec2.y;
	var vz = arg_vec1.z - arg_vec2.z;
	return Math.sqrt(vx * vx + vy * vy + vz * vz);
};
custom_$lib_CustomLib.getRandomFloat = function(arg_min,arg_max) {
	return arg_min + Math.random() * (arg_max - arg_min);
};
custom_$lib_CustomLib.randomInRange_float = function(arg_min,arg_max) {
	return Math.random() * (arg_max - arg_min) + arg_min;
};
custom_$lib_CustomLib.randomInRange_int = function(arg_min,arg_max) {
	return Math.floor(Math.random() * (arg_max - arg_min + 1) + arg_min);
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos != null && infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Object.create(cl1.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) {
					h1.setReserved(s1,value);
				} else {
					h1.h[s1] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Object.create(cl2.prototype);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c11 << 2 | c2 >> 4;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c12 << 2 | c21 >> 4;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = c21 << 4 | c31 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s2 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s2 = decodeURIComponent(s2.split("+").join(" "));
			this.scache.push(s2);
			return s2;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c1 = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c1);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) this.h.hasOwnProperty(key) ? a.push(key | 0) : null;
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = "haxe.ds._StringMap.StringMapIterator";
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			var eof1 = ((eof) instanceof js__$Boot_HaxeError) ? eof.val : eof;
			if(((eof1) instanceof haxe_io_Eof)) {
				var eof2 = eof1;
			} else {
				throw eof;
			}
		}
		return len - k;
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readFloat: function() {
		return haxe_io_FPHelper.i32ToFloat(this.readInt32());
	}
	,readInt8: function() {
		var n = this.readByte();
		if(n >= 128) {
			return n - 256;
		}
		return n;
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,__class__: haxe_io_Input
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = "haxe.io.BytesInput";
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
	,__properties__: $extend(haxe_io_Input.prototype.__properties__,{set_position:"set_position"})
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = "haxe.io.BytesOutput";
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.addByte(c);
	}
	,writeBytes: function(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = "haxe.io.FPHelper";
haxe_io_FPHelper.i32ToFloat = function(i) {
	haxe_io_FPHelper.helper.setInt32(0,i,true);
	return haxe_io_FPHelper.helper.getFloat32(0,true);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	haxe_io_FPHelper.helper.setFloat32(0,f,true);
	return haxe_io_FPHelper.helper.getInt32(0,true);
};
var haxe_io__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["haxe.io._UInt8Array.UInt8Array_Impl_"] = haxe_io__$UInt8Array_UInt8Array_$Impl_$;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.__name__ = "haxe.io._UInt8Array.UInt8Array_Impl_";
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var iron_RenderPath = function() {
	this.depthBuffers = [];
	this.depthToRenderTarget = new haxe_ds_StringMap();
	this.renderTargets = new haxe_ds_StringMap();
	this.commands = null;
	this.cachedShaderContexts = new haxe_ds_StringMap();
	this.loading = 0;
	this.paused = false;
	this.drawOrder = 1;
	this.lastFrameTime = 0.0;
	this.viewportScaled = false;
	this.scissorSet = false;
	this.lastH = 0;
	this.lastW = 0;
	this.isProbe = false;
	this.isProbeCube = false;
	this.isProbePlanar = false;
	this.point = null;
	this.sun = null;
	this.light = null;
	this.currentTarget = null;
	this.frame = 0;
	this.frameTime = 0.0;
	this.frameScissorH = 0;
	this.frameScissorW = 0;
	this.frameScissorY = 0;
	this.frameScissorX = 0;
	this.frameScissor = false;
};
$hxClasses["iron.RenderPath"] = iron_RenderPath;
iron_RenderPath.__name__ = "iron.RenderPath";
iron_RenderPath.setActive = function(renderPath) {
	iron_RenderPath.active = renderPath;
};
iron_RenderPath.sortMeshesDistance = function(meshes) {
	meshes.sort(function(a,b) {
		if(a.cameraDistance >= b.cameraDistance) {
			return 1;
		} else {
			return -1;
		}
	});
};
iron_RenderPath.sortMeshesShader = function(meshes) {
	meshes.sort(function(a,b) {
		if(a.materials[0].name >= b.materials[0].name) {
			return 1;
		} else {
			return -1;
		}
	});
};
iron_RenderPath.notifyOnContext = function(name,onContext) {
	if(iron_RenderPath.contextEvents == null) {
		iron_RenderPath.contextEvents = new haxe_ds_StringMap();
	}
	var _this = iron_RenderPath.contextEvents;
	var ar = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
	if(ar == null) {
		ar = [];
		var _this1 = iron_RenderPath.contextEvents;
		if(__map_reserved[name] != null) {
			_this1.setReserved(name,ar);
		} else {
			_this1.h[name] = ar;
		}
	}
	ar.push(onContext);
};
iron_RenderPath.prototype = {
	get_ready: function() {
		return this.loading == 0;
	}
	,renderFrame: function(g) {
		if(!this.get_ready() || this.paused || kha_System.windowWidth() == 0 || kha_System.windowHeight() == 0) {
			return;
		}
		if(this.lastW > 0 && (this.lastW != kha_System.windowWidth() || this.lastH != kha_System.windowHeight())) {
			this.resize();
		}
		this.lastW = kha_System.windowWidth();
		this.lastH = kha_System.windowHeight();
		this.frameTime = kha_Scheduler.time() - this.lastFrameTime;
		this.lastFrameTime = kha_Scheduler.time();
		iron_RenderPath.drawCalls = 0;
		iron_RenderPath.batchBuckets = 0;
		iron_RenderPath.batchCalls = 0;
		iron_RenderPath.culled = 0;
		iron_RenderPath.numTrisMesh = 0;
		iron_RenderPath.numTrisShadow = 0;
		var cam = iron_Scene.active.camera;
		this.isProbePlanar = cam != null && cam.renderTarget != null;
		this.isProbeCube = cam != null && cam.renderTargetCube != null;
		this.isProbe = this.isProbePlanar || this.isProbeCube;
		if(this.isProbePlanar) {
			this.frameG = cam.renderTarget.get_g4();
		} else if(this.isProbeCube) {
			this.frameG = cam.renderTargetCube.get_g4();
		} else {
			this.frameG = g;
		}
		this.currentG = this.frameG;
		this.currentW = kha_System.windowWidth();
		this.currentH = kha_System.windowHeight();
		this.currentD = 1;
		this.currentFace = -1;
		this.meshesSorted = false;
		var _g = 0;
		var _g1 = iron_Scene.active.lights;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(l.visible) {
				l.buildMatrix(iron_Scene.active.camera);
			}
			if(l.data.raw.type == "sun") {
				this.sun = l;
			} else {
				this.point = l;
			}
		}
		this.light = iron_Scene.active.lights[0];
		this.commands();
		if(!this.isProbe) {
			this.frame++;
		}
	}
	,setTarget: function(target,additional,viewportScale) {
		if(viewportScale == null) {
			viewportScale = 1.0;
		}
		if(target == "") {
			this.currentG = this.frameG;
			this.currentD = 1;
			this.currentTarget = null;
			this.currentFace = -1;
			if(this.isProbeCube) {
				this.currentW = iron_Scene.active.camera.renderTargetCube.get_width();
				this.currentH = iron_Scene.active.camera.renderTargetCube.get_height();
				var g = this.currentG;
				var face = iron_Scene.active.camera.currentFace;
				if(face >= 0) {
					g.beginFace(face);
				} else {
					g.begin(null);
				}
			} else {
				this.currentW = kha_System.windowWidth();
				this.currentH = kha_System.windowHeight();
				if(this.frameScissor) {
					this.setFrameScissor();
				}
				var g1 = this.currentG;
				g1.begin(null);
			}
		} else {
			var _this = this.renderTargets;
			var rt = __map_reserved[target] != null ? _this.getReserved(target) : _this.h[target];
			this.currentTarget = rt;
			var additionalImages = null;
			if(additional != null) {
				additionalImages = [];
				var _g = 0;
				while(_g < additional.length) {
					var s = additional[_g];
					++_g;
					var _this1 = this.renderTargets;
					var t = __map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s];
					additionalImages.push(t.image);
				}
			}
			this.currentG = rt.isCubeMap ? rt.cubeMap.get_g4() : rt.image.get_g4();
			this.currentW = rt.isCubeMap ? rt.cubeMap.get_width() : rt.image.get_width();
			this.currentH = rt.isCubeMap ? rt.cubeMap.get_height() : rt.image.get_height();
			if(rt.is3D) {
				this.currentD = rt.image.get_depth();
			}
			var g2 = this.currentG;
			var face1 = this.currentFace;
			if(face1 >= 0) {
				g2.beginFace(face1);
			} else {
				g2.begin(additionalImages);
			}
		}
		if(viewportScale != 1.0) {
			this.viewportScaled = true;
			var viewW = this.currentW * viewportScale | 0;
			var viewH = this.currentH * viewportScale | 0;
			this.currentG.viewport(0,viewH,viewW,viewH);
			this.currentG.scissor(0,viewH,viewW,viewH);
		} else if(this.viewportScaled) {
			this.viewportScaled = false;
			this.setCurrentViewport(this.currentW,this.currentH);
			this.setCurrentScissor(this.currentW,this.currentH);
		}
		this.bindParams = null;
	}
	,setDepthFrom: function(target,from) {
		var _this = this.renderTargets;
		var rt = __map_reserved[target] != null ? _this.getReserved(target) : _this.h[target];
		var _this1 = this.renderTargets;
		rt.image.setDepthStencilFrom((__map_reserved[from] != null ? _this1.getReserved(from) : _this1.h[from]).image);
	}
	,setCurrentViewport: function(viewW,viewH) {
		this.currentG.viewport(0,this.currentH - viewH,viewW,viewH);
	}
	,setCurrentScissor: function(viewW,viewH) {
		this.currentG.scissor(0,this.currentH - viewH,viewW,viewH);
		this.scissorSet = true;
	}
	,setFrameScissor: function() {
		this.frameG.scissor(this.frameScissorX,this.currentH - (this.frameScissorH - this.frameScissorY),this.frameScissorW,this.frameScissorH);
	}
	,clearTarget: function(colorFlag,depthFlag) {
		if(colorFlag == -1) {
			if(iron_Scene.active.world != null) {
				colorFlag = iron_Scene.active.world.raw.background_color;
			} else if(iron_Scene.active.camera != null) {
				var cc = iron_Scene.active.camera.data.raw.clear_color;
				if(cc != null) {
					colorFlag = kha__$Color_Color_$Impl_$.fromFloats(cc[0],cc[1],cc[2]);
				}
			}
		}
		this.currentG.clear(colorFlag,depthFlag,null);
	}
	,drawMeshes: function(context) {
		var isShadows = context == "shadowmap";
		if(isShadows) {
			if(this.light == null || !this.light.data.raw.cast_shadow || !this.light.visible || this.light.data.raw.strength == 0) {
				return;
			}
		}
		if(this.currentFace >= 0 && this.light != null) {
			this.light.setCubeFace(this.currentFace,iron_Scene.active.camera);
		}
		var g = this.currentG;
		var drawn = false;
		if(isShadows && this.light.data.raw.type == "sun") {
			var step = this.currentH;
			var _g = 0;
			var _g1 = iron_object_LightObject.cascadeCount;
			while(_g < _g1) {
				var i = _g++;
				this.light.setCascade(iron_Scene.active.camera,i);
				g.viewport(i * step,0,step,step);
				this.submitDraw(context);
			}
			drawn = true;
		}
		if(context == "mesh") {
			iron_object_LightObject.updateClusters(iron_Scene.active.camera);
		}
		if(!drawn) {
			this.submitDraw(context);
		}
		if(iron_RenderPath.contextEvents != null) {
			var _this = iron_RenderPath.contextEvents;
			var ar = __map_reserved[context] != null ? _this.getReserved(context) : _this.h[context];
			if(ar != null) {
				var _g2 = 0;
				var _g11 = ar.length;
				while(_g2 < _g11) {
					var i1 = _g2++;
					ar[i1](g,i1,ar.length);
				}
			}
		}
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
	}
	,submitDraw: function(context) {
		var camera = iron_Scene.active.camera;
		var meshes = iron_Scene.active.meshes;
		var g = this.currentG;
		iron_object_MeshObject.lastPipeline = null;
		if(!this.meshesSorted && camera != null) {
			var camX = camera.transform.world.self._30;
			var camY = camera.transform.world.self._31;
			var camZ = camera.transform.world.self._32;
			var _g = 0;
			while(_g < meshes.length) {
				var mesh = meshes[_g];
				++_g;
				var vx = camX - mesh.transform.world.self._30;
				var vy = camY - mesh.transform.world.self._31;
				var vz = camZ - mesh.transform.world.self._32;
				mesh.cameraDistance = Math.sqrt(vx * vx + vy * vy + vz * vz);
			}
			if(this.drawOrder == 1) {
				iron_RenderPath.sortMeshesShader(meshes);
			} else {
				iron_RenderPath.sortMeshesDistance(meshes);
			}
			this.meshesSorted = true;
		}
		var _g1 = 0;
		while(_g1 < meshes.length) {
			var m = meshes[_g1];
			++_g1;
			m.render(g,context,this.bindParams);
		}
	}
	,drawSkydome: function(handle) {
		if(iron_data_ConstData.skydomeVB == null) {
			iron_data_ConstData.createSkydomeData();
		}
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		if(cc.context == null) {
			return;
		}
		var g = this.currentG;
		g.setPipeline(cc.context.pipeState);
		iron_object_Uniforms.setContextConstants(g,cc.context,this.bindParams);
		iron_object_Uniforms.setObjectConstants(g,cc.context,null);
		g.setVertexBuffer(iron_data_ConstData.skydomeVB);
		g.setIndexBuffer(iron_data_ConstData.skydomeIB);
		g.drawIndexedVertices();
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
	}
	,bindTarget: function(target,uniform) {
		if(this.bindParams != null) {
			this.bindParams.push(target);
			this.bindParams.push(uniform);
		} else {
			this.bindParams = [target,uniform];
		}
	}
	,drawShader: function(handle) {
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		if(iron_data_ConstData.screenAlignedVB == null) {
			iron_data_ConstData.createScreenAlignedData();
		}
		var g = this.currentG;
		g.setPipeline(cc.context.pipeState);
		iron_object_Uniforms.setContextConstants(g,cc.context,this.bindParams);
		iron_object_Uniforms.setObjectConstants(g,cc.context,null);
		g.setVertexBuffer(iron_data_ConstData.screenAlignedVB);
		g.setIndexBuffer(iron_data_ConstData.screenAlignedIB);
		g.drawIndexedVertices();
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
	}
	,loadShader: function(handle) {
		var _gthis = this;
		this.loading++;
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		if(cc != null) {
			this.loading--;
			return;
		}
		cc = new iron_CachedShaderContext();
		var _this1 = this.cachedShaderContexts;
		if(__map_reserved[handle] != null) {
			_this1.setReserved(handle,cc);
		} else {
			_this1.h[handle] = cc;
		}
		var shaderPath = handle.split("/");
		iron_data_Data.getShader(shaderPath[0],shaderPath[1],function(res) {
			cc.context = res.getContext(shaderPath[2]);
			_gthis.loading--;
		});
	}
	,resize: function() {
		var _this = this.renderTargets;
		var rt = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(rt.hasNext()) {
			var rt1 = rt.next();
			if(rt1.raw.width == 0) {
				rt1.image.unload();
				rt1.image = this.createImage(rt1.raw,rt1.depthStencil);
				if(rt1.depthStencilFrom != "") {
					var key = rt1.depthStencilFrom;
					var _this1 = this.depthToRenderTarget;
					rt1.image.setDepthStencilFrom((__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).image);
				}
			}
		}
	}
	,createRenderTarget: function(t) {
		var rt = this.createTarget(t);
		var key = t.name;
		var _this = this.renderTargets;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,rt);
		} else {
			_this.h[key] = rt;
		}
		return rt;
	}
	,createDepthBuffer: function(name,format) {
		this.depthBuffers.push({ name : name, format : format});
	}
	,createTarget: function(t) {
		var rt = new iron_RenderTarget(t);
		if(t.depth_buffer != null) {
			rt.hasDepth = true;
			var key = t.depth_buffer;
			var _this = this.depthToRenderTarget;
			var depthTarget = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			if(depthTarget == null) {
				var _g = 0;
				var _g1 = this.depthBuffers;
				while(_g < _g1.length) {
					var db = _g1[_g];
					++_g;
					if(db.name == t.depth_buffer) {
						var key1 = db.name;
						var _this1 = this.depthToRenderTarget;
						if(__map_reserved[key1] != null) {
							_this1.setReserved(key1,rt);
						} else {
							_this1.h[key1] = rt;
						}
						var s = db.format;
						var tmp;
						if(s == null || s == "") {
							tmp = 1;
						} else {
							switch(s) {
							case "DEPTH16":
								tmp = 5;
								break;
							case "DEPTH24":
								tmp = 1;
								break;
							default:
								tmp = 1;
							}
						}
						rt.depthStencil = tmp;
						rt.image = this.createImage(t,rt.depthStencil);
						break;
					}
				}
			} else {
				rt.depthStencil = 0;
				rt.depthStencilFrom = t.depth_buffer;
				rt.image = this.createImage(t,rt.depthStencil);
				rt.image.setDepthStencilFrom(depthTarget.image);
			}
		} else {
			rt.hasDepth = false;
			if(t.depth != null && t.depth > 1) {
				rt.is3D = true;
			}
			if(t.is_cubemap) {
				rt.isCubeMap = true;
				rt.depthStencil = 0;
				rt.cubeMap = this.createCubeMap(t,rt.depthStencil);
			} else {
				rt.depthStencil = 0;
				rt.image = this.createImage(t,rt.depthStencil);
			}
		}
		return rt;
	}
	,createImage: function(t,depthStencil) {
		var width = t.width == 0 ? kha_System.windowWidth() : t.width;
		var height = t.height == 0 ? kha_System.windowHeight() : t.height;
		var depth = t.depth != null ? t.depth : 0;
		if(t.displayp != null) {
			if(width > height) {
				width = width * (t.displayp / height) | 0;
				height = t.displayp;
			} else {
				height = height * (t.displayp / width) | 0;
				width = t.displayp;
			}
		}
		if(t.scale != null) {
			width = width * t.scale | 0;
			height = height * t.scale | 0;
			depth = depth * t.scale | 0;
		}
		if(t.depth != null && t.depth > 1) {
			var img;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					img = 6;
					break;
				case "A32":
					img = 5;
					break;
				case "A8":
					img = 1;
					break;
				case "DEPTH16":
					img = 3;
					break;
				case "R16":
					img = 6;
					break;
				case "R32":
					img = 5;
					break;
				case "R8":
					img = 1;
					break;
				case "RGBA128":
					img = 2;
					break;
				case "RGBA32":
					img = 0;
					break;
				case "RGBA64":
					img = 4;
					break;
				default:
					img = 0;
				}
			} else {
				img = 0;
			}
			var img1 = kha_Image.create3D(width,height,depth,img);
			if(t.mipmaps) {
				img1.generateMipmaps(1000);
			}
			return img1;
		} else if(t.is_image != null && t.is_image) {
			var tmp;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					tmp = 6;
					break;
				case "A32":
					tmp = 5;
					break;
				case "A8":
					tmp = 1;
					break;
				case "DEPTH16":
					tmp = 3;
					break;
				case "R16":
					tmp = 6;
					break;
				case "R32":
					tmp = 5;
					break;
				case "R8":
					tmp = 1;
					break;
				case "RGBA128":
					tmp = 2;
					break;
				case "RGBA32":
					tmp = 0;
					break;
				case "RGBA64":
					tmp = 4;
					break;
				default:
					tmp = 0;
				}
			} else {
				tmp = 0;
			}
			return kha_Image.create(width,height,tmp);
		} else {
			var tmp1;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					tmp1 = 6;
					break;
				case "A32":
					tmp1 = 5;
					break;
				case "A8":
					tmp1 = 1;
					break;
				case "DEPTH16":
					tmp1 = 3;
					break;
				case "R16":
					tmp1 = 6;
					break;
				case "R32":
					tmp1 = 5;
					break;
				case "R8":
					tmp1 = 1;
					break;
				case "RGBA128":
					tmp1 = 2;
					break;
				case "RGBA32":
					tmp1 = 0;
					break;
				case "RGBA64":
					tmp1 = 4;
					break;
				default:
					tmp1 = 0;
				}
			} else {
				tmp1 = 0;
			}
			return kha_Image.createRenderTarget(width,height,tmp1,depthStencil);
		}
	}
	,createCubeMap: function(t,depthStencil) {
		var tmp;
		if(t.format != null) {
			switch(t.format) {
			case "A16":
				tmp = 6;
				break;
			case "A32":
				tmp = 5;
				break;
			case "A8":
				tmp = 1;
				break;
			case "DEPTH16":
				tmp = 3;
				break;
			case "R16":
				tmp = 6;
				break;
			case "R32":
				tmp = 5;
				break;
			case "R8":
				tmp = 1;
				break;
			case "RGBA128":
				tmp = 2;
				break;
			case "RGBA32":
				tmp = 0;
				break;
			case "RGBA64":
				tmp = 4;
				break;
			default:
				tmp = 0;
			}
		} else {
			tmp = 0;
		}
		return kha_graphics4_CubeMap.createRenderTarget(t.width,tmp,depthStencil);
	}
	,__class__: iron_RenderPath
	,__properties__: {get_ready:"get_ready"}
};
var iron_RenderTargetRaw = function() {
	this.is_cubemap = null;
	this.is_image = null;
	this.depth = null;
	this.mipmaps = null;
	this.depth_buffer = null;
	this.displayp = null;
	this.scale = null;
	this.format = null;
};
$hxClasses["iron.RenderTargetRaw"] = iron_RenderTargetRaw;
iron_RenderTargetRaw.__name__ = "iron.RenderTargetRaw";
iron_RenderTargetRaw.prototype = {
	__class__: iron_RenderTargetRaw
};
var iron_RenderTarget = function(raw) {
	this.isCubeMap = false;
	this.is3D = false;
	this.hasDepth = false;
	this.cubeMap = null;
	this.image = null;
	this.depthStencilFrom = "";
	this.raw = raw;
};
$hxClasses["iron.RenderTarget"] = iron_RenderTarget;
iron_RenderTarget.__name__ = "iron.RenderTarget";
iron_RenderTarget.prototype = {
	__class__: iron_RenderTarget
};
var iron_CachedShaderContext = function() {
};
$hxClasses["iron.CachedShaderContext"] = iron_CachedShaderContext;
iron_CachedShaderContext.__name__ = "iron.CachedShaderContext";
iron_CachedShaderContext.prototype = {
	__class__: iron_CachedShaderContext
};
var iron_data_Armature = function(uid,name,actions) {
	this.matsReady = false;
	this.actions = [];
	this.uid = uid;
	this.name = name;
	var _g = 0;
	while(_g < actions.length) {
		var a = actions[_g];
		++_g;
		var _g1 = 0;
		var _g11 = a.objects;
		while(_g1 < _g11.length) {
			var o = _g11[_g1];
			++_g1;
			iron_data_Armature.setParents(o);
		}
		var bones = [[]];
		iron_data_Armature.traverseBones(a.objects,(function(bones1) {
			return function(object) {
				bones1[0].push(object);
			};
		})(bones));
		this.actions.push({ name : a.name, bones : bones[0], mats : null});
	}
};
$hxClasses["iron.data.Armature"] = iron_data_Armature;
iron_data_Armature.__name__ = "iron.data.Armature";
iron_data_Armature.setParents = function(object) {
	if(object.children == null) {
		return;
	}
	var _g = 0;
	var _g1 = object.children;
	while(_g < _g1.length) {
		var o = _g1[_g];
		++_g;
		o.parent = object;
		iron_data_Armature.setParents(o);
	}
};
iron_data_Armature.traverseBones = function(objects,callback) {
	var _g = 0;
	var _g1 = objects.length;
	while(_g < _g1) {
		var i = _g++;
		iron_data_Armature.traverseBonesStep(objects[i],callback);
	}
};
iron_data_Armature.traverseBonesStep = function(object,callback) {
	if(object.type == "bone_object") {
		callback(object);
	}
	if(object.children == null) {
		return;
	}
	var _g = 0;
	var _g1 = object.children.length;
	while(_g < _g1) {
		var i = _g++;
		iron_data_Armature.traverseBonesStep(object.children[i],callback);
	}
};
iron_data_Armature.prototype = {
	initMats: function() {
		if(this.matsReady) {
			return;
		}
		this.matsReady = true;
		var _g = 0;
		var _g1 = this.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.mats != null) {
				continue;
			}
			a.mats = [];
			var _g2 = 0;
			var _g11 = a.bones;
			while(_g2 < _g11.length) {
				var b = _g11[_g2];
				++_g2;
				var a1 = b.transform.values;
				a.mats.push(new iron_math_Mat4(a1[0],a1[1],a1[2],a1[3],a1[4],a1[5],a1[6],a1[7],a1[8],a1[9],a1[10],a1[11],a1[12],a1[13],a1[14],a1[15]));
			}
		}
	}
	,getAction: function(name) {
		var _g = 0;
		var _g1 = this.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.name == name) {
				return a;
			}
		}
		return null;
	}
	,__class__: iron_data_Armature
};
var iron_data_CameraData = function(raw,done) {
	this.raw = raw;
	this.name = raw.name;
	done(this);
};
$hxClasses["iron.data.CameraData"] = iron_data_CameraData;
iron_data_CameraData.__name__ = "iron.data.CameraData";
iron_data_CameraData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getCameraRawByName(format.camera_datas,id);
		if(raw == null) {
			haxe_Log.trace("Camera data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/CameraData.hx", lineNumber : 20, className : "iron.data.CameraData", methodName : "parse"});
			done(null);
		}
		new iron_data_CameraData(raw,done);
	});
};
iron_data_CameraData.prototype = {
	__class__: iron_data_CameraData
};
var iron_data_ConstData = function() { };
$hxClasses["iron.data.ConstData"] = iron_data_ConstData;
iron_data_ConstData.__name__ = "iron.data.ConstData";
iron_data_ConstData.createScreenAlignedData = function() {
	var data = [-1.0,-1.0,3.0,-1.0,-1.0,3.0];
	var indices = [0,1,2];
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",1);
	iron_data_ConstData.screenAlignedVB = new kha_graphics4_VertexBuffer(data.length / (structure.byteSize() / 4 | 0) | 0,structure,0);
	var vertices = iron_data_ConstData.screenAlignedVB.lock();
	var _g = 0;
	var _g1 = vertices.length;
	while(_g < _g1) {
		var i = _g++;
		vertices[i] = data[i];
	}
	iron_data_ConstData.screenAlignedVB.unlock();
	iron_data_ConstData.screenAlignedIB = new kha_graphics4_IndexBuffer(indices.length,0);
	var id = iron_data_ConstData.screenAlignedIB.lock();
	var _g2 = 0;
	var _g3 = id.length;
	while(_g2 < _g3) {
		var i1 = _g2++;
		id[i1] = indices[i1];
	}
	iron_data_ConstData.screenAlignedIB.unlock();
};
iron_data_ConstData.createSkydomeData = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",2);
	structure.add("nor",2);
	var structLength = structure.byteSize() / 4 | 0;
	var pos = iron_data_ConstData.skydomePos;
	var nor = iron_data_ConstData.skydomeNor;
	iron_data_ConstData.skydomeVB = new kha_graphics4_VertexBuffer(pos.length / 3 | 0,structure,0);
	var vertices = iron_data_ConstData.skydomeVB.lock();
	var _g = 0;
	var _g1 = vertices.length / structLength | 0;
	while(_g < _g1) {
		var i = _g++;
		vertices[i * structLength] = pos[i * 3];
		vertices[i * structLength + 1] = pos[i * 3 + 1];
		vertices[i * structLength + 2] = pos[i * 3 + 2];
		vertices[i * structLength + 3] = -nor[i * 3];
		vertices[i * structLength + 4] = -nor[i * 3 + 1];
		vertices[i * structLength + 5] = -nor[i * 3 + 2];
	}
	iron_data_ConstData.skydomeVB.unlock();
	var indices = iron_data_ConstData.skydomeIndices;
	iron_data_ConstData.skydomeIB = new kha_graphics4_IndexBuffer(indices.length,0);
	var id = iron_data_ConstData.skydomeIB.lock();
	var _g2 = 0;
	var _g3 = id.length;
	while(_g2 < _g3) {
		var i1 = _g2++;
		id[i1] = indices[i1];
	}
	iron_data_ConstData.skydomeIB.unlock();
};
var iron_data_Geometry = function(data,indices,materialIndices,positions,normals,uvs,uvs1,cols,tangents,bones,weights,usage) {
	this.mats = null;
	this.actions = null;
	this.skeletonBoneLens = null;
	this.skeletonBoneRefs = null;
	this.skeletonTransformsI = null;
	this.skinBoneWeights = null;
	this.skinBoneIndices = null;
	this.skinBoneCounts = null;
	this.instanceCount = 0;
	this.instanced = false;
	this.instancedVB = null;
	this.numTris = 0;
	this.ready = false;
	this.name = "";
	this.count = -1;
	this.start = 0;
	this.vertexBufferMap = new haxe_ds_StringMap();
	if(usage == null) {
		usage = 0;
	}
	this.indices = indices;
	this.materialIndices = materialIndices;
	this.usage = usage;
	this.positions = positions;
	this.normals = normals;
	this.uvs = uvs;
	this.uvs1 = uvs1;
	this.cols = cols;
	this.tangents = tangents;
	this.bones = bones;
	this.weights = weights;
	this.data = data;
	this.struct = iron_data_Geometry.getVertexStructure(positions != null,normals != null,uvs != null,uvs1 != null,cols != null,tangents != null,bones != null,weights != null);
	this.structLength = this.struct.byteSize() / 2 | 0;
	this.structStr = "";
	var _g = 0;
	var _g1 = this.struct.elements;
	while(_g < _g1.length) {
		var e = _g1[_g];
		++_g;
		this.structStr += e.name;
	}
};
$hxClasses["iron.data.Geometry"] = iron_data_Geometry;
iron_data_Geometry.__name__ = "iron.data.Geometry";
iron_data_Geometry.getVertexStructure = function(pos,nor,tex,tex1,col,tang,bone,weight) {
	if(weight == null) {
		weight = false;
	}
	if(bone == null) {
		bone = false;
	}
	if(tang == null) {
		tang = false;
	}
	if(col == null) {
		col = false;
	}
	if(tex1 == null) {
		tex1 = false;
	}
	if(tex == null) {
		tex = false;
	}
	if(nor == null) {
		nor = false;
	}
	if(pos == null) {
		pos = false;
	}
	var structure = new kha_graphics4_VertexStructure();
	if(pos) {
		structure.add("pos",6);
	}
	if(nor) {
		structure.add("nor",5);
	}
	if(tex) {
		structure.add("tex",5);
	}
	if(tex1) {
		structure.add("tex1",5);
	}
	if(col) {
		structure.add("col",6);
	}
	if(tang) {
		structure.add("tang",6);
	}
	if(bone) {
		structure.add("bone",6);
	}
	if(weight) {
		structure.add("weight",6);
	}
	return structure;
};
iron_data_Geometry.buildVertices = function(vertices,pa,na,uva,uva1,ca,tanga,bonea,weighta,offset,fakeUVs) {
	if(fakeUVs == null) {
		fakeUVs = false;
	}
	if(offset == null) {
		offset = 0;
	}
	var numVertices = pa.length / 4 | 0;
	var di = -1 + offset;
	var _g = 0;
	var _g1 = numVertices;
	while(_g < _g1) {
		var i = _g++;
		vertices[++di] = pa[i * 4];
		vertices[++di] = pa[i * 4 + 1];
		vertices[++di] = pa[i * 4 + 2];
		vertices[++di] = pa[i * 4 + 3];
		if(na != null) {
			vertices[++di] = na[i * 2];
			vertices[++di] = na[i * 2 + 1];
		}
		if(uva != null) {
			vertices[++di] = uva[i * 2];
			vertices[++di] = uva[i * 2 + 1];
		} else if(fakeUVs) {
			vertices[++di] = 0;
			vertices[++di] = 0;
		}
		if(uva1 != null) {
			vertices[++di] = uva1[i * 2];
			vertices[++di] = uva1[i * 2 + 1];
		}
		if(ca != null) {
			vertices[++di] = ca[i * 3];
			vertices[++di] = ca[i * 3 + 1];
			vertices[++di] = ca[i * 3 + 2];
			vertices[++di] = 0;
		}
		if(tanga != null) {
			vertices[++di] = tanga[i * 3];
			vertices[++di] = tanga[i * 3 + 1];
			vertices[++di] = tanga[i * 3 + 2];
			vertices[++di] = 0;
		}
		if(bonea != null) {
			vertices[++di] = bonea[i * 4];
			vertices[++di] = bonea[i * 4 + 1];
			vertices[++di] = bonea[i * 4 + 2];
			vertices[++di] = bonea[i * 4 + 3];
		}
		if(weighta != null) {
			vertices[++di] = weighta[i * 4];
			vertices[++di] = weighta[i * 4 + 1];
			vertices[++di] = weighta[i * 4 + 2];
			vertices[++di] = weighta[i * 4 + 3];
		}
	}
};
iron_data_Geometry.prototype = {
	applyScale: function(sx,sy,sz) {
		this.data.scalePos *= sx;
	}
	,setupInstanced: function(data,instancedType,usage) {
		var structure = new kha_graphics4_VertexStructure();
		structure.instanced = true;
		this.instanced = true;
		structure.add("ipos",2);
		if(instancedType == 2 || instancedType == 4) {
			structure.add("irot",2);
		}
		if(instancedType == 3 || instancedType == 4) {
			structure.add("iscl",2);
		}
		this.instanceCount = data.length / (structure.byteSize() / 4 | 0) | 0;
		this.instancedVB = new kha_graphics4_VertexBuffer(this.instanceCount,structure,usage,1);
		var vertices = this.instancedVB.lock();
		var _g = 0;
		var _g1 = vertices.length;
		while(_g < _g1) {
			var i = _g++;
			vertices[i] = data[i];
		}
		this.instancedVB.unlock();
	}
	,hasAttrib: function(s,vs) {
		var _g = 0;
		while(_g < vs.length) {
			var e = vs[_g];
			++_g;
			if(e.name == s) {
				return true;
			}
		}
		return false;
	}
	,get: function(vs) {
		var s = "";
		var _g = 0;
		while(_g < vs.length) {
			var e = vs[_g];
			++_g;
			s += e.name;
		}
		var _this = this.vertexBufferMap;
		var vb = __map_reserved[s] != null ? _this.getReserved(s) : _this.h[s];
		if(vb == null) {
			var apos = this.hasAttrib("pos",vs);
			var anor = this.hasAttrib("nor",vs);
			var atex = this.hasAttrib("tex",vs);
			var atex1 = this.hasAttrib("tex1",vs);
			var acol = this.hasAttrib("col",vs);
			var atang = this.hasAttrib("tang",vs);
			var abone = this.hasAttrib("bone",vs);
			var aweight = this.hasAttrib("weight",vs);
			var struct = iron_data_Geometry.getVertexStructure(apos,anor,atex,atex1,acol,atang,abone,aweight);
			vb = new kha_graphics4_VertexBuffer(this.positions.length / 4 | 0,struct,this.usage);
			this.vertices = vb.lockInt16();
			iron_data_Geometry.buildVertices(this.vertices,apos ? this.positions : null,anor ? this.normals : null,atex ? this.uvs : null,atex1 ? this.uvs1 : null,acol ? this.cols : null,atang ? this.tangents : null,abone ? this.bones : null,aweight ? this.weights : null,0,atex && this.uvs == null);
			vb.unlock();
			var _this1 = this.vertexBufferMap;
			if(__map_reserved[s] != null) {
				_this1.setReserved(s,vb);
			} else {
				_this1.h[s] = vb;
			}
			if(atex && this.uvs == null) {
				haxe_Log.trace("Armory Warning: Geometry " + this.name + " is missing UV map",{ fileName : "Sources/iron/data/Geometry.hx", lineNumber : 321, className : "iron.data.Geometry", methodName : "get"});
			}
			if(acol && this.cols == null) {
				haxe_Log.trace("Armory Warning: Geometry " + this.name + " is missing vertex colors",{ fileName : "Sources/iron/data/Geometry.hx", lineNumber : 322, className : "iron.data.Geometry", methodName : "get"});
			}
		}
		return vb;
	}
	,build: function() {
		if(this.ready) {
			return;
		}
		this.vertexBuffer = new kha_graphics4_VertexBuffer(this.positions.length / 4 | 0,this.struct,this.usage);
		this.vertices = this.vertexBuffer.lockInt16();
		iron_data_Geometry.buildVertices(this.vertices,this.positions,this.normals,this.uvs,this.uvs1,this.cols,this.tangents,this.bones,this.weights);
		this.vertexBuffer.unlock();
		var key = this.structStr;
		var value = this.vertexBuffer;
		var _this = this.vertexBufferMap;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,value);
		} else {
			_this.h[key] = value;
		}
		this.indexBuffers = [];
		var _g = 0;
		var _g1 = this.indices;
		while(_g < _g1.length) {
			var id = _g1[_g];
			++_g;
			if(id.length == 0) {
				continue;
			}
			var indexBuffer = new kha_graphics4_IndexBuffer(id.length,this.usage);
			this.numTris += id.length / 3 | 0;
			var indicesA = indexBuffer.lock();
			var _g2 = 0;
			var _g11 = indicesA.length;
			while(_g2 < _g11) {
				var i = _g2++;
				indicesA[i] = id[i];
			}
			indexBuffer.unlock();
			this.indexBuffers.push(indexBuffer);
		}
		if(this.data.raw.instanced_data != null) {
			this.setupInstanced(this.data.raw.instanced_data,this.data.raw.instanced_type,this.usage);
		}
		this.ready = true;
	}
	,addArmature: function(armature) {
		var _g = 0;
		var _g1 = armature.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			this.addAction(a.bones,a.name);
		}
	}
	,addAction: function(bones,name) {
		if(bones == null) {
			return;
		}
		if(this.actions == null) {
			this.actions = new haxe_ds_StringMap();
			this.mats = new haxe_ds_StringMap();
		}
		var _this = this.actions;
		if((__map_reserved[name] != null ? _this.getReserved(name) : _this.h[name]) != null) {
			return;
		}
		var actionBones = [];
		var _g = 0;
		var _g1 = this.skeletonBoneRefs;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var _g2 = 0;
			while(_g2 < bones.length) {
				var b = bones[_g2];
				++_g2;
				if(b.name == s) {
					actionBones.push(b);
				}
			}
		}
		var _this1 = this.actions;
		if(__map_reserved[name] != null) {
			_this1.setReserved(name,actionBones);
		} else {
			_this1.h[name] = actionBones;
		}
		var actionMats = [];
		var _g21 = 0;
		while(_g21 < actionBones.length) {
			var b1 = actionBones[_g21];
			++_g21;
			var a = b1.transform.values;
			actionMats.push(new iron_math_Mat4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]));
		}
		var _this2 = this.mats;
		if(__map_reserved[name] != null) {
			_this2.setReserved(name,actionMats);
		} else {
			_this2.h[name] = actionMats;
		}
	}
	,initSkeletonTransforms: function(transformsI) {
		this.skeletonTransformsI = [];
		var _g = 0;
		while(_g < transformsI.length) {
			var t = transformsI[_g];
			++_g;
			var mi = new iron_math_Mat4(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15]);
			this.skeletonTransformsI.push(mi);
		}
	}
	,__class__: iron_data_Geometry
};
var iron_data_LightData = function(raw,done) {
	this.colorTexture = null;
	var _gthis = this;
	this.raw = raw;
	this.name = raw.name;
	if(raw.color_texture != null) {
		iron_data_Data.getImage(raw.color_texture,function(image) {
			_gthis.colorTexture = image;
			done(_gthis);
		});
	} else {
		done(this);
	}
};
$hxClasses["iron.data.LightData"] = iron_data_LightData;
iron_data_LightData.__name__ = "iron.data.LightData";
iron_data_LightData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getLightRawByName(format.light_datas,id);
		if(raw == null) {
			haxe_Log.trace("Light data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/LightData.hx", lineNumber : 40, className : "iron.data.LightData", methodName : "parse"});
			done(null);
		}
		new iron_data_LightData(raw,done);
	});
};
iron_data_LightData.prototype = {
	__class__: iron_data_LightData
};
var iron_data_MaterialData = function(raw,done,file) {
	if(file == null) {
		file = "";
	}
	this.contexts = null;
	var _gthis = this;
	this.uid = ++iron_data_MaterialData.uidCounter;
	this.raw = raw;
	this.name = raw.name;
	var ref = raw.shader.split("/");
	var object_file = "";
	var data_ref = "";
	if(ref.length == 2) {
		object_file = ref[0];
		data_ref = ref[1];
	} else {
		object_file = file;
		data_ref = raw.shader;
	}
	iron_data_Data.getShader(object_file,data_ref,function(b) {
		_gthis.shader = b;
		_gthis.contexts = [];
		while(_gthis.contexts.length < raw.contexts.length) _gthis.contexts.push(null);
		var contextsLoaded = 0;
		var _g = 0;
		var _g1 = raw.contexts.length;
		while(_g < _g1) {
			var i = [_g++];
			var c = raw.contexts[i[0]];
			new iron_data_MaterialContext(c,(function(i1) {
				return function(self) {
					_gthis.contexts[i1[0]] = self;
					contextsLoaded += 1;
					if(contextsLoaded == raw.contexts.length) {
						done(_gthis);
					}
				};
			})(i));
		}
	},raw.override_context);
};
$hxClasses["iron.data.MaterialData"] = iron_data_MaterialData;
iron_data_MaterialData.__name__ = "iron.data.MaterialData";
iron_data_MaterialData.parse = function(file,name,done) {
	iron_data_Data.getSceneRaw(file,function(format) {
		var raw = iron_data_Data.getMaterialRawByName(format.material_datas,name);
		if(raw == null) {
			haxe_Log.trace("Material data \"" + name + "\" not found!",{ fileName : "Sources/iron/data/MaterialData.hx", lineNumber : 58, className : "iron.data.MaterialData", methodName : "parse"});
			done(null);
		}
		new iron_data_MaterialData(raw,done,file);
	});
};
iron_data_MaterialData.prototype = {
	getContext: function(name) {
		var _g = 0;
		var _g1 = this.contexts;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(HxOverrides.substr(c.raw.name,0,name.length) == name) {
				return c;
			}
		}
		return null;
	}
	,__class__: iron_data_MaterialData
};
var iron_data_MaterialContext = function(raw,done) {
	this.id = 0;
	this.textures = null;
	var _gthis = this;
	this.raw = raw;
	this.id = iron_data_MaterialContext.num++;
	if(raw.bind_textures != null && raw.bind_textures.length > 0) {
		var this1 = new Array(raw.bind_textures.length);
		this.textures = this1;
		var texturesLoaded = 0;
		var _g = 0;
		var _g1 = raw.bind_textures.length;
		while(_g < _g1) {
			var i = [_g++];
			var tex = [raw.bind_textures[i[0]]];
			if(tex[0].file == "" || tex[0].source == "movie") {
				texturesLoaded += 1;
				if(texturesLoaded == raw.bind_textures.length) {
					done(this);
				}
				continue;
			}
			iron_data_Data.getImage(tex[0].file,(function(tex1,i1) {
				return function(image) {
					_gthis.textures[i1[0]] = image;
					texturesLoaded += 1;
					if(tex1[0].mipmaps != null) {
						var mipmaps = [];
						while(mipmaps.length < tex1[0].mipmaps.length) mipmaps.push(null);
						var mipmapsLoaded = 0;
						var _g2 = 0;
						var _g11 = tex1[0].mipmaps.length;
						while(_g2 < _g11) {
							var j = [_g2++];
							var name = tex1[0].mipmaps[j[0]];
							iron_data_Data.getImage(name,(function(j1,tex2) {
								return function(mipimg) {
									mipmaps[j1[0]] = mipimg;
									mipmapsLoaded += 1;
									if(mipmapsLoaded == tex2[0].mipmaps.length) {
										image.setMipmaps(mipmaps);
										tex2[0].mipmaps = null;
										tex2[0].generate_mipmaps = false;
										if(texturesLoaded == raw.bind_textures.length) {
											done(_gthis);
										}
									}
								};
							})(j,tex1));
						}
					} else if(tex1[0].generate_mipmaps == true && image != null) {
						image.generateMipmaps(1000);
						tex1[0].mipmaps = null;
						tex1[0].generate_mipmaps = false;
						if(texturesLoaded == raw.bind_textures.length) {
							done(_gthis);
						}
					} else if(texturesLoaded == raw.bind_textures.length) {
						done(_gthis);
					}
				};
			})(tex,i),false,tex[0].format != null ? tex[0].format : "RGBA32");
		}
	} else {
		done(this);
	}
};
$hxClasses["iron.data.MaterialContext"] = iron_data_MaterialContext;
iron_data_MaterialContext.__name__ = "iron.data.MaterialContext";
iron_data_MaterialContext.prototype = {
	setTextureParameters: function(g,textureIndex,context,unitIndex) {
		context.setTextureParameters(g,unitIndex,this.raw.bind_textures[textureIndex]);
	}
	,__class__: iron_data_MaterialContext
};
var iron_data_MeshData = function(raw,done) {
	this.scaleTex = 1.0;
	this.scalePos = 1.0;
	this.refcount = 0;
	this.raw = raw;
	this.name = raw.name;
	if(raw.scale_pos != null) {
		this.scalePos = raw.scale_pos;
	}
	if(raw.scale_tex != null) {
		this.scaleTex = raw.scale_tex;
	}
	var indices = [];
	var materialIndices = [];
	var _g = 0;
	var _g1 = raw.index_arrays;
	while(_g < _g1.length) {
		var ind = _g1[_g];
		++_g;
		indices.push(ind.values);
		materialIndices.push(ind.material);
	}
	var pa = this.getVertexArrayValues("pos");
	var na = this.getVertexArrayValues("nor");
	var uva = this.getVertexArrayValues("tex");
	var uva1 = this.getVertexArrayValues("tex1");
	var ca = this.getVertexArrayValues("col");
	var tanga = this.getVertexArrayValues("tang");
	this.isSkinned = raw.skin != null;
	var parsedUsage = 0;
	if(raw.dynamic_usage != null && raw.dynamic_usage == true) {
		parsedUsage = 1;
	}
	var usage = parsedUsage;
	var bonea = null;
	var weighta = null;
	if(this.isSkinned) {
		var l = (pa.length / 4 | 0) * 4;
		var this1 = new Int16Array(l);
		bonea = this1;
		var this2 = new Int16Array(l);
		weighta = this2;
		var index = 0;
		var ai = 0;
		var _g2 = 0;
		var _g3 = pa.length / 4 | 0;
		while(_g2 < _g3) {
			var i = _g2++;
			var boneCount = raw.skin.bone_count_array[i];
			var _g21 = index;
			var _g31 = index + boneCount;
			while(_g21 < _g31) {
				var j = _g21++;
				bonea[ai] = raw.skin.bone_index_array[j];
				weighta[ai] = raw.skin.bone_weight_array[j];
				++ai;
			}
			var _g4 = boneCount;
			var _g5 = 4;
			while(_g4 < _g5) {
				var j1 = _g4++;
				bonea[ai] = 0;
				weighta[ai] = 0;
				++ai;
			}
			index += boneCount;
		}
	}
	this.geom = new iron_data_Geometry(this,indices,materialIndices,pa,na,uva,uva1,ca,tanga,bonea,weighta,usage);
	this.geom.name = this.name;
	done(this);
};
$hxClasses["iron.data.MeshData"] = iron_data_MeshData;
iron_data_MeshData.__name__ = "iron.data.MeshData";
iron_data_MeshData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getMeshRawByName(format.mesh_datas,id);
		if(raw == null) {
			haxe_Log.trace("Mesh data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/MeshData.hx", lineNumber : 104, className : "iron.data.MeshData", methodName : "parse"});
			done(null);
		}
		new iron_data_MeshData(raw,function(dat) {
			dat.format = format;
			if(raw.skin != null) {
				dat.geom.skinBoneCounts = raw.skin.bone_count_array;
				dat.geom.skinBoneIndices = raw.skin.bone_index_array;
				dat.geom.skinBoneWeights = raw.skin.bone_weight_array;
				dat.geom.skeletonBoneRefs = raw.skin.bone_ref_array;
				dat.geom.skeletonBoneLens = raw.skin.bone_len_array;
				dat.geom.initSkeletonTransforms(raw.skin.transformsI);
			}
			done(dat);
		});
	});
};
iron_data_MeshData.prototype = {
	getVertexArrayValues: function(attrib) {
		var _g = 0;
		var _g1 = this.raw.vertex_arrays;
		while(_g < _g1.length) {
			var va = _g1[_g];
			++_g;
			if(va.attrib == attrib) {
				return va.values;
			}
		}
		return null;
	}
	,__class__: iron_data_MeshData
};
var iron_data_ParticleData = function(raw,done) {
	this.raw = raw;
	this.name = raw.name;
	done(this);
};
$hxClasses["iron.data.ParticleData"] = iron_data_ParticleData;
iron_data_ParticleData.__name__ = "iron.data.ParticleData";
iron_data_ParticleData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getParticleRawByName(format.particle_datas,id);
		if(raw == null) {
			haxe_Log.trace("Particle data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/ParticleData.hx", lineNumber : 21, className : "iron.data.ParticleData", methodName : "parse"});
			done(null);
		}
		new iron_data_ParticleData(raw,done);
	});
};
iron_data_ParticleData.prototype = {
	__class__: iron_data_ParticleData
};
var iron_data_ShaderData = function(raw,done,overrideContext) {
	this.contexts = [];
	var _gthis = this;
	this.raw = raw;
	this.name = raw.name;
	var _g = 0;
	var _g1 = raw.contexts;
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		this.contexts.push(null);
	}
	var contextsLoaded = 0;
	var _g2 = 0;
	var _g3 = raw.contexts.length;
	while(_g2 < _g3) {
		var i = [_g2++];
		var c1 = raw.contexts[i[0]];
		new iron_data_ShaderContext(c1,(function(i1) {
			return function(con) {
				_gthis.contexts[i1[0]] = con;
				contextsLoaded += 1;
				if(contextsLoaded == raw.contexts.length) {
					done(_gthis);
				}
			};
		})(i),overrideContext);
	}
};
$hxClasses["iron.data.ShaderData"] = iron_data_ShaderData;
iron_data_ShaderData.__name__ = "iron.data.ShaderData";
iron_data_ShaderData.parse = function(file,name,done,overrideContext) {
	iron_data_Data.getSceneRaw(file,function(format) {
		var raw = iron_data_Data.getShaderRawByName(format.shader_datas,name);
		if(raw == null) {
			haxe_Log.trace("Shader data \"" + name + "\" not found!",{ fileName : "Sources/iron/data/ShaderData.hx", lineNumber : 47, className : "iron.data.ShaderData", methodName : "parse"});
			done(null);
		}
		new iron_data_ShaderData(raw,done,overrideContext);
	});
};
iron_data_ShaderData.prototype = {
	getContext: function(name) {
		var _g = 0;
		var _g1 = this.contexts;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.raw.name == name) {
				return c;
			}
		}
		return null;
	}
	,__class__: iron_data_ShaderData
};
var iron_data_ShaderContext = function(raw,done,overrideContext) {
	this.instancingType = 0;
	this.raw = raw;
	this.overrideContext = overrideContext;
	this.parseVertexStructure();
	this.compile(done);
};
$hxClasses["iron.data.ShaderContext"] = iron_data_ShaderContext;
iron_data_ShaderContext.__name__ = "iron.data.ShaderContext";
iron_data_ShaderContext.parseData = function(data) {
	if(data == "float1") {
		return 0;
	} else if(data == "float2") {
		return 1;
	} else if(data == "float3") {
		return 2;
	} else if(data == "float4") {
		return 3;
	} else if(data == "short2norm") {
		return 5;
	} else if(data == "short4norm") {
		return 6;
	}
	return 0;
};
iron_data_ShaderContext.prototype = {
	compile: function(done) {
		if(this.pipeState != null) {
			this.pipeState["delete"]();
		}
		this.pipeState = new kha_graphics4_PipelineState();
		this.constants = [];
		this.textureUnits = [];
		if(this.instancingType > 0) {
			var instStruct = new kha_graphics4_VertexStructure();
			instStruct.add("ipos",2);
			if(this.instancingType == 2 || this.instancingType == 4) {
				instStruct.add("irot",2);
			}
			if(this.instancingType == 3 || this.instancingType == 4) {
				instStruct.add("iscl",2);
			}
			instStruct.instanced = true;
			this.pipeState.inputLayout = [this.structure,instStruct];
		} else {
			this.pipeState.inputLayout = [this.structure];
		}
		this.pipeState.depthWrite = this.raw.depth_write;
		this.pipeState.depthMode = this.getCompareMode(this.raw.compare_mode);
		if(this.raw.stencil_mode != null) {
			if(this.raw.stencil_mode == "always") {
				this.pipeState.stencilMode = 0;
			} else if(this.raw.stencil_mode == "equal") {
				this.pipeState.stencilMode = 2;
			} else if(this.raw.stencil_mode == "not_equal") {
				this.pipeState.stencilMode = 3;
			}
		}
		if(this.raw.stencil_pass != null) {
			if(this.raw.stencil_pass == "replace") {
				this.pipeState.stencilBothPass = 2;
			} else if(this.raw.stencil_pass == "keep") {
				this.pipeState.stencilBothPass = 0;
			}
		}
		if(this.raw.stencil_fail != null && this.raw.stencil_fail == "keep") {
			this.pipeState.stencilDepthFail = 0;
			this.pipeState.stencilFail = 0;
		}
		if(this.raw.stencil_reference_value != null) {
			this.pipeState.stencilReferenceValue = kha_graphics4_StencilValue.Static(this.raw.stencil_reference_value);
		}
		this.pipeState.cullMode = this.getCullMode(this.raw.cull_mode);
		if(this.raw.blend_source != null) {
			this.pipeState.blendSource = this.getBlendingFactor(this.raw.blend_source);
		}
		if(this.raw.blend_destination != null) {
			this.pipeState.blendDestination = this.getBlendingFactor(this.raw.blend_destination);
		}
		if(this.raw.blend_operation != null) {
			this.pipeState.blendOperation = this.getBlendingOperation(this.raw.blend_operation);
		}
		if(this.raw.alpha_blend_source != null) {
			this.pipeState.alphaBlendSource = this.getBlendingFactor(this.raw.alpha_blend_source);
		}
		if(this.raw.alpha_blend_destination != null) {
			this.pipeState.alphaBlendDestination = this.getBlendingFactor(this.raw.alpha_blend_destination);
		}
		if(this.raw.alpha_blend_operation != null) {
			this.pipeState.alphaBlendOperation = this.getBlendingOperation(this.raw.alpha_blend_operation);
		}
		if(this.raw.color_write_red != null) {
			this.pipeState.colorWriteMasksRed[0] = this.raw.color_write_red;
		}
		if(this.raw.color_write_green != null) {
			this.pipeState.colorWriteMasksGreen[0] = this.raw.color_write_green;
		}
		if(this.raw.color_write_blue != null) {
			this.pipeState.colorWriteMasksBlue[0] = this.raw.color_write_blue;
		}
		if(this.raw.color_write_alpha != null) {
			this.pipeState.colorWriteMasksAlpha[0] = this.raw.color_write_alpha;
		}
		if(this.raw.color_writes_red != null) {
			var _g = 0;
			var _g1 = this.raw.color_writes_red.length;
			while(_g < _g1) {
				var i = _g++;
				this.pipeState.colorWriteMasksRed[i] = this.raw.color_writes_red[i];
			}
		}
		if(this.raw.color_writes_green != null) {
			var _g2 = 0;
			var _g11 = this.raw.color_writes_green.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				this.pipeState.colorWriteMasksGreen[i1] = this.raw.color_writes_green[i1];
			}
		}
		if(this.raw.color_writes_blue != null) {
			var _g3 = 0;
			var _g12 = this.raw.color_writes_blue.length;
			while(_g3 < _g12) {
				var i2 = _g3++;
				this.pipeState.colorWriteMasksBlue[i2] = this.raw.color_writes_blue[i2];
			}
		}
		if(this.raw.color_writes_alpha != null) {
			var _g4 = 0;
			var _g13 = this.raw.color_writes_alpha.length;
			while(_g4 < _g13) {
				var i3 = _g4++;
				this.pipeState.colorWriteMasksAlpha[i3] = this.raw.color_writes_alpha[i3];
			}
		}
		if(this.raw.conservative_raster != null) {
			this.pipeState.conservativeRasterization = this.raw.conservative_raster;
		}
		if(this.raw.shader_from_source) {
			this.pipeState.vertexShader = kha_graphics4_VertexShader.fromSource(this.raw.vertex_shader);
			this.pipeState.fragmentShader = kha_graphics4_FragmentShader.fromSource(this.raw.fragment_shader);
			this.finishCompile(done);
		} else {
			var tmp = StringTools.replace(this.raw.fragment_shader,".","_");
			this.pipeState.fragmentShader = Reflect.field(kha_Shaders,tmp);
			var tmp1 = StringTools.replace(this.raw.vertex_shader,".","_");
			this.pipeState.vertexShader = Reflect.field(kha_Shaders,tmp1);
			if(this.raw.geometry_shader != null) {
				var tmp2 = StringTools.replace(this.raw.geometry_shader,".","_");
				this.pipeState.geometryShader = Reflect.field(kha_Shaders,tmp2);
			}
			if(this.raw.tesscontrol_shader != null) {
				var tmp3 = StringTools.replace(this.raw.tesscontrol_shader,".","_");
				this.pipeState.tessellationControlShader = Reflect.field(kha_Shaders,tmp3);
			}
			if(this.raw.tesseval_shader != null) {
				var tmp4 = StringTools.replace(this.raw.tesseval_shader,".","_");
				this.pipeState.tessellationEvaluationShader = Reflect.field(kha_Shaders,tmp4);
			}
			this.finishCompile(done);
		}
	}
	,finishCompile: function(done) {
		if(this.overrideContext != null) {
			if(this.overrideContext.cull_mode != null) {
				this.pipeState.cullMode = this.getCullMode(this.overrideContext.cull_mode);
			}
		}
		this.pipeState.compile();
		if(this.raw.constants != null) {
			var _g = 0;
			var _g1 = this.raw.constants;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				this.addConstant(c);
			}
		}
		if(this.raw.texture_units != null) {
			var _g2 = 0;
			var _g11 = this.raw.texture_units;
			while(_g2 < _g11.length) {
				var tu = _g11[_g2];
				++_g2;
				this.addTexture(tu);
			}
		}
		done(this);
	}
	,parseVertexStructure: function() {
		this.structure = new kha_graphics4_VertexStructure();
		var ipos = false;
		var irot = false;
		var iscl = false;
		var _g = 0;
		var _g1 = this.raw.vertex_elements;
		while(_g < _g1.length) {
			var elem = _g1[_g];
			++_g;
			if(elem.name == "ipos") {
				ipos = true;
				continue;
			}
			if(elem.name == "irot") {
				irot = true;
				continue;
			}
			if(elem.name == "iscl") {
				iscl = true;
				continue;
			}
			this.structure.add(elem.name,iron_data_ShaderContext.parseData(elem.data));
		}
		if(ipos && !irot && !iscl) {
			this.instancingType = 1;
		} else if(ipos && irot && !iscl) {
			this.instancingType = 2;
		} else if(ipos && !irot && iscl) {
			this.instancingType = 3;
		} else if(ipos && irot && iscl) {
			this.instancingType = 4;
		}
	}
	,getCompareMode: function(s) {
		switch(s) {
		case "always":
			return 0;
		case "equal":
			return 2;
		case "greater":
			return 6;
		case "greater_equal":
			return 7;
		case "less":
			return 4;
		case "less_equal":
			return 5;
		case "never":
			return 1;
		case "not_equal":
			return 3;
		default:
			return 4;
		}
	}
	,getCullMode: function(s) {
		switch(s) {
		case "clockwise":
			return 0;
		case "none":
			return 2;
		default:
			return 1;
		}
	}
	,getBlendingOperation: function(s) {
		switch(s) {
		case "add":
			return 0;
		case "max":
			return 4;
		case "min":
			return 3;
		case "reverse_subtract":
			return 2;
		case "subtract":
			return 1;
		default:
			return 0;
		}
	}
	,getBlendingFactor: function(s) {
		switch(s) {
		case "blend_one":
			return 1;
		case "blend_zero":
			return 2;
		case "destination_alpha":
			return 4;
		case "destination_color":
			return 8;
		case "inverse_destination_alpha":
			return 6;
		case "inverse_destination_color":
			return 10;
		case "inverse_source_alpha":
			return 5;
		case "inverse_source_color":
			return 9;
		case "source_alpha":
			return 3;
		case "source_color":
			return 7;
		default:
			return 0;
		}
	}
	,getTextureAddresing: function(s) {
		switch(s) {
		case "mirror":
			return 1;
		case "repeat":
			return 0;
		default:
			return 2;
		}
	}
	,getTextureFilter: function(s) {
		switch(s) {
		case "linear":
			return 1;
		case "point":
			return 0;
		default:
			return 2;
		}
	}
	,getMipmapFilter: function(s) {
		switch(s) {
		case "no":
			return 0;
		case "point":
			return 1;
		default:
			return 2;
		}
	}
	,addConstant: function(c) {
		this.constants.push(this.pipeState.getConstantLocation(c.name));
	}
	,addTexture: function(tu) {
		var unit = this.pipeState.getTextureUnit(tu.name);
		this.textureUnits.push(unit);
	}
	,setTextureParameters: function(g,unitIndex,tex) {
		var unit = this.textureUnits[unitIndex];
		g.setTextureParameters(unit,tex.u_addressing == null ? 0 : this.getTextureAddresing(tex.u_addressing),tex.v_addressing == null ? 0 : this.getTextureAddresing(tex.v_addressing),tex.min_filter == null ? 1 : this.getTextureFilter(tex.min_filter),tex.mag_filter == null ? 1 : this.getTextureFilter(tex.mag_filter),tex.mipmap_filter == null ? 0 : this.getMipmapFilter(tex.mipmap_filter));
	}
	,__class__: iron_data_ShaderContext
};
var iron_data_WorldData = function(raw,done) {
	var _gthis = this;
	this.raw = raw;
	this.name = raw.name;
	if(raw.probe != null) {
		new iron_data_Probe(raw.probe,function(self) {
			_gthis.probe = self;
			_gthis.loadEnvmap(done);
		});
	} else {
		this.loadEnvmap(done);
	}
};
$hxClasses["iron.data.WorldData"] = iron_data_WorldData;
iron_data_WorldData.__name__ = "iron.data.WorldData";
iron_data_WorldData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getWorldRawByName(format.world_datas,id);
		if(raw == null) {
			haxe_Log.trace("World data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/WorldData.hx", lineNumber : 45, className : "iron.data.WorldData", methodName : "parse"});
			done(null);
		}
		new iron_data_WorldData(raw,done);
	});
};
iron_data_WorldData.getEmptyIrradiance = function() {
	if(iron_data_WorldData.emptyIrr == null) {
		var this1 = new Float32Array(28);
		iron_data_WorldData.emptyIrr = this1;
		var _g = 0;
		var _g1 = iron_data_WorldData.emptyIrr.length;
		while(_g < _g1) {
			var i = _g++;
			iron_data_WorldData.emptyIrr[i] = 0.0;
		}
	}
	return iron_data_WorldData.emptyIrr;
};
iron_data_WorldData.prototype = {
	loadEnvmap: function(done) {
		var _gthis = this;
		if(this.raw.envmap != null) {
			iron_data_Data.getImage(this.raw.envmap,function(image) {
				_gthis.envmap = image;
				done(_gthis);
			});
		} else {
			done(this);
		}
	}
	,__class__: iron_data_WorldData
};
var iron_data_Probe = function(raw,done) {
	this.radianceMipmaps = [];
	var _gthis = this;
	this.raw = raw;
	this.setIrradiance(function(irr) {
		_gthis.irradiance = irr;
		if(raw.radiance != null) {
			iron_data_Data.getImage(raw.radiance,function(rad) {
				_gthis.radiance = rad;
				while(_gthis.radianceMipmaps.length < raw.radiance_mipmaps) _gthis.radianceMipmaps.push(null);
				var ext = raw.radiance.substring(raw.radiance.length - 4);
				var base = raw.radiance.substring(0,raw.radiance.length - 4);
				var mipsLoaded = 0;
				var _g = 0;
				var _g1 = raw.radiance_mipmaps;
				while(_g < _g1) {
					var i = [_g++];
					iron_data_Data.getImage(base + "_" + i[0] + ext,(function(i1) {
						return function(mipimg) {
							_gthis.radianceMipmaps[i1[0]] = mipimg;
							mipsLoaded += 1;
							if(mipsLoaded == raw.radiance_mipmaps) {
								_gthis.radiance.setMipmaps(_gthis.radianceMipmaps);
								done(_gthis);
							}
						};
					})(i),true);
				}
			});
		} else {
			done(_gthis);
		}
	});
};
$hxClasses["iron.data.Probe"] = iron_data_Probe;
iron_data_Probe.__name__ = "iron.data.Probe";
iron_data_Probe.prototype = {
	setIrradiance: function(done) {
		if(this.raw.irradiance == null) {
			var ar = [0.775966,1.167610,1.498638,0.133694,0.215281,0.056659,-0.022268,-0.019376,-0.010651,0.000279,0.000185,0.0,0.0,-0.000393,-0.000775,0.010973,0.027268,0.043918,0.085267,0.073670,0.038877,0.0,0.0,0.0,0.135177,0.115614,0.060794];
			var this1 = new Float32Array(ar.length);
			var far = this1;
			var _g = 0;
			var _g1 = far.length;
			while(_g < _g1) {
				var i = _g++;
				far[i] = ar[i];
			}
			done(far);
		} else {
			var ext = StringTools.endsWith(this.raw.irradiance,".json") ? "" : ".arm";
			iron_data_Data.getBlob(this.raw.irradiance + ext,function(b) {
				var irradianceParsed;
				if(ext == "") {
					irradianceParsed = JSON.parse(b.toString());
				} else {
					var i1 = new haxe_io_BytesInput(b.toBytes());
					i1.set_bigEndian(false);
					irradianceParsed = iron_system_ArmPack.read(i1);
				}
				var this2 = new Float32Array(28);
				var irr = this2;
				irr[0] = irradianceParsed.irradiance[0];
				irr[1] = irradianceParsed.irradiance[1];
				irr[2] = irradianceParsed.irradiance[2];
				irr[3] = irradianceParsed.irradiance[3];
				irr[4] = irradianceParsed.irradiance[4];
				irr[5] = irradianceParsed.irradiance[5];
				irr[6] = irradianceParsed.irradiance[6];
				irr[7] = irradianceParsed.irradiance[7];
				irr[8] = irradianceParsed.irradiance[8];
				irr[9] = irradianceParsed.irradiance[9];
				irr[10] = irradianceParsed.irradiance[10];
				irr[11] = irradianceParsed.irradiance[11];
				irr[12] = irradianceParsed.irradiance[12];
				irr[13] = irradianceParsed.irradiance[13];
				irr[14] = irradianceParsed.irradiance[14];
				irr[15] = irradianceParsed.irradiance[15];
				irr[16] = irradianceParsed.irradiance[16];
				irr[17] = irradianceParsed.irradiance[17];
				irr[18] = irradianceParsed.irradiance[18];
				irr[19] = irradianceParsed.irradiance[19];
				irr[20] = irradianceParsed.irradiance[20];
				irr[21] = irradianceParsed.irradiance[21];
				irr[22] = irradianceParsed.irradiance[22];
				irr[23] = irradianceParsed.irradiance[23];
				irr[24] = irradianceParsed.irradiance[24];
				irr[25] = irradianceParsed.irradiance[25];
				irr[26] = irradianceParsed.irradiance[26];
				irr[27] = 0.0;
				done(irr);
			});
		}
	}
	,__class__: iron_data_Probe
};
var iron_math_Mat3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this.self = new kha_math_FastMatrix3(_00,_10,_20,_01,_11,_21,_02,_12,_22);
};
$hxClasses["iron.math.Mat3"] = iron_math_Mat3;
iron_math_Mat3.__name__ = "iron.math.Mat3";
iron_math_Mat3.prototype = {
	__class__: iron_math_Mat3
};
var iron_math_Math = function() { };
$hxClasses["iron.math.Math"] = iron_math_Math;
iron_math_Math.__name__ = "iron.math.Math";
iron_math_Math.roundfp = function(f,precision) {
	if(precision == null) {
		precision = 2;
	}
	f *= Math.pow(10,precision);
	return Math.round(f) / Math.pow(10,precision);
};
var iron_math_RayCaster = function() { };
$hxClasses["iron.math.RayCaster"] = iron_math_RayCaster;
iron_math_RayCaster.__name__ = "iron.math.RayCaster";
iron_math_RayCaster.getDirection = function(start,end,inputX,inputY,camera) {
	start.x = inputX / kha_System.windowWidth() * 2.0 - 1.0;
	start.y = -(inputY / kha_System.windowHeight() * 2.0 - 1.0);
	start.z = -1.0;
	end.x = start.x;
	end.y = start.y;
	end.z = 1.0;
	var _this = iron_math_RayCaster.PInv;
	var m = camera.P;
	var a00 = m.self._00;
	var a01 = m.self._01;
	var a02 = m.self._02;
	var a03 = m.self._03;
	var a10 = m.self._10;
	var a11 = m.self._11;
	var a12 = m.self._12;
	var a13 = m.self._13;
	var a20 = m.self._20;
	var a21 = m.self._21;
	var a22 = m.self._22;
	var a23 = m.self._23;
	var a30 = m.self._30;
	var a31 = m.self._31;
	var a32 = m.self._32;
	var a33 = m.self._33;
	var b00 = a00 * a11 - a01 * a10;
	var b01 = a00 * a12 - a02 * a10;
	var b02 = a00 * a13 - a03 * a10;
	var b03 = a01 * a12 - a02 * a11;
	var b04 = a01 * a13 - a03 * a11;
	var b05 = a02 * a13 - a03 * a12;
	var b06 = a20 * a31 - a21 * a30;
	var b07 = a20 * a32 - a22 * a30;
	var b08 = a20 * a33 - a23 * a30;
	var b09 = a21 * a32 - a22 * a31;
	var b10 = a21 * a33 - a23 * a31;
	var b11 = a22 * a33 - a23 * a32;
	var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
	if(det == 0.0) {
		_this.self._00 = 1.0;
		_this.self._01 = 0.0;
		_this.self._02 = 0.0;
		_this.self._03 = 0.0;
		_this.self._10 = 0.0;
		_this.self._11 = 1.0;
		_this.self._12 = 0.0;
		_this.self._13 = 0.0;
		_this.self._20 = 0.0;
		_this.self._21 = 0.0;
		_this.self._22 = 1.0;
		_this.self._23 = 0.0;
		_this.self._30 = 0.0;
		_this.self._31 = 0.0;
		_this.self._32 = 0.0;
		_this.self._33 = 1.0;
	} else {
		det = 1.0 / det;
		_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
		_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
		_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
		_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
		_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
		_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
		_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
		_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
		_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
		_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
		_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
		_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
		_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
		_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
		_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
		_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
	}
	var _this1 = iron_math_RayCaster.VInv;
	var m1 = camera.V;
	var a001 = m1.self._00;
	var a011 = m1.self._01;
	var a021 = m1.self._02;
	var a031 = m1.self._03;
	var a101 = m1.self._10;
	var a111 = m1.self._11;
	var a121 = m1.self._12;
	var a131 = m1.self._13;
	var a201 = m1.self._20;
	var a211 = m1.self._21;
	var a221 = m1.self._22;
	var a231 = m1.self._23;
	var a301 = m1.self._30;
	var a311 = m1.self._31;
	var a321 = m1.self._32;
	var a331 = m1.self._33;
	var b001 = a001 * a111 - a011 * a101;
	var b011 = a001 * a121 - a021 * a101;
	var b021 = a001 * a131 - a031 * a101;
	var b031 = a011 * a121 - a021 * a111;
	var b041 = a011 * a131 - a031 * a111;
	var b051 = a021 * a131 - a031 * a121;
	var b061 = a201 * a311 - a211 * a301;
	var b071 = a201 * a321 - a221 * a301;
	var b081 = a201 * a331 - a231 * a301;
	var b091 = a211 * a321 - a221 * a311;
	var b101 = a211 * a331 - a231 * a311;
	var b111 = a221 * a331 - a231 * a321;
	var det1 = b001 * b111 - b011 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
	if(det1 == 0.0) {
		_this1.self._00 = 1.0;
		_this1.self._01 = 0.0;
		_this1.self._02 = 0.0;
		_this1.self._03 = 0.0;
		_this1.self._10 = 0.0;
		_this1.self._11 = 1.0;
		_this1.self._12 = 0.0;
		_this1.self._13 = 0.0;
		_this1.self._20 = 0.0;
		_this1.self._21 = 0.0;
		_this1.self._22 = 1.0;
		_this1.self._23 = 0.0;
		_this1.self._30 = 0.0;
		_this1.self._31 = 0.0;
		_this1.self._32 = 0.0;
		_this1.self._33 = 1.0;
	} else {
		det1 = 1.0 / det1;
		_this1.self._00 = (a111 * b111 - a121 * b101 + a131 * b091) * det1;
		_this1.self._01 = (a021 * b101 - a011 * b111 - a031 * b091) * det1;
		_this1.self._02 = (a311 * b051 - a321 * b041 + a331 * b031) * det1;
		_this1.self._03 = (a221 * b041 - a211 * b051 - a231 * b031) * det1;
		_this1.self._10 = (a121 * b081 - a101 * b111 - a131 * b071) * det1;
		_this1.self._11 = (a001 * b111 - a021 * b081 + a031 * b071) * det1;
		_this1.self._12 = (a321 * b021 - a301 * b051 - a331 * b011) * det1;
		_this1.self._13 = (a201 * b051 - a221 * b021 + a231 * b011) * det1;
		_this1.self._20 = (a101 * b101 - a111 * b081 + a131 * b061) * det1;
		_this1.self._21 = (a011 * b081 - a001 * b101 - a031 * b061) * det1;
		_this1.self._22 = (a301 * b041 - a311 * b021 + a331 * b001) * det1;
		_this1.self._23 = (a211 * b021 - a201 * b041 - a231 * b001) * det1;
		_this1.self._30 = (a111 * b071 - a101 * b091 - a121 * b061) * det1;
		_this1.self._31 = (a001 * b091 - a011 * b071 + a021 * b061) * det1;
		_this1.self._32 = (a311 * b011 - a301 * b031 - a321 * b001) * det1;
		_this1.self._33 = (a201 * b031 - a211 * b011 + a221 * b001) * det1;
	}
	var _this2 = iron_math_RayCaster.VPInv;
	var b = iron_math_RayCaster.VInv;
	var a = iron_math_RayCaster.PInv;
	var a002 = a.self._00;
	var a012 = a.self._01;
	var a022 = a.self._02;
	var a032 = a.self._03;
	var a102 = a.self._10;
	var a112 = a.self._11;
	var a122 = a.self._12;
	var a132 = a.self._13;
	var a202 = a.self._20;
	var a212 = a.self._21;
	var a222 = a.self._22;
	var a232 = a.self._23;
	var a302 = a.self._30;
	var a312 = a.self._31;
	var a322 = a.self._32;
	var a332 = a.self._33;
	var b0 = b.self._00;
	var b1 = b.self._10;
	var b2 = b.self._20;
	var b3 = b.self._30;
	_this2.self._00 = a002 * b0 + a012 * b1 + a022 * b2 + a032 * b3;
	_this2.self._10 = a102 * b0 + a112 * b1 + a122 * b2 + a132 * b3;
	_this2.self._20 = a202 * b0 + a212 * b1 + a222 * b2 + a232 * b3;
	_this2.self._30 = a302 * b0 + a312 * b1 + a322 * b2 + a332 * b3;
	b0 = b.self._01;
	b1 = b.self._11;
	b2 = b.self._21;
	b3 = b.self._31;
	_this2.self._01 = a002 * b0 + a012 * b1 + a022 * b2 + a032 * b3;
	_this2.self._11 = a102 * b0 + a112 * b1 + a122 * b2 + a132 * b3;
	_this2.self._21 = a202 * b0 + a212 * b1 + a222 * b2 + a232 * b3;
	_this2.self._31 = a302 * b0 + a312 * b1 + a322 * b2 + a332 * b3;
	b0 = b.self._02;
	b1 = b.self._12;
	b2 = b.self._22;
	b3 = b.self._32;
	_this2.self._02 = a002 * b0 + a012 * b1 + a022 * b2 + a032 * b3;
	_this2.self._12 = a102 * b0 + a112 * b1 + a122 * b2 + a132 * b3;
	_this2.self._22 = a202 * b0 + a212 * b1 + a222 * b2 + a232 * b3;
	_this2.self._32 = a302 * b0 + a312 * b1 + a322 * b2 + a332 * b3;
	b0 = b.self._03;
	b1 = b.self._13;
	b2 = b.self._23;
	b3 = b.self._33;
	_this2.self._03 = a002 * b0 + a012 * b1 + a022 * b2 + a032 * b3;
	_this2.self._13 = a102 * b0 + a112 * b1 + a122 * b2 + a132 * b3;
	_this2.self._23 = a202 * b0 + a212 * b1 + a222 * b2 + a232 * b3;
	_this2.self._33 = a302 * b0 + a312 * b1 + a322 * b2 + a332 * b3;
	var m2 = iron_math_RayCaster.VPInv;
	var x = start.x;
	var y = start.y;
	var z = start.z;
	var d = 1.0 / (m2.self._03 * x + m2.self._13 * y + m2.self._23 * z + m2.self._33);
	start.x = (m2.self._00 * x + m2.self._10 * y + m2.self._20 * z + m2.self._30) * d;
	start.y = (m2.self._01 * x + m2.self._11 * y + m2.self._21 * z + m2.self._31) * d;
	start.z = (m2.self._02 * x + m2.self._12 * y + m2.self._22 * z + m2.self._32) * d;
	var m3 = iron_math_RayCaster.VPInv;
	var x1 = end.x;
	var y1 = end.y;
	var z1 = end.z;
	var d1 = 1.0 / (m3.self._03 * x1 + m3.self._13 * y1 + m3.self._23 * z1 + m3.self._33);
	end.x = (m3.self._00 * x1 + m3.self._10 * y1 + m3.self._20 * z1 + m3.self._30) * d1;
	end.y = (m3.self._01 * x1 + m3.self._11 * y1 + m3.self._21 * z1 + m3.self._31) * d1;
	end.z = (m3.self._02 * x1 + m3.self._12 * y1 + m3.self._22 * z1 + m3.self._32) * d1;
};
var iron_object_Animation = function() {
	this.markerEvents = null;
	this.lastFrameIndex = -1;
	this.blendFactor = 0.0;
	this.blendAction = "";
	this.blendCurrent = 0.0;
	this.blendTime = 0.0;
	this.paused = false;
	this.onComplete = null;
	this.frameIndex = 0;
	this.loop = true;
	this.speed = 1.0;
	this.time = 0.0;
	this.action = "";
	iron_Scene.active.animations.push(this);
	this.frameTime = iron_Scene.active.raw.frame_time;
	this.play();
};
$hxClasses["iron.object.Animation"] = iron_object_Animation;
iron_object_Animation.__name__ = "iron.object.Animation";
iron_object_Animation.beginProfile = function() {
	iron_object_Animation.startTime = kha_Scheduler.realTime();
};
iron_object_Animation.endProfile = function() {
	iron_object_Animation.animationTime += kha_Scheduler.realTime() - iron_object_Animation.startTime;
};
iron_object_Animation.endFrame = function() {
	iron_object_Animation.animationTime = 0;
};
iron_object_Animation.prototype = {
	play: function(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.0;
		}
		if(action == null) {
			action = "";
		}
		if(blendTime > 0) {
			this.blendTime = blendTime;
			this.blendCurrent = 0.0;
			this.blendAction = this.action;
		} else {
			this.frameIndex = -1;
		}
		this.action = action;
		this.onComplete = onComplete;
		this.speed = speed;
		this.loop = loop;
		this.paused = false;
	}
	,remove: function() {
		HxOverrides.remove(iron_Scene.active.animations,this);
	}
	,update: function(delta) {
		if(this.paused || this.speed == 0.0) {
			return;
		}
		this.time += delta * this.speed;
		if(this.blendTime > 0 && this.blendFactor == 0) {
			this.blendCurrent += delta;
			if(this.blendCurrent >= this.blendTime) {
				this.blendTime = 0.0;
			}
		}
	}
	,isTrackEnd: function(track) {
		if(this.speed > 0) {
			return this.frameIndex >= track.frames.length - 1;
		} else {
			return this.frameIndex <= 0;
		}
	}
	,rewind: function(track) {
		this.frameIndex = this.speed > 0 ? 0 : track.frames.length - 1;
		this.time = track.frames[this.frameIndex] * this.frameTime;
	}
	,updateTrack: function(anim) {
		if(anim == null) {
			return;
		}
		var track = anim.tracks[0];
		if(this.frameIndex == -1) {
			this.rewind(track);
		}
		var sign = this.speed > 0 ? 1 : -1;
		while(true) {
			var frameValues = track.frames;
			if(!(this.speed > 0 ? this.frameIndex + 1 < frameValues.length && this.time > frameValues[this.frameIndex + 1] * this.frameTime : this.frameIndex - 1 > -1 && this.time < frameValues[this.frameIndex - 1] * this.frameTime)) {
				break;
			}
			this.frameIndex += sign;
		}
		if(this.markerEvents != null && anim.marker_names != null && this.frameIndex != this.lastFrameIndex) {
			var _g = 0;
			var _g1 = anim.marker_frames.length;
			while(_g < _g1) {
				var i = _g++;
				if(this.frameIndex == anim.marker_frames[i]) {
					var key = anim.marker_names[i];
					var _this = this.markerEvents;
					var ar = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
					var _g2 = 0;
					while(_g2 < ar.length) {
						var f = ar[_g2];
						++_g2;
						f();
					}
				}
			}
			this.lastFrameIndex = this.frameIndex;
		}
		if(this.isTrackEnd(track)) {
			if(this.loop || this.blendTime > 0) {
				this.rewind(track);
			} else {
				this.frameIndex -= sign;
				this.paused = true;
			}
			if(this.onComplete != null && this.blendTime == 0) {
				this.onComplete();
			}
		}
	}
	,updateAnimSampled: function(anim,m) {
		if(anim == null) {
			return;
		}
		var track = anim.tracks[0];
		var sign = this.speed > 0 ? 1 : -1;
		var t = this.time;
		var ti = this.frameIndex;
		var t1 = track.frames[ti] * this.frameTime;
		var t2 = track.frames[ti + sign] * this.frameTime;
		var s = (t - t1) / (t2 - t1);
		var _this = iron_object_Animation.m1;
		var a = track.values;
		var offset = ti * 16;
		_this.self._00 = a[offset];
		_this.self._10 = a[1 + offset];
		_this.self._20 = a[2 + offset];
		_this.self._30 = a[3 + offset];
		_this.self._01 = a[4 + offset];
		_this.self._11 = a[5 + offset];
		_this.self._21 = a[6 + offset];
		_this.self._31 = a[7 + offset];
		_this.self._02 = a[8 + offset];
		_this.self._12 = a[9 + offset];
		_this.self._22 = a[10 + offset];
		_this.self._32 = a[11 + offset];
		_this.self._03 = a[12 + offset];
		_this.self._13 = a[13 + offset];
		_this.self._23 = a[14 + offset];
		_this.self._33 = a[15 + offset];
		var _this1 = iron_object_Animation.m2;
		var a1 = track.values;
		var offset1 = (ti + sign) * 16;
		_this1.self._00 = a1[offset1];
		_this1.self._10 = a1[1 + offset1];
		_this1.self._20 = a1[2 + offset1];
		_this1.self._30 = a1[3 + offset1];
		_this1.self._01 = a1[4 + offset1];
		_this1.self._11 = a1[5 + offset1];
		_this1.self._21 = a1[6 + offset1];
		_this1.self._31 = a1[7 + offset1];
		_this1.self._02 = a1[8 + offset1];
		_this1.self._12 = a1[9 + offset1];
		_this1.self._22 = a1[10 + offset1];
		_this1.self._32 = a1[11 + offset1];
		_this1.self._03 = a1[12 + offset1];
		_this1.self._13 = a1[13 + offset1];
		_this1.self._23 = a1[14 + offset1];
		_this1.self._33 = a1[15 + offset1];
		var _this2 = iron_object_Animation.m1;
		var loc = iron_object_Animation.vpos;
		var quat = iron_object_Animation.q1;
		var scale = iron_object_Animation.vscl;
		loc.x = _this2.self._30;
		loc.y = _this2.self._31;
		loc.z = _this2.self._32;
		var _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this2.self._00;
		_this3.y = _this2.self._01;
		_this3.z = _this2.self._02;
		_this3.w = 1.0;
		var _this4 = _this3;
		scale.x = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		var _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this2.self._10;
		_this5.y = _this2.self._11;
		_this5.z = _this2.self._12;
		_this5.w = 1.0;
		var _this6 = _this5;
		scale.y = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		var _this7 = iron_math_Mat4.helpVec;
		_this7.x = _this2.self._20;
		_this7.y = _this2.self._21;
		_this7.z = _this2.self._22;
		_this7.w = 1.0;
		var _this8 = _this7;
		scale.z = Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
		var _this9 = _this2.self;
		var m3 = _this9._12;
		var m4 = _this9._22;
		var m5 = _this9._32;
		var m6 = _this9._13;
		var m7 = _this9._23;
		var m8 = _this9._33;
		var c00 = _this9._11 * (m4 * m8 - m5 * m7) - _this9._21 * (m3 * m8 - m5 * m6) + _this9._31 * (m3 * m7 - m4 * m6);
		var m31 = _this9._12;
		var m41 = _this9._22;
		var m51 = _this9._32;
		var m61 = _this9._13;
		var m71 = _this9._23;
		var m81 = _this9._33;
		var c01 = _this9._10 * (m41 * m81 - m51 * m71) - _this9._20 * (m31 * m81 - m51 * m61) + _this9._30 * (m31 * m71 - m41 * m61);
		var m32 = _this9._11;
		var m42 = _this9._21;
		var m52 = _this9._31;
		var m62 = _this9._13;
		var m72 = _this9._23;
		var m82 = _this9._33;
		var c02 = _this9._10 * (m42 * m82 - m52 * m72) - _this9._20 * (m32 * m82 - m52 * m62) + _this9._30 * (m32 * m72 - m42 * m62);
		var m33 = _this9._11;
		var m43 = _this9._21;
		var m53 = _this9._31;
		var m63 = _this9._12;
		var m73 = _this9._22;
		var m83 = _this9._32;
		var c03 = _this9._10 * (m43 * m83 - m53 * m73) - _this9._20 * (m33 * m83 - m53 * m63) + _this9._30 * (m33 * m73 - m43 * m63);
		if(_this9._00 * c00 - _this9._01 * c01 + _this9._02 * c02 - _this9._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		var invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this2.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this2.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this2.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this2.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this2.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this2.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this2.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this2.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this2.self._22 * invs;
		var m1 = iron_math_Mat4.helpMat;
		var m11 = m1.self._00;
		var m12 = m1.self._10;
		var m13 = m1.self._20;
		var m21 = m1.self._01;
		var m22 = m1.self._11;
		var m23 = m1.self._21;
		var m311 = m1.self._02;
		var m321 = m1.self._12;
		var m331 = m1.self._22;
		var tr = m11 + m22 + m331;
		var s1 = 0.0;
		if(tr > 0) {
			s1 = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s1;
			quat.x = (m321 - m23) * s1;
			quat.y = (m13 - m311) * s1;
			quat.z = (m21 - m12) * s1;
		} else if(m11 > m22 && m11 > m331) {
			s1 = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s1;
			quat.x = 0.25 * s1;
			quat.y = (m12 + m21) / s1;
			quat.z = (m13 + m311) / s1;
		} else if(m22 > m331) {
			s1 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s1;
			quat.x = (m12 + m21) / s1;
			quat.y = 0.25 * s1;
			quat.z = (m23 + m321) / s1;
		} else {
			s1 = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s1;
			quat.x = (m13 + m311) / s1;
			quat.y = (m23 + m321) / s1;
			quat.z = 0.25 * s1;
		}
		var _this10 = iron_object_Animation.m2;
		var loc1 = iron_object_Animation.vpos2;
		var quat1 = iron_object_Animation.q2;
		var scale1 = iron_object_Animation.vscl2;
		loc1.x = _this10.self._30;
		loc1.y = _this10.self._31;
		loc1.z = _this10.self._32;
		var _this11 = iron_math_Mat4.helpVec;
		_this11.x = _this10.self._00;
		_this11.y = _this10.self._01;
		_this11.z = _this10.self._02;
		_this11.w = 1.0;
		var _this12 = _this11;
		scale1.x = Math.sqrt(_this12.x * _this12.x + _this12.y * _this12.y + _this12.z * _this12.z);
		var _this13 = iron_math_Mat4.helpVec;
		_this13.x = _this10.self._10;
		_this13.y = _this10.self._11;
		_this13.z = _this10.self._12;
		_this13.w = 1.0;
		var _this14 = _this13;
		scale1.y = Math.sqrt(_this14.x * _this14.x + _this14.y * _this14.y + _this14.z * _this14.z);
		var _this15 = iron_math_Mat4.helpVec;
		_this15.x = _this10.self._20;
		_this15.y = _this10.self._21;
		_this15.z = _this10.self._22;
		_this15.w = 1.0;
		var _this16 = _this15;
		scale1.z = Math.sqrt(_this16.x * _this16.x + _this16.y * _this16.y + _this16.z * _this16.z);
		var _this17 = _this10.self;
		var m34 = _this17._12;
		var m44 = _this17._22;
		var m54 = _this17._32;
		var m64 = _this17._13;
		var m74 = _this17._23;
		var m84 = _this17._33;
		var c001 = _this17._11 * (m44 * m84 - m54 * m74) - _this17._21 * (m34 * m84 - m54 * m64) + _this17._31 * (m34 * m74 - m44 * m64);
		var m35 = _this17._12;
		var m45 = _this17._22;
		var m55 = _this17._32;
		var m65 = _this17._13;
		var m75 = _this17._23;
		var m85 = _this17._33;
		var c011 = _this17._10 * (m45 * m85 - m55 * m75) - _this17._20 * (m35 * m85 - m55 * m65) + _this17._30 * (m35 * m75 - m45 * m65);
		var m36 = _this17._11;
		var m46 = _this17._21;
		var m56 = _this17._31;
		var m66 = _this17._13;
		var m76 = _this17._23;
		var m86 = _this17._33;
		var c021 = _this17._10 * (m46 * m86 - m56 * m76) - _this17._20 * (m36 * m86 - m56 * m66) + _this17._30 * (m36 * m76 - m46 * m66);
		var m37 = _this17._11;
		var m47 = _this17._21;
		var m57 = _this17._31;
		var m67 = _this17._12;
		var m77 = _this17._22;
		var m87 = _this17._32;
		var c031 = _this17._10 * (m47 * m87 - m57 * m77) - _this17._20 * (m37 * m87 - m57 * m67) + _this17._30 * (m37 * m77 - m47 * m67);
		if(_this17._00 * c001 - _this17._01 * c011 + _this17._02 * c021 - _this17._03 * c031 < 0.0) {
			scale1.x = -scale1.x;
		}
		var invs1 = 1.0 / scale1.x;
		iron_math_Mat4.helpMat.self._00 = _this10.self._00 * invs1;
		iron_math_Mat4.helpMat.self._01 = _this10.self._01 * invs1;
		iron_math_Mat4.helpMat.self._02 = _this10.self._02 * invs1;
		invs1 = 1.0 / scale1.y;
		iron_math_Mat4.helpMat.self._10 = _this10.self._10 * invs1;
		iron_math_Mat4.helpMat.self._11 = _this10.self._11 * invs1;
		iron_math_Mat4.helpMat.self._12 = _this10.self._12 * invs1;
		invs1 = 1.0 / scale1.z;
		iron_math_Mat4.helpMat.self._20 = _this10.self._20 * invs1;
		iron_math_Mat4.helpMat.self._21 = _this10.self._21 * invs1;
		iron_math_Mat4.helpMat.self._22 = _this10.self._22 * invs1;
		var m2 = iron_math_Mat4.helpMat;
		var m111 = m2.self._00;
		var m121 = m2.self._10;
		var m131 = m2.self._20;
		var m211 = m2.self._01;
		var m221 = m2.self._11;
		var m231 = m2.self._21;
		var m312 = m2.self._02;
		var m322 = m2.self._12;
		var m332 = m2.self._22;
		var tr1 = m111 + m221 + m332;
		var s2 = 0.0;
		if(tr1 > 0) {
			s2 = 0.5 / Math.sqrt(tr1 + 1.0);
			quat1.w = 0.25 / s2;
			quat1.x = (m322 - m231) * s2;
			quat1.y = (m131 - m312) * s2;
			quat1.z = (m211 - m121) * s2;
		} else if(m111 > m221 && m111 > m332) {
			s2 = 2.0 * Math.sqrt(1.0 + m111 - m221 - m332);
			quat1.w = (m322 - m231) / s2;
			quat1.x = 0.25 * s2;
			quat1.y = (m121 + m211) / s2;
			quat1.z = (m131 + m312) / s2;
		} else if(m221 > m332) {
			s2 = 2.0 * Math.sqrt(1.0 + m221 - m111 - m332);
			quat1.w = (m131 - m312) / s2;
			quat1.x = (m121 + m211) / s2;
			quat1.y = 0.25 * s2;
			quat1.z = (m231 + m322) / s2;
		} else {
			s2 = 2.0 * Math.sqrt(1.0 + m332 - m111 - m221);
			quat1.w = (m211 - m121) / s2;
			quat1.x = (m131 + m312) / s2;
			quat1.y = (m231 + m322) / s2;
			quat1.z = 0.25 * s2;
		}
		var _this18 = iron_object_Animation.vp;
		var from = iron_object_Animation.vpos;
		var to = iron_object_Animation.vpos2;
		_this18.x = from.x + (to.x - from.x) * s;
		_this18.y = from.y + (to.y - from.y) * s;
		_this18.z = from.z + (to.z - from.z) * s;
		var _this19 = iron_object_Animation.vs;
		var from1 = iron_object_Animation.vscl;
		var to1 = iron_object_Animation.vscl2;
		_this19.x = from1.x + (to1.x - from1.x) * s;
		_this19.y = from1.y + (to1.y - from1.y) * s;
		_this19.z = from1.z + (to1.z - from1.z) * s;
		var _this20 = iron_object_Animation.q3;
		var from2 = iron_object_Animation.q1;
		var to2 = iron_object_Animation.q2;
		var fromx = from2.x;
		var fromy = from2.y;
		var fromz = from2.z;
		var fromw = from2.w;
		var dot = from2.x * to2.x + from2.y * to2.y + from2.z * to2.z + from2.w * to2.w;
		if(dot < 0.0) {
			fromx = -fromx;
			fromy = -fromy;
			fromz = -fromz;
			fromw = -fromw;
		}
		_this20.x = fromx + (to2.x - fromx) * s;
		_this20.y = fromy + (to2.y - fromy) * s;
		_this20.z = fromz + (to2.z - fromz) * s;
		_this20.w = fromw + (to2.w - fromw) * s;
		var l = Math.sqrt(_this20.x * _this20.x + _this20.y * _this20.y + _this20.z * _this20.z + _this20.w * _this20.w);
		if(l == 0.0) {
			_this20.x = 0;
			_this20.y = 0;
			_this20.z = 0;
			_this20.w = 0;
		} else {
			l = 1.0 / l;
			_this20.x *= l;
			_this20.y *= l;
			_this20.z *= l;
			_this20.w *= l;
		}
		var q = iron_object_Animation.q3;
		var x = q.x;
		var y = q.y;
		var z = q.z;
		var w = q.w;
		var x2 = x + x;
		var y2 = y + y;
		var z2 = z + z;
		var xx = x * x2;
		var xy = x * y2;
		var xz = x * z2;
		var yy = y * y2;
		var yz = y * z2;
		var zz = z * z2;
		var wx = w * x2;
		var wy = w * y2;
		var wz = w * z2;
		m.self._00 = 1.0 - (yy + zz);
		m.self._10 = xy - wz;
		m.self._20 = xz + wy;
		m.self._01 = xy + wz;
		m.self._11 = 1.0 - (xx + zz);
		m.self._21 = yz - wx;
		m.self._02 = xz - wy;
		m.self._12 = yz + wx;
		m.self._22 = 1.0 - (xx + yy);
		m.self._03 = 0.0;
		m.self._13 = 0.0;
		m.self._23 = 0.0;
		m.self._30 = 0.0;
		m.self._31 = 0.0;
		m.self._32 = 0.0;
		m.self._33 = 1.0;
		var v = iron_object_Animation.vs;
		var x1 = v.x;
		var y1 = v.y;
		var z1 = v.z;
		m.self._00 *= x1;
		m.self._01 *= x1;
		m.self._02 *= x1;
		m.self._03 *= x1;
		m.self._10 *= y1;
		m.self._11 *= y1;
		m.self._12 *= y1;
		m.self._13 *= y1;
		m.self._20 *= z1;
		m.self._21 *= z1;
		m.self._22 *= z1;
		m.self._23 *= z1;
		m.self._30 = iron_object_Animation.vp.x;
		m.self._31 = iron_object_Animation.vp.y;
		m.self._32 = iron_object_Animation.vp.z;
	}
	,__class__: iron_object_Animation
};
var iron_object_BoneAnimation = function(armatureName) {
	if(armatureName == null) {
		armatureName = "";
	}
	this.onUpdates = null;
	this.constraintMats = null;
	this.constraintTargetsI = null;
	this.constraintTargets = null;
	this.boneChildren = null;
	this.matsFastBlendSort = [];
	this.matsFastBlend = [];
	this.matsFastSort = [];
	this.matsFast = [];
	this.applyParent = null;
	this.absMats = null;
	this.skeletonMatsBlend = null;
	this.skeletonBonesBlend = null;
	this.skeletonMats = null;
	this.skeletonBones = null;
	iron_object_Animation.call(this);
	this.isSampled = false;
	var _g = 0;
	var _g1 = iron_Scene.active.armatures;
	while(_g < _g1.length) {
		var a = _g1[_g];
		++_g;
		if(a.name == armatureName) {
			this.armature = a;
			break;
		}
	}
};
$hxClasses["iron.object.BoneAnimation"] = iron_object_BoneAnimation;
iron_object_BoneAnimation.__name__ = "iron.object.BoneAnimation";
iron_object_BoneAnimation.__super__ = iron_object_Animation;
iron_object_BoneAnimation.prototype = $extend(iron_object_Animation.prototype,{
	setSkin: function(mo) {
		var _gthis = this;
		this.object = mo;
		this.data = mo != null ? mo.data : null;
		this.isSkinned = this.data != null && this.data.isSkinned;
		if(this.isSkinned) {
			var boneSize = 8;
			var this1 = new Float32Array(iron_object_BoneAnimation.skinMaxBones * boneSize);
			this.skinBuffer = this1;
			var _g = 0;
			var _g1 = this.skinBuffer.length;
			while(_g < _g1) {
				var i = _g++;
				this.skinBuffer[i] = 0;
			}
			var _this = this.object.transform.rot;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1;
			this.object.transform.buildMatrix();
			var refs = mo.parent.raw.bone_actions;
			if(refs != null && refs.length > 0) {
				iron_data_Data.getSceneRaw(refs[0],function(action) {
					_gthis.play(action.name);
				});
			}
		}
	}
	,addBoneChild: function(bone,o) {
		if(this.boneChildren == null) {
			this.boneChildren = new haxe_ds_StringMap();
		}
		var _this = this.boneChildren;
		var ar = __map_reserved[bone] != null ? _this.getReserved(bone) : _this.h[bone];
		if(ar == null) {
			ar = [];
			var _this1 = this.boneChildren;
			if(__map_reserved[bone] != null) {
				_this1.setReserved(bone,ar);
			} else {
				_this1.h[bone] = ar;
			}
		}
		ar.push(o);
	}
	,updateBoneChildren: function(bone,bm) {
		var key = bone.name;
		var _this = this.boneChildren;
		var ar = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(ar == null) {
			return;
		}
		var _g = 0;
		while(_g < ar.length) {
			var o = ar[_g];
			++_g;
			var t = o.transform;
			if(t.boneParent == null) {
				t.boneParent = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
			}
			if(o.raw.parent_bone_tail != null) {
				if(o.raw.parent_bone_connected || this.isSkinned) {
					var v = o.raw.parent_bone_tail;
					var _this1 = t.boneParent;
					_this1.self._00 = 1.0;
					_this1.self._01 = 0.0;
					_this1.self._02 = 0.0;
					_this1.self._03 = 0.0;
					_this1.self._10 = 0.0;
					_this1.self._11 = 1.0;
					_this1.self._12 = 0.0;
					_this1.self._13 = 0.0;
					_this1.self._20 = 0.0;
					_this1.self._21 = 0.0;
					_this1.self._22 = 1.0;
					_this1.self._23 = 0.0;
					_this1.self._30 = v[0];
					_this1.self._31 = v[1];
					_this1.self._32 = v[2];
					_this1.self._33 = 1.0;
					var _this2 = t.boneParent;
					var a00 = _this2.self._00;
					var a01 = _this2.self._01;
					var a02 = _this2.self._02;
					var a03 = _this2.self._03;
					var a10 = _this2.self._10;
					var a11 = _this2.self._11;
					var a12 = _this2.self._12;
					var a13 = _this2.self._13;
					var a20 = _this2.self._20;
					var a21 = _this2.self._21;
					var a22 = _this2.self._22;
					var a23 = _this2.self._23;
					var a30 = _this2.self._30;
					var a31 = _this2.self._31;
					var a32 = _this2.self._32;
					var a33 = _this2.self._33;
					var b0 = bm.self._00;
					var b1 = bm.self._10;
					var b2 = bm.self._20;
					var b3 = bm.self._30;
					_this2.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this2.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this2.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this2.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = bm.self._01;
					b1 = bm.self._11;
					b2 = bm.self._21;
					b3 = bm.self._31;
					_this2.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this2.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this2.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this2.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = bm.self._02;
					b1 = bm.self._12;
					b2 = bm.self._22;
					b3 = bm.self._32;
					_this2.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this2.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this2.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this2.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = bm.self._03;
					b1 = bm.self._13;
					b2 = bm.self._23;
					b3 = bm.self._33;
					_this2.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this2.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this2.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this2.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				} else {
					var v1 = o.raw.parent_bone_tail_pose;
					var _this3 = t.boneParent;
					_this3.self._00 = bm.self._00;
					_this3.self._01 = bm.self._01;
					_this3.self._02 = bm.self._02;
					_this3.self._03 = bm.self._03;
					_this3.self._10 = bm.self._10;
					_this3.self._11 = bm.self._11;
					_this3.self._12 = bm.self._12;
					_this3.self._13 = bm.self._13;
					_this3.self._20 = bm.self._20;
					_this3.self._21 = bm.self._21;
					_this3.self._22 = bm.self._22;
					_this3.self._23 = bm.self._23;
					_this3.self._30 = bm.self._30;
					_this3.self._31 = bm.self._31;
					_this3.self._32 = bm.self._32;
					_this3.self._33 = bm.self._33;
					var _this4 = t.boneParent;
					var x = v1[0];
					var y = v1[1];
					var z = v1[2];
					_this4.self._00 += x * _this4.self._03;
					_this4.self._01 += y * _this4.self._03;
					_this4.self._02 += z * _this4.self._03;
					_this4.self._10 += x * _this4.self._13;
					_this4.self._11 += y * _this4.self._13;
					_this4.self._12 += z * _this4.self._13;
					_this4.self._20 += x * _this4.self._23;
					_this4.self._21 += y * _this4.self._23;
					_this4.self._22 += z * _this4.self._23;
					_this4.self._30 += x * _this4.self._33;
					_this4.self._31 += y * _this4.self._33;
					_this4.self._32 += z * _this4.self._33;
				}
			} else {
				var _this5 = t.boneParent;
				_this5.self._00 = bm.self._00;
				_this5.self._01 = bm.self._01;
				_this5.self._02 = bm.self._02;
				_this5.self._03 = bm.self._03;
				_this5.self._10 = bm.self._10;
				_this5.self._11 = bm.self._11;
				_this5.self._12 = bm.self._12;
				_this5.self._13 = bm.self._13;
				_this5.self._20 = bm.self._20;
				_this5.self._21 = bm.self._21;
				_this5.self._22 = bm.self._22;
				_this5.self._23 = bm.self._23;
				_this5.self._30 = bm.self._30;
				_this5.self._31 = bm.self._31;
				_this5.self._32 = bm.self._32;
				_this5.self._33 = bm.self._33;
			}
			t.buildMatrix();
		}
	}
	,numParents: function(b) {
		var i = 0;
		var p = b.parent;
		while(p != null) {
			++i;
			p = p.parent;
		}
		return i;
	}
	,setMats: function() {
		var _gthis = this;
		while(this.matsFast.length < this.skeletonBones.length) {
			this.matsFast.push(new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0));
			this.matsFastSort.push(this.matsFastSort.length);
		}
		this.matsFastSort.sort(function(a,b) {
			var i = _gthis.numParents(_gthis.skeletonBones[a]);
			var j = _gthis.numParents(_gthis.skeletonBones[b]);
			if(i < j) {
				return -1;
			} else if(i > j) {
				return 1;
			} else {
				return 0;
			}
		});
		if(this.skeletonBonesBlend != null) {
			while(this.matsFastBlend.length < this.skeletonBonesBlend.length) {
				this.matsFastBlend.push(new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0));
				this.matsFastBlendSort.push(this.matsFastBlendSort.length);
			}
			this.matsFastBlendSort.sort(function(a1,b1) {
				var i1 = _gthis.numParents(_gthis.skeletonBonesBlend[a1]);
				var j1 = _gthis.numParents(_gthis.skeletonBonesBlend[b1]);
				if(i1 < j1) {
					return -1;
				} else if(i1 > j1) {
					return 1;
				} else {
					return 0;
				}
			});
		}
	}
	,setAction: function(action) {
		if(this.isSkinned) {
			var _this = this.data.geom.actions;
			this.skeletonBones = __map_reserved[action] != null ? _this.getReserved(action) : _this.h[action];
			var _this1 = this.data.geom.mats;
			this.skeletonMats = __map_reserved[action] != null ? _this1.getReserved(action) : _this1.h[action];
			this.skeletonBonesBlend = null;
			this.skeletonMatsBlend = null;
		} else {
			this.armature.initMats();
			var a = this.armature.getAction(action);
			this.skeletonBones = a.bones;
			this.skeletonMats = a.mats;
		}
		this.setMats();
	}
	,setActionBlend: function(action) {
		if(this.isSkinned) {
			this.skeletonBonesBlend = this.skeletonBones;
			this.skeletonMatsBlend = this.skeletonMats;
			var _this = this.data.geom.actions;
			this.skeletonBones = __map_reserved[action] != null ? _this.getReserved(action) : _this.h[action];
			var _this1 = this.data.geom.mats;
			this.skeletonMats = __map_reserved[action] != null ? _this1.getReserved(action) : _this1.h[action];
		} else {
			this.armature.initMats();
			var a = this.armature.getAction(action);
			this.skeletonBones = a.bones;
			this.skeletonMats = a.mats;
		}
		this.setMats();
	}
	,play: function(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.2;
		}
		if(action == null) {
			action = "";
		}
		iron_object_Animation.prototype.play.call(this,action,onComplete,blendTime,speed,loop);
		if(action != "") {
			if(blendTime > 0) {
				this.setActionBlend(action);
			} else {
				this.setAction(action);
			}
		}
		this.blendFactor = 0.0;
	}
	,update: function(delta) {
		if(!this.isSkinned && this.skeletonBones == null) {
			this.setAction(this.armature.actions[0].name);
		}
		if(this.object != null && (!this.object.visible || this.object.culled)) {
			return;
		}
		if(this.skeletonBones == null || this.skeletonBones.length == 0) {
			return;
		}
		iron_object_Animation.beginProfile();
		iron_object_Animation.prototype.update.call(this,delta);
		if(this.paused || this.speed == 0.0) {
			return;
		}
		var lastBones = this.skeletonBones;
		var _g = 0;
		var _g1 = this.skeletonBones;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.anim != null) {
				this.updateTrack(b.anim);
				break;
			}
		}
		if(lastBones != this.skeletonBones) {
			return;
		}
		var _g2 = 0;
		var _g3 = this.skeletonBones.length;
		while(_g2 < _g3) {
			var i = _g2++;
			this.updateAnimSampled(this.skeletonBones[i].anim,this.skeletonMats[i]);
		}
		if(this.blendTime > 0 && this.skeletonBonesBlend != null) {
			var _g4 = 0;
			var _g5 = this.skeletonBonesBlend;
			while(_g4 < _g5.length) {
				var b1 = _g5[_g4];
				++_g4;
				if(b1.anim != null) {
					this.updateTrack(b1.anim);
					break;
				}
			}
			var _g6 = 0;
			var _g7 = this.skeletonBonesBlend.length;
			while(_g6 < _g7) {
				var i1 = _g6++;
				this.updateAnimSampled(this.skeletonBonesBlend[i1].anim,this.skeletonMatsBlend[i1]);
			}
		}
		this.updateConstraints();
		if(this.onUpdates != null) {
			var _g41 = 0;
			var _g51 = this.onUpdates;
			while(_g41 < _g51.length) {
				var f = _g51[_g41];
				++_g41;
				f();
			}
		}
		var _g42 = 0;
		var _g52 = this.skeletonBones.length;
		while(_g42 < _g52) {
			var i2 = _g42++;
			this.multParent(this.matsFastSort[i2],this.matsFast,this.skeletonBones,this.skeletonMats);
		}
		if(this.skeletonBonesBlend != null) {
			var _g61 = 0;
			var _g71 = this.skeletonBonesBlend.length;
			while(_g61 < _g71) {
				var i3 = _g61++;
				this.multParent(this.matsFastBlendSort[i3],this.matsFastBlend,this.skeletonBonesBlend,this.skeletonMatsBlend);
			}
		}
		if(this.isSkinned) {
			this.updateSkinGpu();
		} else {
			this.updateBonesOnly();
		}
		iron_object_Animation.endProfile();
	}
	,multParent: function(i,fasts,bones,mats) {
		var f = fasts[i];
		if(this.applyParent != null && !this.applyParent[i]) {
			var m = mats[i];
			f.self._00 = m.self._00;
			f.self._01 = m.self._01;
			f.self._02 = m.self._02;
			f.self._03 = m.self._03;
			f.self._10 = m.self._10;
			f.self._11 = m.self._11;
			f.self._12 = m.self._12;
			f.self._13 = m.self._13;
			f.self._20 = m.self._20;
			f.self._21 = m.self._21;
			f.self._22 = m.self._22;
			f.self._23 = m.self._23;
			f.self._30 = m.self._30;
			f.self._31 = m.self._31;
			f.self._32 = m.self._32;
			f.self._33 = m.self._33;
			return;
		}
		var p = bones[i].parent;
		var bi = this.getBoneIndex(p,bones);
		if(p == null || bi == -1) {
			var m1 = mats[i];
			f.self._00 = m1.self._00;
			f.self._01 = m1.self._01;
			f.self._02 = m1.self._02;
			f.self._03 = m1.self._03;
			f.self._10 = m1.self._10;
			f.self._11 = m1.self._11;
			f.self._12 = m1.self._12;
			f.self._13 = m1.self._13;
			f.self._20 = m1.self._20;
			f.self._21 = m1.self._21;
			f.self._22 = m1.self._22;
			f.self._23 = m1.self._23;
			f.self._30 = m1.self._30;
			f.self._31 = m1.self._31;
			f.self._32 = m1.self._32;
			f.self._33 = m1.self._33;
		} else {
			var b = fasts[bi];
			var a = mats[i];
			var a00 = a.self._00;
			var a01 = a.self._01;
			var a02 = a.self._02;
			var a03 = a.self._03;
			var a10 = a.self._10;
			var a11 = a.self._11;
			var a12 = a.self._12;
			var a13 = a.self._13;
			var a20 = a.self._20;
			var a21 = a.self._21;
			var a22 = a.self._22;
			var a23 = a.self._23;
			var a30 = a.self._30;
			var a31 = a.self._31;
			var a32 = a.self._32;
			var a33 = a.self._33;
			var b0 = b.self._00;
			var b1 = b.self._10;
			var b2 = b.self._20;
			var b3 = b.self._30;
			f.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._01;
			b1 = b.self._11;
			b2 = b.self._21;
			b3 = b.self._31;
			f.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._02;
			b1 = b.self._12;
			b2 = b.self._22;
			b3 = b.self._32;
			f.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._03;
			b1 = b.self._13;
			b2 = b.self._23;
			b3 = b.self._33;
			f.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		}
	}
	,updateConstraints: function() {
		if(this.data == null) {
			return;
		}
		var cs = this.data.raw.skin.constraints;
		if(cs == null) {
			return;
		}
		if(this.constraintTargets == null) {
			this.constraintTargets = [];
			this.constraintTargetsI = [];
			var _g = 0;
			while(_g < cs.length) {
				var c = cs[_g];
				++_g;
				var o = iron_Scene.active.getChild(c.target);
				this.constraintTargets.push(o);
				var m = null;
				if(o != null) {
					var a = o.raw.transform.values;
					m = new iron_math_Mat4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]);
					var a00 = m.self._00;
					var a01 = m.self._01;
					var a02 = m.self._02;
					var a03 = m.self._03;
					var a10 = m.self._10;
					var a11 = m.self._11;
					var a12 = m.self._12;
					var a13 = m.self._13;
					var a20 = m.self._20;
					var a21 = m.self._21;
					var a22 = m.self._22;
					var a23 = m.self._23;
					var a30 = m.self._30;
					var a31 = m.self._31;
					var a32 = m.self._32;
					var a33 = m.self._33;
					var b00 = a00 * a11 - a01 * a10;
					var b01 = a00 * a12 - a02 * a10;
					var b02 = a00 * a13 - a03 * a10;
					var b03 = a01 * a12 - a02 * a11;
					var b04 = a01 * a13 - a03 * a11;
					var b05 = a02 * a13 - a03 * a12;
					var b06 = a20 * a31 - a21 * a30;
					var b07 = a20 * a32 - a22 * a30;
					var b08 = a20 * a33 - a23 * a30;
					var b09 = a21 * a32 - a22 * a31;
					var b10 = a21 * a33 - a23 * a31;
					var b11 = a22 * a33 - a23 * a32;
					var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
					if(det == 0.0) {
						m.self._00 = 1.0;
						m.self._01 = 0.0;
						m.self._02 = 0.0;
						m.self._03 = 0.0;
						m.self._10 = 0.0;
						m.self._11 = 1.0;
						m.self._12 = 0.0;
						m.self._13 = 0.0;
						m.self._20 = 0.0;
						m.self._21 = 0.0;
						m.self._22 = 1.0;
						m.self._23 = 0.0;
						m.self._30 = 0.0;
						m.self._31 = 0.0;
						m.self._32 = 0.0;
						m.self._33 = 1.0;
					} else {
						det = 1.0 / det;
						m.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
						m.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
						m.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
						m.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
						m.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
						m.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
						m.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
						m.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
						m.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
						m.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
						m.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
						m.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
						m.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
						m.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
						m.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
						m.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
					}
				}
				this.constraintTargetsI.push(m);
			}
			this.constraintMats = new haxe_ds_ObjectMap();
		}
		var _g1 = 0;
		var _g11 = cs.length;
		while(_g1 < _g11) {
			var i = _g1++;
			var c1 = cs[i];
			var bone = this.getBone(c1.bone);
			if(bone == null) {
				continue;
			}
			var o1 = this.constraintTargets[i];
			if(o1 == null) {
				continue;
			}
			if(c1.type == "CHILD_OF") {
				var m1 = this.constraintMats.h[bone.__id__];
				if(m1 == null) {
					m1 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
					this.constraintMats.set(bone,m1);
				}
				var m2 = this.object.parent.transform.world;
				m1.self._00 = m2.self._00;
				m1.self._01 = m2.self._01;
				m1.self._02 = m2.self._02;
				m1.self._03 = m2.self._03;
				m1.self._10 = m2.self._10;
				m1.self._11 = m2.self._11;
				m1.self._12 = m2.self._12;
				m1.self._13 = m2.self._13;
				m1.self._20 = m2.self._20;
				m1.self._21 = m2.self._21;
				m1.self._22 = m2.self._22;
				m1.self._23 = m2.self._23;
				m1.self._30 = m2.self._30;
				m1.self._31 = m2.self._31;
				m1.self._32 = m2.self._32;
				m1.self._33 = m2.self._33;
				var m3 = this.constraintTargetsI[i];
				var a001 = m1.self._00;
				var a011 = m1.self._01;
				var a021 = m1.self._02;
				var a031 = m1.self._03;
				var a101 = m1.self._10;
				var a111 = m1.self._11;
				var a121 = m1.self._12;
				var a131 = m1.self._13;
				var a201 = m1.self._20;
				var a211 = m1.self._21;
				var a221 = m1.self._22;
				var a231 = m1.self._23;
				var a301 = m1.self._30;
				var a311 = m1.self._31;
				var a321 = m1.self._32;
				var a331 = m1.self._33;
				var b0 = m3.self._00;
				var b1 = m3.self._10;
				var b2 = m3.self._20;
				var b3 = m3.self._30;
				m1.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
				m1.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
				m1.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
				m1.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
				b0 = m3.self._01;
				b1 = m3.self._11;
				b2 = m3.self._21;
				b3 = m3.self._31;
				m1.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
				m1.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
				m1.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
				m1.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
				b0 = m3.self._02;
				b1 = m3.self._12;
				b2 = m3.self._22;
				b3 = m3.self._32;
				m1.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
				m1.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
				m1.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
				m1.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
				b0 = m3.self._03;
				b1 = m3.self._13;
				b2 = m3.self._23;
				b3 = m3.self._33;
				m1.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
				m1.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
				m1.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
				m1.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
				var m4 = o1.transform.world;
				var a002 = m1.self._00;
				var a012 = m1.self._01;
				var a022 = m1.self._02;
				var a032 = m1.self._03;
				var a102 = m1.self._10;
				var a112 = m1.self._11;
				var a122 = m1.self._12;
				var a132 = m1.self._13;
				var a202 = m1.self._20;
				var a212 = m1.self._21;
				var a222 = m1.self._22;
				var a232 = m1.self._23;
				var a302 = m1.self._30;
				var a312 = m1.self._31;
				var a322 = m1.self._32;
				var a332 = m1.self._33;
				var b010 = m4.self._00;
				var b12 = m4.self._10;
				var b21 = m4.self._20;
				var b31 = m4.self._30;
				m1.self._00 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
				m1.self._10 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
				m1.self._20 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
				m1.self._30 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
				b010 = m4.self._01;
				b12 = m4.self._11;
				b21 = m4.self._21;
				b31 = m4.self._31;
				m1.self._01 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
				m1.self._11 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
				m1.self._21 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
				m1.self._31 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
				b010 = m4.self._02;
				b12 = m4.self._12;
				b21 = m4.self._22;
				b31 = m4.self._32;
				m1.self._02 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
				m1.self._12 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
				m1.self._22 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
				m1.self._32 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
				b010 = m4.self._03;
				b12 = m4.self._13;
				b21 = m4.self._23;
				b31 = m4.self._33;
				m1.self._03 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
				m1.self._13 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
				m1.self._23 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
				m1.self._33 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
				var _this = iron_object_BoneAnimation.m1;
				var m5 = this.object.parent.transform.world;
				var a003 = m5.self._00;
				var a013 = m5.self._01;
				var a023 = m5.self._02;
				var a033 = m5.self._03;
				var a103 = m5.self._10;
				var a113 = m5.self._11;
				var a123 = m5.self._12;
				var a133 = m5.self._13;
				var a203 = m5.self._20;
				var a213 = m5.self._21;
				var a223 = m5.self._22;
				var a233 = m5.self._23;
				var a303 = m5.self._30;
				var a313 = m5.self._31;
				var a323 = m5.self._32;
				var a333 = m5.self._33;
				var b001 = a003 * a113 - a013 * a103;
				var b011 = a003 * a123 - a023 * a103;
				var b021 = a003 * a133 - a033 * a103;
				var b031 = a013 * a123 - a023 * a113;
				var b041 = a013 * a133 - a033 * a113;
				var b051 = a023 * a133 - a033 * a123;
				var b061 = a203 * a313 - a213 * a303;
				var b071 = a203 * a323 - a223 * a303;
				var b081 = a203 * a333 - a233 * a303;
				var b091 = a213 * a323 - a223 * a313;
				var b101 = a213 * a333 - a233 * a313;
				var b111 = a223 * a333 - a233 * a323;
				var det1 = b001 * b111 - b011 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
				if(det1 == 0.0) {
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = 0.0;
					_this.self._31 = 0.0;
					_this.self._32 = 0.0;
					_this.self._33 = 1.0;
				} else {
					det1 = 1.0 / det1;
					_this.self._00 = (a113 * b111 - a123 * b101 + a133 * b091) * det1;
					_this.self._01 = (a023 * b101 - a013 * b111 - a033 * b091) * det1;
					_this.self._02 = (a313 * b051 - a323 * b041 + a333 * b031) * det1;
					_this.self._03 = (a223 * b041 - a213 * b051 - a233 * b031) * det1;
					_this.self._10 = (a123 * b081 - a103 * b111 - a133 * b071) * det1;
					_this.self._11 = (a003 * b111 - a023 * b081 + a033 * b071) * det1;
					_this.self._12 = (a323 * b021 - a303 * b051 - a333 * b011) * det1;
					_this.self._13 = (a203 * b051 - a223 * b021 + a233 * b011) * det1;
					_this.self._20 = (a103 * b101 - a113 * b081 + a133 * b061) * det1;
					_this.self._21 = (a013 * b081 - a003 * b101 - a033 * b061) * det1;
					_this.self._22 = (a303 * b041 - a313 * b021 + a333 * b001) * det1;
					_this.self._23 = (a213 * b021 - a203 * b041 - a233 * b001) * det1;
					_this.self._30 = (a113 * b071 - a103 * b091 - a123 * b061) * det1;
					_this.self._31 = (a003 * b091 - a013 * b071 + a023 * b061) * det1;
					_this.self._32 = (a313 * b011 - a303 * b031 - a323 * b001) * det1;
					_this.self._33 = (a203 * b031 - a213 * b011 + a223 * b001) * det1;
				}
				var m6 = iron_object_BoneAnimation.m1;
				var a004 = m1.self._00;
				var a014 = m1.self._01;
				var a024 = m1.self._02;
				var a034 = m1.self._03;
				var a104 = m1.self._10;
				var a114 = m1.self._11;
				var a124 = m1.self._12;
				var a134 = m1.self._13;
				var a204 = m1.self._20;
				var a214 = m1.self._21;
				var a224 = m1.self._22;
				var a234 = m1.self._23;
				var a304 = m1.self._30;
				var a314 = m1.self._31;
				var a324 = m1.self._32;
				var a334 = m1.self._33;
				var b012 = m6.self._00;
				var b13 = m6.self._10;
				var b22 = m6.self._20;
				var b32 = m6.self._30;
				m1.self._00 = a004 * b012 + a014 * b13 + a024 * b22 + a034 * b32;
				m1.self._10 = a104 * b012 + a114 * b13 + a124 * b22 + a134 * b32;
				m1.self._20 = a204 * b012 + a214 * b13 + a224 * b22 + a234 * b32;
				m1.self._30 = a304 * b012 + a314 * b13 + a324 * b22 + a334 * b32;
				b012 = m6.self._01;
				b13 = m6.self._11;
				b22 = m6.self._21;
				b32 = m6.self._31;
				m1.self._01 = a004 * b012 + a014 * b13 + a024 * b22 + a034 * b32;
				m1.self._11 = a104 * b012 + a114 * b13 + a124 * b22 + a134 * b32;
				m1.self._21 = a204 * b012 + a214 * b13 + a224 * b22 + a234 * b32;
				m1.self._31 = a304 * b012 + a314 * b13 + a324 * b22 + a334 * b32;
				b012 = m6.self._02;
				b13 = m6.self._12;
				b22 = m6.self._22;
				b32 = m6.self._32;
				m1.self._02 = a004 * b012 + a014 * b13 + a024 * b22 + a034 * b32;
				m1.self._12 = a104 * b012 + a114 * b13 + a124 * b22 + a134 * b32;
				m1.self._22 = a204 * b012 + a214 * b13 + a224 * b22 + a234 * b32;
				m1.self._32 = a304 * b012 + a314 * b13 + a324 * b22 + a334 * b32;
				b012 = m6.self._03;
				b13 = m6.self._13;
				b22 = m6.self._23;
				b32 = m6.self._33;
				m1.self._03 = a004 * b012 + a014 * b13 + a024 * b22 + a034 * b32;
				m1.self._13 = a104 * b012 + a114 * b13 + a124 * b22 + a134 * b32;
				m1.self._23 = a204 * b012 + a214 * b13 + a224 * b22 + a234 * b32;
				m1.self._33 = a304 * b012 + a314 * b13 + a324 * b22 + a334 * b32;
			}
		}
	}
	,updateBonesOnly: function() {
		if(this.boneChildren != null) {
			var _g = 0;
			var _g1 = this.skeletonBones.length;
			while(_g < _g1) {
				var i = _g++;
				var b = this.skeletonBones[i];
				var _this = iron_object_BoneAnimation.m;
				var m = this.matsFast[i];
				_this.self._00 = m.self._00;
				_this.self._01 = m.self._01;
				_this.self._02 = m.self._02;
				_this.self._03 = m.self._03;
				_this.self._10 = m.self._10;
				_this.self._11 = m.self._11;
				_this.self._12 = m.self._12;
				_this.self._13 = m.self._13;
				_this.self._20 = m.self._20;
				_this.self._21 = m.self._21;
				_this.self._22 = m.self._22;
				_this.self._23 = m.self._23;
				_this.self._30 = m.self._30;
				_this.self._31 = m.self._31;
				_this.self._32 = m.self._32;
				_this.self._33 = m.self._33;
				this.updateBoneChildren(b,iron_object_BoneAnimation.m);
			}
		}
	}
	,updateSkinGpu: function() {
		var bones = this.skeletonBones;
		var s = this.blendCurrent / this.blendTime;
		s = s * s * (3.0 - 2.0 * s);
		if(this.blendFactor != 0.0) {
			s = 1.0 - this.blendFactor;
		}
		var _g = 0;
		var _g1 = bones.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.constraintMats != null) {
				var m = this.constraintMats.h[bones[i].__id__];
				if(m != null) {
					this.updateSkinBuffer(m,i);
					continue;
				}
			}
			var _this = iron_object_BoneAnimation.m;
			var m1 = this.matsFast[i];
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._03 = m1.self._03;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._13 = m1.self._13;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			_this.self._23 = m1.self._23;
			_this.self._30 = m1.self._30;
			_this.self._31 = m1.self._31;
			_this.self._32 = m1.self._32;
			_this.self._33 = m1.self._33;
			if(this.blendTime > 0 && this.skeletonBonesBlend != null) {
				var _this1 = iron_object_BoneAnimation.m1;
				var m2 = this.matsFastBlend[i];
				_this1.self._00 = m2.self._00;
				_this1.self._01 = m2.self._01;
				_this1.self._02 = m2.self._02;
				_this1.self._03 = m2.self._03;
				_this1.self._10 = m2.self._10;
				_this1.self._11 = m2.self._11;
				_this1.self._12 = m2.self._12;
				_this1.self._13 = m2.self._13;
				_this1.self._20 = m2.self._20;
				_this1.self._21 = m2.self._21;
				_this1.self._22 = m2.self._22;
				_this1.self._23 = m2.self._23;
				_this1.self._30 = m2.self._30;
				_this1.self._31 = m2.self._31;
				_this1.self._32 = m2.self._32;
				_this1.self._33 = m2.self._33;
				var _this2 = iron_object_BoneAnimation.m1;
				var loc = iron_object_BoneAnimation.vpos;
				var quat = iron_object_BoneAnimation.q1;
				var scale = iron_object_BoneAnimation.vscl;
				loc.x = _this2.self._30;
				loc.y = _this2.self._31;
				loc.z = _this2.self._32;
				var _this3 = iron_math_Mat4.helpVec;
				_this3.x = _this2.self._00;
				_this3.y = _this2.self._01;
				_this3.z = _this2.self._02;
				_this3.w = 1.0;
				var _this4 = _this3;
				scale.x = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
				var _this5 = iron_math_Mat4.helpVec;
				_this5.x = _this2.self._10;
				_this5.y = _this2.self._11;
				_this5.z = _this2.self._12;
				_this5.w = 1.0;
				var _this6 = _this5;
				scale.y = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
				var _this7 = iron_math_Mat4.helpVec;
				_this7.x = _this2.self._20;
				_this7.y = _this2.self._21;
				_this7.z = _this2.self._22;
				_this7.w = 1.0;
				var _this8 = _this7;
				scale.z = Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
				var _this9 = _this2.self;
				var m3 = _this9._12;
				var m4 = _this9._22;
				var m5 = _this9._32;
				var m6 = _this9._13;
				var m7 = _this9._23;
				var m8 = _this9._33;
				var c00 = _this9._11 * (m4 * m8 - m5 * m7) - _this9._21 * (m3 * m8 - m5 * m6) + _this9._31 * (m3 * m7 - m4 * m6);
				var m31 = _this9._12;
				var m41 = _this9._22;
				var m51 = _this9._32;
				var m61 = _this9._13;
				var m71 = _this9._23;
				var m81 = _this9._33;
				var c01 = _this9._10 * (m41 * m81 - m51 * m71) - _this9._20 * (m31 * m81 - m51 * m61) + _this9._30 * (m31 * m71 - m41 * m61);
				var m32 = _this9._11;
				var m42 = _this9._21;
				var m52 = _this9._31;
				var m62 = _this9._13;
				var m72 = _this9._23;
				var m82 = _this9._33;
				var c02 = _this9._10 * (m42 * m82 - m52 * m72) - _this9._20 * (m32 * m82 - m52 * m62) + _this9._30 * (m32 * m72 - m42 * m62);
				var m33 = _this9._11;
				var m43 = _this9._21;
				var m53 = _this9._31;
				var m63 = _this9._12;
				var m73 = _this9._22;
				var m83 = _this9._32;
				var c03 = _this9._10 * (m43 * m83 - m53 * m73) - _this9._20 * (m33 * m83 - m53 * m63) + _this9._30 * (m33 * m73 - m43 * m63);
				if(_this9._00 * c00 - _this9._01 * c01 + _this9._02 * c02 - _this9._03 * c03 < 0.0) {
					scale.x = -scale.x;
				}
				var invs = 1.0 / scale.x;
				iron_math_Mat4.helpMat.self._00 = _this2.self._00 * invs;
				iron_math_Mat4.helpMat.self._01 = _this2.self._01 * invs;
				iron_math_Mat4.helpMat.self._02 = _this2.self._02 * invs;
				invs = 1.0 / scale.y;
				iron_math_Mat4.helpMat.self._10 = _this2.self._10 * invs;
				iron_math_Mat4.helpMat.self._11 = _this2.self._11 * invs;
				iron_math_Mat4.helpMat.self._12 = _this2.self._12 * invs;
				invs = 1.0 / scale.z;
				iron_math_Mat4.helpMat.self._20 = _this2.self._20 * invs;
				iron_math_Mat4.helpMat.self._21 = _this2.self._21 * invs;
				iron_math_Mat4.helpMat.self._22 = _this2.self._22 * invs;
				var m9 = iron_math_Mat4.helpMat;
				var m11 = m9.self._00;
				var m12 = m9.self._10;
				var m13 = m9.self._20;
				var m21 = m9.self._01;
				var m22 = m9.self._11;
				var m23 = m9.self._21;
				var m311 = m9.self._02;
				var m321 = m9.self._12;
				var m331 = m9.self._22;
				var tr = m11 + m22 + m331;
				var s1 = 0.0;
				if(tr > 0) {
					s1 = 0.5 / Math.sqrt(tr + 1.0);
					quat.w = 0.25 / s1;
					quat.x = (m321 - m23) * s1;
					quat.y = (m13 - m311) * s1;
					quat.z = (m21 - m12) * s1;
				} else if(m11 > m22 && m11 > m331) {
					s1 = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
					quat.w = (m321 - m23) / s1;
					quat.x = 0.25 * s1;
					quat.y = (m12 + m21) / s1;
					quat.z = (m13 + m311) / s1;
				} else if(m22 > m331) {
					s1 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
					quat.w = (m13 - m311) / s1;
					quat.x = (m12 + m21) / s1;
					quat.y = 0.25 * s1;
					quat.z = (m23 + m321) / s1;
				} else {
					s1 = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
					quat.w = (m21 - m12) / s1;
					quat.x = (m13 + m311) / s1;
					quat.y = (m23 + m321) / s1;
					quat.z = 0.25 * s1;
				}
				var _this10 = iron_object_BoneAnimation.m;
				var loc1 = iron_object_BoneAnimation.vpos2;
				var quat1 = iron_object_BoneAnimation.q2;
				var scale1 = iron_object_BoneAnimation.vscl2;
				loc1.x = _this10.self._30;
				loc1.y = _this10.self._31;
				loc1.z = _this10.self._32;
				var _this11 = iron_math_Mat4.helpVec;
				_this11.x = _this10.self._00;
				_this11.y = _this10.self._01;
				_this11.z = _this10.self._02;
				_this11.w = 1.0;
				var _this12 = _this11;
				scale1.x = Math.sqrt(_this12.x * _this12.x + _this12.y * _this12.y + _this12.z * _this12.z);
				var _this13 = iron_math_Mat4.helpVec;
				_this13.x = _this10.self._10;
				_this13.y = _this10.self._11;
				_this13.z = _this10.self._12;
				_this13.w = 1.0;
				var _this14 = _this13;
				scale1.y = Math.sqrt(_this14.x * _this14.x + _this14.y * _this14.y + _this14.z * _this14.z);
				var _this15 = iron_math_Mat4.helpVec;
				_this15.x = _this10.self._20;
				_this15.y = _this10.self._21;
				_this15.z = _this10.self._22;
				_this15.w = 1.0;
				var _this16 = _this15;
				scale1.z = Math.sqrt(_this16.x * _this16.x + _this16.y * _this16.y + _this16.z * _this16.z);
				var _this17 = _this10.self;
				var m34 = _this17._12;
				var m44 = _this17._22;
				var m54 = _this17._32;
				var m64 = _this17._13;
				var m74 = _this17._23;
				var m84 = _this17._33;
				var c001 = _this17._11 * (m44 * m84 - m54 * m74) - _this17._21 * (m34 * m84 - m54 * m64) + _this17._31 * (m34 * m74 - m44 * m64);
				var m35 = _this17._12;
				var m45 = _this17._22;
				var m55 = _this17._32;
				var m65 = _this17._13;
				var m75 = _this17._23;
				var m85 = _this17._33;
				var c011 = _this17._10 * (m45 * m85 - m55 * m75) - _this17._20 * (m35 * m85 - m55 * m65) + _this17._30 * (m35 * m75 - m45 * m65);
				var m36 = _this17._11;
				var m46 = _this17._21;
				var m56 = _this17._31;
				var m66 = _this17._13;
				var m76 = _this17._23;
				var m86 = _this17._33;
				var c021 = _this17._10 * (m46 * m86 - m56 * m76) - _this17._20 * (m36 * m86 - m56 * m66) + _this17._30 * (m36 * m76 - m46 * m66);
				var m37 = _this17._11;
				var m47 = _this17._21;
				var m57 = _this17._31;
				var m67 = _this17._12;
				var m77 = _this17._22;
				var m87 = _this17._32;
				var c031 = _this17._10 * (m47 * m87 - m57 * m77) - _this17._20 * (m37 * m87 - m57 * m67) + _this17._30 * (m37 * m77 - m47 * m67);
				if(_this17._00 * c001 - _this17._01 * c011 + _this17._02 * c021 - _this17._03 * c031 < 0.0) {
					scale1.x = -scale1.x;
				}
				var invs1 = 1.0 / scale1.x;
				iron_math_Mat4.helpMat.self._00 = _this10.self._00 * invs1;
				iron_math_Mat4.helpMat.self._01 = _this10.self._01 * invs1;
				iron_math_Mat4.helpMat.self._02 = _this10.self._02 * invs1;
				invs1 = 1.0 / scale1.y;
				iron_math_Mat4.helpMat.self._10 = _this10.self._10 * invs1;
				iron_math_Mat4.helpMat.self._11 = _this10.self._11 * invs1;
				iron_math_Mat4.helpMat.self._12 = _this10.self._12 * invs1;
				invs1 = 1.0 / scale1.z;
				iron_math_Mat4.helpMat.self._20 = _this10.self._20 * invs1;
				iron_math_Mat4.helpMat.self._21 = _this10.self._21 * invs1;
				iron_math_Mat4.helpMat.self._22 = _this10.self._22 * invs1;
				var m10 = iron_math_Mat4.helpMat;
				var m111 = m10.self._00;
				var m121 = m10.self._10;
				var m131 = m10.self._20;
				var m211 = m10.self._01;
				var m221 = m10.self._11;
				var m231 = m10.self._21;
				var m312 = m10.self._02;
				var m322 = m10.self._12;
				var m332 = m10.self._22;
				var tr1 = m111 + m221 + m332;
				var s2 = 0.0;
				if(tr1 > 0) {
					s2 = 0.5 / Math.sqrt(tr1 + 1.0);
					quat1.w = 0.25 / s2;
					quat1.x = (m322 - m231) * s2;
					quat1.y = (m131 - m312) * s2;
					quat1.z = (m211 - m121) * s2;
				} else if(m111 > m221 && m111 > m332) {
					s2 = 2.0 * Math.sqrt(1.0 + m111 - m221 - m332);
					quat1.w = (m322 - m231) / s2;
					quat1.x = 0.25 * s2;
					quat1.y = (m121 + m211) / s2;
					quat1.z = (m131 + m312) / s2;
				} else if(m221 > m332) {
					s2 = 2.0 * Math.sqrt(1.0 + m221 - m111 - m332);
					quat1.w = (m131 - m312) / s2;
					quat1.x = (m121 + m211) / s2;
					quat1.y = 0.25 * s2;
					quat1.z = (m231 + m322) / s2;
				} else {
					s2 = 2.0 * Math.sqrt(1.0 + m332 - m111 - m221);
					quat1.w = (m211 - m121) / s2;
					quat1.x = (m131 + m312) / s2;
					quat1.y = (m231 + m322) / s2;
					quat1.z = 0.25 * s2;
				}
				var _this18 = iron_object_BoneAnimation.v1;
				var from = iron_object_BoneAnimation.vpos;
				var to = iron_object_BoneAnimation.vpos2;
				_this18.x = from.x + (to.x - from.x) * s;
				_this18.y = from.y + (to.y - from.y) * s;
				_this18.z = from.z + (to.z - from.z) * s;
				var _this19 = iron_object_BoneAnimation.v2;
				var from1 = iron_object_BoneAnimation.vscl;
				var to1 = iron_object_BoneAnimation.vscl2;
				_this19.x = from1.x + (to1.x - from1.x) * s;
				_this19.y = from1.y + (to1.y - from1.y) * s;
				_this19.z = from1.z + (to1.z - from1.z) * s;
				var _this20 = iron_object_BoneAnimation.q3;
				var from2 = iron_object_BoneAnimation.q1;
				var to2 = iron_object_BoneAnimation.q2;
				var fromx = from2.x;
				var fromy = from2.y;
				var fromz = from2.z;
				var fromw = from2.w;
				var dot = from2.x * to2.x + from2.y * to2.y + from2.z * to2.z + from2.w * to2.w;
				if(dot < 0.0) {
					fromx = -fromx;
					fromy = -fromy;
					fromz = -fromz;
					fromw = -fromw;
				}
				_this20.x = fromx + (to2.x - fromx) * s;
				_this20.y = fromy + (to2.y - fromy) * s;
				_this20.z = fromz + (to2.z - fromz) * s;
				_this20.w = fromw + (to2.w - fromw) * s;
				var l = Math.sqrt(_this20.x * _this20.x + _this20.y * _this20.y + _this20.z * _this20.z + _this20.w * _this20.w);
				if(l == 0.0) {
					_this20.x = 0;
					_this20.y = 0;
					_this20.z = 0;
					_this20.w = 0;
				} else {
					l = 1.0 / l;
					_this20.x *= l;
					_this20.y *= l;
					_this20.z *= l;
					_this20.w *= l;
				}
				var _this21 = iron_object_BoneAnimation.m;
				var q = iron_object_BoneAnimation.q3;
				var x = q.x;
				var y = q.y;
				var z = q.z;
				var w = q.w;
				var x2 = x + x;
				var y2 = y + y;
				var z2 = z + z;
				var xx = x * x2;
				var xy = x * y2;
				var xz = x * z2;
				var yy = y * y2;
				var yz = y * z2;
				var zz = z * z2;
				var wx = w * x2;
				var wy = w * y2;
				var wz = w * z2;
				_this21.self._00 = 1.0 - (yy + zz);
				_this21.self._10 = xy - wz;
				_this21.self._20 = xz + wy;
				_this21.self._01 = xy + wz;
				_this21.self._11 = 1.0 - (xx + zz);
				_this21.self._21 = yz - wx;
				_this21.self._02 = xz - wy;
				_this21.self._12 = yz + wx;
				_this21.self._22 = 1.0 - (xx + yy);
				_this21.self._03 = 0.0;
				_this21.self._13 = 0.0;
				_this21.self._23 = 0.0;
				_this21.self._30 = 0.0;
				_this21.self._31 = 0.0;
				_this21.self._32 = 0.0;
				_this21.self._33 = 1.0;
				var _this22 = iron_object_BoneAnimation.m;
				var v = iron_object_BoneAnimation.v2;
				var x1 = v.x;
				var y1 = v.y;
				var z1 = v.z;
				_this22.self._00 *= x1;
				_this22.self._01 *= x1;
				_this22.self._02 *= x1;
				_this22.self._03 *= x1;
				_this22.self._10 *= y1;
				_this22.self._11 *= y1;
				_this22.self._12 *= y1;
				_this22.self._13 *= y1;
				_this22.self._20 *= z1;
				_this22.self._21 *= z1;
				_this22.self._22 *= z1;
				_this22.self._23 *= z1;
				iron_object_BoneAnimation.m.self._30 = iron_object_BoneAnimation.v1.x;
				iron_object_BoneAnimation.m.self._31 = iron_object_BoneAnimation.v1.y;
				iron_object_BoneAnimation.m.self._32 = iron_object_BoneAnimation.v1.z;
			}
			if(this.absMats != null && i < this.absMats.length) {
				var _this23 = this.absMats[i];
				var m14 = iron_object_BoneAnimation.m;
				_this23.self._00 = m14.self._00;
				_this23.self._01 = m14.self._01;
				_this23.self._02 = m14.self._02;
				_this23.self._03 = m14.self._03;
				_this23.self._10 = m14.self._10;
				_this23.self._11 = m14.self._11;
				_this23.self._12 = m14.self._12;
				_this23.self._13 = m14.self._13;
				_this23.self._20 = m14.self._20;
				_this23.self._21 = m14.self._21;
				_this23.self._22 = m14.self._22;
				_this23.self._23 = m14.self._23;
				_this23.self._30 = m14.self._30;
				_this23.self._31 = m14.self._31;
				_this23.self._32 = m14.self._32;
				_this23.self._33 = m14.self._33;
			}
			if(this.boneChildren != null) {
				this.updateBoneChildren(bones[i],iron_object_BoneAnimation.m);
			}
			var _this24 = iron_object_BoneAnimation.m;
			var b = iron_object_BoneAnimation.m;
			var a = this.data.geom.skeletonTransformsI[i];
			var a00 = a.self._00;
			var a01 = a.self._01;
			var a02 = a.self._02;
			var a03 = a.self._03;
			var a10 = a.self._10;
			var a11 = a.self._11;
			var a12 = a.self._12;
			var a13 = a.self._13;
			var a20 = a.self._20;
			var a21 = a.self._21;
			var a22 = a.self._22;
			var a23 = a.self._23;
			var a30 = a.self._30;
			var a31 = a.self._31;
			var a32 = a.self._32;
			var a33 = a.self._33;
			var b0 = b.self._00;
			var b1 = b.self._10;
			var b2 = b.self._20;
			var b3 = b.self._30;
			_this24.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this24.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this24.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this24.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._01;
			b1 = b.self._11;
			b2 = b.self._21;
			b3 = b.self._31;
			_this24.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this24.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this24.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this24.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._02;
			b1 = b.self._12;
			b2 = b.self._22;
			b3 = b.self._32;
			_this24.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this24.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this24.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this24.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._03;
			b1 = b.self._13;
			b2 = b.self._23;
			b3 = b.self._33;
			_this24.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this24.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this24.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this24.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			this.updateSkinBuffer(iron_object_BoneAnimation.m,i);
		}
	}
	,updateSkinBuffer: function(m,i) {
		var loc = iron_object_BoneAnimation.vpos;
		var quat = iron_object_BoneAnimation.q1;
		var scale = iron_object_BoneAnimation.vscl;
		loc.x = m.self._30;
		loc.y = m.self._31;
		loc.z = m.self._32;
		var _this = iron_math_Mat4.helpVec;
		_this.x = m.self._00;
		_this.y = m.self._01;
		_this.z = m.self._02;
		_this.w = 1.0;
		var _this1 = _this;
		scale.x = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		var _this2 = iron_math_Mat4.helpVec;
		_this2.x = m.self._10;
		_this2.y = m.self._11;
		_this2.z = m.self._12;
		_this2.w = 1.0;
		var _this3 = _this2;
		scale.y = Math.sqrt(_this3.x * _this3.x + _this3.y * _this3.y + _this3.z * _this3.z);
		var _this4 = iron_math_Mat4.helpVec;
		_this4.x = m.self._20;
		_this4.y = m.self._21;
		_this4.z = m.self._22;
		_this4.w = 1.0;
		var _this5 = _this4;
		scale.z = Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
		var _this6 = m.self;
		var m3 = _this6._12;
		var m4 = _this6._22;
		var m5 = _this6._32;
		var m6 = _this6._13;
		var m7 = _this6._23;
		var m8 = _this6._33;
		var c00 = _this6._11 * (m4 * m8 - m5 * m7) - _this6._21 * (m3 * m8 - m5 * m6) + _this6._31 * (m3 * m7 - m4 * m6);
		var m31 = _this6._12;
		var m41 = _this6._22;
		var m51 = _this6._32;
		var m61 = _this6._13;
		var m71 = _this6._23;
		var m81 = _this6._33;
		var c01 = _this6._10 * (m41 * m81 - m51 * m71) - _this6._20 * (m31 * m81 - m51 * m61) + _this6._30 * (m31 * m71 - m41 * m61);
		var m32 = _this6._11;
		var m42 = _this6._21;
		var m52 = _this6._31;
		var m62 = _this6._13;
		var m72 = _this6._23;
		var m82 = _this6._33;
		var c02 = _this6._10 * (m42 * m82 - m52 * m72) - _this6._20 * (m32 * m82 - m52 * m62) + _this6._30 * (m32 * m72 - m42 * m62);
		var m33 = _this6._11;
		var m43 = _this6._21;
		var m53 = _this6._31;
		var m63 = _this6._12;
		var m73 = _this6._22;
		var m83 = _this6._32;
		var c03 = _this6._10 * (m43 * m83 - m53 * m73) - _this6._20 * (m33 * m83 - m53 * m63) + _this6._30 * (m33 * m73 - m43 * m63);
		if(_this6._00 * c00 - _this6._01 * c01 + _this6._02 * c02 - _this6._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		var invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = m.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = m.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = m.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = m.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = m.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = m.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = m.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = m.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = m.self._22 * invs;
		var m1 = iron_math_Mat4.helpMat;
		var m11 = m1.self._00;
		var m12 = m1.self._10;
		var m13 = m1.self._20;
		var m21 = m1.self._01;
		var m22 = m1.self._11;
		var m23 = m1.self._21;
		var m311 = m1.self._02;
		var m321 = m1.self._12;
		var m331 = m1.self._22;
		var tr = m11 + m22 + m331;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m321 - m23) * s;
			quat.y = (m13 - m311) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m311) / s;
		} else if(m22 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m321) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m311) / s;
			quat.y = (m23 + m321) / s;
			quat.z = 0.25 * s;
		}
		var _this7 = iron_object_BoneAnimation.q1;
		var l = Math.sqrt(_this7.x * _this7.x + _this7.y * _this7.y + _this7.z * _this7.z + _this7.w * _this7.w);
		if(l == 0.0) {
			_this7.x = 0;
			_this7.y = 0;
			_this7.z = 0;
			_this7.w = 0;
		} else {
			l = 1.0 / l;
			_this7.x *= l;
			_this7.y *= l;
			_this7.z *= l;
			_this7.w *= l;
		}
		var _this8 = iron_object_BoneAnimation.q2;
		_this8.x = iron_object_BoneAnimation.vpos.x;
		_this8.y = iron_object_BoneAnimation.vpos.y;
		_this8.z = iron_object_BoneAnimation.vpos.z;
		_this8.w = 0.0;
		var _this9 = iron_object_BoneAnimation.q2;
		var q1 = iron_object_BoneAnimation.q2;
		var q2 = iron_object_BoneAnimation.q1;
		var q1x = q1.x;
		var q1y = q1.y;
		var q1z = q1.z;
		var q1w = q1.w;
		var q2x = q2.x;
		var q2y = q2.y;
		var q2z = q2.z;
		var q2w = q2.w;
		_this9.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		_this9.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		_this9.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		_this9.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		this.skinBuffer[i * 8] = iron_object_BoneAnimation.q1.x;
		this.skinBuffer[i * 8 + 1] = iron_object_BoneAnimation.q1.y;
		this.skinBuffer[i * 8 + 2] = iron_object_BoneAnimation.q1.z;
		this.skinBuffer[i * 8 + 3] = iron_object_BoneAnimation.q1.w;
		this.skinBuffer[i * 8 + 4] = iron_object_BoneAnimation.q2.x * 0.5;
		this.skinBuffer[i * 8 + 5] = iron_object_BoneAnimation.q2.y * 0.5;
		this.skinBuffer[i * 8 + 6] = iron_object_BoneAnimation.q2.z * 0.5;
		this.skinBuffer[i * 8 + 7] = iron_object_BoneAnimation.q2.w * 0.5;
	}
	,getBone: function(name) {
		if(this.skeletonBones == null) {
			return null;
		}
		var _g = 0;
		var _g1 = this.skeletonBones;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.name == name) {
				return b;
			}
		}
		return null;
	}
	,getBoneIndex: function(bone,bones) {
		if(bones == null) {
			bones = this.skeletonBones;
		}
		if(bones != null) {
			var _g = 0;
			var _g1 = bones.length;
			while(_g < _g1) {
				var i = _g++;
				if(bones[i] == bone) {
					return i;
				}
			}
		}
		return -1;
	}
	,__class__: iron_object_BoneAnimation
});
var iron_object_CameraObject = function(data) {
	this.currentFace = 0;
	this.renderTargetCube = null;
	this.renderTarget = null;
	this.frustumPlanes = null;
	this.prevV = null;
	iron_object_Object.call(this);
	this.data = data;
	this.buildProjection();
	this.V = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.VP = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	if(data.raw.frustum_culling) {
		this.frustumPlanes = [];
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
	}
	iron_Scene.active.cameras.push(this);
};
$hxClasses["iron.object.CameraObject"] = iron_object_CameraObject;
iron_object_CameraObject.__name__ = "iron.object.CameraObject";
iron_object_CameraObject.buildViewFrustum = function(VP,frustumPlanes) {
	var _this = frustumPlanes[0];
	var _this1 = _this.normal;
	_this1.x = VP.self._03 + VP.self._00;
	_this1.y = VP.self._13 + VP.self._10;
	_this1.z = VP.self._23 + VP.self._20;
	_this1.w = 1.0;
	_this.constant = VP.self._33 + VP.self._30;
	var _this2 = frustumPlanes[1];
	var _this3 = _this2.normal;
	_this3.x = VP.self._03 - VP.self._00;
	_this3.y = VP.self._13 - VP.self._10;
	_this3.z = VP.self._23 - VP.self._20;
	_this3.w = 1.0;
	_this2.constant = VP.self._33 - VP.self._30;
	var _this4 = frustumPlanes[2];
	var _this5 = _this4.normal;
	_this5.x = VP.self._03 - VP.self._01;
	_this5.y = VP.self._13 - VP.self._11;
	_this5.z = VP.self._23 - VP.self._21;
	_this5.w = 1.0;
	_this4.constant = VP.self._33 - VP.self._31;
	var _this6 = frustumPlanes[3];
	var _this7 = _this6.normal;
	_this7.x = VP.self._03 + VP.self._01;
	_this7.y = VP.self._13 + VP.self._11;
	_this7.z = VP.self._23 + VP.self._21;
	_this7.w = 1.0;
	_this6.constant = VP.self._33 + VP.self._31;
	var _this8 = frustumPlanes[4];
	var _this9 = _this8.normal;
	_this9.x = VP.self._02;
	_this9.y = VP.self._12;
	_this9.z = VP.self._22;
	_this9.w = 1.0;
	_this8.constant = VP.self._32;
	var _this10 = frustumPlanes[5];
	var _this11 = _this10.normal;
	_this11.x = VP.self._03 - VP.self._02;
	_this11.y = VP.self._13 - VP.self._12;
	_this11.z = VP.self._23 - VP.self._22;
	_this11.w = 1.0;
	_this10.constant = VP.self._33 - VP.self._32;
	var _g = 0;
	while(_g < frustumPlanes.length) {
		var plane = frustumPlanes[_g];
		++_g;
		plane.normalize();
	}
};
iron_object_CameraObject.sphereInFrustum = function(frustumPlanes,t,radiusScale,offsetX,offsetY,offsetZ) {
	if(offsetZ == null) {
		offsetZ = 0.0;
	}
	if(offsetY == null) {
		offsetY = 0.0;
	}
	if(offsetX == null) {
		offsetX = 0.0;
	}
	if(radiusScale == null) {
		radiusScale = 1.0;
	}
	var radius = t.radius * radiusScale;
	var _g = 0;
	while(_g < frustumPlanes.length) {
		var plane = frustumPlanes[_g];
		++_g;
		var _this = iron_object_CameraObject.sphereCenter;
		_this.x = t.world.self._30 + offsetX;
		_this.y = t.world.self._31 + offsetY;
		_this.z = t.world.self._32 + offsetZ;
		_this.w = 1.0;
		if(plane.distanceToSphere(iron_object_CameraObject.sphereCenter,radius) + radius * 2 < 0) {
			return false;
		}
	}
	return true;
};
iron_object_CameraObject.setCubeFace = function(m,eye,face,flip) {
	if(flip == null) {
		flip = false;
	}
	var _this = iron_object_CameraObject.vcenter;
	_this.x = eye.x;
	_this.y = eye.y;
	_this.z = eye.z;
	_this.w = eye.w;
	var f = flip ? -1.0 : 1.0;
	switch(face) {
	case 0:
		var _this1 = iron_object_CameraObject.vcenter;
		_this1.x += f;
		_this1.y += 0.0;
		_this1.z += 0.0;
		var _this2 = iron_object_CameraObject.vup;
		_this2.x = 0.0;
		_this2.y = -1.0 * f;
		_this2.z = 0.0;
		_this2.w = 1.0;
		break;
	case 1:
		var _this3 = iron_object_CameraObject.vcenter;
		_this3.x += -1.0 * f;
		_this3.y += 0.0;
		_this3.z += 0.0;
		var _this4 = iron_object_CameraObject.vup;
		_this4.x = 0.0;
		_this4.y = -1.0 * f;
		_this4.z = 0.0;
		_this4.w = 1.0;
		break;
	case 2:
		var _this5 = iron_object_CameraObject.vcenter;
		_this5.x += 0.0;
		_this5.y += f;
		_this5.z += 0.0;
		var _this6 = iron_object_CameraObject.vup;
		_this6.x = 0.0;
		_this6.y = 0.0;
		_this6.z = f;
		_this6.w = 1.0;
		break;
	case 3:
		var _this7 = iron_object_CameraObject.vcenter;
		_this7.x += 0.0;
		_this7.y += -1.0 * f;
		_this7.z += 0.0;
		var _this8 = iron_object_CameraObject.vup;
		_this8.x = 0.0;
		_this8.y = 0.0;
		_this8.z = -1.0 * f;
		_this8.w = 1.0;
		break;
	case 4:
		var _this9 = iron_object_CameraObject.vcenter;
		_this9.x += 0.0;
		_this9.y += 0.0;
		_this9.z += f;
		var _this10 = iron_object_CameraObject.vup;
		_this10.x = 0.0;
		_this10.y = -1.0 * f;
		_this10.z = 0.0;
		_this10.w = 1.0;
		break;
	case 5:
		var _this11 = iron_object_CameraObject.vcenter;
		_this11.x += 0.0;
		_this11.y += 0.0;
		_this11.z += -1.0 * f;
		var _this12 = iron_object_CameraObject.vup;
		_this12.x = 0.0;
		_this12.y = -1.0 * f;
		_this12.z = 0.0;
		_this12.w = 1.0;
		break;
	}
	var center = iron_object_CameraObject.vcenter;
	var up = iron_object_CameraObject.vup;
	var f0 = center.x - eye.x;
	var f1 = center.y - eye.y;
	var f2 = center.z - eye.z;
	var n = 1.0 / Math.sqrt(f0 * f0 + f1 * f1 + f2 * f2);
	f0 *= n;
	f1 *= n;
	f2 *= n;
	var s0 = f1 * up.z - f2 * up.y;
	var s1 = f2 * up.x - f0 * up.z;
	var s2 = f0 * up.y - f1 * up.x;
	n = 1.0 / Math.sqrt(s0 * s0 + s1 * s1 + s2 * s2);
	s0 *= n;
	s1 *= n;
	s2 *= n;
	var u0 = s1 * f2 - s2 * f1;
	var u1 = s2 * f0 - s0 * f2;
	var u2 = s0 * f1 - s1 * f0;
	var d0 = -eye.x * s0 - eye.y * s1 - eye.z * s2;
	var d1 = -eye.x * u0 - eye.y * u1 - eye.z * u2;
	var d2 = eye.x * f0 + eye.y * f1 + eye.z * f2;
	m.self._00 = s0;
	m.self._10 = s1;
	m.self._20 = s2;
	m.self._30 = d0;
	m.self._01 = u0;
	m.self._11 = u1;
	m.self._21 = u2;
	m.self._31 = d1;
	m.self._02 = -f0;
	m.self._12 = -f1;
	m.self._22 = -f2;
	m.self._32 = d2;
	m.self._03 = 0.0;
	m.self._13 = 0.0;
	m.self._23 = 0.0;
	m.self._33 = 1.0;
};
iron_object_CameraObject.__super__ = iron_object_Object;
iron_object_CameraObject.prototype = $extend(iron_object_Object.prototype,{
	buildProjection: function(screenAspect) {
		if(this.data.raw.ortho != null) {
			var left = this.data.raw.ortho[0];
			var right = this.data.raw.ortho[1];
			var bottom = this.data.raw.ortho[2];
			var top = this.data.raw.ortho[3];
			var near = this.data.raw.near_plane;
			var far = this.data.raw.far_plane;
			var rl = right - left;
			var tb = top - bottom;
			var fn = far - near;
			var tx = -(right + left) / rl;
			var ty = -(top + bottom) / tb;
			var tz = -(far + near) / fn;
			this.P = new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1);
		} else {
			if(screenAspect == null) {
				screenAspect = kha_System.windowWidth() / kha_System.windowHeight();
			}
			var aspect = this.data.raw.aspect != null ? this.data.raw.aspect : screenAspect;
			var zn = this.data.raw.near_plane;
			var zf = this.data.raw.far_plane;
			var uh = 1.0 / Math.tan(this.data.raw.fov / 2);
			var uw = uh / aspect;
			this.P = new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
		}
	}
	,remove: function() {
		HxOverrides.remove(iron_Scene.active.cameras,this);
		iron_object_Object.prototype.remove.call(this);
	}
	,renderFrame: function(g) {
		this.buildMatrix();
		if(this.prevV == null) {
			this.prevV = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
			var _this = this.prevV;
			var m = this.V;
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
		}
		iron_RenderPath.active.renderFrame(g);
		var _this1 = this.prevV;
		var m1 = this.V;
		_this1.self._00 = m1.self._00;
		_this1.self._01 = m1.self._01;
		_this1.self._02 = m1.self._02;
		_this1.self._03 = m1.self._03;
		_this1.self._10 = m1.self._10;
		_this1.self._11 = m1.self._11;
		_this1.self._12 = m1.self._12;
		_this1.self._13 = m1.self._13;
		_this1.self._20 = m1.self._20;
		_this1.self._21 = m1.self._21;
		_this1.self._22 = m1.self._22;
		_this1.self._23 = m1.self._23;
		_this1.self._30 = m1.self._30;
		_this1.self._31 = m1.self._31;
		_this1.self._32 = m1.self._32;
		_this1.self._33 = m1.self._33;
	}
	,buildMatrix: function() {
		this.transform.buildMatrix();
		var _this = this.transform.world;
		var sc_x = Math.sqrt(_this.self._00 * _this.self._00 + _this.self._10 * _this.self._10 + _this.self._20 * _this.self._20);
		var sc_y = Math.sqrt(_this.self._01 * _this.self._01 + _this.self._11 * _this.self._11 + _this.self._21 * _this.self._21);
		var sc_z = Math.sqrt(_this.self._02 * _this.self._02 + _this.self._12 * _this.self._12 + _this.self._22 * _this.self._22);
		var sc_w = 1.0;
		if(sc_x != 1.0 || sc_y != 1.0 || sc_z != 1.0) {
			var _this1 = iron_object_CameraObject.temp;
			_this1.x = 1.0 / sc_x;
			_this1.y = 1.0 / sc_y;
			_this1.z = 1.0 / sc_z;
			_this1.w = 1.0;
			var _this2 = this.transform.world;
			var v = iron_object_CameraObject.temp;
			var x = v.x;
			var y = v.y;
			var z = v.z;
			_this2.self._00 *= x;
			_this2.self._01 *= x;
			_this2.self._02 *= x;
			_this2.self._03 *= x;
			_this2.self._10 *= y;
			_this2.self._11 *= y;
			_this2.self._12 *= y;
			_this2.self._13 *= y;
			_this2.self._20 *= z;
			_this2.self._21 *= z;
			_this2.self._22 *= z;
			_this2.self._23 *= z;
		}
		var _this3 = this.V;
		var m = this.transform.world;
		var a00 = m.self._00;
		var a01 = m.self._01;
		var a02 = m.self._02;
		var a03 = m.self._03;
		var a10 = m.self._10;
		var a11 = m.self._11;
		var a12 = m.self._12;
		var a13 = m.self._13;
		var a20 = m.self._20;
		var a21 = m.self._21;
		var a22 = m.self._22;
		var a23 = m.self._23;
		var a30 = m.self._30;
		var a31 = m.self._31;
		var a32 = m.self._32;
		var a33 = m.self._33;
		var b00 = a00 * a11 - a01 * a10;
		var b01 = a00 * a12 - a02 * a10;
		var b02 = a00 * a13 - a03 * a10;
		var b03 = a01 * a12 - a02 * a11;
		var b04 = a01 * a13 - a03 * a11;
		var b05 = a02 * a13 - a03 * a12;
		var b06 = a20 * a31 - a21 * a30;
		var b07 = a20 * a32 - a22 * a30;
		var b08 = a20 * a33 - a23 * a30;
		var b09 = a21 * a32 - a22 * a31;
		var b10 = a21 * a33 - a23 * a31;
		var b11 = a22 * a33 - a23 * a32;
		var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this3.self._00 = 1.0;
			_this3.self._01 = 0.0;
			_this3.self._02 = 0.0;
			_this3.self._03 = 0.0;
			_this3.self._10 = 0.0;
			_this3.self._11 = 1.0;
			_this3.self._12 = 0.0;
			_this3.self._13 = 0.0;
			_this3.self._20 = 0.0;
			_this3.self._21 = 0.0;
			_this3.self._22 = 1.0;
			_this3.self._23 = 0.0;
			_this3.self._30 = 0.0;
			_this3.self._31 = 0.0;
			_this3.self._32 = 0.0;
			_this3.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this3.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this3.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this3.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this3.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this3.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this3.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this3.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this3.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this3.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this3.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this3.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this3.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this3.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this3.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this3.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this3.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		var _this4 = this.VP;
		var b = this.P;
		var a = this.V;
		var a001 = a.self._00;
		var a011 = a.self._01;
		var a021 = a.self._02;
		var a031 = a.self._03;
		var a101 = a.self._10;
		var a111 = a.self._11;
		var a121 = a.self._12;
		var a131 = a.self._13;
		var a201 = a.self._20;
		var a211 = a.self._21;
		var a221 = a.self._22;
		var a231 = a.self._23;
		var a301 = a.self._30;
		var a311 = a.self._31;
		var a321 = a.self._32;
		var a331 = a.self._33;
		var b0 = b.self._00;
		var b1 = b.self._10;
		var b2 = b.self._20;
		var b3 = b.self._30;
		_this4.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this4.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this4.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this4.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		_this4.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this4.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this4.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this4.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		_this4.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this4.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this4.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this4.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = b.self._03;
		b1 = b.self._13;
		b2 = b.self._23;
		b3 = b.self._33;
		_this4.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this4.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this4.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this4.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		if(this.data.raw.frustum_culling) {
			iron_object_CameraObject.buildViewFrustum(this.VP,this.frustumPlanes);
		}
	}
	,__class__: iron_object_CameraObject
});
var iron_object_FrustumPlane = function() {
	this.constant = 0.0;
	this.normal = new iron_math_Vec4(1.0,0.0,0.0);
};
$hxClasses["iron.object.FrustumPlane"] = iron_object_FrustumPlane;
iron_object_FrustumPlane.__name__ = "iron.object.FrustumPlane";
iron_object_FrustumPlane.prototype = {
	normalize: function() {
		var _this = this.normal;
		var inverseNormalLength = 1.0 / Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		var _this1 = this.normal;
		_this1.x *= inverseNormalLength;
		_this1.y *= inverseNormalLength;
		_this1.z *= inverseNormalLength;
		this.constant *= inverseNormalLength;
	}
	,distanceToSphere: function(sphereCenter,sphereRadius) {
		var _this = this.normal;
		return _this.x * sphereCenter.x + _this.y * sphereCenter.y + _this.z * sphereCenter.z + this.constant - sphereRadius;
	}
	,__class__: iron_object_FrustumPlane
};
var iron_object_Constraint = function(constr) {
	this.target = null;
	this.raw = constr;
};
$hxClasses["iron.object.Constraint"] = iron_object_Constraint;
iron_object_Constraint.__name__ = "iron.object.Constraint";
iron_object_Constraint.prototype = {
	apply: function(transform) {
		if(this.target == null && this.raw.target != null) {
			this.target = iron_Scene.active.getChild(this.raw.target).transform;
		}
		if(this.raw.type == "COPY_LOCATION") {
			if(this.raw.use_x) {
				transform.world.self._30 = this.target.loc.x;
				if(this.raw.use_offset) {
					transform.world.self._30 += transform.loc.x;
				}
			}
			if(this.raw.use_y) {
				transform.world.self._31 = this.target.loc.y;
				if(this.raw.use_offset) {
					transform.world.self._31 += transform.loc.y;
				}
			}
			if(this.raw.use_z) {
				transform.world.self._32 = this.target.loc.z;
				if(this.raw.use_offset) {
					transform.world.self._32 += transform.loc.z;
				}
			}
		}
	}
	,__class__: iron_object_Constraint
};
var iron_object_LightObject = function(data) {
	this.bias = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.frustumPlanes = null;
	this.VP = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.P = null;
	this.V = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.camSlicedP = null;
	this.cascadeData = null;
	iron_object_Object.call(this);
	this.data = data;
	var type = data.raw.type;
	var fov = data.raw.fov;
	if(type == "sun") {
		if(iron_object_LightObject.corners == null) {
			iron_object_LightObject.corners = [];
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
		}
		this.P = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	} else if(type == "point" || type == "area") {
		var zn = data.raw.near_plane;
		var zf = data.raw.far_plane;
		var uh = 1.0 / Math.tan(fov / 2);
		var uw = uh / 1;
		this.P = new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
	} else if(type == "spot") {
		var zn1 = data.raw.near_plane;
		var zf1 = data.raw.far_plane;
		var uh1 = 1.0 / Math.tan(fov / 2);
		var uw1 = uh1 / 1;
		this.P = new iron_math_Mat4(uw1,0,0,0,0,uh1,0,0,0,0,(zf1 + zn1) / (zn1 - zf1),2 * zf1 * zn1 / (zn1 - zf1),0,0,-1,0);
	}
	iron_Scene.active.lights.push(this);
};
$hxClasses["iron.object.LightObject"] = iron_object_LightObject;
iron_object_LightObject.__name__ = "iron.object.LightObject";
iron_object_LightObject.setCorners = function() {
	var _this = iron_object_LightObject.corners[0];
	_this.x = -1.0;
	_this.y = -1.0;
	_this.z = 1.0;
	_this.w = 1.0;
	var _this1 = iron_object_LightObject.corners[1];
	_this1.x = -1.0;
	_this1.y = -1.0;
	_this1.z = -1.0;
	_this1.w = 1.0;
	var _this2 = iron_object_LightObject.corners[2];
	_this2.x = -1.0;
	_this2.y = 1.0;
	_this2.z = 1.0;
	_this2.w = 1.0;
	var _this3 = iron_object_LightObject.corners[3];
	_this3.x = -1.0;
	_this3.y = 1.0;
	_this3.z = -1.0;
	_this3.w = 1.0;
	var _this4 = iron_object_LightObject.corners[4];
	_this4.x = 1.0;
	_this4.y = -1.0;
	_this4.z = 1.0;
	_this4.w = 1.0;
	var _this5 = iron_object_LightObject.corners[5];
	_this5.x = 1.0;
	_this5.y = -1.0;
	_this5.z = -1.0;
	_this5.w = 1.0;
	var _this6 = iron_object_LightObject.corners[6];
	_this6.x = 1.0;
	_this6.y = 1.0;
	_this6.z = 1.0;
	_this6.w = 1.0;
	var _this7 = iron_object_LightObject.corners[7];
	_this7.x = 1.0;
	_this7.y = 1.0;
	_this7.z = -1.0;
	_this7.w = 1.0;
};
iron_object_LightObject.getRadius = function(strength) {
	return Math.sqrt(strength / 0.004);
};
iron_object_LightObject.distSliceX = function(f,lpos) {
	return (lpos.x - f * lpos.z) / Math.sqrt(1.0 + f * f);
};
iron_object_LightObject.distSliceY = function(f,lpos) {
	return (lpos.y - f * lpos.z) / Math.sqrt(1.0 + f * f);
};
iron_object_LightObject.sliceToDist = function(camera,z) {
	var cnear = 3.0 + camera.data.raw.near_plane;
	if(z == 0) {
		return camera.data.raw.near_plane;
	} else if(z == 1) {
		return cnear;
	} else {
		var depthl = (z - 1) / (iron_object_LightObject.slicesZ - 1);
		return Math.exp(depthl * Math.log(camera.data.raw.far_plane - cnear + 1.0)) + cnear - 1.0;
	}
};
iron_object_LightObject.updateClusters = function(camera) {
	var lights = iron_Scene.active.lights;
	iron_object_LightObject.updateLightsArray();
	if(iron_object_LightObject.clustersData == null) {
		var lines = 1;
		iron_object_LightObject.clustersData = kha_Image.create(iron_object_LightObject.slicesX * iron_object_LightObject.slicesY * iron_object_LightObject.slicesZ,lines + 4,1,1);
	}
	var bytes = iron_object_LightObject.clustersData.lock();
	var stride = iron_object_LightObject.slicesX * iron_object_LightObject.slicesY * iron_object_LightObject.slicesZ;
	var _g = 0;
	var _g1 = stride;
	while(_g < _g1) {
		var i = _g++;
		bytes.b[i] = 0;
	}
	var fovtan = Math.tan(camera.data.raw.fov * 0.5);
	var stepY = 2.0 * fovtan / iron_object_LightObject.slicesY;
	var aspect = iron_RenderPath.active.currentW / iron_RenderPath.active.currentH;
	var stepX = 2.0 * fovtan * aspect / iron_object_LightObject.slicesX;
	var n = lights.length > 16 ? 16 : lights.length;
	var i1 = 0;
	var _g2 = 0;
	while(_g2 < lights.length) {
		var l = lights[_g2];
		++_g2;
		if(!l.visible || l.data.raw.type == "sun") {
			continue;
		}
		if(i1 >= n) {
			break;
		}
		var _this = iron_object_LightObject.lpos;
		_this.x = l.transform.world.self._30;
		_this.y = l.transform.world.self._31;
		_this.z = l.transform.world.self._32;
		_this.w = 1.0;
		var _this1 = iron_object_LightObject.lpos;
		var m = camera.V;
		var x = _this1.x;
		var y = _this1.y;
		var z = _this1.z;
		var w = _this1.w;
		_this1.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30 * w;
		_this1.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31 * w;
		_this1.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32 * w;
		_this1.w = m.self._03 * x + m.self._13 * y + m.self._23 * z + m.self._33 * w;
		iron_object_LightObject.lpos.z *= -1.0;
		var radius = iron_object_LightObject.getRadius(l.data.raw.strength);
		var minX = 0;
		var minY = 0;
		var minZ = 0;
		var maxX = iron_object_LightObject.slicesX;
		var maxY = iron_object_LightObject.slicesY;
		var maxZ = iron_object_LightObject.slicesZ;
		while(minX <= iron_object_LightObject.slicesX) {
			if(iron_object_LightObject.distSliceX(stepX * (minX + 1 - iron_object_LightObject.slicesX * 0.5),iron_object_LightObject.lpos) <= radius) {
				break;
			}
			++minX;
		}
		while(maxX >= minX) {
			if(-iron_object_LightObject.distSliceX(stepX * (maxX - 1 - iron_object_LightObject.slicesX * 0.5),iron_object_LightObject.lpos) <= radius) {
				--maxX;
				break;
			}
			--maxX;
		}
		while(minY <= iron_object_LightObject.slicesY) {
			if(iron_object_LightObject.distSliceY(stepY * (minY + 1 - iron_object_LightObject.slicesY * 0.5),iron_object_LightObject.lpos) <= radius) {
				break;
			}
			++minY;
		}
		while(maxY >= minY) {
			if(-iron_object_LightObject.distSliceY(stepY * (maxY - 1 - iron_object_LightObject.slicesY * 0.5),iron_object_LightObject.lpos) <= radius) {
				--maxY;
				break;
			}
			--maxY;
		}
		while(minZ <= iron_object_LightObject.slicesZ) {
			if(iron_object_LightObject.sliceToDist(camera,minZ + 1) >= iron_object_LightObject.lpos.z - radius) {
				break;
			}
			++minZ;
		}
		while(maxZ >= minZ) {
			if(iron_object_LightObject.sliceToDist(camera,maxZ - 1) <= iron_object_LightObject.lpos.z + radius) {
				break;
			}
			--maxZ;
		}
		var _g21 = minZ;
		var _g3 = maxZ + 1;
		while(_g21 < _g3) {
			var z1 = _g21++;
			var _g22 = minY;
			var _g31 = maxY + 1;
			while(_g22 < _g31) {
				var y1 = _g22++;
				var _g23 = minX;
				var _g32 = maxX + 1;
				while(_g23 < _g32) {
					var x1 = _g23++;
					var cluster = x1 + y1 * iron_object_LightObject.slicesX + z1 * iron_object_LightObject.slicesX * iron_object_LightObject.slicesY;
					var numLights = bytes.b[cluster];
					if(numLights < 4) {
						++numLights;
						bytes.b[cluster] = numLights;
						bytes.b[cluster + stride * numLights] = i1;
					}
				}
			}
		}
		++i1;
	}
	iron_object_LightObject.clustersData.unlock();
};
iron_object_LightObject.updateLightsArray = function() {
	if(iron_object_LightObject.lightsArray == null) {
		var this1 = new Float32Array(128);
		iron_object_LightObject.lightsArray = this1;
	}
	var lights = iron_Scene.active.lights;
	var n = lights.length > 16 ? 16 : lights.length;
	var i = 0;
	var _g = 0;
	while(_g < lights.length) {
		var l = lights[_g];
		++_g;
		if(!l.visible || l.data.raw.type == "sun") {
			continue;
		}
		if(i >= n) {
			break;
		}
		iron_object_LightObject.lightsArray[i * 8] = l.transform.world.self._30;
		iron_object_LightObject.lightsArray[i * 8 + 1] = l.transform.world.self._31;
		iron_object_LightObject.lightsArray[i * 8 + 2] = l.transform.world.self._32;
		iron_object_LightObject.lightsArray[i * 8 + 3] = l.data.raw.shadows_bias;
		var f = l.data.raw.strength;
		iron_object_LightObject.lightsArray[i * 8 + 4] = l.data.raw.color[0] * f;
		iron_object_LightObject.lightsArray[i * 8 + 5] = l.data.raw.color[1] * f;
		iron_object_LightObject.lightsArray[i * 8 + 6] = l.data.raw.color[2] * f;
		++i;
	}
};
iron_object_LightObject.__super__ = iron_object_Object;
iron_object_LightObject.prototype = $extend(iron_object_Object.prototype,{
	remove: function() {
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.lights,this);
		}
		iron_object_Object.prototype.remove.call(this);
	}
	,buildMatrix: function(camera) {
		this.transform.buildMatrix();
		if(this.data.raw.type != "sun") {
			var _this = this.V;
			var m = this.transform.world;
			var a00 = m.self._00;
			var a01 = m.self._01;
			var a02 = m.self._02;
			var a03 = m.self._03;
			var a10 = m.self._10;
			var a11 = m.self._11;
			var a12 = m.self._12;
			var a13 = m.self._13;
			var a20 = m.self._20;
			var a21 = m.self._21;
			var a22 = m.self._22;
			var a23 = m.self._23;
			var a30 = m.self._30;
			var a31 = m.self._31;
			var a32 = m.self._32;
			var a33 = m.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			this.updateViewFrustum(camera);
		}
	}
	,setCascade: function(camera,cascade) {
		var _this = iron_object_LightObject.m;
		var m = camera.V;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		if(this.camSlicedP == null) {
			this.camSlicedP = [];
			this.cascadeSplit = [];
			var ortho = camera.data.raw.ortho;
			if(ortho == null) {
				var aspect = camera.data.raw.aspect != null ? camera.data.raw.aspect : kha_System.windowWidth() / kha_System.windowHeight();
				var fov = camera.data.raw.fov;
				var near = camera.data.raw.near_plane;
				var far = camera.data.raw.far_plane;
				var factor = iron_object_LightObject.cascadeCount > 2 ? iron_object_LightObject.cascadeSplitFactor : iron_object_LightObject.cascadeSplitFactor * 0.25;
				var _g = 0;
				var _g1 = iron_object_LightObject.cascadeCount;
				while(_g < _g1) {
					var i = _g++;
					var f = i + 1.0;
					var cfar = (near + f / iron_object_LightObject.cascadeCount * (far - near)) * (1 - factor) + near * Math.pow(far / near,f / iron_object_LightObject.cascadeCount) * factor;
					this.cascadeSplit.push(cfar);
					var uh = 1.0 / Math.tan(fov / 2);
					var uw = uh / aspect;
					this.camSlicedP.push(new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(cfar + near) / (near - cfar),2 * cfar * near / (near - cfar),0,0,-1,0));
				}
			} else {
				var _g2 = 0;
				var _g11 = iron_object_LightObject.cascadeCount;
				while(_g2 < _g11) {
					var i1 = _g2++;
					this.cascadeSplit.push(this.data.raw.far_plane);
					var left = ortho[0];
					var right = ortho[1];
					var bottom = ortho[2];
					var top = ortho[3];
					var near1 = this.data.raw.near_plane;
					var far1 = this.data.raw.far_plane;
					var rl = right - left;
					var tb = top - bottom;
					var fn = far1 - near1;
					var tx = -(right + left) / rl;
					var ty = -(top + bottom) / tb;
					var tz = -(far1 + near1) / fn;
					this.camSlicedP.push(new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1));
				}
			}
		}
		var _this1 = iron_object_LightObject.m;
		var m1 = this.camSlicedP[cascade];
		var a00 = _this1.self._00;
		var a01 = _this1.self._01;
		var a02 = _this1.self._02;
		var a03 = _this1.self._03;
		var a10 = _this1.self._10;
		var a11 = _this1.self._11;
		var a12 = _this1.self._12;
		var a13 = _this1.self._13;
		var a20 = _this1.self._20;
		var a21 = _this1.self._21;
		var a22 = _this1.self._22;
		var a23 = _this1.self._23;
		var a30 = _this1.self._30;
		var a31 = _this1.self._31;
		var a32 = _this1.self._32;
		var a33 = _this1.self._33;
		var b0 = m1.self._00;
		var b1 = m1.self._10;
		var b2 = m1.self._20;
		var b3 = m1.self._30;
		_this1.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._01;
		b1 = m1.self._11;
		b2 = m1.self._21;
		b3 = m1.self._31;
		_this1.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._02;
		b1 = m1.self._12;
		b2 = m1.self._22;
		b3 = m1.self._32;
		_this1.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._03;
		b1 = m1.self._13;
		b2 = m1.self._23;
		b3 = m1.self._33;
		_this1.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		var _this2 = iron_object_LightObject.m;
		var m2 = iron_object_LightObject.m;
		var a001 = m2.self._00;
		var a011 = m2.self._01;
		var a021 = m2.self._02;
		var a031 = m2.self._03;
		var a101 = m2.self._10;
		var a111 = m2.self._11;
		var a121 = m2.self._12;
		var a131 = m2.self._13;
		var a201 = m2.self._20;
		var a211 = m2.self._21;
		var a221 = m2.self._22;
		var a231 = m2.self._23;
		var a301 = m2.self._30;
		var a311 = m2.self._31;
		var a321 = m2.self._32;
		var a331 = m2.self._33;
		var b00 = a001 * a111 - a011 * a101;
		var b01 = a001 * a121 - a021 * a101;
		var b02 = a001 * a131 - a031 * a101;
		var b03 = a011 * a121 - a021 * a111;
		var b04 = a011 * a131 - a031 * a111;
		var b05 = a021 * a131 - a031 * a121;
		var b06 = a201 * a311 - a211 * a301;
		var b07 = a201 * a321 - a221 * a301;
		var b08 = a201 * a331 - a231 * a301;
		var b09 = a211 * a321 - a221 * a311;
		var b10 = a211 * a331 - a231 * a311;
		var b11 = a221 * a331 - a231 * a321;
		var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this2.self._00 = 1.0;
			_this2.self._01 = 0.0;
			_this2.self._02 = 0.0;
			_this2.self._03 = 0.0;
			_this2.self._10 = 0.0;
			_this2.self._11 = 1.0;
			_this2.self._12 = 0.0;
			_this2.self._13 = 0.0;
			_this2.self._20 = 0.0;
			_this2.self._21 = 0.0;
			_this2.self._22 = 1.0;
			_this2.self._23 = 0.0;
			_this2.self._30 = 0.0;
			_this2.self._31 = 0.0;
			_this2.self._32 = 0.0;
			_this2.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this2.self._00 = (a111 * b11 - a121 * b10 + a131 * b09) * det;
			_this2.self._01 = (a021 * b10 - a011 * b11 - a031 * b09) * det;
			_this2.self._02 = (a311 * b05 - a321 * b04 + a331 * b03) * det;
			_this2.self._03 = (a221 * b04 - a211 * b05 - a231 * b03) * det;
			_this2.self._10 = (a121 * b08 - a101 * b11 - a131 * b07) * det;
			_this2.self._11 = (a001 * b11 - a021 * b08 + a031 * b07) * det;
			_this2.self._12 = (a321 * b02 - a301 * b05 - a331 * b01) * det;
			_this2.self._13 = (a201 * b05 - a221 * b02 + a231 * b01) * det;
			_this2.self._20 = (a101 * b10 - a111 * b08 + a131 * b06) * det;
			_this2.self._21 = (a011 * b08 - a001 * b10 - a031 * b06) * det;
			_this2.self._22 = (a301 * b04 - a311 * b02 + a331 * b00) * det;
			_this2.self._23 = (a211 * b02 - a201 * b04 - a231 * b00) * det;
			_this2.self._30 = (a111 * b07 - a101 * b09 - a121 * b06) * det;
			_this2.self._31 = (a001 * b09 - a011 * b07 + a021 * b06) * det;
			_this2.self._32 = (a311 * b01 - a301 * b03 - a321 * b00) * det;
			_this2.self._33 = (a201 * b03 - a211 * b01 + a221 * b00) * det;
		}
		var _this3 = this.V;
		var m3 = this.transform.world;
		var a002 = m3.self._00;
		var a012 = m3.self._01;
		var a022 = m3.self._02;
		var a032 = m3.self._03;
		var a102 = m3.self._10;
		var a112 = m3.self._11;
		var a122 = m3.self._12;
		var a132 = m3.self._13;
		var a202 = m3.self._20;
		var a212 = m3.self._21;
		var a222 = m3.self._22;
		var a232 = m3.self._23;
		var a302 = m3.self._30;
		var a312 = m3.self._31;
		var a322 = m3.self._32;
		var a332 = m3.self._33;
		var b001 = a002 * a112 - a012 * a102;
		var b011 = a002 * a122 - a022 * a102;
		var b021 = a002 * a132 - a032 * a102;
		var b031 = a012 * a122 - a022 * a112;
		var b041 = a012 * a132 - a032 * a112;
		var b051 = a022 * a132 - a032 * a122;
		var b061 = a202 * a312 - a212 * a302;
		var b071 = a202 * a322 - a222 * a302;
		var b081 = a202 * a332 - a232 * a302;
		var b091 = a212 * a322 - a222 * a312;
		var b101 = a212 * a332 - a232 * a312;
		var b111 = a222 * a332 - a232 * a322;
		var det1 = b001 * b111 - b011 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
		if(det1 == 0.0) {
			_this3.self._00 = 1.0;
			_this3.self._01 = 0.0;
			_this3.self._02 = 0.0;
			_this3.self._03 = 0.0;
			_this3.self._10 = 0.0;
			_this3.self._11 = 1.0;
			_this3.self._12 = 0.0;
			_this3.self._13 = 0.0;
			_this3.self._20 = 0.0;
			_this3.self._21 = 0.0;
			_this3.self._22 = 1.0;
			_this3.self._23 = 0.0;
			_this3.self._30 = 0.0;
			_this3.self._31 = 0.0;
			_this3.self._32 = 0.0;
			_this3.self._33 = 1.0;
		} else {
			det1 = 1.0 / det1;
			_this3.self._00 = (a112 * b111 - a122 * b101 + a132 * b091) * det1;
			_this3.self._01 = (a022 * b101 - a012 * b111 - a032 * b091) * det1;
			_this3.self._02 = (a312 * b051 - a322 * b041 + a332 * b031) * det1;
			_this3.self._03 = (a222 * b041 - a212 * b051 - a232 * b031) * det1;
			_this3.self._10 = (a122 * b081 - a102 * b111 - a132 * b071) * det1;
			_this3.self._11 = (a002 * b111 - a022 * b081 + a032 * b071) * det1;
			_this3.self._12 = (a322 * b021 - a302 * b051 - a332 * b011) * det1;
			_this3.self._13 = (a202 * b051 - a222 * b021 + a232 * b011) * det1;
			_this3.self._20 = (a102 * b101 - a112 * b081 + a132 * b061) * det1;
			_this3.self._21 = (a012 * b081 - a002 * b101 - a032 * b061) * det1;
			_this3.self._22 = (a302 * b041 - a312 * b021 + a332 * b001) * det1;
			_this3.self._23 = (a212 * b021 - a202 * b041 - a232 * b001) * det1;
			_this3.self._30 = (a112 * b071 - a102 * b091 - a122 * b061) * det1;
			_this3.self._31 = (a002 * b091 - a012 * b071 + a022 * b061) * det1;
			_this3.self._32 = (a312 * b011 - a302 * b031 - a322 * b001) * det1;
			_this3.self._33 = (a202 * b031 - a212 * b011 + a222 * b001) * det1;
		}
		var _this4 = this.V;
		var _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this4.self._00;
		_this5.y = _this4.self._01;
		_this5.z = _this4.self._02;
		_this5.w = 1.0;
		var _this6 = _this5;
		var scale = 1.0 / Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		_this4.self._00 *= scale;
		_this4.self._01 *= scale;
		_this4.self._02 *= scale;
		var _this7 = iron_math_Mat4.helpVec;
		_this7.x = _this4.self._10;
		_this7.y = _this4.self._11;
		_this7.z = _this4.self._12;
		_this7.w = 1.0;
		var _this8 = _this7;
		scale = 1.0 / Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
		_this4.self._10 *= scale;
		_this4.self._11 *= scale;
		_this4.self._12 *= scale;
		var _this9 = iron_math_Mat4.helpVec;
		_this9.x = _this4.self._20;
		_this9.y = _this4.self._21;
		_this9.z = _this4.self._22;
		_this9.w = 1.0;
		var _this10 = _this9;
		scale = 1.0 / Math.sqrt(_this10.x * _this10.x + _this10.y * _this10.y + _this10.z * _this10.z);
		_this4.self._20 *= scale;
		_this4.self._21 *= scale;
		_this4.self._22 *= scale;
		_this4.self._03 = 0.0;
		_this4.self._13 = 0.0;
		_this4.self._23 = 0.0;
		_this4.self._30 = 0.0;
		_this4.self._31 = 0.0;
		_this4.self._32 = 0.0;
		_this4.self._33 = 1.0;
		var _this11 = iron_object_LightObject.m;
		var m4 = this.V;
		var a003 = _this11.self._00;
		var a013 = _this11.self._01;
		var a023 = _this11.self._02;
		var a033 = _this11.self._03;
		var a103 = _this11.self._10;
		var a113 = _this11.self._11;
		var a123 = _this11.self._12;
		var a133 = _this11.self._13;
		var a203 = _this11.self._20;
		var a213 = _this11.self._21;
		var a223 = _this11.self._22;
		var a233 = _this11.self._23;
		var a303 = _this11.self._30;
		var a313 = _this11.self._31;
		var a323 = _this11.self._32;
		var a333 = _this11.self._33;
		var b010 = m4.self._00;
		var b12 = m4.self._10;
		var b21 = m4.self._20;
		var b31 = m4.self._30;
		_this11.self._00 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._10 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._20 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._30 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		b010 = m4.self._01;
		b12 = m4.self._11;
		b21 = m4.self._21;
		b31 = m4.self._31;
		_this11.self._01 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._11 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._21 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._31 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		b010 = m4.self._02;
		b12 = m4.self._12;
		b21 = m4.self._22;
		b31 = m4.self._32;
		_this11.self._02 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._12 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._22 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._32 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		b010 = m4.self._03;
		b12 = m4.self._13;
		b21 = m4.self._23;
		b31 = m4.self._33;
		_this11.self._03 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._13 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._23 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._33 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		iron_object_LightObject.setCorners();
		var _g3 = 0;
		var _g12 = iron_object_LightObject.corners;
		while(_g3 < _g12.length) {
			var v = _g12[_g3];
			++_g3;
			var m5 = iron_object_LightObject.m;
			var x = v.x;
			var y = v.y;
			var z = v.z;
			var w = v.w;
			v.x = m5.self._00 * x + m5.self._10 * y + m5.self._20 * z + m5.self._30 * w;
			v.y = m5.self._01 * x + m5.self._11 * y + m5.self._21 * z + m5.self._31 * w;
			v.z = m5.self._02 * x + m5.self._12 * y + m5.self._22 * z + m5.self._32 * w;
			v.w = m5.self._03 * x + m5.self._13 * y + m5.self._23 * z + m5.self._33 * w;
			v.x /= v.w;
			v.y /= v.w;
			v.z /= v.w;
			v.w = 1.0;
		}
		var minx = iron_object_LightObject.corners[0].x;
		var miny = iron_object_LightObject.corners[0].y;
		var minz = iron_object_LightObject.corners[0].z;
		var maxx = iron_object_LightObject.corners[0].x;
		var maxy = iron_object_LightObject.corners[0].y;
		var maxz = iron_object_LightObject.corners[0].z;
		var _g21 = 0;
		var _g31 = iron_object_LightObject.corners;
		while(_g21 < _g31.length) {
			var v1 = _g31[_g21];
			++_g21;
			if(v1.x < minx) {
				minx = v1.x;
			}
			if(v1.x > maxx) {
				maxx = v1.x;
			}
			if(v1.y < miny) {
				miny = v1.y;
			}
			if(v1.y > maxy) {
				maxy = v1.y;
			}
			if(v1.z < minz) {
				minz = v1.z;
			}
			if(v1.z > maxz) {
				maxz = v1.z;
			}
		}
		var v11 = iron_object_LightObject.corners[0];
		var v2 = iron_object_LightObject.corners[7];
		var vx = v11.x - v2.x;
		var vy = v11.y - v2.y;
		var vz = v11.z - v2.z;
		var diag0 = Math.sqrt(vx * vx + vy * vy + vz * vz);
		var offx = (diag0 - (maxx - minx)) * 0.5;
		var offy = (diag0 - (maxy - miny)) * 0.5;
		minx -= offx;
		maxx += offx;
		miny -= offy;
		maxy += offy;
		var smsize = this.data.raw.shadowmap_size;
		smsize = smsize / 4 | 0;
		var worldPerTexelX = (maxx - minx) / smsize;
		var worldPerTexelY = (maxy - miny) / smsize;
		var worldPerTexelZ = (maxz - minz) / smsize;
		minx = Math.floor(minx / worldPerTexelX) * worldPerTexelX;
		miny = Math.floor(miny / worldPerTexelY) * worldPerTexelY;
		minz = Math.floor(minz / worldPerTexelZ) * worldPerTexelZ;
		maxx = Math.floor(maxx / worldPerTexelX) * worldPerTexelX;
		maxy = Math.floor(maxy / worldPerTexelY) * worldPerTexelY;
		maxz = Math.floor(maxz / worldPerTexelZ) * worldPerTexelZ;
		var hx = (maxx - minx) / 2;
		var hy = (maxy - miny) / 2;
		var hz = (maxz - minz) / 2;
		this.V.self._30 = -(minx + hx);
		this.V.self._31 = -(miny + hy);
		this.V.self._32 = -(minz + hz);
		var left1 = -hx;
		var bottom1 = -hy;
		var near2 = -hz * 4 * iron_object_LightObject.cascadeBounds;
		var rl1 = hx - left1;
		var tb1 = hy - bottom1;
		var fn1 = hz - near2;
		var tx1 = -(hx + left1) / rl1;
		var ty1 = -(hy + bottom1) / tb1;
		var tz1 = -(hz + near2) / fn1;
		iron_object_LightObject.m = new iron_math_Mat4(2 / rl1,0,0,tx1,0,2 / tb1,0,ty1,0,0,-2 / fn1,tz1,0,0,0,1);
		var _this12 = this.P;
		var m6 = iron_object_LightObject.m;
		_this12.self._00 = m6.self._00;
		_this12.self._01 = m6.self._01;
		_this12.self._02 = m6.self._02;
		_this12.self._03 = m6.self._03;
		_this12.self._10 = m6.self._10;
		_this12.self._11 = m6.self._11;
		_this12.self._12 = m6.self._12;
		_this12.self._13 = m6.self._13;
		_this12.self._20 = m6.self._20;
		_this12.self._21 = m6.self._21;
		_this12.self._22 = m6.self._22;
		_this12.self._23 = m6.self._23;
		_this12.self._30 = m6.self._30;
		_this12.self._31 = m6.self._31;
		_this12.self._32 = m6.self._32;
		_this12.self._33 = m6.self._33;
		this.updateViewFrustum(camera);
		if(this.cascadeVP == null) {
			this.cascadeVP = [];
			var _g4 = 0;
			var _g5 = iron_object_LightObject.cascadeCount;
			while(_g4 < _g5) {
				var i2 = _g4++;
				this.cascadeVP.push(new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0));
			}
		}
		var _this13 = this.cascadeVP[cascade];
		var m7 = this.VP;
		_this13.self._00 = m7.self._00;
		_this13.self._01 = m7.self._01;
		_this13.self._02 = m7.self._02;
		_this13.self._03 = m7.self._03;
		_this13.self._10 = m7.self._10;
		_this13.self._11 = m7.self._11;
		_this13.self._12 = m7.self._12;
		_this13.self._13 = m7.self._13;
		_this13.self._20 = m7.self._20;
		_this13.self._21 = m7.self._21;
		_this13.self._22 = m7.self._22;
		_this13.self._23 = m7.self._23;
		_this13.self._30 = m7.self._30;
		_this13.self._31 = m7.self._31;
		_this13.self._32 = m7.self._32;
		_this13.self._33 = m7.self._33;
	}
	,updateViewFrustum: function(camera) {
		var _this = this.VP;
		var b = this.P;
		var a = this.V;
		var a00 = a.self._00;
		var a01 = a.self._01;
		var a02 = a.self._02;
		var a03 = a.self._03;
		var a10 = a.self._10;
		var a11 = a.self._11;
		var a12 = a.self._12;
		var a13 = a.self._13;
		var a20 = a.self._20;
		var a21 = a.self._21;
		var a22 = a.self._22;
		var a23 = a.self._23;
		var a30 = a.self._30;
		var a31 = a.self._31;
		var a32 = a.self._32;
		var a33 = a.self._33;
		var b0 = b.self._00;
		var b1 = b.self._10;
		var b2 = b.self._20;
		var b3 = b.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._03;
		b1 = b.self._13;
		b2 = b.self._23;
		b3 = b.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		if(camera.data.raw.frustum_culling) {
			if(this.frustumPlanes == null) {
				this.frustumPlanes = [];
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
			}
			iron_object_CameraObject.buildViewFrustum(this.VP,this.frustumPlanes);
		}
	}
	,setCubeFace: function(face,camera) {
		var _this = iron_object_LightObject.eye;
		_this.x = this.transform.world.self._30;
		_this.y = this.transform.world.self._31;
		_this.z = this.transform.world.self._32;
		_this.w = 1.0;
		var flip = false;
		iron_object_CameraObject.setCubeFace(this.V,iron_object_LightObject.eye,face,flip);
		this.updateViewFrustum(camera);
	}
	,getCascadeData: function() {
		if(this.cascadeData == null) {
			var this1 = new Float32Array(iron_object_LightObject.cascadeCount * 16 + 4);
			this.cascadeData = this1;
		}
		if(this.cascadeVP == null) {
			return this.cascadeData;
		}
		var _g = 0;
		var _g1 = iron_object_LightObject.cascadeCount;
		while(_g < _g1) {
			var i = _g++;
			var _this = iron_object_LightObject.m;
			var m = this.cascadeVP[i];
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
			var _this1 = this.bias;
			var m1 = iron_object_Uniforms.biasMat;
			_this1.self._00 = m1.self._00;
			_this1.self._01 = m1.self._01;
			_this1.self._02 = m1.self._02;
			_this1.self._03 = m1.self._03;
			_this1.self._10 = m1.self._10;
			_this1.self._11 = m1.self._11;
			_this1.self._12 = m1.self._12;
			_this1.self._13 = m1.self._13;
			_this1.self._20 = m1.self._20;
			_this1.self._21 = m1.self._21;
			_this1.self._22 = m1.self._22;
			_this1.self._23 = m1.self._23;
			_this1.self._30 = m1.self._30;
			_this1.self._31 = m1.self._31;
			_this1.self._32 = m1.self._32;
			_this1.self._33 = m1.self._33;
			this.bias.self._00 /= iron_object_LightObject.cascadeCount;
			this.bias.self._30 /= iron_object_LightObject.cascadeCount;
			this.bias.self._30 += i * (1 / iron_object_LightObject.cascadeCount);
			var _this2 = iron_object_LightObject.m;
			var m2 = this.bias;
			var a00 = _this2.self._00;
			var a01 = _this2.self._01;
			var a02 = _this2.self._02;
			var a03 = _this2.self._03;
			var a10 = _this2.self._10;
			var a11 = _this2.self._11;
			var a12 = _this2.self._12;
			var a13 = _this2.self._13;
			var a20 = _this2.self._20;
			var a21 = _this2.self._21;
			var a22 = _this2.self._22;
			var a23 = _this2.self._23;
			var a30 = _this2.self._30;
			var a31 = _this2.self._31;
			var a32 = _this2.self._32;
			var a33 = _this2.self._33;
			var b0 = m2.self._00;
			var b1 = m2.self._10;
			var b2 = m2.self._20;
			var b3 = m2.self._30;
			_this2.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m2.self._01;
			b1 = m2.self._11;
			b2 = m2.self._21;
			b3 = m2.self._31;
			_this2.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m2.self._02;
			b1 = m2.self._12;
			b2 = m2.self._22;
			b3 = m2.self._32;
			_this2.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m2.self._03;
			b1 = m2.self._13;
			b2 = m2.self._23;
			b3 = m2.self._33;
			_this2.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			this.cascadeData[i * 16] = iron_object_LightObject.m.self._00;
			this.cascadeData[i * 16 + 1] = iron_object_LightObject.m.self._01;
			this.cascadeData[i * 16 + 2] = iron_object_LightObject.m.self._02;
			this.cascadeData[i * 16 + 3] = iron_object_LightObject.m.self._03;
			this.cascadeData[i * 16 + 4] = iron_object_LightObject.m.self._10;
			this.cascadeData[i * 16 + 5] = iron_object_LightObject.m.self._11;
			this.cascadeData[i * 16 + 6] = iron_object_LightObject.m.self._12;
			this.cascadeData[i * 16 + 7] = iron_object_LightObject.m.self._13;
			this.cascadeData[i * 16 + 8] = iron_object_LightObject.m.self._20;
			this.cascadeData[i * 16 + 9] = iron_object_LightObject.m.self._21;
			this.cascadeData[i * 16 + 10] = iron_object_LightObject.m.self._22;
			this.cascadeData[i * 16 + 11] = iron_object_LightObject.m.self._23;
			this.cascadeData[i * 16 + 12] = iron_object_LightObject.m.self._30;
			this.cascadeData[i * 16 + 13] = iron_object_LightObject.m.self._31;
			this.cascadeData[i * 16 + 14] = iron_object_LightObject.m.self._32;
			this.cascadeData[i * 16 + 15] = iron_object_LightObject.m.self._33;
		}
		this.cascadeData[iron_object_LightObject.cascadeCount * 16] = this.cascadeSplit[0];
		this.cascadeData[iron_object_LightObject.cascadeCount * 16 + 1] = this.cascadeSplit[1];
		this.cascadeData[iron_object_LightObject.cascadeCount * 16 + 2] = this.cascadeSplit[2];
		this.cascadeData[iron_object_LightObject.cascadeCount * 16 + 3] = this.cascadeSplit[3];
		return this.cascadeData;
	}
	,__class__: iron_object_LightObject
});
var iron_object_MeshObject = function(data,materials) {
	this.force_context = null;
	this.skip_context = null;
	this.tilesheet = null;
	this.frustumCulling = true;
	this.screenSize = 0.0;
	this.particleIndex = -1;
	this.particleOwner = null;
	this.particleChildren = null;
	this.particleSystems = null;
	this.materialIndex = 0;
	this.data = null;
	iron_object_Object.call(this);
	this.materials = materials;
	this.setData(data);
	iron_Scene.active.meshes.push(this);
};
$hxClasses["iron.object.MeshObject"] = iron_object_MeshObject;
iron_object_MeshObject.__name__ = "iron.object.MeshObject";
iron_object_MeshObject.__super__ = iron_object_Object;
iron_object_MeshObject.prototype = $extend(iron_object_Object.prototype,{
	setData: function(data) {
		this.data = data;
		data.refcount++;
		data.geom.build();
		this.transform.scaleWorld = data.scalePos;
	}
	,remove: function() {
		if(this.particleChildren != null) {
			var _g = 0;
			var _g1 = this.particleChildren;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.remove();
			}
			this.particleChildren = null;
		}
		if(this.particleSystems != null) {
			var _g2 = 0;
			var _g11 = this.particleSystems;
			while(_g2 < _g11.length) {
				var psys = _g11[_g2];
				++_g2;
				psys.remove();
			}
			this.particleSystems = null;
		}
		if(this.tilesheet != null) {
			this.tilesheet.remove();
		}
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.meshes,this);
		}
		this.data.refcount--;
		iron_object_Object.prototype.remove.call(this);
	}
	,setupAnimation: function(oactions) {
		var hasAction = this.parent != null && this.parent.raw != null && this.parent.raw.bone_actions != null;
		if(hasAction) {
			var armatureName = this.parent.name;
			this.animation = this.getParentArmature(armatureName);
			if(this.animation == null) {
				this.animation = new iron_object_BoneAnimation(armatureName);
			}
			if(this.data.isSkinned) {
				(js_Boot.__cast(this.animation , iron_object_BoneAnimation)).setSkin(this);
			}
		}
		iron_object_Object.prototype.setupAnimation.call(this,oactions);
	}
	,setupParticleSystem: function(sceneName,pref) {
		if(this.particleSystems == null) {
			this.particleSystems = [];
		}
		var psys = new iron_object_ParticleSystem(sceneName,pref);
		this.particleSystems.push(psys);
	}
	,setupTilesheet: function(sceneName,tilesheet_ref,tilesheet_action_ref) {
		this.tilesheet = new iron_object_Tilesheet(sceneName,tilesheet_ref,tilesheet_action_ref);
	}
	,setCulled: function(isShadow,b) {
		if(isShadow) {
			this.culledShadow = b;
		} else {
			this.culledMesh = b;
		}
		this.culled = this.culledMesh && this.culledShadow;
		if(b) {
			iron_RenderPath.culled++;
		}
		return b;
	}
	,cullMaterial: function(context) {
		var mats = this.materials;
		if(!(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true) && mats[0].getContext(context) == null) {
			return true;
		}
		var isShadow = context == "shadowmap";
		if(!this.visibleMesh && !isShadow) {
			return this.setCulled(isShadow,true);
		}
		if(!this.visibleShadow && isShadow) {
			return this.setCulled(isShadow,true);
		}
		if(this.skip_context == context) {
			return this.setCulled(isShadow,true);
		}
		if(this.force_context != null && this.force_context != context) {
			return this.setCulled(isShadow,true);
		}
		if(context == "voxel" && this.raw != null && this.raw.mobile == true) {
			return this.setCulled(isShadow,true);
		}
		return this.setCulled(isShadow,false);
	}
	,cullMesh: function(context,camera,light) {
		if(camera == null) {
			return false;
		}
		if(camera.data.raw.frustum_culling && this.frustumCulling) {
			var radiusScale = this.data.isSkinned ? 2.0 : 1.0;
			if(this.particleSystems != null || this.particleOwner != null) {
				radiusScale *= 1000;
			}
			if(context == "voxel") {
				radiusScale *= 100;
			}
			var isShadow = context == "shadowmap";
			var frustumPlanes = isShadow ? light.frustumPlanes : camera.frustumPlanes;
			if(isShadow && light.data.raw.type != "sun") {
				light.transform.radius = light.data.raw.far_plane;
				if(!iron_object_CameraObject.sphereInFrustum(camera.frustumPlanes,light.transform)) {
					return this.setCulled(isShadow,true);
				}
			}
			if(!this.data.geom.instanced) {
				if(!iron_object_CameraObject.sphereInFrustum(frustumPlanes,this.transform,radiusScale)) {
					return this.setCulled(isShadow,true);
				}
			}
		}
		this.culled = false;
		return this.culled;
	}
	,skipContext: function(context,mat) {
		if(mat.raw.skip_context != null && mat.raw.skip_context == context) {
			return true;
		}
		return false;
	}
	,getContexts: function(context,materials,materialContexts,shaderContexts) {
		var _g = 0;
		while(_g < materials.length) {
			var mat = materials[_g];
			++_g;
			var _g1 = 0;
			var _g11 = mat.raw.contexts.length;
			while(_g1 < _g11) {
				var i = _g1++;
				if(HxOverrides.substr(mat.raw.contexts[i].name,0,context.length) == context) {
					materialContexts.push(mat.contexts[i]);
					shaderContexts.push(mat.shader.getContext(context));
					break;
				}
			}
		}
	}
	,render: function(g,context,bindParams) {
		var _gthis = this;
		if(this.data == null || !this.data.geom.ready) {
			return;
		}
		if(!this.visible) {
			return;
		}
		if(this.cullMesh(context,iron_Scene.active.camera,iron_RenderPath.active.light)) {
			return;
		}
		var meshContext = this.raw != null && "mesh" == context;
		if(this.raw != null && this.raw.is_particle && this.particleOwner == null) {
			return;
		}
		if(this.particleSystems != null && meshContext) {
			if(this.particleChildren == null) {
				this.particleChildren = [];
				var _g = 0;
				var _g1 = this.particleSystems;
				while(_g < _g1.length) {
					var psys = _g1[_g];
					++_g;
					iron_Scene.active.spawnObject(psys.data.raw.instance_object,null,function(o) {
						if(o != null) {
							var c = o;
							_gthis.particleChildren.push(c);
							c.particleOwner = _gthis;
							c.particleIndex = _gthis.particleChildren.length - 1;
						}
					});
				}
			}
			var _g2 = 0;
			var _g11 = this.particleSystems.length;
			while(_g2 < _g11) {
				var i = _g2++;
				this.particleSystems[i].update(this.particleChildren[i],this);
			}
		}
		if(this.particleSystems != null && this.particleSystems.length > 0 && !this.particleSystems[0].data.raw.render_emitter) {
			return;
		}
		if(this.tilesheet != null) {
			this.tilesheet.update();
		}
		if(this.cullMaterial(context)) {
			return;
		}
		var mats = this.materials;
		var lod = this;
		if(this.raw != null && this.raw.lods != null && this.raw.lods.length > 0) {
			var camera = iron_Scene.active.camera;
			var tr = this.transform;
			var volume = tr.dim.x * tr.dim.y * tr.dim.z;
			this.screenSize = volume * (1.0 / this.cameraDistance);
			this.screenSize = this.screenSize > 1.0 ? 1.0 : this.screenSize;
			if(this.lods == null) {
				this.lods = [];
				var _g3 = 0;
				var _g12 = this.raw.lods;
				while(_g3 < _g12.length) {
					var l = _g12[_g3];
					++_g3;
					if(l.object_ref == "") {
						this.lods.push(null);
					} else {
						this.lods.push(iron_Scene.active.getChild(l.object_ref));
					}
				}
			}
			if(context == "voxel") {
				lod = this.lods[this.lods.length - 1];
			} else {
				var _g4 = 0;
				var _g13 = this.raw.lods.length;
				while(_g4 < _g13) {
					var i1 = _g4++;
					if(this.screenSize > this.raw.lods[i1].screen_size) {
						break;
					}
					lod = this.lods[i1];
					if(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true) {
						mats = lod.materials;
					}
				}
			}
			if(lod == null) {
				return;
			}
		} else {
			var camera1 = iron_Scene.active.camera;
			var tr1 = this.transform;
			var volume1 = tr1.dim.x * tr1.dim.y * tr1.dim.z;
			this.screenSize = volume1 * (1.0 / this.cameraDistance);
			this.screenSize = this.screenSize > 1.0 ? 1.0 : this.screenSize;
		}
		if(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true && mats[0].getContext(context) == null) {
			return;
		}
		var materialContexts = [];
		var shaderContexts = [];
		this.getContexts(context,mats,materialContexts,shaderContexts);
		iron_object_Uniforms.posUnpack = this.data.scalePos;
		iron_object_Uniforms.texUnpack = this.data.scaleTex;
		this.transform.update();
		var ldata = lod.data;
		var _g5 = 0;
		var _g14 = ldata.geom.indexBuffers.length;
		while(_g5 < _g14) {
			var i2 = _g5++;
			var mi = ldata.geom.materialIndices[i2];
			if(shaderContexts.length <= mi) {
				continue;
			}
			this.materialIndex = mi;
			if(this.materials.length > mi && this.skipContext(context,this.materials[mi])) {
				continue;
			}
			var scontext = shaderContexts[mi];
			if(scontext == null) {
				continue;
			}
			var elems = scontext.raw.vertex_elements;
			if(scontext.pipeState != iron_object_MeshObject.lastPipeline) {
				g.setPipeline(scontext.pipeState);
				iron_object_MeshObject.lastPipeline = scontext.pipeState;
			}
			iron_object_Uniforms.setContextConstants(g,scontext,bindParams);
			iron_object_Uniforms.setObjectConstants(g,scontext,this);
			if(materialContexts.length > mi) {
				iron_object_Uniforms.setMaterialConstants(g,scontext,materialContexts[mi]);
			}
			if(ldata.geom.instanced) {
				g.setVertexBuffers([ldata.geom.get(elems),ldata.geom.instancedVB]);
			} else {
				g.setVertexBuffer(ldata.geom.get(elems));
			}
			g.setIndexBuffer(ldata.geom.indexBuffers[i2]);
			if(ldata.geom.instanced) {
				g.drawIndexedVerticesInstanced(ldata.geom.instanceCount,ldata.geom.start,ldata.geom.count);
			} else {
				g.drawIndexedVertices(ldata.geom.start,ldata.geom.count);
			}
		}
		var isShadow = "shadowmap" == context;
		if(meshContext) {
			iron_RenderPath.numTrisMesh += ldata.geom.numTris;
		} else if(isShadow) {
			iron_RenderPath.numTrisShadow += ldata.geom.numTris;
		}
		iron_RenderPath.drawCalls++;
	}
	,__class__: iron_object_MeshObject
});
var iron_object_ObjectAnimation = function(object,oactions) {
	this.bezierFrameIndex = -1;
	this.s0 = 0.0;
	this.object = object;
	this.oactions = oactions;
	this.isSkinned = false;
	iron_object_Animation.call(this);
};
$hxClasses["iron.object.ObjectAnimation"] = iron_object_ObjectAnimation;
iron_object_ObjectAnimation.__name__ = "iron.object.ObjectAnimation";
iron_object_ObjectAnimation.__super__ = iron_object_Animation;
iron_object_ObjectAnimation.prototype = $extend(iron_object_Animation.prototype,{
	getAction: function(action) {
		var _g = 0;
		var _g1 = this.oactions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a != null && a.objects[0].name == action) {
				return a.objects[0];
			}
		}
		return null;
	}
	,play: function(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.0;
		}
		if(action == null) {
			action = "";
		}
		iron_object_Animation.prototype.play.call(this,action,onComplete,blendTime,speed,loop);
		if(this.action == "" && this.oactions[0] != null) {
			this.action = this.oactions[0].objects[0].name;
		}
		this.oaction = this.getAction(this.action);
		if(this.oaction != null) {
			this.isSampled = this.oaction.sampled != null && this.oaction.sampled;
		}
	}
	,update: function(delta) {
		if(!this.object.visible || this.object.culled || this.oaction == null) {
			return;
		}
		iron_object_Animation.beginProfile();
		iron_object_Animation.prototype.update.call(this,delta);
		if(this.paused) {
			return;
		}
		if(!this.isSkinned) {
			this.updateObjectAnim();
		}
		iron_object_Animation.endProfile();
	}
	,updateObjectAnim: function() {
		if(this.isSampled) {
			this.updateTrack(this.oaction.anim);
			this.updateAnimSampled(this.oaction.anim,this.object.transform.world);
			var _this = this.object.transform.world;
			var loc = this.object.transform.loc;
			var quat = this.object.transform.rot;
			var scale = this.object.transform.scale;
			loc.x = _this.self._30;
			loc.y = _this.self._31;
			loc.z = _this.self._32;
			var _this1 = iron_math_Mat4.helpVec;
			_this1.x = _this.self._00;
			_this1.y = _this.self._01;
			_this1.z = _this.self._02;
			_this1.w = 1.0;
			var _this2 = _this1;
			scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
			var _this3 = iron_math_Mat4.helpVec;
			_this3.x = _this.self._10;
			_this3.y = _this.self._11;
			_this3.z = _this.self._12;
			_this3.w = 1.0;
			var _this4 = _this3;
			scale.y = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
			var _this5 = iron_math_Mat4.helpVec;
			_this5.x = _this.self._20;
			_this5.y = _this.self._21;
			_this5.z = _this.self._22;
			_this5.w = 1.0;
			var _this6 = _this5;
			scale.z = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
			var _this7 = _this.self;
			var m3 = _this7._12;
			var m4 = _this7._22;
			var m5 = _this7._32;
			var m6 = _this7._13;
			var m7 = _this7._23;
			var m8 = _this7._33;
			var c00 = _this7._11 * (m4 * m8 - m5 * m7) - _this7._21 * (m3 * m8 - m5 * m6) + _this7._31 * (m3 * m7 - m4 * m6);
			var m31 = _this7._12;
			var m41 = _this7._22;
			var m51 = _this7._32;
			var m61 = _this7._13;
			var m71 = _this7._23;
			var m81 = _this7._33;
			var c01 = _this7._10 * (m41 * m81 - m51 * m71) - _this7._20 * (m31 * m81 - m51 * m61) + _this7._30 * (m31 * m71 - m41 * m61);
			var m32 = _this7._11;
			var m42 = _this7._21;
			var m52 = _this7._31;
			var m62 = _this7._13;
			var m72 = _this7._23;
			var m82 = _this7._33;
			var c02 = _this7._10 * (m42 * m82 - m52 * m72) - _this7._20 * (m32 * m82 - m52 * m62) + _this7._30 * (m32 * m72 - m42 * m62);
			var m33 = _this7._11;
			var m43 = _this7._21;
			var m53 = _this7._31;
			var m63 = _this7._12;
			var m73 = _this7._22;
			var m83 = _this7._32;
			var c03 = _this7._10 * (m43 * m83 - m53 * m73) - _this7._20 * (m33 * m83 - m53 * m63) + _this7._30 * (m33 * m73 - m43 * m63);
			if(_this7._00 * c00 - _this7._01 * c01 + _this7._02 * c02 - _this7._03 * c03 < 0.0) {
				scale.x = -scale.x;
			}
			var invs = 1.0 / scale.x;
			iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
			iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
			iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
			invs = 1.0 / scale.y;
			iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
			iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
			iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
			invs = 1.0 / scale.z;
			iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
			iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
			iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
			var m = iron_math_Mat4.helpMat;
			var m11 = m.self._00;
			var m12 = m.self._10;
			var m13 = m.self._20;
			var m21 = m.self._01;
			var m22 = m.self._11;
			var m23 = m.self._21;
			var m311 = m.self._02;
			var m321 = m.self._12;
			var m331 = m.self._22;
			var tr = m11 + m22 + m331;
			var s = 0.0;
			if(tr > 0) {
				s = 0.5 / Math.sqrt(tr + 1.0);
				quat.w = 0.25 / s;
				quat.x = (m321 - m23) * s;
				quat.y = (m13 - m311) * s;
				quat.z = (m21 - m12) * s;
			} else if(m11 > m22 && m11 > m331) {
				s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
				quat.w = (m321 - m23) / s;
				quat.x = 0.25 * s;
				quat.y = (m12 + m21) / s;
				quat.z = (m13 + m311) / s;
			} else if(m22 > m331) {
				s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
				quat.w = (m13 - m311) / s;
				quat.x = (m12 + m21) / s;
				quat.y = 0.25 * s;
				quat.z = (m23 + m321) / s;
			} else {
				s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
				quat.w = (m21 - m12) / s;
				quat.x = (m13 + m311) / s;
				quat.y = (m23 + m321) / s;
				quat.z = 0.25 * s;
			}
			var _g = 0;
			var _g1 = this.object.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.transform.buildMatrix();
			}
		} else {
			this.updateAnimNonSampled(this.oaction.anim,this.object.transform);
			this.object.transform.buildMatrix();
		}
	}
	,isTrackEnd: function(track) {
		if(this.speed > 0) {
			return this.frameIndex >= track.frames.length - 2;
		} else {
			return this.frameIndex <= 0;
		}
	}
	,updateAnimNonSampled: function(anim,transform) {
		if(anim == null) {
			return;
		}
		var total = anim.end * this.frameTime - anim.begin * this.frameTime;
		if(anim.has_delta) {
			var t = transform;
			if(t.dloc == null) {
				t.dloc = new iron_math_Vec4();
				t.drot = new iron_math_Quat();
				t.dscale = new iron_math_Vec4();
			}
			var _this = t.dloc;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.0;
			var _this1 = t.dscale;
			_this1.x = 0;
			_this1.y = 0;
			_this1.z = 0;
			_this1.w = 1.0;
			t._deulerX = t._deulerY = t._deulerZ = 0.0;
		}
		var _g = 0;
		var _g1 = anim.tracks;
		while(_g < _g1.length) {
			var track = _g1[_g];
			++_g;
			if(this.frameIndex == -1) {
				this.rewind(track);
			}
			var sign = this.speed > 0 ? 1 : -1;
			var t1 = this.time + anim.begin * this.frameTime;
			while(true) {
				var frameValues = track.frames;
				if(!(this.speed > 0 ? this.frameIndex < frameValues.length - 2 && t1 > frameValues[this.frameIndex + 1] * this.frameTime : this.frameIndex > 1 && t1 > frameValues[this.frameIndex - 1] * this.frameTime)) {
					break;
				}
				this.frameIndex += sign;
			}
			if(this.frameIndex >= track.frames.length) {
				continue;
			}
			if(this.time > total) {
				if(this.onComplete != null) {
					this.onComplete();
				}
				if(this.loop) {
					this.rewind(track);
				} else {
					this.frameIndex -= sign;
					this.paused = true;
				}
				return;
			}
			var ti = this.frameIndex;
			var t11 = track.frames[ti] * this.frameTime;
			var t2 = track.frames[ti + sign] * this.frameTime;
			var v1 = track.values[ti];
			var v2 = track.values[ti + sign];
			var v = 0.0;
			switch(track.curve) {
			case "bezier":
				var c1 = track.frames_control_plus[ti] * this.frameTime;
				var c2 = track.frames_control_minus[ti + sign] * this.frameTime;
				var p1 = track.values_control_plus[ti];
				var p2 = track.values_control_minus[ti + sign];
				if(this.frameIndex != this.bezierFrameIndex) {
					this.bezierFrameIndex = this.frameIndex;
					this.s0 = (t1 - t11) / (t2 - t11);
				}
				var a = (t2 - 3 * c2 + 3 * c1 - t11) * (this.s0 * this.s0 * this.s0) + 3 * (c2 - 2 * c1 + t11) * (this.s0 * this.s0) + 3 * (c1 - t11) * this.s0 + t11 - t1;
				var b = 3 * (t2 - 3 * c2 + 3 * c1 - t11) * (this.s0 * this.s0) + 6 * (c2 - 2 * c1 + t11) * this.s0 + 3 * (c1 - t11);
				var s = this.s0 - a / b;
				this.s0 = s;
				v = (1 - s) * (1 - s) * (1 - s) * v1 + 3 * s * (1 - s) * (1 - s) * p1 + 3 * (s * s) * (1 - s) * p2 + s * s * s * v2;
				break;
			case "linear":
				var s1 = (t1 - t11) / (t2 - t11);
				v = (1.0 - s1) * v1 + s1 * v2;
				break;
			}
			switch(track.target) {
			case "dxloc":
				transform.dloc.x = v;
				break;
			case "dxrot":
				transform._deulerX = v;
				break;
			case "dxscl":
				transform.dscale.x = v;
				break;
			case "dyloc":
				transform.dloc.y = v;
				break;
			case "dyrot":
				transform._deulerY = v;
				break;
			case "dyscl":
				transform.dscale.y = v;
				break;
			case "dzloc":
				transform.dloc.z = v;
				break;
			case "dzrot":
				transform._deulerZ = v;
				break;
			case "dzscl":
				transform.dscale.z = v;
				break;
			case "xloc":
				transform.loc.x = v;
				break;
			case "xrot":
				transform.setRotation(v,transform._eulerY,transform._eulerZ);
				break;
			case "xscl":
				transform.scale.x = v;
				break;
			case "yloc":
				transform.loc.y = v;
				break;
			case "yrot":
				transform.setRotation(transform._eulerX,v,transform._eulerZ);
				break;
			case "yscl":
				transform.scale.y = v;
				break;
			case "zloc":
				transform.loc.z = v;
				break;
			case "zrot":
				transform.setRotation(transform._eulerX,transform._eulerY,v);
				break;
			case "zscl":
				transform.scale.z = v;
				break;
			}
		}
	}
	,__class__: iron_object_ObjectAnimation
});
var iron_object_ParticleSystem = function(sceneName,pref) {
	this.m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.lapTime = 0.0;
	this.lap = 0;
	this.count = 0;
	this.seed = 0.0;
	this.spawnRate = 0.0;
	this.time = 0.0;
	this.animtime = 0.0;
	this.lifetime = 0.0;
	this.frameRate = 24;
	this.speed = 1.0;
	var _gthis = this;
	this.seed = pref.seed;
	this.particles = [];
	this.ready = false;
	iron_data_Data.getParticle(sceneName,pref.particle,function(b) {
		_gthis.data = b;
		_gthis.r = _gthis.data.raw;
		_gthis.gx = iron_Scene.active.raw.gravity[0] * _gthis.r.weight_gravity;
		_gthis.gy = iron_Scene.active.raw.gravity[1] * _gthis.r.weight_gravity;
		_gthis.gz = iron_Scene.active.raw.gravity[2] * _gthis.r.weight_gravity;
		_gthis.alignx = _gthis.r.object_align_factor[0] / 2;
		_gthis.aligny = _gthis.r.object_align_factor[1] / 2;
		_gthis.alignz = _gthis.r.object_align_factor[2] / 2;
		_gthis.lifetime = _gthis.r.lifetime / _gthis.frameRate;
		_gthis.animtime = (_gthis.r.frame_end - _gthis.r.frame_start) / _gthis.frameRate;
		_gthis.spawnRate = (_gthis.r.frame_end - _gthis.r.frame_start) / _gthis.r.count / _gthis.frameRate;
		var _g = 0;
		var _g1 = _gthis.r.count;
		while(_g < _g1) {
			var i = _g++;
			_gthis.particles.push(new iron_object_Particle(i));
		}
		_gthis.ready = true;
	});
};
$hxClasses["iron.object.ParticleSystem"] = iron_object_ParticleSystem;
iron_object_ParticleSystem.__name__ = "iron.object.ParticleSystem";
iron_object_ParticleSystem.prototype = {
	update: function(object,owner) {
		if(!this.ready || object == null || this.speed == 0.0) {
			return;
		}
		object.transform.loc = owner.transform.loc;
		object.transform.rot = owner.transform.rot;
		object.transform.buildMatrix();
		owner.transform.buildMatrix();
		var _this = object.transform.dim;
		var v = owner.transform.dim;
		_this.x = v.x;
		_this.y = v.y;
		_this.z = v.z;
		_this.w = v.w;
		this.dimx = object.transform.dim.x;
		this.dimy = object.transform.dim.y;
		if(object.tilesheet != null) {
			this.tilesx = object.tilesheet.raw.tilesx;
			this.tilesy = object.tilesheet.raw.tilesy;
			this.tilesFramerate = object.tilesheet.raw.framerate;
		}
		this.time += iron_system_Time.realDelta * this.speed;
		this.lap = this.time / this.animtime | 0;
		this.lapTime = this.time - this.lap * this.animtime;
		this.count = this.lapTime / this.spawnRate | 0;
		this.updateGpu(object,owner);
	}
	,getData: function() {
		var hair = this.r.type == 1;
		this.m.self._00 = this.r.loop ? this.animtime : -this.animtime;
		this.m.self._01 = hair ? 1 / this.particles.length : this.spawnRate;
		this.m.self._02 = hair ? 1 : this.lifetime;
		this.m.self._03 = this.particles.length;
		this.m.self._10 = hair ? 0 : this.alignx;
		this.m.self._11 = hair ? 0 : this.aligny;
		this.m.self._12 = hair ? 0 : this.alignz;
		this.m.self._13 = hair ? 0 : this.r.factor_random;
		this.m.self._20 = hair ? 0 : this.gx * this.r.mass;
		this.m.self._21 = hair ? 0 : this.gy * this.r.mass;
		this.m.self._22 = hair ? 0 : this.gz * this.r.mass;
		this.m.self._23 = hair ? 0 : this.r.lifetime_random;
		this.m.self._30 = this.tilesx;
		this.m.self._31 = this.tilesy;
		this.m.self._32 = 1 / this.tilesFramerate;
		this.m.self._33 = hair ? 1 : this.lapTime;
		return this.m;
	}
	,updateGpu: function(object,owner) {
		if(!object.data.geom.instanced) {
			this.setupGeomGpu(object,owner);
		}
	}
	,setupGeomGpu: function(object,owner) {
		var this1 = new Float32Array(this.particles.length * 3);
		var instancedData = this1;
		var i = 0;
		if(this.r.emit_from == 0) {
			var pa = owner.data.geom.positions;
			var sc = owner.data.scalePos;
			var _g = 0;
			var _g1 = this.particles;
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				var j = this.fhash(i) * (pa.length / 4) | 0;
				instancedData[i] = pa[j * 4] / 32767 * sc;
				++i;
				instancedData[i] = pa[j * 4 + 1] / 32767 * sc;
				++i;
				instancedData[i] = pa[j * 4 + 2] / 32767 * sc;
				++i;
			}
		} else {
			var _g2 = 0;
			var _g11 = this.particles;
			while(_g2 < _g11.length) {
				var p1 = _g11[_g2];
				++_g2;
				instancedData[i] = (Math.random() * 2.0 - 1.0) * (object.transform.dim.x / 2.0);
				++i;
				instancedData[i] = (Math.random() * 2.0 - 1.0) * (object.transform.dim.y / 2.0);
				++i;
				instancedData[i] = (Math.random() * 2.0 - 1.0) * (object.transform.dim.z / 2.0);
				++i;
			}
		}
		if(this.r.particle_size != 1.0) {
			object.data.geom.applyScale(this.r.particle_size,this.r.particle_size,this.r.particle_size);
		}
		object.data.geom.setupInstanced(instancedData,1,0);
	}
	,fhash: function(n) {
		var s = n + 1.0;
		s *= 9301.0 % s;
		s = (s * 9301.0 + 49297.0) % 233280.0;
		return s / 233280.0;
	}
	,remove: function() {
	}
	,__class__: iron_object_ParticleSystem
};
var iron_object_Particle = function(i) {
	this.i = i;
};
$hxClasses["iron.object.Particle"] = iron_object_Particle;
iron_object_Particle.__name__ = "iron.object.Particle";
iron_object_Particle.prototype = {
	__class__: iron_object_Particle
};
var iron_object_SpeakerObject = function(data) {
	this.paused = false;
	this.channels = [];
	this.sound = null;
	var _gthis = this;
	iron_object_Object.call(this);
	this.data = data;
	iron_Scene.active.speakers.push(this);
	if(data.sound == "") {
		return;
	}
	iron_data_Data.getSound(data.sound,function(sound) {
		_gthis.sound = sound;
		iron_App.notifyOnInit($bind(_gthis,_gthis.init));
	});
};
$hxClasses["iron.object.SpeakerObject"] = iron_object_SpeakerObject;
iron_object_SpeakerObject.__name__ = "iron.object.SpeakerObject";
iron_object_SpeakerObject.__super__ = iron_object_Object;
iron_object_SpeakerObject.prototype = $extend(iron_object_Object.prototype,{
	init: function() {
		if(this.visible && this.data.play_on_start) {
			this.play();
		}
	}
	,play: function() {
		if(this.sound == null || this.data.muted) {
			return;
		}
		if(this.paused) {
			var _g = 0;
			var _g1 = this.channels;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.play();
			}
			this.paused = false;
			return;
		}
		var channel = iron_system_Audio.play(this.sound,this.data.loop,this.data.stream);
		this.channels.push(channel);
		if(this.data.attenuation > 0 && this.channels.length == 1) {
			iron_App.notifyOnUpdate($bind(this,this.update));
		}
	}
	,update: function() {
		if(this.paused) {
			return;
		}
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.get_finished()) {
				HxOverrides.remove(this.channels,c);
			}
		}
		if(this.channels.length == 0) {
			iron_App.removeUpdate($bind(this,this.update));
			return;
		}
		var cam = iron_Scene.active.camera;
		var _this = cam.transform.world;
		var loc1_x = _this.self._30;
		var loc1_y = _this.self._31;
		var loc1_z = _this.self._32;
		var loc1_w = _this.self._33;
		var _this1 = this.transform.world;
		var loc2_x = _this1.self._30;
		var loc2_y = _this1.self._31;
		var loc2_z = _this1.self._32;
		var loc2_w = _this1.self._33;
		var vx = loc1_x - loc2_x;
		var vy = loc1_y - loc2_y;
		var vz = loc1_z - loc2_z;
		var d = Math.sqrt(vx * vx + vy * vy + vz * vz);
		d *= this.data.attenuation;
		var vol = 1.0 - Math.min(d / 100,1);
		var _g2 = 0;
		var _g3 = this.channels;
		while(_g2 < _g3.length) {
			var c1 = _g3[_g2];
			++_g2;
			c1.set_volume(vol * this.data.volume);
		}
	}
	,remove: function() {
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.speakers,this);
		}
		iron_object_Object.prototype.remove.call(this);
	}
	,__class__: iron_object_SpeakerObject
});
var iron_object_Tilesheet = function(sceneName,tilesheet_ref,tilesheet_action_ref) {
	this.onActionComplete = null;
	this.time = 0.0;
	this.frame = 0;
	this.paused = false;
	this.action = null;
	this.tileY = 0.0;
	this.tileX = 0.0;
	var _gthis = this;
	this.ready = false;
	iron_data_Data.getSceneRaw(sceneName,function(format) {
		var _g = 0;
		var _g1 = format.tilesheet_datas;
		while(_g < _g1.length) {
			var ts = _g1[_g];
			++_g;
			if(ts.name == tilesheet_ref) {
				_gthis.raw = ts;
				_gthis.play(tilesheet_action_ref);
				_gthis.ready = true;
				break;
			}
		}
	});
};
$hxClasses["iron.object.Tilesheet"] = iron_object_Tilesheet;
iron_object_Tilesheet.__name__ = "iron.object.Tilesheet";
iron_object_Tilesheet.prototype = {
	play: function(action_ref,onActionComplete) {
		this.onActionComplete = onActionComplete;
		var _g = 0;
		var _g1 = this.raw.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.name == action_ref) {
				this.action = a;
				break;
			}
		}
		this.setFrame(this.action.start);
		this.paused = false;
	}
	,remove: function() {
	}
	,update: function() {
		if(!this.ready || this.paused || this.action.start >= this.action.end) {
			return;
		}
		this.time += 0.016666666666666666 * iron_system_Time.scale;
		if(this.time >= 1 / this.raw.framerate) {
			this.setFrame(this.frame + 1);
		}
	}
	,setFrame: function(f) {
		this.frame = f;
		this.time = 0;
		var tx = this.frame % this.raw.tilesx;
		var ty = this.frame / this.raw.tilesx | 0;
		this.tileX = tx * (1 / this.raw.tilesx);
		this.tileY = ty * (1 / this.raw.tilesy);
		if(this.frame >= this.action.end && this.action.start < this.action.end) {
			if(this.onActionComplete != null) {
				this.onActionComplete();
			}
			if(this.action.loop) {
				this.setFrame(this.action.start);
			} else {
				this.paused = true;
			}
		}
	}
	,__class__: iron_object_Tilesheet
};
var iron_object_Transform = function(object) {
	this.dscale = null;
	this.drot = null;
	this.dloc = null;
	this.boneParent = null;
	this.appendMats = null;
	this.prependMats = null;
	this.scaleWorld = 1.0;
	this.localOnly = false;
	this.object = object;
	this.reset();
};
$hxClasses["iron.object.Transform"] = iron_object_Transform;
iron_object_Transform.__name__ = "iron.object.Transform";
iron_object_Transform.prototype = {
	reset: function() {
		this.world = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.worldUnpack = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.local = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.loc = new iron_math_Vec4();
		this.rot = new iron_math_Quat();
		this.scale = new iron_math_Vec4(1.0,1.0,1.0);
		this.dim = new iron_math_Vec4(2.0,2.0,2.0);
		this.radius = 1.0;
		this.dirty = true;
	}
	,update: function() {
		if(this.dirty) {
			this.buildMatrix();
		}
	}
	,composeDelta: function() {
		var _this = this.dloc;
		var a = this.loc;
		var b = this.dloc;
		_this.x = a.x + b.x;
		_this.y = a.y + b.y;
		_this.z = a.z + b.z;
		var _this1 = this.dscale;
		var a1 = this.dscale;
		var b1 = this.scale;
		_this1.x = a1.x + b1.x;
		_this1.y = a1.y + b1.y;
		_this1.z = a1.z + b1.z;
		var _this2 = this.drot;
		var f = this._deulerX / 2;
		var c1 = Math.cos(f);
		var s1 = Math.sin(f);
		f = this._deulerY / 2;
		var c2 = Math.cos(f);
		var s2 = Math.sin(f);
		f = this._deulerZ / 2;
		var c3 = Math.cos(f);
		var s3 = Math.sin(f);
		_this2.x = s1 * c2 * c3 + c1 * s2 * s3;
		_this2.y = c1 * s2 * c3 + s1 * c2 * s3;
		_this2.z = c1 * c2 * s3 - s1 * s2 * c3;
		_this2.w = c1 * c2 * c3 - s1 * s2 * s3;
		var _this3 = this.drot;
		var q1 = this.rot;
		var q2 = this.drot;
		var q1x = q1.x;
		var q1y = q1.y;
		var q1z = q1.z;
		var q1w = q1.w;
		var q2x = q2.x;
		var q2y = q2.y;
		var q2z = q2.z;
		var q2w = q2.w;
		_this3.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		_this3.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		_this3.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		_this3.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		var _this4 = this.local;
		var loc = this.dloc;
		var quat = this.drot;
		var sc = this.dscale;
		var x = quat.x;
		var y = quat.y;
		var z = quat.z;
		var w = quat.w;
		var x2 = x + x;
		var y2 = y + y;
		var z2 = z + z;
		var xx = x * x2;
		var xy = x * y2;
		var xz = x * z2;
		var yy = y * y2;
		var yz = y * z2;
		var zz = z * z2;
		var wx = w * x2;
		var wy = w * y2;
		var wz = w * z2;
		_this4.self._00 = 1.0 - (yy + zz);
		_this4.self._10 = xy - wz;
		_this4.self._20 = xz + wy;
		_this4.self._01 = xy + wz;
		_this4.self._11 = 1.0 - (xx + zz);
		_this4.self._21 = yz - wx;
		_this4.self._02 = xz - wy;
		_this4.self._12 = yz + wx;
		_this4.self._22 = 1.0 - (xx + yy);
		_this4.self._03 = 0.0;
		_this4.self._13 = 0.0;
		_this4.self._23 = 0.0;
		_this4.self._30 = 0.0;
		_this4.self._31 = 0.0;
		_this4.self._32 = 0.0;
		_this4.self._33 = 1.0;
		var x1 = sc.x;
		var y1 = sc.y;
		var z1 = sc.z;
		_this4.self._00 *= x1;
		_this4.self._01 *= x1;
		_this4.self._02 *= x1;
		_this4.self._03 *= x1;
		_this4.self._10 *= y1;
		_this4.self._11 *= y1;
		_this4.self._12 *= y1;
		_this4.self._13 *= y1;
		_this4.self._20 *= z1;
		_this4.self._21 *= z1;
		_this4.self._22 *= z1;
		_this4.self._23 *= z1;
		_this4.self._30 = loc.x;
		_this4.self._31 = loc.y;
		_this4.self._32 = loc.z;
	}
	,buildMatrix: function() {
		if(this.dloc == null) {
			var _this = this.local;
			var loc = this.loc;
			var quat = this.rot;
			var sc = this.scale;
			var x = quat.x;
			var y = quat.y;
			var z = quat.z;
			var w = quat.w;
			var x2 = x + x;
			var y2 = y + y;
			var z2 = z + z;
			var xx = x * x2;
			var xy = x * y2;
			var xz = x * z2;
			var yy = y * y2;
			var yz = y * z2;
			var zz = z * z2;
			var wx = w * x2;
			var wy = w * y2;
			var wz = w * z2;
			_this.self._00 = 1.0 - (yy + zz);
			_this.self._10 = xy - wz;
			_this.self._20 = xz + wy;
			_this.self._01 = xy + wz;
			_this.self._11 = 1.0 - (xx + zz);
			_this.self._21 = yz - wx;
			_this.self._02 = xz - wy;
			_this.self._12 = yz + wx;
			_this.self._22 = 1.0 - (xx + yy);
			_this.self._03 = 0.0;
			_this.self._13 = 0.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
			var x1 = sc.x;
			var y1 = sc.y;
			var z1 = sc.z;
			_this.self._00 *= x1;
			_this.self._01 *= x1;
			_this.self._02 *= x1;
			_this.self._03 *= x1;
			_this.self._10 *= y1;
			_this.self._11 *= y1;
			_this.self._12 *= y1;
			_this.self._13 *= y1;
			_this.self._20 *= z1;
			_this.self._21 *= z1;
			_this.self._22 *= z1;
			_this.self._23 *= z1;
			_this.self._30 = loc.x;
			_this.self._31 = loc.y;
			_this.self._32 = loc.z;
		} else {
			this.composeDelta();
		}
		if(this.prependMats != null) {
			var _this1 = iron_object_Transform.temp;
			_this1.self._00 = 1.0;
			_this1.self._01 = 0.0;
			_this1.self._02 = 0.0;
			_this1.self._03 = 0.0;
			_this1.self._10 = 0.0;
			_this1.self._11 = 1.0;
			_this1.self._12 = 0.0;
			_this1.self._13 = 0.0;
			_this1.self._20 = 0.0;
			_this1.self._21 = 0.0;
			_this1.self._22 = 1.0;
			_this1.self._23 = 0.0;
			_this1.self._30 = 0.0;
			_this1.self._31 = 0.0;
			_this1.self._32 = 0.0;
			_this1.self._33 = 1.0;
			var _g = 0;
			var _g1 = this.prependMats;
			while(_g < _g1.length) {
				var m = _g1[_g];
				++_g;
				var _this2 = iron_object_Transform.temp;
				var a00 = _this2.self._00;
				var a01 = _this2.self._01;
				var a02 = _this2.self._02;
				var a03 = _this2.self._03;
				var a10 = _this2.self._10;
				var a11 = _this2.self._11;
				var a12 = _this2.self._12;
				var a13 = _this2.self._13;
				var a20 = _this2.self._20;
				var a21 = _this2.self._21;
				var a22 = _this2.self._22;
				var a23 = _this2.self._23;
				var a30 = _this2.self._30;
				var a31 = _this2.self._31;
				var a32 = _this2.self._32;
				var a33 = _this2.self._33;
				var b0 = m.self._00;
				var b1 = m.self._10;
				var b2 = m.self._20;
				var b3 = m.self._30;
				_this2.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this2.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this2.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this2.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m.self._01;
				b1 = m.self._11;
				b2 = m.self._21;
				b3 = m.self._31;
				_this2.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this2.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this2.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this2.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m.self._02;
				b1 = m.self._12;
				b2 = m.self._22;
				b3 = m.self._32;
				_this2.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this2.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this2.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this2.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m.self._03;
				b1 = m.self._13;
				b2 = m.self._23;
				b3 = m.self._33;
				_this2.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this2.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this2.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this2.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			}
			var _this3 = iron_object_Transform.temp;
			var m1 = this.local;
			var a001 = _this3.self._00;
			var a011 = _this3.self._01;
			var a021 = _this3.self._02;
			var a031 = _this3.self._03;
			var a101 = _this3.self._10;
			var a111 = _this3.self._11;
			var a121 = _this3.self._12;
			var a131 = _this3.self._13;
			var a201 = _this3.self._20;
			var a211 = _this3.self._21;
			var a221 = _this3.self._22;
			var a231 = _this3.self._23;
			var a301 = _this3.self._30;
			var a311 = _this3.self._31;
			var a321 = _this3.self._32;
			var a331 = _this3.self._33;
			var b01 = m1.self._00;
			var b11 = m1.self._10;
			var b21 = m1.self._20;
			var b31 = m1.self._30;
			_this3.self._00 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
			_this3.self._10 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
			_this3.self._20 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
			_this3.self._30 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
			b01 = m1.self._01;
			b11 = m1.self._11;
			b21 = m1.self._21;
			b31 = m1.self._31;
			_this3.self._01 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
			_this3.self._11 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
			_this3.self._21 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
			_this3.self._31 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
			b01 = m1.self._02;
			b11 = m1.self._12;
			b21 = m1.self._22;
			b31 = m1.self._32;
			_this3.self._02 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
			_this3.self._12 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
			_this3.self._22 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
			_this3.self._32 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
			b01 = m1.self._03;
			b11 = m1.self._13;
			b21 = m1.self._23;
			b31 = m1.self._33;
			_this3.self._03 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
			_this3.self._13 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
			_this3.self._23 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
			_this3.self._33 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
			var _this4 = this.local;
			var m2 = iron_object_Transform.temp;
			_this4.self._00 = m2.self._00;
			_this4.self._01 = m2.self._01;
			_this4.self._02 = m2.self._02;
			_this4.self._03 = m2.self._03;
			_this4.self._10 = m2.self._10;
			_this4.self._11 = m2.self._11;
			_this4.self._12 = m2.self._12;
			_this4.self._13 = m2.self._13;
			_this4.self._20 = m2.self._20;
			_this4.self._21 = m2.self._21;
			_this4.self._22 = m2.self._22;
			_this4.self._23 = m2.self._23;
			_this4.self._30 = m2.self._30;
			_this4.self._31 = m2.self._31;
			_this4.self._32 = m2.self._32;
			_this4.self._33 = m2.self._33;
		}
		if(this.appendMats != null) {
			var _g2 = 0;
			var _g11 = this.appendMats;
			while(_g2 < _g11.length) {
				var m3 = _g11[_g2];
				++_g2;
				var _this5 = this.local;
				var a002 = _this5.self._00;
				var a012 = _this5.self._01;
				var a022 = _this5.self._02;
				var a032 = _this5.self._03;
				var a102 = _this5.self._10;
				var a112 = _this5.self._11;
				var a122 = _this5.self._12;
				var a132 = _this5.self._13;
				var a202 = _this5.self._20;
				var a212 = _this5.self._21;
				var a222 = _this5.self._22;
				var a232 = _this5.self._23;
				var a302 = _this5.self._30;
				var a312 = _this5.self._31;
				var a322 = _this5.self._32;
				var a332 = _this5.self._33;
				var b02 = m3.self._00;
				var b12 = m3.self._10;
				var b22 = m3.self._20;
				var b32 = m3.self._30;
				_this5.self._00 = a002 * b02 + a012 * b12 + a022 * b22 + a032 * b32;
				_this5.self._10 = a102 * b02 + a112 * b12 + a122 * b22 + a132 * b32;
				_this5.self._20 = a202 * b02 + a212 * b12 + a222 * b22 + a232 * b32;
				_this5.self._30 = a302 * b02 + a312 * b12 + a322 * b22 + a332 * b32;
				b02 = m3.self._01;
				b12 = m3.self._11;
				b22 = m3.self._21;
				b32 = m3.self._31;
				_this5.self._01 = a002 * b02 + a012 * b12 + a022 * b22 + a032 * b32;
				_this5.self._11 = a102 * b02 + a112 * b12 + a122 * b22 + a132 * b32;
				_this5.self._21 = a202 * b02 + a212 * b12 + a222 * b22 + a232 * b32;
				_this5.self._31 = a302 * b02 + a312 * b12 + a322 * b22 + a332 * b32;
				b02 = m3.self._02;
				b12 = m3.self._12;
				b22 = m3.self._22;
				b32 = m3.self._32;
				_this5.self._02 = a002 * b02 + a012 * b12 + a022 * b22 + a032 * b32;
				_this5.self._12 = a102 * b02 + a112 * b12 + a122 * b22 + a132 * b32;
				_this5.self._22 = a202 * b02 + a212 * b12 + a222 * b22 + a232 * b32;
				_this5.self._32 = a302 * b02 + a312 * b12 + a322 * b22 + a332 * b32;
				b02 = m3.self._03;
				b12 = m3.self._13;
				b22 = m3.self._23;
				b32 = m3.self._33;
				_this5.self._03 = a002 * b02 + a012 * b12 + a022 * b22 + a032 * b32;
				_this5.self._13 = a102 * b02 + a112 * b12 + a122 * b22 + a132 * b32;
				_this5.self._23 = a202 * b02 + a212 * b12 + a222 * b22 + a232 * b32;
				_this5.self._33 = a302 * b02 + a312 * b12 + a322 * b22 + a332 * b32;
			}
		}
		if(this.boneParent != null) {
			var _this6 = this.local;
			var b = this.boneParent;
			var a = this.local;
			var a003 = a.self._00;
			var a013 = a.self._01;
			var a023 = a.self._02;
			var a033 = a.self._03;
			var a103 = a.self._10;
			var a113 = a.self._11;
			var a123 = a.self._12;
			var a133 = a.self._13;
			var a203 = a.self._20;
			var a213 = a.self._21;
			var a223 = a.self._22;
			var a233 = a.self._23;
			var a303 = a.self._30;
			var a313 = a.self._31;
			var a323 = a.self._32;
			var a333 = a.self._33;
			var b03 = b.self._00;
			var b13 = b.self._10;
			var b23 = b.self._20;
			var b33 = b.self._30;
			_this6.self._00 = a003 * b03 + a013 * b13 + a023 * b23 + a033 * b33;
			_this6.self._10 = a103 * b03 + a113 * b13 + a123 * b23 + a133 * b33;
			_this6.self._20 = a203 * b03 + a213 * b13 + a223 * b23 + a233 * b33;
			_this6.self._30 = a303 * b03 + a313 * b13 + a323 * b23 + a333 * b33;
			b03 = b.self._01;
			b13 = b.self._11;
			b23 = b.self._21;
			b33 = b.self._31;
			_this6.self._01 = a003 * b03 + a013 * b13 + a023 * b23 + a033 * b33;
			_this6.self._11 = a103 * b03 + a113 * b13 + a123 * b23 + a133 * b33;
			_this6.self._21 = a203 * b03 + a213 * b13 + a223 * b23 + a233 * b33;
			_this6.self._31 = a303 * b03 + a313 * b13 + a323 * b23 + a333 * b33;
			b03 = b.self._02;
			b13 = b.self._12;
			b23 = b.self._22;
			b33 = b.self._32;
			_this6.self._02 = a003 * b03 + a013 * b13 + a023 * b23 + a033 * b33;
			_this6.self._12 = a103 * b03 + a113 * b13 + a123 * b23 + a133 * b33;
			_this6.self._22 = a203 * b03 + a213 * b13 + a223 * b23 + a233 * b33;
			_this6.self._32 = a303 * b03 + a313 * b13 + a323 * b23 + a333 * b33;
			b03 = b.self._03;
			b13 = b.self._13;
			b23 = b.self._23;
			b33 = b.self._33;
			_this6.self._03 = a003 * b03 + a013 * b13 + a023 * b23 + a033 * b33;
			_this6.self._13 = a103 * b03 + a113 * b13 + a123 * b23 + a133 * b33;
			_this6.self._23 = a203 * b03 + a213 * b13 + a223 * b23 + a233 * b33;
			_this6.self._33 = a303 * b03 + a313 * b13 + a323 * b23 + a333 * b33;
		}
		if(this.object.parent != null && !this.localOnly) {
			var _this7 = this.world;
			var a1 = this.local;
			var b4 = this.object.parent.transform.world;
			var a004 = a1.self._00;
			var a014 = a1.self._01;
			var a024 = a1.self._02;
			var a034 = a1.self._03;
			var a104 = a1.self._10;
			var a114 = a1.self._11;
			var a124 = a1.self._12;
			var a134 = a1.self._13;
			var a204 = a1.self._20;
			var a214 = a1.self._21;
			var a224 = a1.self._22;
			var a234 = a1.self._23;
			var a304 = a1.self._30;
			var a314 = a1.self._31;
			var a324 = a1.self._32;
			var a334 = a1.self._33;
			var b04 = b4.self._00;
			var b14 = b4.self._10;
			var b24 = b4.self._20;
			var b34 = b4.self._30;
			_this7.self._00 = a004 * b04 + a014 * b14 + a024 * b24 + a034 * b34;
			_this7.self._10 = a104 * b04 + a114 * b14 + a124 * b24 + a134 * b34;
			_this7.self._20 = a204 * b04 + a214 * b14 + a224 * b24 + a234 * b34;
			_this7.self._30 = a304 * b04 + a314 * b14 + a324 * b24 + a334 * b34;
			b04 = b4.self._01;
			b14 = b4.self._11;
			b24 = b4.self._21;
			b34 = b4.self._31;
			_this7.self._01 = a004 * b04 + a014 * b14 + a024 * b24 + a034 * b34;
			_this7.self._11 = a104 * b04 + a114 * b14 + a124 * b24 + a134 * b34;
			_this7.self._21 = a204 * b04 + a214 * b14 + a224 * b24 + a234 * b34;
			_this7.self._31 = a304 * b04 + a314 * b14 + a324 * b24 + a334 * b34;
			b04 = b4.self._02;
			b14 = b4.self._12;
			b24 = b4.self._22;
			b34 = b4.self._32;
			_this7.self._02 = a004 * b04 + a014 * b14 + a024 * b24 + a034 * b34;
			_this7.self._12 = a104 * b04 + a114 * b14 + a124 * b24 + a134 * b34;
			_this7.self._22 = a204 * b04 + a214 * b14 + a224 * b24 + a234 * b34;
			_this7.self._32 = a304 * b04 + a314 * b14 + a324 * b24 + a334 * b34;
			_this7.self._03 = 0;
			_this7.self._13 = 0;
			_this7.self._23 = 0;
			_this7.self._33 = 1;
		} else {
			var _this8 = this.world;
			var m4 = this.local;
			_this8.self._00 = m4.self._00;
			_this8.self._01 = m4.self._01;
			_this8.self._02 = m4.self._02;
			_this8.self._03 = m4.self._03;
			_this8.self._10 = m4.self._10;
			_this8.self._11 = m4.self._11;
			_this8.self._12 = m4.self._12;
			_this8.self._13 = m4.self._13;
			_this8.self._20 = m4.self._20;
			_this8.self._21 = m4.self._21;
			_this8.self._22 = m4.self._22;
			_this8.self._23 = m4.self._23;
			_this8.self._30 = m4.self._30;
			_this8.self._31 = m4.self._31;
			_this8.self._32 = m4.self._32;
			_this8.self._33 = m4.self._33;
		}
		var _this9 = this.worldUnpack;
		var m5 = this.world;
		_this9.self._00 = m5.self._00;
		_this9.self._01 = m5.self._01;
		_this9.self._02 = m5.self._02;
		_this9.self._03 = m5.self._03;
		_this9.self._10 = m5.self._10;
		_this9.self._11 = m5.self._11;
		_this9.self._12 = m5.self._12;
		_this9.self._13 = m5.self._13;
		_this9.self._20 = m5.self._20;
		_this9.self._21 = m5.self._21;
		_this9.self._22 = m5.self._22;
		_this9.self._23 = m5.self._23;
		_this9.self._30 = m5.self._30;
		_this9.self._31 = m5.self._31;
		_this9.self._32 = m5.self._32;
		_this9.self._33 = m5.self._33;
		if(this.scaleWorld != 1.0) {
			this.worldUnpack.self._00 *= this.scaleWorld;
			this.worldUnpack.self._01 *= this.scaleWorld;
			this.worldUnpack.self._02 *= this.scaleWorld;
			this.worldUnpack.self._03 *= this.scaleWorld;
			this.worldUnpack.self._10 *= this.scaleWorld;
			this.worldUnpack.self._11 *= this.scaleWorld;
			this.worldUnpack.self._12 *= this.scaleWorld;
			this.worldUnpack.self._13 *= this.scaleWorld;
			this.worldUnpack.self._20 *= this.scaleWorld;
			this.worldUnpack.self._21 *= this.scaleWorld;
			this.worldUnpack.self._22 *= this.scaleWorld;
			this.worldUnpack.self._23 *= this.scaleWorld;
		}
		if(this.object.constraints != null) {
			var _g3 = 0;
			var _g12 = this.object.constraints;
			while(_g3 < _g12.length) {
				var c = _g12[_g3];
				++_g3;
				c.apply(this);
			}
		}
		this.computeDim();
		var _g4 = 0;
		var _g13 = this.object.children;
		while(_g4 < _g13.length) {
			var n = _g13[_g4];
			++_g4;
			n.transform.buildMatrix();
		}
		this.dirty = false;
	}
	,decompose: function() {
		var _this = this.local;
		var loc = this.loc;
		var quat = this.rot;
		var scale = this.scale;
		loc.x = _this.self._30;
		loc.y = _this.self._31;
		loc.z = _this.self._32;
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._00;
		_this1.y = _this.self._01;
		_this1.z = _this.self._02;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this.self._10;
		_this3.y = _this.self._11;
		_this3.z = _this.self._12;
		_this3.w = 1.0;
		var _this4 = _this3;
		scale.y = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		var _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this.self._20;
		_this5.y = _this.self._21;
		_this5.z = _this.self._22;
		_this5.w = 1.0;
		var _this6 = _this5;
		scale.z = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		var _this7 = _this.self;
		var m3 = _this7._12;
		var m4 = _this7._22;
		var m5 = _this7._32;
		var m6 = _this7._13;
		var m7 = _this7._23;
		var m8 = _this7._33;
		var c00 = _this7._11 * (m4 * m8 - m5 * m7) - _this7._21 * (m3 * m8 - m5 * m6) + _this7._31 * (m3 * m7 - m4 * m6);
		var m31 = _this7._12;
		var m41 = _this7._22;
		var m51 = _this7._32;
		var m61 = _this7._13;
		var m71 = _this7._23;
		var m81 = _this7._33;
		var c01 = _this7._10 * (m41 * m81 - m51 * m71) - _this7._20 * (m31 * m81 - m51 * m61) + _this7._30 * (m31 * m71 - m41 * m61);
		var m32 = _this7._11;
		var m42 = _this7._21;
		var m52 = _this7._31;
		var m62 = _this7._13;
		var m72 = _this7._23;
		var m82 = _this7._33;
		var c02 = _this7._10 * (m42 * m82 - m52 * m72) - _this7._20 * (m32 * m82 - m52 * m62) + _this7._30 * (m32 * m72 - m42 * m62);
		var m33 = _this7._11;
		var m43 = _this7._21;
		var m53 = _this7._31;
		var m63 = _this7._12;
		var m73 = _this7._22;
		var m83 = _this7._32;
		var c03 = _this7._10 * (m43 * m83 - m53 * m73) - _this7._20 * (m33 * m83 - m53 * m63) + _this7._30 * (m33 * m73 - m43 * m63);
		if(_this7._00 * c00 - _this7._01 * c01 + _this7._02 * c02 - _this7._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		var invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
		var m = iron_math_Mat4.helpMat;
		var m11 = m.self._00;
		var m12 = m.self._10;
		var m13 = m.self._20;
		var m21 = m.self._01;
		var m22 = m.self._11;
		var m23 = m.self._21;
		var m311 = m.self._02;
		var m321 = m.self._12;
		var m331 = m.self._22;
		var tr = m11 + m22 + m331;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m321 - m23) * s;
			quat.y = (m13 - m311) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m311) / s;
		} else if(m22 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m321) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m311) / s;
			quat.y = (m23 + m321) / s;
			quat.z = 0.25 * s;
		}
	}
	,rotate: function(axis,f) {
		var _this = iron_object_Transform.q;
		var s = Math.sin(f * 0.5);
		_this.x = axis.x * s;
		_this.y = axis.y * s;
		_this.z = axis.z * s;
		_this.w = Math.cos(f * 0.5);
		var l = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z + _this.w * _this.w);
		if(l == 0.0) {
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 0;
		} else {
			l = 1.0 / l;
			_this.x *= l;
			_this.y *= l;
			_this.z *= l;
			_this.w *= l;
		}
		var _this1 = this.rot;
		var q1 = iron_object_Transform.q;
		var q2 = this.rot;
		var q1x = q1.x;
		var q1y = q1.y;
		var q1z = q1.z;
		var q1w = q1.w;
		var q2x = q2.x;
		var q2y = q2.y;
		var q2z = q2.z;
		var q2w = q2.w;
		_this1.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		_this1.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		_this1.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		_this1.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		this.buildMatrix();
	}
	,move: function(axis,f) {
		if(f == null) {
			f = 1.0;
		}
		var _this = this.loc;
		_this.x += axis.x * f;
		_this.y += axis.y * f;
		_this.z += axis.z * f;
		this.buildMatrix();
	}
	,setRotation: function(x,y,z) {
		var _this = this.rot;
		var f = x / 2;
		var c1 = Math.cos(f);
		var s1 = Math.sin(f);
		f = y / 2;
		var c2 = Math.cos(f);
		var s2 = Math.sin(f);
		f = z / 2;
		var c3 = Math.cos(f);
		var s3 = Math.sin(f);
		_this.x = s1 * c2 * c3 + c1 * s2 * s3;
		_this.y = c1 * s2 * c3 + s1 * c2 * s3;
		_this.z = c1 * c2 * s3 - s1 * s2 * c3;
		_this.w = c1 * c2 * c3 - s1 * s2 * s3;
		this._eulerX = x;
		this._eulerY = y;
		this._eulerZ = z;
		this.dirty = true;
	}
	,computeRadius: function() {
		this.radius = Math.sqrt(this.dim.x * this.dim.x + this.dim.y * this.dim.y + this.dim.z * this.dim.z);
	}
	,computeDim: function() {
		if(this.object.raw == null) {
			this.computeRadius();
			return;
		}
		var d = this.object.raw.dimensions;
		if(d == null) {
			var _this = this.dim;
			_this.x = 2 * this.scale.x;
			_this.y = 2 * this.scale.y;
			_this.z = 2 * this.scale.z;
			_this.w = 1.0;
		} else {
			var _this1 = this.dim;
			var y = d[1] * this.scale.y;
			var z = d[2] * this.scale.z;
			_this1.x = d[0] * this.scale.x;
			_this1.y = y;
			_this1.z = z;
			_this1.w = 1.0;
		}
		this.computeRadius();
	}
	,applyParentInverse: function() {
		var pt = this.object.parent.transform;
		pt.buildMatrix();
		var _this = iron_object_Transform.temp;
		var m = pt.world;
		var a00 = m.self._00;
		var a01 = m.self._01;
		var a02 = m.self._02;
		var a03 = m.self._03;
		var a10 = m.self._10;
		var a11 = m.self._11;
		var a12 = m.self._12;
		var a13 = m.self._13;
		var a20 = m.self._20;
		var a21 = m.self._21;
		var a22 = m.self._22;
		var a23 = m.self._23;
		var a30 = m.self._30;
		var a31 = m.self._31;
		var a32 = m.self._32;
		var a33 = m.self._33;
		var b00 = a00 * a11 - a01 * a10;
		var b01 = a00 * a12 - a02 * a10;
		var b02 = a00 * a13 - a03 * a10;
		var b03 = a01 * a12 - a02 * a11;
		var b04 = a01 * a13 - a03 * a11;
		var b05 = a02 * a13 - a03 * a12;
		var b06 = a20 * a31 - a21 * a30;
		var b07 = a20 * a32 - a22 * a30;
		var b08 = a20 * a33 - a23 * a30;
		var b09 = a21 * a32 - a22 * a31;
		var b10 = a21 * a33 - a23 * a31;
		var b11 = a22 * a33 - a23 * a32;
		var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this.self._00 = 1.0;
			_this.self._01 = 0.0;
			_this.self._02 = 0.0;
			_this.self._03 = 0.0;
			_this.self._10 = 0.0;
			_this.self._11 = 1.0;
			_this.self._12 = 0.0;
			_this.self._13 = 0.0;
			_this.self._20 = 0.0;
			_this.self._21 = 0.0;
			_this.self._22 = 1.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		var _this1 = this.local;
		var m1 = iron_object_Transform.temp;
		var a001 = _this1.self._00;
		var a011 = _this1.self._01;
		var a021 = _this1.self._02;
		var a031 = _this1.self._03;
		var a101 = _this1.self._10;
		var a111 = _this1.self._11;
		var a121 = _this1.self._12;
		var a131 = _this1.self._13;
		var a201 = _this1.self._20;
		var a211 = _this1.self._21;
		var a221 = _this1.self._22;
		var a231 = _this1.self._23;
		var a301 = _this1.self._30;
		var a311 = _this1.self._31;
		var a321 = _this1.self._32;
		var a331 = _this1.self._33;
		var b0 = m1.self._00;
		var b1 = m1.self._10;
		var b2 = m1.self._20;
		var b3 = m1.self._30;
		_this1.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = m1.self._01;
		b1 = m1.self._11;
		b2 = m1.self._21;
		b3 = m1.self._31;
		_this1.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = m1.self._02;
		b1 = m1.self._12;
		b2 = m1.self._22;
		b3 = m1.self._32;
		_this1.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = m1.self._03;
		b1 = m1.self._13;
		b2 = m1.self._23;
		b3 = m1.self._33;
		_this1.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		this.decompose();
		this.buildMatrix();
	}
	,applyParent: function() {
		var pt = this.object.parent.transform;
		var _this = this.local;
		var m = pt.world;
		var a00 = _this.self._00;
		var a01 = _this.self._01;
		var a02 = _this.self._02;
		var a03 = _this.self._03;
		var a10 = _this.self._10;
		var a11 = _this.self._11;
		var a12 = _this.self._12;
		var a13 = _this.self._13;
		var a20 = _this.self._20;
		var a21 = _this.self._21;
		var a22 = _this.self._22;
		var a23 = _this.self._23;
		var a30 = _this.self._30;
		var a31 = _this.self._31;
		var a32 = _this.self._32;
		var a33 = _this.self._33;
		var b0 = m.self._00;
		var b1 = m.self._10;
		var b2 = m.self._20;
		var b3 = m.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		this.decompose();
	}
	,__class__: iron_object_Transform
};
var kha_math_FastMatrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.FastMatrix3"] = kha_math_FastMatrix3;
kha_math_FastMatrix3.__name__ = "kha.math.FastMatrix3";
kha_math_FastMatrix3.prototype = {
	__class__: kha_math_FastMatrix3
};
var iron_object_Uniforms = function() { };
$hxClasses["iron.object.Uniforms"] = iron_object_Uniforms;
iron_object_Uniforms.__name__ = "iron.object.Uniforms";
iron_object_Uniforms.setContextConstants = function(g,context,bindParams) {
	if(context.raw.constants != null) {
		var _g = 0;
		var _g1 = context.raw.constants.length;
		while(_g < _g1) {
			var i = _g++;
			var c = context.raw.constants[i];
			iron_object_Uniforms.setContextConstant(g,context.constants[i],c);
		}
	}
	if(bindParams != null) {
		var _g2 = 0;
		var _g11 = bindParams.length / 2 | 0;
		while(_g2 < _g11) {
			var i1 = _g2++;
			var pos = i1 * 2;
			var rtID = bindParams[pos];
			var samplerID = bindParams[pos + 1];
			var attachDepth = false;
			var char = rtID.charAt(0);
			if(char == "_") {
				attachDepth = true;
				rtID = HxOverrides.substr(rtID,1,null);
			}
			var rt;
			if(attachDepth) {
				var _this = iron_RenderPath.active.depthToRenderTarget;
				rt = __map_reserved[rtID] != null ? _this.getReserved(rtID) : _this.h[rtID];
			} else {
				var _this1 = iron_RenderPath.active.renderTargets;
				rt = __map_reserved[rtID] != null ? _this1.getReserved(rtID) : _this1.h[rtID];
			}
			iron_object_Uniforms.bindRenderTarget(g,rt,context,samplerID,attachDepth);
		}
	}
	if(context.raw.texture_units != null) {
		var _g3 = 0;
		var _g12 = context.raw.texture_units.length;
		while(_g3 < _g12) {
			var j = _g3++;
			var tulink = context.raw.texture_units[j].link;
			if(tulink == null) {
				continue;
			}
			if(tulink == "_envmapRadiance") {
				var w = iron_Scene.active.world;
				if(w != null) {
					g.setTexture(context.textureUnits[j],w.probe.radiance);
					g.setTextureParameters(context.textureUnits[j],0,0,1,1,2);
				}
			} else if(tulink == "_envmap") {
				var w1 = iron_Scene.active.world;
				if(w1 != null) {
					g.setTexture(context.textureUnits[j],w1.envmap);
				}
			} else if(tulink == "_envmapBrdf") {
				var _this2 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["brdf.png"] != null ? _this2.getReserved("brdf.png") : _this2.h["brdf.png"]);
			} else if(tulink == "_clustersData") {
				g.setTexture(context.textureUnits[j],iron_object_LightObject.clustersData);
				g.setTextureParameters(context.textureUnits[j],2,2,0,0,0);
			} else if(tulink == "_noise8") {
				var _this3 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["noise8.png"] != null ? _this3.getReserved("noise8.png") : _this3.h["noise8.png"]);
				g.setTextureParameters(context.textureUnits[j],0,0,1,1,0);
			} else if(tulink == "_noise64") {
				var _this4 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["noise64.png"] != null ? _this4.getReserved("noise64.png") : _this4.h["noise64.png"]);
				g.setTextureParameters(context.textureUnits[j],0,0,1,1,0);
			} else if(tulink == "_blueNoise64") {
				var _this5 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["blue_noise64.png"] != null ? _this5.getReserved("blue_noise64.png") : _this5.h["blue_noise64.png"]);
				g.setTextureParameters(context.textureUnits[j],0,0,1,1,0);
			} else if(tulink == "_noise256") {
				var _this6 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["noise256.png"] != null ? _this6.getReserved("noise256.png") : _this6.h["noise256.png"]);
				g.setTextureParameters(context.textureUnits[j],0,0,1,1,0);
			} else if(tulink == "_iesTexture") {
				var _this7 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["iestexture.png"] != null ? _this7.getReserved("iestexture.png") : _this7.h["iestexture.png"]);
				g.setTextureParameters(context.textureUnits[j],0,0,1,1,0);
			}
		}
	}
};
iron_object_Uniforms.setObjectConstants = function(g,context,object) {
	if(context.raw.constants != null) {
		var _g = 0;
		var _g1 = context.raw.constants.length;
		while(_g < _g1) {
			var i = _g++;
			var c = context.raw.constants[i];
			iron_object_Uniforms.setObjectConstant(g,object,context.constants[i],c);
		}
	}
	if(iron_object_Uniforms.externalTextureLinks != null) {
		if(context.raw.texture_units != null) {
			var _g2 = 0;
			var _g11 = context.raw.texture_units.length;
			while(_g2 < _g11) {
				var j = _g2++;
				var tulink = context.raw.texture_units[j].link;
				if(tulink == null) {
					continue;
				}
				var _g3 = 0;
				var _g12 = iron_object_Uniforms.externalTextureLinks;
				while(_g3 < _g12.length) {
					var f = _g12[_g3];
					++_g3;
					var image = f(object,iron_object_Uniforms.currentMat(object),tulink);
					if(image != null) {
						g.setTexture(context.textureUnits[j],image);
						break;
					}
				}
			}
		}
	}
};
iron_object_Uniforms.bindRenderTarget = function(g,rt,context,samplerID,attachDepth) {
	if(rt != null) {
		var tus = context.raw.texture_units;
		var _g = 0;
		var _g1 = tus.length;
		while(_g < _g1) {
			var j = _g++;
			if(samplerID == tus[j].name) {
				var isImage = tus[j].is_image != null && tus[j].is_image;
				var paramsSet = false;
				if(rt.raw.depth > 1) {
					g.setTexture3DParameters(context.textureUnits[j],2,2,2,1,0,2);
					paramsSet = true;
				}
				if(isImage) {
					g.setImageTexture(context.textureUnits[j],rt.image);
					g.setTexture3DParameters(context.textureUnits[j],2,2,2,1,0,2);
					paramsSet = true;
				} else if(rt.isCubeMap) {
					if(attachDepth) {
						g.setCubeMapDepth(context.textureUnits[j],rt.cubeMap);
					} else {
						g.setCubeMap(context.textureUnits[j],rt.cubeMap);
					}
				} else if(attachDepth) {
					g.setTextureDepth(context.textureUnits[j],rt.image);
				} else {
					g.setTexture(context.textureUnits[j],rt.image);
				}
				if(!paramsSet && rt.raw.mipmaps != null && rt.raw.mipmaps == true && !isImage) {
					g.setTextureParameters(context.textureUnits[j],2,2,1,1,2);
					paramsSet = true;
				}
				if(!paramsSet) {
					if(StringTools.startsWith(samplerID,"shadowMap")) {
						if(rt.isCubeMap) {
							g.setCubeMapCompareMode(context.textureUnits[j],true);
						} else {
							g.setTextureParameters(context.textureUnits[j],2,2,1,1,0);
							g.setTextureCompareMode(context.textureUnits[j],true);
						}
						paramsSet = true;
					} else if(attachDepth) {
						g.setTextureParameters(context.textureUnits[j],2,2,0,0,0);
						paramsSet = true;
					}
				}
				if(!paramsSet) {
					g.setTextureParameters(context.textureUnits[j],2,2,1,1,0);
					paramsSet = true;
				}
			}
		}
	}
};
iron_object_Uniforms.setContextConstant = function(g,location,c) {
	if(c.link == null) {
		return true;
	}
	var camera = iron_Scene.active.camera;
	var light = iron_RenderPath.active.light;
	if(c.type == "mat4") {
		var m = null;
		if(c.link == "_viewMatrix") {
			m = camera.V;
		} else if(c.link == "_transposeInverseViewMatrix") {
			var _this = iron_object_Uniforms.helpMat;
			var m1 = camera.V;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._03 = m1.self._03;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._13 = m1.self._13;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			_this.self._23 = m1.self._23;
			_this.self._30 = m1.self._30;
			_this.self._31 = m1.self._31;
			_this.self._32 = m1.self._32;
			_this.self._33 = m1.self._33;
			var _this1 = iron_object_Uniforms.helpMat;
			var m2 = iron_object_Uniforms.helpMat;
			var a00 = m2.self._00;
			var a01 = m2.self._01;
			var a02 = m2.self._02;
			var a03 = m2.self._03;
			var a10 = m2.self._10;
			var a11 = m2.self._11;
			var a12 = m2.self._12;
			var a13 = m2.self._13;
			var a20 = m2.self._20;
			var a21 = m2.self._21;
			var a22 = m2.self._22;
			var a23 = m2.self._23;
			var a30 = m2.self._30;
			var a31 = m2.self._31;
			var a32 = m2.self._32;
			var a33 = m2.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this1.self._00 = 1.0;
				_this1.self._01 = 0.0;
				_this1.self._02 = 0.0;
				_this1.self._03 = 0.0;
				_this1.self._10 = 0.0;
				_this1.self._11 = 1.0;
				_this1.self._12 = 0.0;
				_this1.self._13 = 0.0;
				_this1.self._20 = 0.0;
				_this1.self._21 = 0.0;
				_this1.self._22 = 1.0;
				_this1.self._23 = 0.0;
				_this1.self._30 = 0.0;
				_this1.self._31 = 0.0;
				_this1.self._32 = 0.0;
				_this1.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this1.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this1.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this1.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this1.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this1.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this1.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this1.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this1.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this1.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this1.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this1.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this1.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this1.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this1.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this1.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this1.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			var _this2 = iron_object_Uniforms.helpMat;
			var f = _this2.self._01;
			_this2.self._01 = _this2.self._10;
			_this2.self._10 = f;
			f = _this2.self._02;
			_this2.self._02 = _this2.self._20;
			_this2.self._20 = f;
			f = _this2.self._03;
			_this2.self._03 = _this2.self._30;
			_this2.self._30 = f;
			f = _this2.self._12;
			_this2.self._12 = _this2.self._21;
			_this2.self._21 = f;
			f = _this2.self._13;
			_this2.self._13 = _this2.self._31;
			_this2.self._31 = f;
			f = _this2.self._23;
			_this2.self._23 = _this2.self._32;
			_this2.self._32 = f;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_inverseViewMatrix") {
			var _this3 = iron_object_Uniforms.helpMat;
			var m3 = camera.V;
			var a001 = m3.self._00;
			var a011 = m3.self._01;
			var a021 = m3.self._02;
			var a031 = m3.self._03;
			var a101 = m3.self._10;
			var a111 = m3.self._11;
			var a121 = m3.self._12;
			var a131 = m3.self._13;
			var a201 = m3.self._20;
			var a211 = m3.self._21;
			var a221 = m3.self._22;
			var a231 = m3.self._23;
			var a301 = m3.self._30;
			var a311 = m3.self._31;
			var a321 = m3.self._32;
			var a331 = m3.self._33;
			var b001 = a001 * a111 - a011 * a101;
			var b011 = a001 * a121 - a021 * a101;
			var b021 = a001 * a131 - a031 * a101;
			var b031 = a011 * a121 - a021 * a111;
			var b041 = a011 * a131 - a031 * a111;
			var b051 = a021 * a131 - a031 * a121;
			var b061 = a201 * a311 - a211 * a301;
			var b071 = a201 * a321 - a221 * a301;
			var b081 = a201 * a331 - a231 * a301;
			var b091 = a211 * a321 - a221 * a311;
			var b101 = a211 * a331 - a231 * a311;
			var b111 = a221 * a331 - a231 * a321;
			var det1 = b001 * b111 - b011 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
			if(det1 == 0.0) {
				_this3.self._00 = 1.0;
				_this3.self._01 = 0.0;
				_this3.self._02 = 0.0;
				_this3.self._03 = 0.0;
				_this3.self._10 = 0.0;
				_this3.self._11 = 1.0;
				_this3.self._12 = 0.0;
				_this3.self._13 = 0.0;
				_this3.self._20 = 0.0;
				_this3.self._21 = 0.0;
				_this3.self._22 = 1.0;
				_this3.self._23 = 0.0;
				_this3.self._30 = 0.0;
				_this3.self._31 = 0.0;
				_this3.self._32 = 0.0;
				_this3.self._33 = 1.0;
			} else {
				det1 = 1.0 / det1;
				_this3.self._00 = (a111 * b111 - a121 * b101 + a131 * b091) * det1;
				_this3.self._01 = (a021 * b101 - a011 * b111 - a031 * b091) * det1;
				_this3.self._02 = (a311 * b051 - a321 * b041 + a331 * b031) * det1;
				_this3.self._03 = (a221 * b041 - a211 * b051 - a231 * b031) * det1;
				_this3.self._10 = (a121 * b081 - a101 * b111 - a131 * b071) * det1;
				_this3.self._11 = (a001 * b111 - a021 * b081 + a031 * b071) * det1;
				_this3.self._12 = (a321 * b021 - a301 * b051 - a331 * b011) * det1;
				_this3.self._13 = (a201 * b051 - a221 * b021 + a231 * b011) * det1;
				_this3.self._20 = (a101 * b101 - a111 * b081 + a131 * b061) * det1;
				_this3.self._21 = (a011 * b081 - a001 * b101 - a031 * b061) * det1;
				_this3.self._22 = (a301 * b041 - a311 * b021 + a331 * b001) * det1;
				_this3.self._23 = (a211 * b021 - a201 * b041 - a231 * b001) * det1;
				_this3.self._30 = (a111 * b071 - a101 * b091 - a121 * b061) * det1;
				_this3.self._31 = (a001 * b091 - a011 * b071 + a021 * b061) * det1;
				_this3.self._32 = (a311 * b011 - a301 * b031 - a321 * b001) * det1;
				_this3.self._33 = (a201 * b031 - a211 * b011 + a221 * b001) * det1;
			}
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_transposeViewMatrix") {
			var _this4 = iron_object_Uniforms.helpMat;
			var m4 = camera.V;
			_this4.self._00 = m4.self._00;
			_this4.self._01 = m4.self._01;
			_this4.self._02 = m4.self._02;
			_this4.self._03 = m4.self._03;
			_this4.self._10 = m4.self._10;
			_this4.self._11 = m4.self._11;
			_this4.self._12 = m4.self._12;
			_this4.self._13 = m4.self._13;
			_this4.self._20 = m4.self._20;
			_this4.self._21 = m4.self._21;
			_this4.self._22 = m4.self._22;
			_this4.self._23 = m4.self._23;
			_this4.self._30 = m4.self._30;
			_this4.self._31 = m4.self._31;
			_this4.self._32 = m4.self._32;
			_this4.self._33 = m4.self._33;
			var _this5 = iron_object_Uniforms.helpMat;
			var f1 = _this5.self._01;
			_this5.self._01 = _this5.self._10;
			_this5.self._10 = f1;
			f1 = _this5.self._02;
			_this5.self._02 = _this5.self._20;
			_this5.self._20 = f1;
			f1 = _this5.self._12;
			_this5.self._12 = _this5.self._21;
			_this5.self._21 = f1;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_projectionMatrix") {
			m = camera.P;
		} else if(c.link == "_inverseProjectionMatrix") {
			var _this6 = iron_object_Uniforms.helpMat;
			var m5 = camera.P;
			var a002 = m5.self._00;
			var a012 = m5.self._01;
			var a022 = m5.self._02;
			var a032 = m5.self._03;
			var a102 = m5.self._10;
			var a112 = m5.self._11;
			var a122 = m5.self._12;
			var a132 = m5.self._13;
			var a202 = m5.self._20;
			var a212 = m5.self._21;
			var a222 = m5.self._22;
			var a232 = m5.self._23;
			var a302 = m5.self._30;
			var a312 = m5.self._31;
			var a322 = m5.self._32;
			var a332 = m5.self._33;
			var b002 = a002 * a112 - a012 * a102;
			var b012 = a002 * a122 - a022 * a102;
			var b022 = a002 * a132 - a032 * a102;
			var b032 = a012 * a122 - a022 * a112;
			var b042 = a012 * a132 - a032 * a112;
			var b052 = a022 * a132 - a032 * a122;
			var b062 = a202 * a312 - a212 * a302;
			var b072 = a202 * a322 - a222 * a302;
			var b082 = a202 * a332 - a232 * a302;
			var b092 = a212 * a322 - a222 * a312;
			var b102 = a212 * a332 - a232 * a312;
			var b112 = a222 * a332 - a232 * a322;
			var det2 = b002 * b112 - b012 * b102 + b022 * b092 + b032 * b082 - b042 * b072 + b052 * b062;
			if(det2 == 0.0) {
				_this6.self._00 = 1.0;
				_this6.self._01 = 0.0;
				_this6.self._02 = 0.0;
				_this6.self._03 = 0.0;
				_this6.self._10 = 0.0;
				_this6.self._11 = 1.0;
				_this6.self._12 = 0.0;
				_this6.self._13 = 0.0;
				_this6.self._20 = 0.0;
				_this6.self._21 = 0.0;
				_this6.self._22 = 1.0;
				_this6.self._23 = 0.0;
				_this6.self._30 = 0.0;
				_this6.self._31 = 0.0;
				_this6.self._32 = 0.0;
				_this6.self._33 = 1.0;
			} else {
				det2 = 1.0 / det2;
				_this6.self._00 = (a112 * b112 - a122 * b102 + a132 * b092) * det2;
				_this6.self._01 = (a022 * b102 - a012 * b112 - a032 * b092) * det2;
				_this6.self._02 = (a312 * b052 - a322 * b042 + a332 * b032) * det2;
				_this6.self._03 = (a222 * b042 - a212 * b052 - a232 * b032) * det2;
				_this6.self._10 = (a122 * b082 - a102 * b112 - a132 * b072) * det2;
				_this6.self._11 = (a002 * b112 - a022 * b082 + a032 * b072) * det2;
				_this6.self._12 = (a322 * b022 - a302 * b052 - a332 * b012) * det2;
				_this6.self._13 = (a202 * b052 - a222 * b022 + a232 * b012) * det2;
				_this6.self._20 = (a102 * b102 - a112 * b082 + a132 * b062) * det2;
				_this6.self._21 = (a012 * b082 - a002 * b102 - a032 * b062) * det2;
				_this6.self._22 = (a302 * b042 - a312 * b022 + a332 * b002) * det2;
				_this6.self._23 = (a212 * b022 - a202 * b042 - a232 * b002) * det2;
				_this6.self._30 = (a112 * b072 - a102 * b092 - a122 * b062) * det2;
				_this6.self._31 = (a002 * b092 - a012 * b072 + a022 * b062) * det2;
				_this6.self._32 = (a312 * b012 - a302 * b032 - a322 * b002) * det2;
				_this6.self._33 = (a202 * b032 - a212 * b012 + a222 * b002) * det2;
			}
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_inverseViewProjectionMatrix") {
			var _this7 = iron_object_Uniforms.helpMat;
			var m6 = camera.V;
			_this7.self._00 = m6.self._00;
			_this7.self._01 = m6.self._01;
			_this7.self._02 = m6.self._02;
			_this7.self._03 = m6.self._03;
			_this7.self._10 = m6.self._10;
			_this7.self._11 = m6.self._11;
			_this7.self._12 = m6.self._12;
			_this7.self._13 = m6.self._13;
			_this7.self._20 = m6.self._20;
			_this7.self._21 = m6.self._21;
			_this7.self._22 = m6.self._22;
			_this7.self._23 = m6.self._23;
			_this7.self._30 = m6.self._30;
			_this7.self._31 = m6.self._31;
			_this7.self._32 = m6.self._32;
			_this7.self._33 = m6.self._33;
			var _this8 = iron_object_Uniforms.helpMat;
			var m7 = camera.P;
			var a003 = _this8.self._00;
			var a013 = _this8.self._01;
			var a023 = _this8.self._02;
			var a033 = _this8.self._03;
			var a103 = _this8.self._10;
			var a113 = _this8.self._11;
			var a123 = _this8.self._12;
			var a133 = _this8.self._13;
			var a203 = _this8.self._20;
			var a213 = _this8.self._21;
			var a223 = _this8.self._22;
			var a233 = _this8.self._23;
			var a303 = _this8.self._30;
			var a313 = _this8.self._31;
			var a323 = _this8.self._32;
			var a333 = _this8.self._33;
			var b0 = m7.self._00;
			var b1 = m7.self._10;
			var b2 = m7.self._20;
			var b3 = m7.self._30;
			_this8.self._00 = a003 * b0 + a013 * b1 + a023 * b2 + a033 * b3;
			_this8.self._10 = a103 * b0 + a113 * b1 + a123 * b2 + a133 * b3;
			_this8.self._20 = a203 * b0 + a213 * b1 + a223 * b2 + a233 * b3;
			_this8.self._30 = a303 * b0 + a313 * b1 + a323 * b2 + a333 * b3;
			b0 = m7.self._01;
			b1 = m7.self._11;
			b2 = m7.self._21;
			b3 = m7.self._31;
			_this8.self._01 = a003 * b0 + a013 * b1 + a023 * b2 + a033 * b3;
			_this8.self._11 = a103 * b0 + a113 * b1 + a123 * b2 + a133 * b3;
			_this8.self._21 = a203 * b0 + a213 * b1 + a223 * b2 + a233 * b3;
			_this8.self._31 = a303 * b0 + a313 * b1 + a323 * b2 + a333 * b3;
			b0 = m7.self._02;
			b1 = m7.self._12;
			b2 = m7.self._22;
			b3 = m7.self._32;
			_this8.self._02 = a003 * b0 + a013 * b1 + a023 * b2 + a033 * b3;
			_this8.self._12 = a103 * b0 + a113 * b1 + a123 * b2 + a133 * b3;
			_this8.self._22 = a203 * b0 + a213 * b1 + a223 * b2 + a233 * b3;
			_this8.self._32 = a303 * b0 + a313 * b1 + a323 * b2 + a333 * b3;
			b0 = m7.self._03;
			b1 = m7.self._13;
			b2 = m7.self._23;
			b3 = m7.self._33;
			_this8.self._03 = a003 * b0 + a013 * b1 + a023 * b2 + a033 * b3;
			_this8.self._13 = a103 * b0 + a113 * b1 + a123 * b2 + a133 * b3;
			_this8.self._23 = a203 * b0 + a213 * b1 + a223 * b2 + a233 * b3;
			_this8.self._33 = a303 * b0 + a313 * b1 + a323 * b2 + a333 * b3;
			var _this9 = iron_object_Uniforms.helpMat;
			var m8 = iron_object_Uniforms.helpMat;
			var a004 = m8.self._00;
			var a014 = m8.self._01;
			var a024 = m8.self._02;
			var a034 = m8.self._03;
			var a104 = m8.self._10;
			var a114 = m8.self._11;
			var a124 = m8.self._12;
			var a134 = m8.self._13;
			var a204 = m8.self._20;
			var a214 = m8.self._21;
			var a224 = m8.self._22;
			var a234 = m8.self._23;
			var a304 = m8.self._30;
			var a314 = m8.self._31;
			var a324 = m8.self._32;
			var a334 = m8.self._33;
			var b003 = a004 * a114 - a014 * a104;
			var b013 = a004 * a124 - a024 * a104;
			var b023 = a004 * a134 - a034 * a104;
			var b033 = a014 * a124 - a024 * a114;
			var b043 = a014 * a134 - a034 * a114;
			var b053 = a024 * a134 - a034 * a124;
			var b063 = a204 * a314 - a214 * a304;
			var b073 = a204 * a324 - a224 * a304;
			var b083 = a204 * a334 - a234 * a304;
			var b093 = a214 * a324 - a224 * a314;
			var b103 = a214 * a334 - a234 * a314;
			var b113 = a224 * a334 - a234 * a324;
			var det3 = b003 * b113 - b013 * b103 + b023 * b093 + b033 * b083 - b043 * b073 + b053 * b063;
			if(det3 == 0.0) {
				_this9.self._00 = 1.0;
				_this9.self._01 = 0.0;
				_this9.self._02 = 0.0;
				_this9.self._03 = 0.0;
				_this9.self._10 = 0.0;
				_this9.self._11 = 1.0;
				_this9.self._12 = 0.0;
				_this9.self._13 = 0.0;
				_this9.self._20 = 0.0;
				_this9.self._21 = 0.0;
				_this9.self._22 = 1.0;
				_this9.self._23 = 0.0;
				_this9.self._30 = 0.0;
				_this9.self._31 = 0.0;
				_this9.self._32 = 0.0;
				_this9.self._33 = 1.0;
			} else {
				det3 = 1.0 / det3;
				_this9.self._00 = (a114 * b113 - a124 * b103 + a134 * b093) * det3;
				_this9.self._01 = (a024 * b103 - a014 * b113 - a034 * b093) * det3;
				_this9.self._02 = (a314 * b053 - a324 * b043 + a334 * b033) * det3;
				_this9.self._03 = (a224 * b043 - a214 * b053 - a234 * b033) * det3;
				_this9.self._10 = (a124 * b083 - a104 * b113 - a134 * b073) * det3;
				_this9.self._11 = (a004 * b113 - a024 * b083 + a034 * b073) * det3;
				_this9.self._12 = (a324 * b023 - a304 * b053 - a334 * b013) * det3;
				_this9.self._13 = (a204 * b053 - a224 * b023 + a234 * b013) * det3;
				_this9.self._20 = (a104 * b103 - a114 * b083 + a134 * b063) * det3;
				_this9.self._21 = (a014 * b083 - a004 * b103 - a034 * b063) * det3;
				_this9.self._22 = (a304 * b043 - a314 * b023 + a334 * b003) * det3;
				_this9.self._23 = (a214 * b023 - a204 * b043 - a234 * b003) * det3;
				_this9.self._30 = (a114 * b073 - a104 * b093 - a124 * b063) * det3;
				_this9.self._31 = (a004 * b093 - a014 * b073 + a024 * b063) * det3;
				_this9.self._32 = (a314 * b013 - a304 * b033 - a324 * b003) * det3;
				_this9.self._33 = (a204 * b033 - a214 * b013 + a224 * b003) * det3;
			}
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_viewProjectionMatrix") {
			m = camera.VP;
		} else if(c.link == "_prevViewProjectionMatrix") {
			var _this10 = iron_object_Uniforms.helpMat;
			var m9 = camera.prevV;
			_this10.self._00 = m9.self._00;
			_this10.self._01 = m9.self._01;
			_this10.self._02 = m9.self._02;
			_this10.self._03 = m9.self._03;
			_this10.self._10 = m9.self._10;
			_this10.self._11 = m9.self._11;
			_this10.self._12 = m9.self._12;
			_this10.self._13 = m9.self._13;
			_this10.self._20 = m9.self._20;
			_this10.self._21 = m9.self._21;
			_this10.self._22 = m9.self._22;
			_this10.self._23 = m9.self._23;
			_this10.self._30 = m9.self._30;
			_this10.self._31 = m9.self._31;
			_this10.self._32 = m9.self._32;
			_this10.self._33 = m9.self._33;
			var _this11 = iron_object_Uniforms.helpMat;
			var m10 = camera.P;
			var a005 = _this11.self._00;
			var a015 = _this11.self._01;
			var a025 = _this11.self._02;
			var a035 = _this11.self._03;
			var a105 = _this11.self._10;
			var a115 = _this11.self._11;
			var a125 = _this11.self._12;
			var a135 = _this11.self._13;
			var a205 = _this11.self._20;
			var a215 = _this11.self._21;
			var a225 = _this11.self._22;
			var a235 = _this11.self._23;
			var a305 = _this11.self._30;
			var a315 = _this11.self._31;
			var a325 = _this11.self._32;
			var a335 = _this11.self._33;
			var b010 = m10.self._00;
			var b12 = m10.self._10;
			var b21 = m10.self._20;
			var b31 = m10.self._30;
			_this11.self._00 = a005 * b010 + a015 * b12 + a025 * b21 + a035 * b31;
			_this11.self._10 = a105 * b010 + a115 * b12 + a125 * b21 + a135 * b31;
			_this11.self._20 = a205 * b010 + a215 * b12 + a225 * b21 + a235 * b31;
			_this11.self._30 = a305 * b010 + a315 * b12 + a325 * b21 + a335 * b31;
			b010 = m10.self._01;
			b12 = m10.self._11;
			b21 = m10.self._21;
			b31 = m10.self._31;
			_this11.self._01 = a005 * b010 + a015 * b12 + a025 * b21 + a035 * b31;
			_this11.self._11 = a105 * b010 + a115 * b12 + a125 * b21 + a135 * b31;
			_this11.self._21 = a205 * b010 + a215 * b12 + a225 * b21 + a235 * b31;
			_this11.self._31 = a305 * b010 + a315 * b12 + a325 * b21 + a335 * b31;
			b010 = m10.self._02;
			b12 = m10.self._12;
			b21 = m10.self._22;
			b31 = m10.self._32;
			_this11.self._02 = a005 * b010 + a015 * b12 + a025 * b21 + a035 * b31;
			_this11.self._12 = a105 * b010 + a115 * b12 + a125 * b21 + a135 * b31;
			_this11.self._22 = a205 * b010 + a215 * b12 + a225 * b21 + a235 * b31;
			_this11.self._32 = a305 * b010 + a315 * b12 + a325 * b21 + a335 * b31;
			b010 = m10.self._03;
			b12 = m10.self._13;
			b21 = m10.self._23;
			b31 = m10.self._33;
			_this11.self._03 = a005 * b010 + a015 * b12 + a025 * b21 + a035 * b31;
			_this11.self._13 = a105 * b010 + a115 * b12 + a125 * b21 + a135 * b31;
			_this11.self._23 = a205 * b010 + a215 * b12 + a225 * b21 + a235 * b31;
			_this11.self._33 = a305 * b010 + a315 * b12 + a325 * b21 + a335 * b31;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_lightViewProjectionMatrix") {
			if(light != null) {
				m = light.VP;
			}
		} else if(c.link == "_biasLightViewProjectionMatrix") {
			if(light != null) {
				var _this12 = iron_object_Uniforms.helpMat;
				var m11 = light.VP;
				_this12.self._00 = m11.self._00;
				_this12.self._01 = m11.self._01;
				_this12.self._02 = m11.self._02;
				_this12.self._03 = m11.self._03;
				_this12.self._10 = m11.self._10;
				_this12.self._11 = m11.self._11;
				_this12.self._12 = m11.self._12;
				_this12.self._13 = m11.self._13;
				_this12.self._20 = m11.self._20;
				_this12.self._21 = m11.self._21;
				_this12.self._22 = m11.self._22;
				_this12.self._23 = m11.self._23;
				_this12.self._30 = m11.self._30;
				_this12.self._31 = m11.self._31;
				_this12.self._32 = m11.self._32;
				_this12.self._33 = m11.self._33;
				var _this13 = iron_object_Uniforms.helpMat;
				var m12 = iron_object_Uniforms.biasMat;
				var a006 = _this13.self._00;
				var a016 = _this13.self._01;
				var a026 = _this13.self._02;
				var a036 = _this13.self._03;
				var a106 = _this13.self._10;
				var a116 = _this13.self._11;
				var a126 = _this13.self._12;
				var a136 = _this13.self._13;
				var a206 = _this13.self._20;
				var a216 = _this13.self._21;
				var a226 = _this13.self._22;
				var a236 = _this13.self._23;
				var a306 = _this13.self._30;
				var a316 = _this13.self._31;
				var a326 = _this13.self._32;
				var a336 = _this13.self._33;
				var b014 = m12.self._00;
				var b13 = m12.self._10;
				var b22 = m12.self._20;
				var b32 = m12.self._30;
				_this13.self._00 = a006 * b014 + a016 * b13 + a026 * b22 + a036 * b32;
				_this13.self._10 = a106 * b014 + a116 * b13 + a126 * b22 + a136 * b32;
				_this13.self._20 = a206 * b014 + a216 * b13 + a226 * b22 + a236 * b32;
				_this13.self._30 = a306 * b014 + a316 * b13 + a326 * b22 + a336 * b32;
				b014 = m12.self._01;
				b13 = m12.self._11;
				b22 = m12.self._21;
				b32 = m12.self._31;
				_this13.self._01 = a006 * b014 + a016 * b13 + a026 * b22 + a036 * b32;
				_this13.self._11 = a106 * b014 + a116 * b13 + a126 * b22 + a136 * b32;
				_this13.self._21 = a206 * b014 + a216 * b13 + a226 * b22 + a236 * b32;
				_this13.self._31 = a306 * b014 + a316 * b13 + a326 * b22 + a336 * b32;
				b014 = m12.self._02;
				b13 = m12.self._12;
				b22 = m12.self._22;
				b32 = m12.self._32;
				_this13.self._02 = a006 * b014 + a016 * b13 + a026 * b22 + a036 * b32;
				_this13.self._12 = a106 * b014 + a116 * b13 + a126 * b22 + a136 * b32;
				_this13.self._22 = a206 * b014 + a216 * b13 + a226 * b22 + a236 * b32;
				_this13.self._32 = a306 * b014 + a316 * b13 + a326 * b22 + a336 * b32;
				b014 = m12.self._03;
				b13 = m12.self._13;
				b22 = m12.self._23;
				b32 = m12.self._33;
				_this13.self._03 = a006 * b014 + a016 * b13 + a026 * b22 + a036 * b32;
				_this13.self._13 = a106 * b014 + a116 * b13 + a126 * b22 + a136 * b32;
				_this13.self._23 = a206 * b014 + a216 * b13 + a226 * b22 + a236 * b32;
				_this13.self._33 = a306 * b014 + a316 * b13 + a326 * b22 + a336 * b32;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_lightVolumeWorldViewProjectionMatrix") {
			if(light != null) {
				var tr = light.transform;
				var type = light.data.raw.type;
				if(type == "spot") {
					var _this14 = iron_object_Uniforms.helpVec;
					_this14.x = tr.world.self._30;
					_this14.y = tr.world.self._31;
					_this14.z = tr.world.self._32;
					_this14.w = 1.0;
					var f2 = 2.0;
					var _this15 = iron_object_Uniforms.helpVec2;
					_this15.x = light.data.raw.far_plane;
					_this15.y = light.data.raw.far_plane * f2;
					_this15.z = light.data.raw.far_plane * f2;
					_this15.w = 1.0;
					var _this16 = iron_object_Uniforms.helpMat;
					var loc = iron_object_Uniforms.helpVec;
					var quat = iron_object_Uniforms.helpQuat;
					var sc = iron_object_Uniforms.helpVec2;
					var x = quat.x;
					var y = quat.y;
					var z = quat.z;
					var w = quat.w;
					var x2 = x + x;
					var y2 = y + y;
					var z2 = z + z;
					var xx = x * x2;
					var xy = x * y2;
					var xz = x * z2;
					var yy = y * y2;
					var yz = y * z2;
					var zz = z * z2;
					var wx = w * x2;
					var wy = w * y2;
					var wz = w * z2;
					_this16.self._00 = 1.0 - (yy + zz);
					_this16.self._10 = xy - wz;
					_this16.self._20 = xz + wy;
					_this16.self._01 = xy + wz;
					_this16.self._11 = 1.0 - (xx + zz);
					_this16.self._21 = yz - wx;
					_this16.self._02 = xz - wy;
					_this16.self._12 = yz + wx;
					_this16.self._22 = 1.0 - (xx + yy);
					_this16.self._03 = 0.0;
					_this16.self._13 = 0.0;
					_this16.self._23 = 0.0;
					_this16.self._30 = 0.0;
					_this16.self._31 = 0.0;
					_this16.self._32 = 0.0;
					_this16.self._33 = 1.0;
					var x1 = sc.x;
					var y1 = sc.y;
					var z1 = sc.z;
					_this16.self._00 *= x1;
					_this16.self._01 *= x1;
					_this16.self._02 *= x1;
					_this16.self._03 *= x1;
					_this16.self._10 *= y1;
					_this16.self._11 *= y1;
					_this16.self._12 *= y1;
					_this16.self._13 *= y1;
					_this16.self._20 *= z1;
					_this16.self._21 *= z1;
					_this16.self._22 *= z1;
					_this16.self._23 *= z1;
					_this16.self._30 = loc.x;
					_this16.self._31 = loc.y;
					_this16.self._32 = loc.z;
				} else if(type == "point" || type == "area") {
					var _this17 = iron_object_Uniforms.helpVec;
					_this17.x = tr.world.self._30;
					_this17.y = tr.world.self._31;
					_this17.z = tr.world.self._32;
					_this17.w = 1.0;
					var f21 = 2.0;
					var _this18 = iron_object_Uniforms.helpVec2;
					_this18.x = light.data.raw.far_plane;
					_this18.y = light.data.raw.far_plane * f21;
					_this18.z = light.data.raw.far_plane * f21;
					_this18.w = 1.0;
					var _this19 = iron_object_Uniforms.helpMat;
					var loc1 = iron_object_Uniforms.helpVec;
					var quat1 = iron_object_Uniforms.helpQuat;
					var sc1 = iron_object_Uniforms.helpVec2;
					var x3 = quat1.x;
					var y3 = quat1.y;
					var z3 = quat1.z;
					var w1 = quat1.w;
					var x21 = x3 + x3;
					var y21 = y3 + y3;
					var z21 = z3 + z3;
					var xx1 = x3 * x21;
					var xy1 = x3 * y21;
					var xz1 = x3 * z21;
					var yy1 = y3 * y21;
					var yz1 = y3 * z21;
					var zz1 = z3 * z21;
					var wx1 = w1 * x21;
					var wy1 = w1 * y21;
					var wz1 = w1 * z21;
					_this19.self._00 = 1.0 - (yy1 + zz1);
					_this19.self._10 = xy1 - wz1;
					_this19.self._20 = xz1 + wy1;
					_this19.self._01 = xy1 + wz1;
					_this19.self._11 = 1.0 - (xx1 + zz1);
					_this19.self._21 = yz1 - wx1;
					_this19.self._02 = xz1 - wy1;
					_this19.self._12 = yz1 + wx1;
					_this19.self._22 = 1.0 - (xx1 + yy1);
					_this19.self._03 = 0.0;
					_this19.self._13 = 0.0;
					_this19.self._23 = 0.0;
					_this19.self._30 = 0.0;
					_this19.self._31 = 0.0;
					_this19.self._32 = 0.0;
					_this19.self._33 = 1.0;
					var x4 = sc1.x;
					var y4 = sc1.y;
					var z4 = sc1.z;
					_this19.self._00 *= x4;
					_this19.self._01 *= x4;
					_this19.self._02 *= x4;
					_this19.self._03 *= x4;
					_this19.self._10 *= y4;
					_this19.self._11 *= y4;
					_this19.self._12 *= y4;
					_this19.self._13 *= y4;
					_this19.self._20 *= z4;
					_this19.self._21 *= z4;
					_this19.self._22 *= z4;
					_this19.self._23 *= z4;
					_this19.self._30 = loc1.x;
					_this19.self._31 = loc1.y;
					_this19.self._32 = loc1.z;
				}
				var _this20 = iron_object_Uniforms.helpMat;
				var m13 = camera.V;
				var a007 = _this20.self._00;
				var a017 = _this20.self._01;
				var a027 = _this20.self._02;
				var a037 = _this20.self._03;
				var a107 = _this20.self._10;
				var a117 = _this20.self._11;
				var a127 = _this20.self._12;
				var a137 = _this20.self._13;
				var a207 = _this20.self._20;
				var a217 = _this20.self._21;
				var a227 = _this20.self._22;
				var a237 = _this20.self._23;
				var a307 = _this20.self._30;
				var a317 = _this20.self._31;
				var a327 = _this20.self._32;
				var a337 = _this20.self._33;
				var b015 = m13.self._00;
				var b14 = m13.self._10;
				var b23 = m13.self._20;
				var b33 = m13.self._30;
				_this20.self._00 = a007 * b015 + a017 * b14 + a027 * b23 + a037 * b33;
				_this20.self._10 = a107 * b015 + a117 * b14 + a127 * b23 + a137 * b33;
				_this20.self._20 = a207 * b015 + a217 * b14 + a227 * b23 + a237 * b33;
				_this20.self._30 = a307 * b015 + a317 * b14 + a327 * b23 + a337 * b33;
				b015 = m13.self._01;
				b14 = m13.self._11;
				b23 = m13.self._21;
				b33 = m13.self._31;
				_this20.self._01 = a007 * b015 + a017 * b14 + a027 * b23 + a037 * b33;
				_this20.self._11 = a107 * b015 + a117 * b14 + a127 * b23 + a137 * b33;
				_this20.self._21 = a207 * b015 + a217 * b14 + a227 * b23 + a237 * b33;
				_this20.self._31 = a307 * b015 + a317 * b14 + a327 * b23 + a337 * b33;
				b015 = m13.self._02;
				b14 = m13.self._12;
				b23 = m13.self._22;
				b33 = m13.self._32;
				_this20.self._02 = a007 * b015 + a017 * b14 + a027 * b23 + a037 * b33;
				_this20.self._12 = a107 * b015 + a117 * b14 + a127 * b23 + a137 * b33;
				_this20.self._22 = a207 * b015 + a217 * b14 + a227 * b23 + a237 * b33;
				_this20.self._32 = a307 * b015 + a317 * b14 + a327 * b23 + a337 * b33;
				b015 = m13.self._03;
				b14 = m13.self._13;
				b23 = m13.self._23;
				b33 = m13.self._33;
				_this20.self._03 = a007 * b015 + a017 * b14 + a027 * b23 + a037 * b33;
				_this20.self._13 = a107 * b015 + a117 * b14 + a127 * b23 + a137 * b33;
				_this20.self._23 = a207 * b015 + a217 * b14 + a227 * b23 + a237 * b33;
				_this20.self._33 = a307 * b015 + a317 * b14 + a327 * b23 + a337 * b33;
				var _this21 = iron_object_Uniforms.helpMat;
				var m14 = camera.P;
				var a008 = _this21.self._00;
				var a018 = _this21.self._01;
				var a028 = _this21.self._02;
				var a038 = _this21.self._03;
				var a108 = _this21.self._10;
				var a118 = _this21.self._11;
				var a128 = _this21.self._12;
				var a138 = _this21.self._13;
				var a208 = _this21.self._20;
				var a218 = _this21.self._21;
				var a228 = _this21.self._22;
				var a238 = _this21.self._23;
				var a308 = _this21.self._30;
				var a318 = _this21.self._31;
				var a328 = _this21.self._32;
				var a338 = _this21.self._33;
				var b016 = m14.self._00;
				var b15 = m14.self._10;
				var b24 = m14.self._20;
				var b34 = m14.self._30;
				_this21.self._00 = a008 * b016 + a018 * b15 + a028 * b24 + a038 * b34;
				_this21.self._10 = a108 * b016 + a118 * b15 + a128 * b24 + a138 * b34;
				_this21.self._20 = a208 * b016 + a218 * b15 + a228 * b24 + a238 * b34;
				_this21.self._30 = a308 * b016 + a318 * b15 + a328 * b24 + a338 * b34;
				b016 = m14.self._01;
				b15 = m14.self._11;
				b24 = m14.self._21;
				b34 = m14.self._31;
				_this21.self._01 = a008 * b016 + a018 * b15 + a028 * b24 + a038 * b34;
				_this21.self._11 = a108 * b016 + a118 * b15 + a128 * b24 + a138 * b34;
				_this21.self._21 = a208 * b016 + a218 * b15 + a228 * b24 + a238 * b34;
				_this21.self._31 = a308 * b016 + a318 * b15 + a328 * b24 + a338 * b34;
				b016 = m14.self._02;
				b15 = m14.self._12;
				b24 = m14.self._22;
				b34 = m14.self._32;
				_this21.self._02 = a008 * b016 + a018 * b15 + a028 * b24 + a038 * b34;
				_this21.self._12 = a108 * b016 + a118 * b15 + a128 * b24 + a138 * b34;
				_this21.self._22 = a208 * b016 + a218 * b15 + a228 * b24 + a238 * b34;
				_this21.self._32 = a308 * b016 + a318 * b15 + a328 * b24 + a338 * b34;
				b016 = m14.self._03;
				b15 = m14.self._13;
				b24 = m14.self._23;
				b34 = m14.self._33;
				_this21.self._03 = a008 * b016 + a018 * b15 + a028 * b24 + a038 * b34;
				_this21.self._13 = a108 * b016 + a118 * b15 + a128 * b24 + a138 * b34;
				_this21.self._23 = a208 * b016 + a218 * b15 + a228 * b24 + a238 * b34;
				_this21.self._33 = a308 * b016 + a318 * b15 + a328 * b24 + a338 * b34;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_skydomeMatrix") {
			var tr1 = camera.transform;
			var _this22 = iron_object_Uniforms.helpVec;
			_this22.x = tr1.world.self._30;
			_this22.y = tr1.world.self._31;
			_this22.z = tr1.world.self._32 - 3.5;
			_this22.w = 1.0;
			var bounds = camera.data.raw.far_plane * 0.95;
			var _this23 = iron_object_Uniforms.helpVec2;
			_this23.x = bounds;
			_this23.y = bounds;
			_this23.z = bounds;
			_this23.w = 1.0;
			var _this24 = iron_object_Uniforms.helpMat;
			var loc2 = iron_object_Uniforms.helpVec;
			var quat2 = iron_object_Uniforms.helpQuat;
			var sc2 = iron_object_Uniforms.helpVec2;
			var x5 = quat2.x;
			var y5 = quat2.y;
			var z5 = quat2.z;
			var w2 = quat2.w;
			var x22 = x5 + x5;
			var y22 = y5 + y5;
			var z22 = z5 + z5;
			var xx2 = x5 * x22;
			var xy2 = x5 * y22;
			var xz2 = x5 * z22;
			var yy2 = y5 * y22;
			var yz2 = y5 * z22;
			var zz2 = z5 * z22;
			var wx2 = w2 * x22;
			var wy2 = w2 * y22;
			var wz2 = w2 * z22;
			_this24.self._00 = 1.0 - (yy2 + zz2);
			_this24.self._10 = xy2 - wz2;
			_this24.self._20 = xz2 + wy2;
			_this24.self._01 = xy2 + wz2;
			_this24.self._11 = 1.0 - (xx2 + zz2);
			_this24.self._21 = yz2 - wx2;
			_this24.self._02 = xz2 - wy2;
			_this24.self._12 = yz2 + wx2;
			_this24.self._22 = 1.0 - (xx2 + yy2);
			_this24.self._03 = 0.0;
			_this24.self._13 = 0.0;
			_this24.self._23 = 0.0;
			_this24.self._30 = 0.0;
			_this24.self._31 = 0.0;
			_this24.self._32 = 0.0;
			_this24.self._33 = 1.0;
			var x6 = sc2.x;
			var y6 = sc2.y;
			var z6 = sc2.z;
			_this24.self._00 *= x6;
			_this24.self._01 *= x6;
			_this24.self._02 *= x6;
			_this24.self._03 *= x6;
			_this24.self._10 *= y6;
			_this24.self._11 *= y6;
			_this24.self._12 *= y6;
			_this24.self._13 *= y6;
			_this24.self._20 *= z6;
			_this24.self._21 *= z6;
			_this24.self._22 *= z6;
			_this24.self._23 *= z6;
			_this24.self._30 = loc2.x;
			_this24.self._31 = loc2.y;
			_this24.self._32 = loc2.z;
			var _this25 = iron_object_Uniforms.helpMat;
			var m15 = camera.V;
			var a009 = _this25.self._00;
			var a019 = _this25.self._01;
			var a029 = _this25.self._02;
			var a039 = _this25.self._03;
			var a109 = _this25.self._10;
			var a119 = _this25.self._11;
			var a129 = _this25.self._12;
			var a139 = _this25.self._13;
			var a209 = _this25.self._20;
			var a219 = _this25.self._21;
			var a229 = _this25.self._22;
			var a239 = _this25.self._23;
			var a309 = _this25.self._30;
			var a319 = _this25.self._31;
			var a329 = _this25.self._32;
			var a339 = _this25.self._33;
			var b017 = m15.self._00;
			var b16 = m15.self._10;
			var b25 = m15.self._20;
			var b35 = m15.self._30;
			_this25.self._00 = a009 * b017 + a019 * b16 + a029 * b25 + a039 * b35;
			_this25.self._10 = a109 * b017 + a119 * b16 + a129 * b25 + a139 * b35;
			_this25.self._20 = a209 * b017 + a219 * b16 + a229 * b25 + a239 * b35;
			_this25.self._30 = a309 * b017 + a319 * b16 + a329 * b25 + a339 * b35;
			b017 = m15.self._01;
			b16 = m15.self._11;
			b25 = m15.self._21;
			b35 = m15.self._31;
			_this25.self._01 = a009 * b017 + a019 * b16 + a029 * b25 + a039 * b35;
			_this25.self._11 = a109 * b017 + a119 * b16 + a129 * b25 + a139 * b35;
			_this25.self._21 = a209 * b017 + a219 * b16 + a229 * b25 + a239 * b35;
			_this25.self._31 = a309 * b017 + a319 * b16 + a329 * b25 + a339 * b35;
			b017 = m15.self._02;
			b16 = m15.self._12;
			b25 = m15.self._22;
			b35 = m15.self._32;
			_this25.self._02 = a009 * b017 + a019 * b16 + a029 * b25 + a039 * b35;
			_this25.self._12 = a109 * b017 + a119 * b16 + a129 * b25 + a139 * b35;
			_this25.self._22 = a209 * b017 + a219 * b16 + a229 * b25 + a239 * b35;
			_this25.self._32 = a309 * b017 + a319 * b16 + a329 * b25 + a339 * b35;
			b017 = m15.self._03;
			b16 = m15.self._13;
			b25 = m15.self._23;
			b35 = m15.self._33;
			_this25.self._03 = a009 * b017 + a019 * b16 + a029 * b25 + a039 * b35;
			_this25.self._13 = a109 * b017 + a119 * b16 + a129 * b25 + a139 * b35;
			_this25.self._23 = a209 * b017 + a219 * b16 + a229 * b25 + a239 * b35;
			_this25.self._33 = a309 * b017 + a319 * b16 + a329 * b25 + a339 * b35;
			var _this26 = iron_object_Uniforms.helpMat;
			var m16 = camera.P;
			var a0010 = _this26.self._00;
			var a0110 = _this26.self._01;
			var a0210 = _this26.self._02;
			var a0310 = _this26.self._03;
			var a1010 = _this26.self._10;
			var a1110 = _this26.self._11;
			var a1210 = _this26.self._12;
			var a1310 = _this26.self._13;
			var a2010 = _this26.self._20;
			var a2110 = _this26.self._21;
			var a2210 = _this26.self._22;
			var a2310 = _this26.self._23;
			var a3010 = _this26.self._30;
			var a3110 = _this26.self._31;
			var a3210 = _this26.self._32;
			var a3310 = _this26.self._33;
			var b018 = m16.self._00;
			var b17 = m16.self._10;
			var b26 = m16.self._20;
			var b36 = m16.self._30;
			_this26.self._00 = a0010 * b018 + a0110 * b17 + a0210 * b26 + a0310 * b36;
			_this26.self._10 = a1010 * b018 + a1110 * b17 + a1210 * b26 + a1310 * b36;
			_this26.self._20 = a2010 * b018 + a2110 * b17 + a2210 * b26 + a2310 * b36;
			_this26.self._30 = a3010 * b018 + a3110 * b17 + a3210 * b26 + a3310 * b36;
			b018 = m16.self._01;
			b17 = m16.self._11;
			b26 = m16.self._21;
			b36 = m16.self._31;
			_this26.self._01 = a0010 * b018 + a0110 * b17 + a0210 * b26 + a0310 * b36;
			_this26.self._11 = a1010 * b018 + a1110 * b17 + a1210 * b26 + a1310 * b36;
			_this26.self._21 = a2010 * b018 + a2110 * b17 + a2210 * b26 + a2310 * b36;
			_this26.self._31 = a3010 * b018 + a3110 * b17 + a3210 * b26 + a3310 * b36;
			b018 = m16.self._02;
			b17 = m16.self._12;
			b26 = m16.self._22;
			b36 = m16.self._32;
			_this26.self._02 = a0010 * b018 + a0110 * b17 + a0210 * b26 + a0310 * b36;
			_this26.self._12 = a1010 * b018 + a1110 * b17 + a1210 * b26 + a1310 * b36;
			_this26.self._22 = a2010 * b018 + a2110 * b17 + a2210 * b26 + a2310 * b36;
			_this26.self._32 = a3010 * b018 + a3110 * b17 + a3210 * b26 + a3310 * b36;
			b018 = m16.self._03;
			b17 = m16.self._13;
			b26 = m16.self._23;
			b36 = m16.self._33;
			_this26.self._03 = a0010 * b018 + a0110 * b17 + a0210 * b26 + a0310 * b36;
			_this26.self._13 = a1010 * b018 + a1110 * b17 + a1210 * b26 + a1310 * b36;
			_this26.self._23 = a2010 * b018 + a2110 * b17 + a2210 * b26 + a2310 * b36;
			_this26.self._33 = a3010 * b018 + a3110 * b17 + a3210 * b26 + a3310 * b36;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_lightViewMatrix") {
			if(light != null) {
				m = light.V;
			}
		} else if(c.link == "_lightProjectionMatrix") {
			if(light != null) {
				m = light.P;
			}
		}
		if(m != null) {
			g.setMatrix(location,m.self);
			return true;
		}
	} else if(c.type == "vec4") {
		var v = null;
		var _this27 = iron_object_Uniforms.helpVec;
		_this27.x = 0;
		_this27.y = 0;
		_this27.z = 0;
		_this27.w = 1.0;
		if(c.link == "_input") {
			var _this28 = iron_object_Uniforms.helpVec;
			var x7 = iron_system_Input.getMouse().x / kha_System.windowWidth();
			var y7 = iron_system_Input.getMouse().y / kha_System.windowHeight();
			var z7 = iron_system_Input.getMouse().down() ? 1.0 : 0.0;
			_this28.x = x7;
			_this28.y = y7;
			_this28.z = z7;
			_this28.w = 0.0;
			v = iron_object_Uniforms.helpVec;
		}
		if(v != null) {
			g.setFloat4(location,v.x,v.y,v.z,v.w);
			return true;
		}
	} else if(c.type == "vec3") {
		var v1 = null;
		var _this29 = iron_object_Uniforms.helpVec;
		_this29.x = 0;
		_this29.y = 0;
		_this29.z = 0;
		_this29.w = 1.0;
		if(c.link == "_lightPosition") {
			if(light != null) {
				var _this30 = iron_object_Uniforms.helpVec;
				_this30.x = light.transform.world.self._30;
				_this30.y = light.transform.world.self._31;
				_this30.z = light.transform.world.self._32;
				_this30.w = 1.0;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_lightDirection") {
			if(light != null) {
				var _this31 = new iron_math_Vec4(light.V.self._02,light.V.self._12,light.V.self._22);
				var n = Math.sqrt(_this31.x * _this31.x + _this31.y * _this31.y + _this31.z * _this31.z);
				if(n > 0.0) {
					var invN = 1.0 / n;
					_this31.x *= invN;
					_this31.y *= invN;
					_this31.z *= invN;
				}
				iron_object_Uniforms.helpVec = _this31;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_lightColor") {
			if(light != null) {
				var str = light.visible ? light.data.raw.strength : 0.0;
				var _this32 = iron_object_Uniforms.helpVec;
				var y8 = light.data.raw.color[1] * str;
				var z8 = light.data.raw.color[2] * str;
				_this32.x = light.data.raw.color[0] * str;
				_this32.y = y8;
				_this32.z = z8;
				_this32.w = 1.0;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_sunDirection") {
			var sun = iron_RenderPath.active.sun;
			if(sun != null) {
				var _this33 = new iron_math_Vec4(sun.V.self._02,sun.V.self._12,sun.V.self._22);
				var n1 = Math.sqrt(_this33.x * _this33.x + _this33.y * _this33.y + _this33.z * _this33.z);
				if(n1 > 0.0) {
					var invN1 = 1.0 / n1;
					_this33.x *= invN1;
					_this33.y *= invN1;
					_this33.z *= invN1;
				}
				iron_object_Uniforms.helpVec = _this33;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_sunColor") {
			var sun1 = iron_RenderPath.active.sun;
			if(sun1 != null) {
				var str1 = sun1.visible ? sun1.data.raw.strength : 0.0;
				var _this34 = iron_object_Uniforms.helpVec;
				var y9 = sun1.data.raw.color[1] * str1;
				var z9 = sun1.data.raw.color[2] * str1;
				_this34.x = sun1.data.raw.color[0] * str1;
				_this34.y = y9;
				_this34.z = z9;
				_this34.w = 1.0;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_pointPosition") {
			var point = iron_RenderPath.active.point;
			if(point != null) {
				var _this35 = iron_object_Uniforms.helpVec;
				_this35.x = point.transform.world.self._30;
				_this35.y = point.transform.world.self._31;
				_this35.z = point.transform.world.self._32;
				_this35.w = 1.0;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_spotDirection") {
			var point1 = iron_RenderPath.active.point;
			if(point1 != null) {
				var _this36 = new iron_math_Vec4(point1.V.self._02,point1.V.self._12,point1.V.self._22);
				var n2 = Math.sqrt(_this36.x * _this36.x + _this36.y * _this36.y + _this36.z * _this36.z);
				if(n2 > 0.0) {
					var invN2 = 1.0 / n2;
					_this36.x *= invN2;
					_this36.y *= invN2;
					_this36.z *= invN2;
				}
				iron_object_Uniforms.helpVec = _this36;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_pointColor") {
			var point2 = iron_RenderPath.active.point;
			if(point2 != null) {
				var str2 = point2.visible ? point2.data.raw.strength : 0.0;
				var _this37 = iron_object_Uniforms.helpVec;
				var y10 = point2.data.raw.color[1] * str2;
				var z10 = point2.data.raw.color[2] * str2;
				_this37.x = point2.data.raw.color[0] * str2;
				_this37.y = y10;
				_this37.z = z10;
				_this37.w = 1.0;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_cameraPosition") {
			var _this38 = iron_object_Uniforms.helpVec;
			_this38.x = camera.transform.world.self._30;
			_this38.y = camera.transform.world.self._31;
			_this38.z = camera.transform.world.self._32;
			_this38.w = 1.0;
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_cameraLook") {
			var _this39 = new iron_math_Vec4(-camera.transform.world.self._20,-camera.transform.world.self._21,-camera.transform.world.self._22);
			var n3 = Math.sqrt(_this39.x * _this39.x + _this39.y * _this39.y + _this39.z * _this39.z);
			if(n3 > 0.0) {
				var invN3 = 1.0 / n3;
				_this39.x *= invN3;
				_this39.y *= invN3;
				_this39.z *= invN3;
			}
			iron_object_Uniforms.helpVec = _this39;
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_cameraUp") {
			var _this40 = new iron_math_Vec4(camera.transform.world.self._10,camera.transform.world.self._11,camera.transform.world.self._12);
			var n4 = Math.sqrt(_this40.x * _this40.x + _this40.y * _this40.y + _this40.z * _this40.z);
			if(n4 > 0.0) {
				var invN4 = 1.0 / n4;
				_this40.x *= invN4;
				_this40.y *= invN4;
				_this40.z *= invN4;
			}
			iron_object_Uniforms.helpVec = _this40;
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_cameraRight") {
			var _this41 = new iron_math_Vec4(camera.transform.world.self._00,camera.transform.world.self._01,camera.transform.world.self._02);
			var n5 = Math.sqrt(_this41.x * _this41.x + _this41.y * _this41.y + _this41.z * _this41.z);
			if(n5 > 0.0) {
				var invN5 = 1.0 / n5;
				_this41.x *= invN5;
				_this41.y *= invN5;
				_this41.z *= invN5;
			}
			iron_object_Uniforms.helpVec = _this41;
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_backgroundCol") {
			if(camera.data.raw.clear_color != null) {
				var _this42 = iron_object_Uniforms.helpVec;
				var y11 = camera.data.raw.clear_color[1];
				var z11 = camera.data.raw.clear_color[2];
				_this42.x = camera.data.raw.clear_color[0];
				_this42.y = y11;
				_this42.z = z11;
				_this42.w = 1.0;
			}
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_hosekSunDirection") {
			var w3 = iron_Scene.active.world;
			if(w3 != null) {
				var _this43 = iron_object_Uniforms.helpVec;
				var y12 = w3.raw.sun_direction[1];
				var z12 = w3.raw.sun_direction[2] > 0 ? w3.raw.sun_direction[2] : 0;
				_this43.x = w3.raw.sun_direction[0];
				_this43.y = y12;
				_this43.z = z12;
				_this43.w = 1.0;
				v1 = iron_object_Uniforms.helpVec;
			}
		}
		if(v1 != null) {
			g.setFloat3(location,v1.x,v1.y,v1.z);
			return true;
		}
	} else if(c.type == "vec2") {
		var v2 = null;
		var _this44 = iron_object_Uniforms.helpVec;
		_this44.x = 0;
		_this44.y = 0;
		_this44.z = 0;
		_this44.w = 1.0;
		if(c.link == "_vec2x") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 1.0;
			v2.y = 0.0;
		} else if(c.link == "_vec2xInv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 1.0 / iron_RenderPath.active.currentW;
			v2.y = 0.0;
		} else if(c.link == "_vec2x2") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 2.0;
			v2.y = 0.0;
		} else if(c.link == "_vec2x2Inv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 2.0 / iron_RenderPath.active.currentW;
			v2.y = 0.0;
		} else if(c.link == "_vec2y") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 1.0;
		} else if(c.link == "_vec2yInv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 1.0 / iron_RenderPath.active.currentH;
		} else if(c.link == "_vec2y2") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 2.0;
		} else if(c.link == "_vec2y2Inv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 2.0 / iron_RenderPath.active.currentH;
		} else if(c.link == "_vec2y3") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 3.0;
		} else if(c.link == "_vec2y3Inv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 3.0 / iron_RenderPath.active.currentH;
		} else if(c.link == "_windowSize") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = kha_System.windowWidth();
			v2.y = kha_System.windowHeight();
		} else if(c.link == "_windowSizeInv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 1.0 / kha_System.windowWidth();
			v2.y = 1.0 / kha_System.windowHeight();
		} else if(c.link == "_screenSize") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = iron_RenderPath.active.currentW;
			v2.y = iron_RenderPath.active.currentH;
		} else if(c.link == "_screenSizeInv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 1.0 / iron_RenderPath.active.currentW;
			v2.y = 1.0 / iron_RenderPath.active.currentH;
		} else if(c.link == "_aspectRatio") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = iron_RenderPath.active.currentH / iron_RenderPath.active.currentW;
			v2.y = iron_RenderPath.active.currentW / iron_RenderPath.active.currentH;
			v2.x = v2.x > 1.0 ? 1.0 : v2.x;
			v2.y = v2.y > 1.0 ? 1.0 : v2.y;
		} else if(c.link == "_cameraPlane") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = camera.data.raw.near_plane;
			v2.y = camera.data.raw.far_plane;
		} else if(c.link == "_cameraPlaneProj") {
			var near = camera.data.raw.near_plane;
			var far = camera.data.raw.far_plane;
			v2 = iron_object_Uniforms.helpVec;
			v2.x = far / (far - near);
			v2.y = -far * near / (far - near);
		} else if(c.link == "_lightPlane") {
			if(light != null) {
				v2 = iron_object_Uniforms.helpVec;
				v2.x = light.data.raw.near_plane;
				v2.y = light.data.raw.far_plane;
			}
		} else if(c.link == "_lightPlaneProj") {
			if(light != null) {
				var near1 = light.data.raw.near_plane;
				var far1 = light.data.raw.far_plane;
				var a = far1 + near1;
				var b = far1 - near1;
				var f22 = 2.0;
				var c1 = f22 * far1 * near1;
				v2 = iron_object_Uniforms.helpVec;
				v2.x = a / b;
				v2.y = c1 / b;
			}
		} else if(c.link == "_spotData") {
			var point3 = iron_RenderPath.active.point;
			if(point3 != null) {
				v2 = iron_object_Uniforms.helpVec;
				v2.x = point3.data.raw.spot_size;
				v2.y = v2.x - point3.data.raw.spot_blend;
			}
		} else if(c.link == "_shadowMapSize") {
			if(light != null && light.data.raw.cast_shadow) {
				v2 = iron_object_Uniforms.helpVec;
				v2.x = v2.y = light.data.raw.shadowmap_size;
			}
		}
		if(v2 != null) {
			g.setFloat2(location,v2.x,v2.y);
			return true;
		}
	} else if(c.type == "float") {
		var f3 = null;
		if(c.link == "_time") {
			f3 = kha_Scheduler.time();
		} else if(c.link == "_deltaTime") {
			f3 = 0.016666666666666666 * iron_system_Time.scale;
		} else if(c.link == "_lightRadius") {
			f3 = light == null ? 0.0 : light.data.raw.far_plane;
		} else if(c.link == "_lightShadowsBias") {
			f3 = light == null ? 0.0 : light.data.raw.shadows_bias;
		} else if(c.link == "_sunShadowsBias") {
			var sun2 = iron_RenderPath.active.sun;
			f3 = sun2 == null ? 0.0 : sun2.data.raw.shadows_bias;
		} else if(c.link == "_pointShadowsBias") {
			var point4 = iron_RenderPath.active.point;
			f3 = point4 == null ? 0.0 : point4.data.raw.shadows_bias;
		} else if(c.link == "_lightSize") {
			if(light != null && light.data.raw.light_size != null) {
				f3 = light.data.raw.light_size;
			}
		} else if(c.link == "_envmapStrength") {
			f3 = iron_Scene.active.world == null ? 0.0 : iron_Scene.active.world.probe.raw.strength;
		} else if(c.link == "_aspectRatioF") {
			f3 = iron_RenderPath.active.currentW / iron_RenderPath.active.currentH;
		} else if(c.link == "_aspectRatioWindowF") {
			f3 = kha_System.windowWidth() / kha_System.windowHeight();
		} else if(c.link == "_frameScale") {
			f3 = iron_RenderPath.active.frameTime / (0.016666666666666666 * iron_system_Time.scale);
		}
		if(f3 != null) {
			g.setFloat(location,f3);
			return true;
		}
	} else if(c.type == "floats") {
		var fa = null;
		if(c.link == "_envmapIrradiance") {
			fa = iron_Scene.active.world == null ? iron_data_WorldData.getEmptyIrradiance() : iron_Scene.active.world.probe.irradiance;
		} else if(c.link == "_lightsArray") {
			fa = iron_object_LightObject.lightsArray;
		} else if(c.link == "_cascadeData") {
			if(light != null) {
				fa = light.getCascadeData();
			}
		}
		if(fa != null) {
			g.setFloats(location,fa);
			return true;
		}
	} else if(c.type == "int") {
		var i = null;
		if(c.link == "_lightCastShadow") {
			if(light != null && light.data.raw.cast_shadow) {
				i = light.data.raw.shadowmap_cube ? 2 : 1;
			} else {
				i = 0;
			}
		} else if(c.link == "_envmapNumMipmaps") {
			var w4 = iron_Scene.active.world;
			i = w4 != null ? w4.probe.raw.radiance_mipmaps + 1 - 2 : 1;
		}
		if(i != null) {
			g.setInt(location,i);
			return true;
		}
	}
	return false;
};
iron_object_Uniforms.setObjectConstant = function(g,object,location,c) {
	if(c.link == null) {
		return;
	}
	var camera = iron_Scene.active.camera;
	var light = iron_RenderPath.active.light;
	if(c.type == "mat4") {
		var m = null;
		if(c.link == "_worldMatrix") {
			m = object.transform.worldUnpack;
		} else if(c.link == "_inverseWorldMatrix") {
			var _this = iron_object_Uniforms.helpMat;
			var m1 = object.transform.worldUnpack;
			var a00 = m1.self._00;
			var a01 = m1.self._01;
			var a02 = m1.self._02;
			var a03 = m1.self._03;
			var a10 = m1.self._10;
			var a11 = m1.self._11;
			var a12 = m1.self._12;
			var a13 = m1.self._13;
			var a20 = m1.self._20;
			var a21 = m1.self._21;
			var a22 = m1.self._22;
			var a23 = m1.self._23;
			var a30 = m1.self._30;
			var a31 = m1.self._31;
			var a32 = m1.self._32;
			var a33 = m1.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_worldViewProjectionMatrix") {
			var _this1 = iron_object_Uniforms.helpMat;
			var m2 = object.transform.worldUnpack;
			_this1.self._00 = m2.self._00;
			_this1.self._01 = m2.self._01;
			_this1.self._02 = m2.self._02;
			_this1.self._03 = m2.self._03;
			_this1.self._10 = m2.self._10;
			_this1.self._11 = m2.self._11;
			_this1.self._12 = m2.self._12;
			_this1.self._13 = m2.self._13;
			_this1.self._20 = m2.self._20;
			_this1.self._21 = m2.self._21;
			_this1.self._22 = m2.self._22;
			_this1.self._23 = m2.self._23;
			_this1.self._30 = m2.self._30;
			_this1.self._31 = m2.self._31;
			_this1.self._32 = m2.self._32;
			_this1.self._33 = m2.self._33;
			var _this2 = iron_object_Uniforms.helpMat;
			var m3 = camera.V;
			var a001 = _this2.self._00;
			var a011 = _this2.self._01;
			var a021 = _this2.self._02;
			var a031 = _this2.self._03;
			var a101 = _this2.self._10;
			var a111 = _this2.self._11;
			var a121 = _this2.self._12;
			var a131 = _this2.self._13;
			var a201 = _this2.self._20;
			var a211 = _this2.self._21;
			var a221 = _this2.self._22;
			var a231 = _this2.self._23;
			var a301 = _this2.self._30;
			var a311 = _this2.self._31;
			var a321 = _this2.self._32;
			var a331 = _this2.self._33;
			var b0 = m3.self._00;
			var b1 = m3.self._10;
			var b2 = m3.self._20;
			var b3 = m3.self._30;
			_this2.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			_this2.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			_this2.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			_this2.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = m3.self._01;
			b1 = m3.self._11;
			b2 = m3.self._21;
			b3 = m3.self._31;
			_this2.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			_this2.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			_this2.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			_this2.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = m3.self._02;
			b1 = m3.self._12;
			b2 = m3.self._22;
			b3 = m3.self._32;
			_this2.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			_this2.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			_this2.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			_this2.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = m3.self._03;
			b1 = m3.self._13;
			b2 = m3.self._23;
			b3 = m3.self._33;
			_this2.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			_this2.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			_this2.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			_this2.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			var _this3 = iron_object_Uniforms.helpMat;
			var m4 = camera.P;
			var a002 = _this3.self._00;
			var a012 = _this3.self._01;
			var a022 = _this3.self._02;
			var a032 = _this3.self._03;
			var a102 = _this3.self._10;
			var a112 = _this3.self._11;
			var a122 = _this3.self._12;
			var a132 = _this3.self._13;
			var a202 = _this3.self._20;
			var a212 = _this3.self._21;
			var a222 = _this3.self._22;
			var a232 = _this3.self._23;
			var a302 = _this3.self._30;
			var a312 = _this3.self._31;
			var a322 = _this3.self._32;
			var a332 = _this3.self._33;
			var b010 = m4.self._00;
			var b12 = m4.self._10;
			var b21 = m4.self._20;
			var b31 = m4.self._30;
			_this3.self._00 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
			_this3.self._10 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
			_this3.self._20 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
			_this3.self._30 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
			b010 = m4.self._01;
			b12 = m4.self._11;
			b21 = m4.self._21;
			b31 = m4.self._31;
			_this3.self._01 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
			_this3.self._11 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
			_this3.self._21 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
			_this3.self._31 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
			b010 = m4.self._02;
			b12 = m4.self._12;
			b21 = m4.self._22;
			b31 = m4.self._32;
			_this3.self._02 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
			_this3.self._12 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
			_this3.self._22 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
			_this3.self._32 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
			b010 = m4.self._03;
			b12 = m4.self._13;
			b21 = m4.self._23;
			b31 = m4.self._33;
			_this3.self._03 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
			_this3.self._13 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
			_this3.self._23 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
			_this3.self._33 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_worldViewProjectionMatrixSphere") {
			var _this4 = iron_object_Uniforms.helpMat;
			var m5 = object.transform.worldUnpack;
			_this4.self._00 = m5.self._00;
			_this4.self._01 = m5.self._01;
			_this4.self._02 = m5.self._02;
			_this4.self._03 = m5.self._03;
			_this4.self._10 = m5.self._10;
			_this4.self._11 = m5.self._11;
			_this4.self._12 = m5.self._12;
			_this4.self._13 = m5.self._13;
			_this4.self._20 = m5.self._20;
			_this4.self._21 = m5.self._21;
			_this4.self._22 = m5.self._22;
			_this4.self._23 = m5.self._23;
			_this4.self._30 = m5.self._30;
			_this4.self._31 = m5.self._31;
			_this4.self._32 = m5.self._32;
			_this4.self._33 = m5.self._33;
			var _this5 = iron_object_Uniforms.helpMat;
			var m6 = camera.V;
			var a003 = _this5.self._00;
			var a013 = _this5.self._01;
			var a023 = _this5.self._02;
			var a033 = _this5.self._03;
			var a103 = _this5.self._10;
			var a113 = _this5.self._11;
			var a123 = _this5.self._12;
			var a133 = _this5.self._13;
			var a203 = _this5.self._20;
			var a213 = _this5.self._21;
			var a223 = _this5.self._22;
			var a233 = _this5.self._23;
			var a303 = _this5.self._30;
			var a313 = _this5.self._31;
			var a323 = _this5.self._32;
			var a333 = _this5.self._33;
			var b011 = m6.self._00;
			var b13 = m6.self._10;
			var b22 = m6.self._20;
			var b32 = m6.self._30;
			_this5.self._00 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
			_this5.self._10 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
			_this5.self._20 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
			_this5.self._30 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
			b011 = m6.self._01;
			b13 = m6.self._11;
			b22 = m6.self._21;
			b32 = m6.self._31;
			_this5.self._01 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
			_this5.self._11 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
			_this5.self._21 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
			_this5.self._31 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
			b011 = m6.self._02;
			b13 = m6.self._12;
			b22 = m6.self._22;
			b32 = m6.self._32;
			_this5.self._02 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
			_this5.self._12 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
			_this5.self._22 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
			_this5.self._32 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
			b011 = m6.self._03;
			b13 = m6.self._13;
			b22 = m6.self._23;
			b32 = m6.self._33;
			_this5.self._03 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
			_this5.self._13 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
			_this5.self._23 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
			_this5.self._33 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
			iron_object_Uniforms.helpMat.self._00 = 1.0;
			iron_object_Uniforms.helpMat.self._10 = 0.0;
			iron_object_Uniforms.helpMat.self._20 = 0.0;
			iron_object_Uniforms.helpMat.self._01 = 0.0;
			iron_object_Uniforms.helpMat.self._11 = 1.0;
			iron_object_Uniforms.helpMat.self._21 = 0.0;
			iron_object_Uniforms.helpMat.self._02 = 0.0;
			iron_object_Uniforms.helpMat.self._12 = 0.0;
			iron_object_Uniforms.helpMat.self._22 = 1.0;
			var _this6 = iron_object_Uniforms.helpMat;
			var m7 = camera.P;
			var a004 = _this6.self._00;
			var a014 = _this6.self._01;
			var a024 = _this6.self._02;
			var a034 = _this6.self._03;
			var a104 = _this6.self._10;
			var a114 = _this6.self._11;
			var a124 = _this6.self._12;
			var a134 = _this6.self._13;
			var a204 = _this6.self._20;
			var a214 = _this6.self._21;
			var a224 = _this6.self._22;
			var a234 = _this6.self._23;
			var a304 = _this6.self._30;
			var a314 = _this6.self._31;
			var a324 = _this6.self._32;
			var a334 = _this6.self._33;
			var b012 = m7.self._00;
			var b14 = m7.self._10;
			var b23 = m7.self._20;
			var b33 = m7.self._30;
			_this6.self._00 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
			_this6.self._10 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
			_this6.self._20 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
			_this6.self._30 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
			b012 = m7.self._01;
			b14 = m7.self._11;
			b23 = m7.self._21;
			b33 = m7.self._31;
			_this6.self._01 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
			_this6.self._11 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
			_this6.self._21 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
			_this6.self._31 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
			b012 = m7.self._02;
			b14 = m7.self._12;
			b23 = m7.self._22;
			b33 = m7.self._32;
			_this6.self._02 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
			_this6.self._12 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
			_this6.self._22 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
			_this6.self._32 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
			b012 = m7.self._03;
			b14 = m7.self._13;
			b23 = m7.self._23;
			b33 = m7.self._33;
			_this6.self._03 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
			_this6.self._13 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
			_this6.self._23 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
			_this6.self._33 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_worldViewProjectionMatrixCylinder") {
			var _this7 = iron_object_Uniforms.helpMat;
			var m8 = object.transform.worldUnpack;
			_this7.self._00 = m8.self._00;
			_this7.self._01 = m8.self._01;
			_this7.self._02 = m8.self._02;
			_this7.self._03 = m8.self._03;
			_this7.self._10 = m8.self._10;
			_this7.self._11 = m8.self._11;
			_this7.self._12 = m8.self._12;
			_this7.self._13 = m8.self._13;
			_this7.self._20 = m8.self._20;
			_this7.self._21 = m8.self._21;
			_this7.self._22 = m8.self._22;
			_this7.self._23 = m8.self._23;
			_this7.self._30 = m8.self._30;
			_this7.self._31 = m8.self._31;
			_this7.self._32 = m8.self._32;
			_this7.self._33 = m8.self._33;
			var _this8 = iron_object_Uniforms.helpMat;
			var m9 = camera.V;
			var a005 = _this8.self._00;
			var a015 = _this8.self._01;
			var a025 = _this8.self._02;
			var a035 = _this8.self._03;
			var a105 = _this8.self._10;
			var a115 = _this8.self._11;
			var a125 = _this8.self._12;
			var a135 = _this8.self._13;
			var a205 = _this8.self._20;
			var a215 = _this8.self._21;
			var a225 = _this8.self._22;
			var a235 = _this8.self._23;
			var a305 = _this8.self._30;
			var a315 = _this8.self._31;
			var a325 = _this8.self._32;
			var a335 = _this8.self._33;
			var b013 = m9.self._00;
			var b15 = m9.self._10;
			var b24 = m9.self._20;
			var b34 = m9.self._30;
			_this8.self._00 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
			_this8.self._10 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
			_this8.self._20 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
			_this8.self._30 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
			b013 = m9.self._01;
			b15 = m9.self._11;
			b24 = m9.self._21;
			b34 = m9.self._31;
			_this8.self._01 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
			_this8.self._11 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
			_this8.self._21 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
			_this8.self._31 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
			b013 = m9.self._02;
			b15 = m9.self._12;
			b24 = m9.self._22;
			b34 = m9.self._32;
			_this8.self._02 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
			_this8.self._12 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
			_this8.self._22 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
			_this8.self._32 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
			b013 = m9.self._03;
			b15 = m9.self._13;
			b24 = m9.self._23;
			b34 = m9.self._33;
			_this8.self._03 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
			_this8.self._13 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
			_this8.self._23 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
			_this8.self._33 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
			iron_object_Uniforms.helpMat.self._00 = 1.0;
			iron_object_Uniforms.helpMat.self._20 = 0.0;
			iron_object_Uniforms.helpMat.self._01 = 0.0;
			iron_object_Uniforms.helpMat.self._21 = 0.0;
			iron_object_Uniforms.helpMat.self._02 = 0.0;
			iron_object_Uniforms.helpMat.self._22 = 1.0;
			var _this9 = iron_object_Uniforms.helpMat;
			var m10 = camera.P;
			var a006 = _this9.self._00;
			var a016 = _this9.self._01;
			var a026 = _this9.self._02;
			var a036 = _this9.self._03;
			var a106 = _this9.self._10;
			var a116 = _this9.self._11;
			var a126 = _this9.self._12;
			var a136 = _this9.self._13;
			var a206 = _this9.self._20;
			var a216 = _this9.self._21;
			var a226 = _this9.self._22;
			var a236 = _this9.self._23;
			var a306 = _this9.self._30;
			var a316 = _this9.self._31;
			var a326 = _this9.self._32;
			var a336 = _this9.self._33;
			var b014 = m10.self._00;
			var b16 = m10.self._10;
			var b25 = m10.self._20;
			var b35 = m10.self._30;
			_this9.self._00 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
			_this9.self._10 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
			_this9.self._20 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
			_this9.self._30 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
			b014 = m10.self._01;
			b16 = m10.self._11;
			b25 = m10.self._21;
			b35 = m10.self._31;
			_this9.self._01 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
			_this9.self._11 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
			_this9.self._21 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
			_this9.self._31 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
			b014 = m10.self._02;
			b16 = m10.self._12;
			b25 = m10.self._22;
			b35 = m10.self._32;
			_this9.self._02 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
			_this9.self._12 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
			_this9.self._22 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
			_this9.self._32 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
			b014 = m10.self._03;
			b16 = m10.self._13;
			b25 = m10.self._23;
			b35 = m10.self._33;
			_this9.self._03 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
			_this9.self._13 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
			_this9.self._23 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
			_this9.self._33 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_worldViewMatrix") {
			var _this10 = iron_object_Uniforms.helpMat;
			var m11 = object.transform.worldUnpack;
			_this10.self._00 = m11.self._00;
			_this10.self._01 = m11.self._01;
			_this10.self._02 = m11.self._02;
			_this10.self._03 = m11.self._03;
			_this10.self._10 = m11.self._10;
			_this10.self._11 = m11.self._11;
			_this10.self._12 = m11.self._12;
			_this10.self._13 = m11.self._13;
			_this10.self._20 = m11.self._20;
			_this10.self._21 = m11.self._21;
			_this10.self._22 = m11.self._22;
			_this10.self._23 = m11.self._23;
			_this10.self._30 = m11.self._30;
			_this10.self._31 = m11.self._31;
			_this10.self._32 = m11.self._32;
			_this10.self._33 = m11.self._33;
			var _this11 = iron_object_Uniforms.helpMat;
			var m12 = camera.V;
			var a007 = _this11.self._00;
			var a017 = _this11.self._01;
			var a027 = _this11.self._02;
			var a037 = _this11.self._03;
			var a107 = _this11.self._10;
			var a117 = _this11.self._11;
			var a127 = _this11.self._12;
			var a137 = _this11.self._13;
			var a207 = _this11.self._20;
			var a217 = _this11.self._21;
			var a227 = _this11.self._22;
			var a237 = _this11.self._23;
			var a307 = _this11.self._30;
			var a317 = _this11.self._31;
			var a327 = _this11.self._32;
			var a337 = _this11.self._33;
			var b015 = m12.self._00;
			var b17 = m12.self._10;
			var b26 = m12.self._20;
			var b36 = m12.self._30;
			_this11.self._00 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
			_this11.self._10 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
			_this11.self._20 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
			_this11.self._30 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
			b015 = m12.self._01;
			b17 = m12.self._11;
			b26 = m12.self._21;
			b36 = m12.self._31;
			_this11.self._01 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
			_this11.self._11 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
			_this11.self._21 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
			_this11.self._31 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
			b015 = m12.self._02;
			b17 = m12.self._12;
			b26 = m12.self._22;
			b36 = m12.self._32;
			_this11.self._02 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
			_this11.self._12 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
			_this11.self._22 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
			_this11.self._32 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
			b015 = m12.self._03;
			b17 = m12.self._13;
			b26 = m12.self._23;
			b36 = m12.self._33;
			_this11.self._03 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
			_this11.self._13 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
			_this11.self._23 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
			_this11.self._33 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_lightWorldViewProjectionMatrix") {
			if(light != null) {
				if(object == null) {
					var _this12 = iron_object_Uniforms.helpMat;
					_this12.self._00 = 1.0;
					_this12.self._01 = 0.0;
					_this12.self._02 = 0.0;
					_this12.self._03 = 0.0;
					_this12.self._10 = 0.0;
					_this12.self._11 = 1.0;
					_this12.self._12 = 0.0;
					_this12.self._13 = 0.0;
					_this12.self._20 = 0.0;
					_this12.self._21 = 0.0;
					_this12.self._22 = 1.0;
					_this12.self._23 = 0.0;
					_this12.self._30 = 0.0;
					_this12.self._31 = 0.0;
					_this12.self._32 = 0.0;
					_this12.self._33 = 1.0;
				} else {
					var _this13 = iron_object_Uniforms.helpMat;
					var m13 = object.transform.worldUnpack;
					_this13.self._00 = m13.self._00;
					_this13.self._01 = m13.self._01;
					_this13.self._02 = m13.self._02;
					_this13.self._03 = m13.self._03;
					_this13.self._10 = m13.self._10;
					_this13.self._11 = m13.self._11;
					_this13.self._12 = m13.self._12;
					_this13.self._13 = m13.self._13;
					_this13.self._20 = m13.self._20;
					_this13.self._21 = m13.self._21;
					_this13.self._22 = m13.self._22;
					_this13.self._23 = m13.self._23;
					_this13.self._30 = m13.self._30;
					_this13.self._31 = m13.self._31;
					_this13.self._32 = m13.self._32;
					_this13.self._33 = m13.self._33;
				}
				var _this14 = iron_object_Uniforms.helpMat;
				var m14 = light.VP;
				var a008 = _this14.self._00;
				var a018 = _this14.self._01;
				var a028 = _this14.self._02;
				var a038 = _this14.self._03;
				var a108 = _this14.self._10;
				var a118 = _this14.self._11;
				var a128 = _this14.self._12;
				var a138 = _this14.self._13;
				var a208 = _this14.self._20;
				var a218 = _this14.self._21;
				var a228 = _this14.self._22;
				var a238 = _this14.self._23;
				var a308 = _this14.self._30;
				var a318 = _this14.self._31;
				var a328 = _this14.self._32;
				var a338 = _this14.self._33;
				var b016 = m14.self._00;
				var b18 = m14.self._10;
				var b27 = m14.self._20;
				var b37 = m14.self._30;
				_this14.self._00 = a008 * b016 + a018 * b18 + a028 * b27 + a038 * b37;
				_this14.self._10 = a108 * b016 + a118 * b18 + a128 * b27 + a138 * b37;
				_this14.self._20 = a208 * b016 + a218 * b18 + a228 * b27 + a238 * b37;
				_this14.self._30 = a308 * b016 + a318 * b18 + a328 * b27 + a338 * b37;
				b016 = m14.self._01;
				b18 = m14.self._11;
				b27 = m14.self._21;
				b37 = m14.self._31;
				_this14.self._01 = a008 * b016 + a018 * b18 + a028 * b27 + a038 * b37;
				_this14.self._11 = a108 * b016 + a118 * b18 + a128 * b27 + a138 * b37;
				_this14.self._21 = a208 * b016 + a218 * b18 + a228 * b27 + a238 * b37;
				_this14.self._31 = a308 * b016 + a318 * b18 + a328 * b27 + a338 * b37;
				b016 = m14.self._02;
				b18 = m14.self._12;
				b27 = m14.self._22;
				b37 = m14.self._32;
				_this14.self._02 = a008 * b016 + a018 * b18 + a028 * b27 + a038 * b37;
				_this14.self._12 = a108 * b016 + a118 * b18 + a128 * b27 + a138 * b37;
				_this14.self._22 = a208 * b016 + a218 * b18 + a228 * b27 + a238 * b37;
				_this14.self._32 = a308 * b016 + a318 * b18 + a328 * b27 + a338 * b37;
				b016 = m14.self._03;
				b18 = m14.self._13;
				b27 = m14.self._23;
				b37 = m14.self._33;
				_this14.self._03 = a008 * b016 + a018 * b18 + a028 * b27 + a038 * b37;
				_this14.self._13 = a108 * b016 + a118 * b18 + a128 * b27 + a138 * b37;
				_this14.self._23 = a208 * b016 + a218 * b18 + a228 * b27 + a238 * b37;
				_this14.self._33 = a308 * b016 + a318 * b18 + a328 * b27 + a338 * b37;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_lightWorldViewProjectionMatrixSphere") {
			if(light != null) {
				var _this15 = iron_object_Uniforms.helpMat;
				var m15 = object.transform.worldUnpack;
				_this15.self._00 = m15.self._00;
				_this15.self._01 = m15.self._01;
				_this15.self._02 = m15.self._02;
				_this15.self._03 = m15.self._03;
				_this15.self._10 = m15.self._10;
				_this15.self._11 = m15.self._11;
				_this15.self._12 = m15.self._12;
				_this15.self._13 = m15.self._13;
				_this15.self._20 = m15.self._20;
				_this15.self._21 = m15.self._21;
				_this15.self._22 = m15.self._22;
				_this15.self._23 = m15.self._23;
				_this15.self._30 = m15.self._30;
				_this15.self._31 = m15.self._31;
				_this15.self._32 = m15.self._32;
				_this15.self._33 = m15.self._33;
				var _this16 = iron_object_Uniforms.helpMat;
				var m16 = camera.V;
				var a009 = _this16.self._00;
				var a019 = _this16.self._01;
				var a029 = _this16.self._02;
				var a039 = _this16.self._03;
				var a109 = _this16.self._10;
				var a119 = _this16.self._11;
				var a129 = _this16.self._12;
				var a139 = _this16.self._13;
				var a209 = _this16.self._20;
				var a219 = _this16.self._21;
				var a229 = _this16.self._22;
				var a239 = _this16.self._23;
				var a309 = _this16.self._30;
				var a319 = _this16.self._31;
				var a329 = _this16.self._32;
				var a339 = _this16.self._33;
				var b017 = m16.self._00;
				var b19 = m16.self._10;
				var b28 = m16.self._20;
				var b38 = m16.self._30;
				_this16.self._00 = a009 * b017 + a019 * b19 + a029 * b28 + a039 * b38;
				_this16.self._10 = a109 * b017 + a119 * b19 + a129 * b28 + a139 * b38;
				_this16.self._20 = a209 * b017 + a219 * b19 + a229 * b28 + a239 * b38;
				_this16.self._30 = a309 * b017 + a319 * b19 + a329 * b28 + a339 * b38;
				b017 = m16.self._01;
				b19 = m16.self._11;
				b28 = m16.self._21;
				b38 = m16.self._31;
				_this16.self._01 = a009 * b017 + a019 * b19 + a029 * b28 + a039 * b38;
				_this16.self._11 = a109 * b017 + a119 * b19 + a129 * b28 + a139 * b38;
				_this16.self._21 = a209 * b017 + a219 * b19 + a229 * b28 + a239 * b38;
				_this16.self._31 = a309 * b017 + a319 * b19 + a329 * b28 + a339 * b38;
				b017 = m16.self._02;
				b19 = m16.self._12;
				b28 = m16.self._22;
				b38 = m16.self._32;
				_this16.self._02 = a009 * b017 + a019 * b19 + a029 * b28 + a039 * b38;
				_this16.self._12 = a109 * b017 + a119 * b19 + a129 * b28 + a139 * b38;
				_this16.self._22 = a209 * b017 + a219 * b19 + a229 * b28 + a239 * b38;
				_this16.self._32 = a309 * b017 + a319 * b19 + a329 * b28 + a339 * b38;
				b017 = m16.self._03;
				b19 = m16.self._13;
				b28 = m16.self._23;
				b38 = m16.self._33;
				_this16.self._03 = a009 * b017 + a019 * b19 + a029 * b28 + a039 * b38;
				_this16.self._13 = a109 * b017 + a119 * b19 + a129 * b28 + a139 * b38;
				_this16.self._23 = a209 * b017 + a219 * b19 + a229 * b28 + a239 * b38;
				_this16.self._33 = a309 * b017 + a319 * b19 + a329 * b28 + a339 * b38;
				iron_object_Uniforms.helpMat.self._00 = 1.0;
				iron_object_Uniforms.helpMat.self._10 = 0.0;
				iron_object_Uniforms.helpMat.self._20 = 0.0;
				iron_object_Uniforms.helpMat.self._01 = 0.0;
				iron_object_Uniforms.helpMat.self._11 = 1.0;
				iron_object_Uniforms.helpMat.self._21 = 0.0;
				iron_object_Uniforms.helpMat.self._02 = 0.0;
				iron_object_Uniforms.helpMat.self._12 = 0.0;
				iron_object_Uniforms.helpMat.self._22 = 1.0;
				var _this17 = iron_object_Uniforms.helpMat2;
				var m17 = camera.V;
				var a0010 = m17.self._00;
				var a0110 = m17.self._01;
				var a0210 = m17.self._02;
				var a0310 = m17.self._03;
				var a1010 = m17.self._10;
				var a1110 = m17.self._11;
				var a1210 = m17.self._12;
				var a1310 = m17.self._13;
				var a2010 = m17.self._20;
				var a2110 = m17.self._21;
				var a2210 = m17.self._22;
				var a2310 = m17.self._23;
				var a3010 = m17.self._30;
				var a3110 = m17.self._31;
				var a3210 = m17.self._32;
				var a3310 = m17.self._33;
				var b001 = a0010 * a1110 - a0110 * a1010;
				var b018 = a0010 * a1210 - a0210 * a1010;
				var b021 = a0010 * a1310 - a0310 * a1010;
				var b031 = a0110 * a1210 - a0210 * a1110;
				var b041 = a0110 * a1310 - a0310 * a1110;
				var b051 = a0210 * a1310 - a0310 * a1210;
				var b061 = a2010 * a3110 - a2110 * a3010;
				var b071 = a2010 * a3210 - a2210 * a3010;
				var b081 = a2010 * a3310 - a2310 * a3010;
				var b091 = a2110 * a3210 - a2210 * a3110;
				var b101 = a2110 * a3310 - a2310 * a3110;
				var b111 = a2210 * a3310 - a2310 * a3210;
				var det1 = b001 * b111 - b018 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
				if(det1 == 0.0) {
					_this17.self._00 = 1.0;
					_this17.self._01 = 0.0;
					_this17.self._02 = 0.0;
					_this17.self._03 = 0.0;
					_this17.self._10 = 0.0;
					_this17.self._11 = 1.0;
					_this17.self._12 = 0.0;
					_this17.self._13 = 0.0;
					_this17.self._20 = 0.0;
					_this17.self._21 = 0.0;
					_this17.self._22 = 1.0;
					_this17.self._23 = 0.0;
					_this17.self._30 = 0.0;
					_this17.self._31 = 0.0;
					_this17.self._32 = 0.0;
					_this17.self._33 = 1.0;
				} else {
					det1 = 1.0 / det1;
					_this17.self._00 = (a1110 * b111 - a1210 * b101 + a1310 * b091) * det1;
					_this17.self._01 = (a0210 * b101 - a0110 * b111 - a0310 * b091) * det1;
					_this17.self._02 = (a3110 * b051 - a3210 * b041 + a3310 * b031) * det1;
					_this17.self._03 = (a2210 * b041 - a2110 * b051 - a2310 * b031) * det1;
					_this17.self._10 = (a1210 * b081 - a1010 * b111 - a1310 * b071) * det1;
					_this17.self._11 = (a0010 * b111 - a0210 * b081 + a0310 * b071) * det1;
					_this17.self._12 = (a3210 * b021 - a3010 * b051 - a3310 * b018) * det1;
					_this17.self._13 = (a2010 * b051 - a2210 * b021 + a2310 * b018) * det1;
					_this17.self._20 = (a1010 * b101 - a1110 * b081 + a1310 * b061) * det1;
					_this17.self._21 = (a0110 * b081 - a0010 * b101 - a0310 * b061) * det1;
					_this17.self._22 = (a3010 * b041 - a3110 * b021 + a3310 * b001) * det1;
					_this17.self._23 = (a2110 * b021 - a2010 * b041 - a2310 * b001) * det1;
					_this17.self._30 = (a1110 * b071 - a1010 * b091 - a1210 * b061) * det1;
					_this17.self._31 = (a0010 * b091 - a0110 * b071 + a0210 * b061) * det1;
					_this17.self._32 = (a3110 * b018 - a3010 * b031 - a3210 * b001) * det1;
					_this17.self._33 = (a2010 * b031 - a2110 * b018 + a2210 * b001) * det1;
				}
				var _this18 = iron_object_Uniforms.helpMat;
				var m18 = iron_object_Uniforms.helpMat2;
				var a0011 = _this18.self._00;
				var a0111 = _this18.self._01;
				var a0211 = _this18.self._02;
				var a0311 = _this18.self._03;
				var a1011 = _this18.self._10;
				var a1111 = _this18.self._11;
				var a1211 = _this18.self._12;
				var a1311 = _this18.self._13;
				var a2011 = _this18.self._20;
				var a2111 = _this18.self._21;
				var a2211 = _this18.self._22;
				var a2311 = _this18.self._23;
				var a3011 = _this18.self._30;
				var a3111 = _this18.self._31;
				var a3211 = _this18.self._32;
				var a3311 = _this18.self._33;
				var b019 = m18.self._00;
				var b110 = m18.self._10;
				var b29 = m18.self._20;
				var b39 = m18.self._30;
				_this18.self._00 = a0011 * b019 + a0111 * b110 + a0211 * b29 + a0311 * b39;
				_this18.self._10 = a1011 * b019 + a1111 * b110 + a1211 * b29 + a1311 * b39;
				_this18.self._20 = a2011 * b019 + a2111 * b110 + a2211 * b29 + a2311 * b39;
				_this18.self._30 = a3011 * b019 + a3111 * b110 + a3211 * b29 + a3311 * b39;
				b019 = m18.self._01;
				b110 = m18.self._11;
				b29 = m18.self._21;
				b39 = m18.self._31;
				_this18.self._01 = a0011 * b019 + a0111 * b110 + a0211 * b29 + a0311 * b39;
				_this18.self._11 = a1011 * b019 + a1111 * b110 + a1211 * b29 + a1311 * b39;
				_this18.self._21 = a2011 * b019 + a2111 * b110 + a2211 * b29 + a2311 * b39;
				_this18.self._31 = a3011 * b019 + a3111 * b110 + a3211 * b29 + a3311 * b39;
				b019 = m18.self._02;
				b110 = m18.self._12;
				b29 = m18.self._22;
				b39 = m18.self._32;
				_this18.self._02 = a0011 * b019 + a0111 * b110 + a0211 * b29 + a0311 * b39;
				_this18.self._12 = a1011 * b019 + a1111 * b110 + a1211 * b29 + a1311 * b39;
				_this18.self._22 = a2011 * b019 + a2111 * b110 + a2211 * b29 + a2311 * b39;
				_this18.self._32 = a3011 * b019 + a3111 * b110 + a3211 * b29 + a3311 * b39;
				b019 = m18.self._03;
				b110 = m18.self._13;
				b29 = m18.self._23;
				b39 = m18.self._33;
				_this18.self._03 = a0011 * b019 + a0111 * b110 + a0211 * b29 + a0311 * b39;
				_this18.self._13 = a1011 * b019 + a1111 * b110 + a1211 * b29 + a1311 * b39;
				_this18.self._23 = a2011 * b019 + a2111 * b110 + a2211 * b29 + a2311 * b39;
				_this18.self._33 = a3011 * b019 + a3111 * b110 + a3211 * b29 + a3311 * b39;
				var _this19 = iron_object_Uniforms.helpMat;
				var m19 = light.VP;
				var a0012 = _this19.self._00;
				var a0112 = _this19.self._01;
				var a0212 = _this19.self._02;
				var a0312 = _this19.self._03;
				var a1012 = _this19.self._10;
				var a1112 = _this19.self._11;
				var a1212 = _this19.self._12;
				var a1312 = _this19.self._13;
				var a2012 = _this19.self._20;
				var a2112 = _this19.self._21;
				var a2212 = _this19.self._22;
				var a2312 = _this19.self._23;
				var a3012 = _this19.self._30;
				var a3112 = _this19.self._31;
				var a3212 = _this19.self._32;
				var a3312 = _this19.self._33;
				var b020 = m19.self._00;
				var b112 = m19.self._10;
				var b210 = m19.self._20;
				var b310 = m19.self._30;
				_this19.self._00 = a0012 * b020 + a0112 * b112 + a0212 * b210 + a0312 * b310;
				_this19.self._10 = a1012 * b020 + a1112 * b112 + a1212 * b210 + a1312 * b310;
				_this19.self._20 = a2012 * b020 + a2112 * b112 + a2212 * b210 + a2312 * b310;
				_this19.self._30 = a3012 * b020 + a3112 * b112 + a3212 * b210 + a3312 * b310;
				b020 = m19.self._01;
				b112 = m19.self._11;
				b210 = m19.self._21;
				b310 = m19.self._31;
				_this19.self._01 = a0012 * b020 + a0112 * b112 + a0212 * b210 + a0312 * b310;
				_this19.self._11 = a1012 * b020 + a1112 * b112 + a1212 * b210 + a1312 * b310;
				_this19.self._21 = a2012 * b020 + a2112 * b112 + a2212 * b210 + a2312 * b310;
				_this19.self._31 = a3012 * b020 + a3112 * b112 + a3212 * b210 + a3312 * b310;
				b020 = m19.self._02;
				b112 = m19.self._12;
				b210 = m19.self._22;
				b310 = m19.self._32;
				_this19.self._02 = a0012 * b020 + a0112 * b112 + a0212 * b210 + a0312 * b310;
				_this19.self._12 = a1012 * b020 + a1112 * b112 + a1212 * b210 + a1312 * b310;
				_this19.self._22 = a2012 * b020 + a2112 * b112 + a2212 * b210 + a2312 * b310;
				_this19.self._32 = a3012 * b020 + a3112 * b112 + a3212 * b210 + a3312 * b310;
				b020 = m19.self._03;
				b112 = m19.self._13;
				b210 = m19.self._23;
				b310 = m19.self._33;
				_this19.self._03 = a0012 * b020 + a0112 * b112 + a0212 * b210 + a0312 * b310;
				_this19.self._13 = a1012 * b020 + a1112 * b112 + a1212 * b210 + a1312 * b310;
				_this19.self._23 = a2012 * b020 + a2112 * b112 + a2212 * b210 + a2312 * b310;
				_this19.self._33 = a3012 * b020 + a3112 * b112 + a3212 * b210 + a3312 * b310;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_lightWorldViewProjectionMatrixCylinder") {
			if(light != null) {
				var _this20 = iron_object_Uniforms.helpMat;
				var m20 = object.transform.worldUnpack;
				_this20.self._00 = m20.self._00;
				_this20.self._01 = m20.self._01;
				_this20.self._02 = m20.self._02;
				_this20.self._03 = m20.self._03;
				_this20.self._10 = m20.self._10;
				_this20.self._11 = m20.self._11;
				_this20.self._12 = m20.self._12;
				_this20.self._13 = m20.self._13;
				_this20.self._20 = m20.self._20;
				_this20.self._21 = m20.self._21;
				_this20.self._22 = m20.self._22;
				_this20.self._23 = m20.self._23;
				_this20.self._30 = m20.self._30;
				_this20.self._31 = m20.self._31;
				_this20.self._32 = m20.self._32;
				_this20.self._33 = m20.self._33;
				var _this21 = iron_object_Uniforms.helpMat;
				var m21 = camera.V;
				var a0013 = _this21.self._00;
				var a0113 = _this21.self._01;
				var a0213 = _this21.self._02;
				var a0313 = _this21.self._03;
				var a1013 = _this21.self._10;
				var a1113 = _this21.self._11;
				var a1213 = _this21.self._12;
				var a1313 = _this21.self._13;
				var a2013 = _this21.self._20;
				var a2113 = _this21.self._21;
				var a2213 = _this21.self._22;
				var a2313 = _this21.self._23;
				var a3013 = _this21.self._30;
				var a3113 = _this21.self._31;
				var a3213 = _this21.self._32;
				var a3313 = _this21.self._33;
				var b022 = m21.self._00;
				var b113 = m21.self._10;
				var b211 = m21.self._20;
				var b311 = m21.self._30;
				_this21.self._00 = a0013 * b022 + a0113 * b113 + a0213 * b211 + a0313 * b311;
				_this21.self._10 = a1013 * b022 + a1113 * b113 + a1213 * b211 + a1313 * b311;
				_this21.self._20 = a2013 * b022 + a2113 * b113 + a2213 * b211 + a2313 * b311;
				_this21.self._30 = a3013 * b022 + a3113 * b113 + a3213 * b211 + a3313 * b311;
				b022 = m21.self._01;
				b113 = m21.self._11;
				b211 = m21.self._21;
				b311 = m21.self._31;
				_this21.self._01 = a0013 * b022 + a0113 * b113 + a0213 * b211 + a0313 * b311;
				_this21.self._11 = a1013 * b022 + a1113 * b113 + a1213 * b211 + a1313 * b311;
				_this21.self._21 = a2013 * b022 + a2113 * b113 + a2213 * b211 + a2313 * b311;
				_this21.self._31 = a3013 * b022 + a3113 * b113 + a3213 * b211 + a3313 * b311;
				b022 = m21.self._02;
				b113 = m21.self._12;
				b211 = m21.self._22;
				b311 = m21.self._32;
				_this21.self._02 = a0013 * b022 + a0113 * b113 + a0213 * b211 + a0313 * b311;
				_this21.self._12 = a1013 * b022 + a1113 * b113 + a1213 * b211 + a1313 * b311;
				_this21.self._22 = a2013 * b022 + a2113 * b113 + a2213 * b211 + a2313 * b311;
				_this21.self._32 = a3013 * b022 + a3113 * b113 + a3213 * b211 + a3313 * b311;
				b022 = m21.self._03;
				b113 = m21.self._13;
				b211 = m21.self._23;
				b311 = m21.self._33;
				_this21.self._03 = a0013 * b022 + a0113 * b113 + a0213 * b211 + a0313 * b311;
				_this21.self._13 = a1013 * b022 + a1113 * b113 + a1213 * b211 + a1313 * b311;
				_this21.self._23 = a2013 * b022 + a2113 * b113 + a2213 * b211 + a2313 * b311;
				_this21.self._33 = a3013 * b022 + a3113 * b113 + a3213 * b211 + a3313 * b311;
				iron_object_Uniforms.helpMat.self._00 = 1.0;
				iron_object_Uniforms.helpMat.self._20 = 0.0;
				iron_object_Uniforms.helpMat.self._01 = 0.0;
				iron_object_Uniforms.helpMat.self._21 = 0.0;
				iron_object_Uniforms.helpMat.self._02 = 0.0;
				iron_object_Uniforms.helpMat.self._22 = 1.0;
				var _this22 = iron_object_Uniforms.helpMat2;
				var m22 = camera.V;
				var a0014 = m22.self._00;
				var a0114 = m22.self._01;
				var a0214 = m22.self._02;
				var a0314 = m22.self._03;
				var a1014 = m22.self._10;
				var a1114 = m22.self._11;
				var a1214 = m22.self._12;
				var a1314 = m22.self._13;
				var a2014 = m22.self._20;
				var a2114 = m22.self._21;
				var a2214 = m22.self._22;
				var a2314 = m22.self._23;
				var a3014 = m22.self._30;
				var a3114 = m22.self._31;
				var a3214 = m22.self._32;
				var a3314 = m22.self._33;
				var b002 = a0014 * a1114 - a0114 * a1014;
				var b0110 = a0014 * a1214 - a0214 * a1014;
				var b023 = a0014 * a1314 - a0314 * a1014;
				var b032 = a0114 * a1214 - a0214 * a1114;
				var b042 = a0114 * a1314 - a0314 * a1114;
				var b052 = a0214 * a1314 - a0314 * a1214;
				var b062 = a2014 * a3114 - a2114 * a3014;
				var b072 = a2014 * a3214 - a2214 * a3014;
				var b082 = a2014 * a3314 - a2314 * a3014;
				var b092 = a2114 * a3214 - a2214 * a3114;
				var b102 = a2114 * a3314 - a2314 * a3114;
				var b114 = a2214 * a3314 - a2314 * a3214;
				var det2 = b002 * b114 - b0110 * b102 + b023 * b092 + b032 * b082 - b042 * b072 + b052 * b062;
				if(det2 == 0.0) {
					_this22.self._00 = 1.0;
					_this22.self._01 = 0.0;
					_this22.self._02 = 0.0;
					_this22.self._03 = 0.0;
					_this22.self._10 = 0.0;
					_this22.self._11 = 1.0;
					_this22.self._12 = 0.0;
					_this22.self._13 = 0.0;
					_this22.self._20 = 0.0;
					_this22.self._21 = 0.0;
					_this22.self._22 = 1.0;
					_this22.self._23 = 0.0;
					_this22.self._30 = 0.0;
					_this22.self._31 = 0.0;
					_this22.self._32 = 0.0;
					_this22.self._33 = 1.0;
				} else {
					det2 = 1.0 / det2;
					_this22.self._00 = (a1114 * b114 - a1214 * b102 + a1314 * b092) * det2;
					_this22.self._01 = (a0214 * b102 - a0114 * b114 - a0314 * b092) * det2;
					_this22.self._02 = (a3114 * b052 - a3214 * b042 + a3314 * b032) * det2;
					_this22.self._03 = (a2214 * b042 - a2114 * b052 - a2314 * b032) * det2;
					_this22.self._10 = (a1214 * b082 - a1014 * b114 - a1314 * b072) * det2;
					_this22.self._11 = (a0014 * b114 - a0214 * b082 + a0314 * b072) * det2;
					_this22.self._12 = (a3214 * b023 - a3014 * b052 - a3314 * b0110) * det2;
					_this22.self._13 = (a2014 * b052 - a2214 * b023 + a2314 * b0110) * det2;
					_this22.self._20 = (a1014 * b102 - a1114 * b082 + a1314 * b062) * det2;
					_this22.self._21 = (a0114 * b082 - a0014 * b102 - a0314 * b062) * det2;
					_this22.self._22 = (a3014 * b042 - a3114 * b023 + a3314 * b002) * det2;
					_this22.self._23 = (a2114 * b023 - a2014 * b042 - a2314 * b002) * det2;
					_this22.self._30 = (a1114 * b072 - a1014 * b092 - a1214 * b062) * det2;
					_this22.self._31 = (a0014 * b092 - a0114 * b072 + a0214 * b062) * det2;
					_this22.self._32 = (a3114 * b0110 - a3014 * b032 - a3214 * b002) * det2;
					_this22.self._33 = (a2014 * b032 - a2114 * b0110 + a2214 * b002) * det2;
				}
				var _this23 = iron_object_Uniforms.helpMat;
				var m23 = iron_object_Uniforms.helpMat2;
				var a0015 = _this23.self._00;
				var a0115 = _this23.self._01;
				var a0215 = _this23.self._02;
				var a0315 = _this23.self._03;
				var a1015 = _this23.self._10;
				var a1115 = _this23.self._11;
				var a1215 = _this23.self._12;
				var a1315 = _this23.self._13;
				var a2015 = _this23.self._20;
				var a2115 = _this23.self._21;
				var a2215 = _this23.self._22;
				var a2315 = _this23.self._23;
				var a3015 = _this23.self._30;
				var a3115 = _this23.self._31;
				var a3215 = _this23.self._32;
				var a3315 = _this23.self._33;
				var b024 = m23.self._00;
				var b115 = m23.self._10;
				var b212 = m23.self._20;
				var b312 = m23.self._30;
				_this23.self._00 = a0015 * b024 + a0115 * b115 + a0215 * b212 + a0315 * b312;
				_this23.self._10 = a1015 * b024 + a1115 * b115 + a1215 * b212 + a1315 * b312;
				_this23.self._20 = a2015 * b024 + a2115 * b115 + a2215 * b212 + a2315 * b312;
				_this23.self._30 = a3015 * b024 + a3115 * b115 + a3215 * b212 + a3315 * b312;
				b024 = m23.self._01;
				b115 = m23.self._11;
				b212 = m23.self._21;
				b312 = m23.self._31;
				_this23.self._01 = a0015 * b024 + a0115 * b115 + a0215 * b212 + a0315 * b312;
				_this23.self._11 = a1015 * b024 + a1115 * b115 + a1215 * b212 + a1315 * b312;
				_this23.self._21 = a2015 * b024 + a2115 * b115 + a2215 * b212 + a2315 * b312;
				_this23.self._31 = a3015 * b024 + a3115 * b115 + a3215 * b212 + a3315 * b312;
				b024 = m23.self._02;
				b115 = m23.self._12;
				b212 = m23.self._22;
				b312 = m23.self._32;
				_this23.self._02 = a0015 * b024 + a0115 * b115 + a0215 * b212 + a0315 * b312;
				_this23.self._12 = a1015 * b024 + a1115 * b115 + a1215 * b212 + a1315 * b312;
				_this23.self._22 = a2015 * b024 + a2115 * b115 + a2215 * b212 + a2315 * b312;
				_this23.self._32 = a3015 * b024 + a3115 * b115 + a3215 * b212 + a3315 * b312;
				b024 = m23.self._03;
				b115 = m23.self._13;
				b212 = m23.self._23;
				b312 = m23.self._33;
				_this23.self._03 = a0015 * b024 + a0115 * b115 + a0215 * b212 + a0315 * b312;
				_this23.self._13 = a1015 * b024 + a1115 * b115 + a1215 * b212 + a1315 * b312;
				_this23.self._23 = a2015 * b024 + a2115 * b115 + a2215 * b212 + a2315 * b312;
				_this23.self._33 = a3015 * b024 + a3115 * b115 + a3215 * b212 + a3315 * b312;
				var _this24 = iron_object_Uniforms.helpMat;
				var m24 = light.VP;
				var a0016 = _this24.self._00;
				var a0116 = _this24.self._01;
				var a0216 = _this24.self._02;
				var a0316 = _this24.self._03;
				var a1016 = _this24.self._10;
				var a1116 = _this24.self._11;
				var a1216 = _this24.self._12;
				var a1316 = _this24.self._13;
				var a2016 = _this24.self._20;
				var a2116 = _this24.self._21;
				var a2216 = _this24.self._22;
				var a2316 = _this24.self._23;
				var a3016 = _this24.self._30;
				var a3116 = _this24.self._31;
				var a3216 = _this24.self._32;
				var a3316 = _this24.self._33;
				var b025 = m24.self._00;
				var b116 = m24.self._10;
				var b213 = m24.self._20;
				var b313 = m24.self._30;
				_this24.self._00 = a0016 * b025 + a0116 * b116 + a0216 * b213 + a0316 * b313;
				_this24.self._10 = a1016 * b025 + a1116 * b116 + a1216 * b213 + a1316 * b313;
				_this24.self._20 = a2016 * b025 + a2116 * b116 + a2216 * b213 + a2316 * b313;
				_this24.self._30 = a3016 * b025 + a3116 * b116 + a3216 * b213 + a3316 * b313;
				b025 = m24.self._01;
				b116 = m24.self._11;
				b213 = m24.self._21;
				b313 = m24.self._31;
				_this24.self._01 = a0016 * b025 + a0116 * b116 + a0216 * b213 + a0316 * b313;
				_this24.self._11 = a1016 * b025 + a1116 * b116 + a1216 * b213 + a1316 * b313;
				_this24.self._21 = a2016 * b025 + a2116 * b116 + a2216 * b213 + a2316 * b313;
				_this24.self._31 = a3016 * b025 + a3116 * b116 + a3216 * b213 + a3316 * b313;
				b025 = m24.self._02;
				b116 = m24.self._12;
				b213 = m24.self._22;
				b313 = m24.self._32;
				_this24.self._02 = a0016 * b025 + a0116 * b116 + a0216 * b213 + a0316 * b313;
				_this24.self._12 = a1016 * b025 + a1116 * b116 + a1216 * b213 + a1316 * b313;
				_this24.self._22 = a2016 * b025 + a2116 * b116 + a2216 * b213 + a2316 * b313;
				_this24.self._32 = a3016 * b025 + a3116 * b116 + a3216 * b213 + a3316 * b313;
				b025 = m24.self._03;
				b116 = m24.self._13;
				b213 = m24.self._23;
				b313 = m24.self._33;
				_this24.self._03 = a0016 * b025 + a0116 * b116 + a0216 * b213 + a0316 * b313;
				_this24.self._13 = a1016 * b025 + a1116 * b116 + a1216 * b213 + a1316 * b313;
				_this24.self._23 = a2016 * b025 + a2116 * b116 + a2216 * b213 + a2316 * b313;
				_this24.self._33 = a3016 * b025 + a3116 * b116 + a3216 * b213 + a3316 * b313;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_biasLightWorldViewProjectionMatrix") {
			if(light != null) {
				if(object == null) {
					var _this25 = iron_object_Uniforms.helpMat;
					_this25.self._00 = 1.0;
					_this25.self._01 = 0.0;
					_this25.self._02 = 0.0;
					_this25.self._03 = 0.0;
					_this25.self._10 = 0.0;
					_this25.self._11 = 1.0;
					_this25.self._12 = 0.0;
					_this25.self._13 = 0.0;
					_this25.self._20 = 0.0;
					_this25.self._21 = 0.0;
					_this25.self._22 = 1.0;
					_this25.self._23 = 0.0;
					_this25.self._30 = 0.0;
					_this25.self._31 = 0.0;
					_this25.self._32 = 0.0;
					_this25.self._33 = 1.0;
				} else {
					var _this26 = iron_object_Uniforms.helpMat;
					var m25 = object.transform.worldUnpack;
					_this26.self._00 = m25.self._00;
					_this26.self._01 = m25.self._01;
					_this26.self._02 = m25.self._02;
					_this26.self._03 = m25.self._03;
					_this26.self._10 = m25.self._10;
					_this26.self._11 = m25.self._11;
					_this26.self._12 = m25.self._12;
					_this26.self._13 = m25.self._13;
					_this26.self._20 = m25.self._20;
					_this26.self._21 = m25.self._21;
					_this26.self._22 = m25.self._22;
					_this26.self._23 = m25.self._23;
					_this26.self._30 = m25.self._30;
					_this26.self._31 = m25.self._31;
					_this26.self._32 = m25.self._32;
					_this26.self._33 = m25.self._33;
				}
				var _this27 = iron_object_Uniforms.helpMat;
				var m26 = light.VP;
				var a0017 = _this27.self._00;
				var a0117 = _this27.self._01;
				var a0217 = _this27.self._02;
				var a0317 = _this27.self._03;
				var a1017 = _this27.self._10;
				var a1117 = _this27.self._11;
				var a1217 = _this27.self._12;
				var a1317 = _this27.self._13;
				var a2017 = _this27.self._20;
				var a2117 = _this27.self._21;
				var a2217 = _this27.self._22;
				var a2317 = _this27.self._23;
				var a3017 = _this27.self._30;
				var a3117 = _this27.self._31;
				var a3217 = _this27.self._32;
				var a3317 = _this27.self._33;
				var b026 = m26.self._00;
				var b117 = m26.self._10;
				var b214 = m26.self._20;
				var b314 = m26.self._30;
				_this27.self._00 = a0017 * b026 + a0117 * b117 + a0217 * b214 + a0317 * b314;
				_this27.self._10 = a1017 * b026 + a1117 * b117 + a1217 * b214 + a1317 * b314;
				_this27.self._20 = a2017 * b026 + a2117 * b117 + a2217 * b214 + a2317 * b314;
				_this27.self._30 = a3017 * b026 + a3117 * b117 + a3217 * b214 + a3317 * b314;
				b026 = m26.self._01;
				b117 = m26.self._11;
				b214 = m26.self._21;
				b314 = m26.self._31;
				_this27.self._01 = a0017 * b026 + a0117 * b117 + a0217 * b214 + a0317 * b314;
				_this27.self._11 = a1017 * b026 + a1117 * b117 + a1217 * b214 + a1317 * b314;
				_this27.self._21 = a2017 * b026 + a2117 * b117 + a2217 * b214 + a2317 * b314;
				_this27.self._31 = a3017 * b026 + a3117 * b117 + a3217 * b214 + a3317 * b314;
				b026 = m26.self._02;
				b117 = m26.self._12;
				b214 = m26.self._22;
				b314 = m26.self._32;
				_this27.self._02 = a0017 * b026 + a0117 * b117 + a0217 * b214 + a0317 * b314;
				_this27.self._12 = a1017 * b026 + a1117 * b117 + a1217 * b214 + a1317 * b314;
				_this27.self._22 = a2017 * b026 + a2117 * b117 + a2217 * b214 + a2317 * b314;
				_this27.self._32 = a3017 * b026 + a3117 * b117 + a3217 * b214 + a3317 * b314;
				b026 = m26.self._03;
				b117 = m26.self._13;
				b214 = m26.self._23;
				b314 = m26.self._33;
				_this27.self._03 = a0017 * b026 + a0117 * b117 + a0217 * b214 + a0317 * b314;
				_this27.self._13 = a1017 * b026 + a1117 * b117 + a1217 * b214 + a1317 * b314;
				_this27.self._23 = a2017 * b026 + a2117 * b117 + a2217 * b214 + a2317 * b314;
				_this27.self._33 = a3017 * b026 + a3117 * b117 + a3217 * b214 + a3317 * b314;
				var _this28 = iron_object_Uniforms.helpMat;
				var m27 = iron_object_Uniforms.biasMat;
				var a0018 = _this28.self._00;
				var a0118 = _this28.self._01;
				var a0218 = _this28.self._02;
				var a0318 = _this28.self._03;
				var a1018 = _this28.self._10;
				var a1118 = _this28.self._11;
				var a1218 = _this28.self._12;
				var a1318 = _this28.self._13;
				var a2018 = _this28.self._20;
				var a2118 = _this28.self._21;
				var a2218 = _this28.self._22;
				var a2318 = _this28.self._23;
				var a3018 = _this28.self._30;
				var a3118 = _this28.self._31;
				var a3218 = _this28.self._32;
				var a3318 = _this28.self._33;
				var b027 = m27.self._00;
				var b118 = m27.self._10;
				var b215 = m27.self._20;
				var b315 = m27.self._30;
				_this28.self._00 = a0018 * b027 + a0118 * b118 + a0218 * b215 + a0318 * b315;
				_this28.self._10 = a1018 * b027 + a1118 * b118 + a1218 * b215 + a1318 * b315;
				_this28.self._20 = a2018 * b027 + a2118 * b118 + a2218 * b215 + a2318 * b315;
				_this28.self._30 = a3018 * b027 + a3118 * b118 + a3218 * b215 + a3318 * b315;
				b027 = m27.self._01;
				b118 = m27.self._11;
				b215 = m27.self._21;
				b315 = m27.self._31;
				_this28.self._01 = a0018 * b027 + a0118 * b118 + a0218 * b215 + a0318 * b315;
				_this28.self._11 = a1018 * b027 + a1118 * b118 + a1218 * b215 + a1318 * b315;
				_this28.self._21 = a2018 * b027 + a2118 * b118 + a2218 * b215 + a2318 * b315;
				_this28.self._31 = a3018 * b027 + a3118 * b118 + a3218 * b215 + a3318 * b315;
				b027 = m27.self._02;
				b118 = m27.self._12;
				b215 = m27.self._22;
				b315 = m27.self._32;
				_this28.self._02 = a0018 * b027 + a0118 * b118 + a0218 * b215 + a0318 * b315;
				_this28.self._12 = a1018 * b027 + a1118 * b118 + a1218 * b215 + a1318 * b315;
				_this28.self._22 = a2018 * b027 + a2118 * b118 + a2218 * b215 + a2318 * b315;
				_this28.self._32 = a3018 * b027 + a3118 * b118 + a3218 * b215 + a3318 * b315;
				b027 = m27.self._03;
				b118 = m27.self._13;
				b215 = m27.self._23;
				b315 = m27.self._33;
				_this28.self._03 = a0018 * b027 + a0118 * b118 + a0218 * b215 + a0318 * b315;
				_this28.self._13 = a1018 * b027 + a1118 * b118 + a1218 * b215 + a1318 * b315;
				_this28.self._23 = a2018 * b027 + a2118 * b118 + a2218 * b215 + a2318 * b315;
				_this28.self._33 = a3018 * b027 + a3118 * b118 + a3218 * b215 + a3318 * b315;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(StringTools.startsWith(c.link,"_biasLightWorldViewProjectionMatrixSpot")) {
			var light1 = iron_object_Uniforms.getSpot(HxOverrides.cca(c.link,c.link.length - 1) - 48);
			if(light1 != null) {
				if(object == null) {
					var _this29 = iron_object_Uniforms.helpMat;
					_this29.self._00 = 1.0;
					_this29.self._01 = 0.0;
					_this29.self._02 = 0.0;
					_this29.self._03 = 0.0;
					_this29.self._10 = 0.0;
					_this29.self._11 = 1.0;
					_this29.self._12 = 0.0;
					_this29.self._13 = 0.0;
					_this29.self._20 = 0.0;
					_this29.self._21 = 0.0;
					_this29.self._22 = 1.0;
					_this29.self._23 = 0.0;
					_this29.self._30 = 0.0;
					_this29.self._31 = 0.0;
					_this29.self._32 = 0.0;
					_this29.self._33 = 1.0;
				} else {
					var _this30 = iron_object_Uniforms.helpMat;
					var m28 = object.transform.worldUnpack;
					_this30.self._00 = m28.self._00;
					_this30.self._01 = m28.self._01;
					_this30.self._02 = m28.self._02;
					_this30.self._03 = m28.self._03;
					_this30.self._10 = m28.self._10;
					_this30.self._11 = m28.self._11;
					_this30.self._12 = m28.self._12;
					_this30.self._13 = m28.self._13;
					_this30.self._20 = m28.self._20;
					_this30.self._21 = m28.self._21;
					_this30.self._22 = m28.self._22;
					_this30.self._23 = m28.self._23;
					_this30.self._30 = m28.self._30;
					_this30.self._31 = m28.self._31;
					_this30.self._32 = m28.self._32;
					_this30.self._33 = m28.self._33;
				}
				var _this31 = iron_object_Uniforms.helpMat;
				var m29 = light1.VP;
				var a0019 = _this31.self._00;
				var a0119 = _this31.self._01;
				var a0219 = _this31.self._02;
				var a0319 = _this31.self._03;
				var a1019 = _this31.self._10;
				var a1119 = _this31.self._11;
				var a1219 = _this31.self._12;
				var a1319 = _this31.self._13;
				var a2019 = _this31.self._20;
				var a2119 = _this31.self._21;
				var a2219 = _this31.self._22;
				var a2319 = _this31.self._23;
				var a3019 = _this31.self._30;
				var a3119 = _this31.self._31;
				var a3219 = _this31.self._32;
				var a3319 = _this31.self._33;
				var b028 = m29.self._00;
				var b119 = m29.self._10;
				var b216 = m29.self._20;
				var b316 = m29.self._30;
				_this31.self._00 = a0019 * b028 + a0119 * b119 + a0219 * b216 + a0319 * b316;
				_this31.self._10 = a1019 * b028 + a1119 * b119 + a1219 * b216 + a1319 * b316;
				_this31.self._20 = a2019 * b028 + a2119 * b119 + a2219 * b216 + a2319 * b316;
				_this31.self._30 = a3019 * b028 + a3119 * b119 + a3219 * b216 + a3319 * b316;
				b028 = m29.self._01;
				b119 = m29.self._11;
				b216 = m29.self._21;
				b316 = m29.self._31;
				_this31.self._01 = a0019 * b028 + a0119 * b119 + a0219 * b216 + a0319 * b316;
				_this31.self._11 = a1019 * b028 + a1119 * b119 + a1219 * b216 + a1319 * b316;
				_this31.self._21 = a2019 * b028 + a2119 * b119 + a2219 * b216 + a2319 * b316;
				_this31.self._31 = a3019 * b028 + a3119 * b119 + a3219 * b216 + a3319 * b316;
				b028 = m29.self._02;
				b119 = m29.self._12;
				b216 = m29.self._22;
				b316 = m29.self._32;
				_this31.self._02 = a0019 * b028 + a0119 * b119 + a0219 * b216 + a0319 * b316;
				_this31.self._12 = a1019 * b028 + a1119 * b119 + a1219 * b216 + a1319 * b316;
				_this31.self._22 = a2019 * b028 + a2119 * b119 + a2219 * b216 + a2319 * b316;
				_this31.self._32 = a3019 * b028 + a3119 * b119 + a3219 * b216 + a3319 * b316;
				b028 = m29.self._03;
				b119 = m29.self._13;
				b216 = m29.self._23;
				b316 = m29.self._33;
				_this31.self._03 = a0019 * b028 + a0119 * b119 + a0219 * b216 + a0319 * b316;
				_this31.self._13 = a1019 * b028 + a1119 * b119 + a1219 * b216 + a1319 * b316;
				_this31.self._23 = a2019 * b028 + a2119 * b119 + a2219 * b216 + a2319 * b316;
				_this31.self._33 = a3019 * b028 + a3119 * b119 + a3219 * b216 + a3319 * b316;
				var _this32 = iron_object_Uniforms.helpMat;
				var m30 = iron_object_Uniforms.biasMat;
				var a0020 = _this32.self._00;
				var a0120 = _this32.self._01;
				var a0220 = _this32.self._02;
				var a0320 = _this32.self._03;
				var a1020 = _this32.self._10;
				var a1120 = _this32.self._11;
				var a1220 = _this32.self._12;
				var a1320 = _this32.self._13;
				var a2020 = _this32.self._20;
				var a2120 = _this32.self._21;
				var a2220 = _this32.self._22;
				var a2320 = _this32.self._23;
				var a3020 = _this32.self._30;
				var a3120 = _this32.self._31;
				var a3220 = _this32.self._32;
				var a3320 = _this32.self._33;
				var b029 = m30.self._00;
				var b120 = m30.self._10;
				var b217 = m30.self._20;
				var b317 = m30.self._30;
				_this32.self._00 = a0020 * b029 + a0120 * b120 + a0220 * b217 + a0320 * b317;
				_this32.self._10 = a1020 * b029 + a1120 * b120 + a1220 * b217 + a1320 * b317;
				_this32.self._20 = a2020 * b029 + a2120 * b120 + a2220 * b217 + a2320 * b317;
				_this32.self._30 = a3020 * b029 + a3120 * b120 + a3220 * b217 + a3320 * b317;
				b029 = m30.self._01;
				b120 = m30.self._11;
				b217 = m30.self._21;
				b317 = m30.self._31;
				_this32.self._01 = a0020 * b029 + a0120 * b120 + a0220 * b217 + a0320 * b317;
				_this32.self._11 = a1020 * b029 + a1120 * b120 + a1220 * b217 + a1320 * b317;
				_this32.self._21 = a2020 * b029 + a2120 * b120 + a2220 * b217 + a2320 * b317;
				_this32.self._31 = a3020 * b029 + a3120 * b120 + a3220 * b217 + a3320 * b317;
				b029 = m30.self._02;
				b120 = m30.self._12;
				b217 = m30.self._22;
				b317 = m30.self._32;
				_this32.self._02 = a0020 * b029 + a0120 * b120 + a0220 * b217 + a0320 * b317;
				_this32.self._12 = a1020 * b029 + a1120 * b120 + a1220 * b217 + a1320 * b317;
				_this32.self._22 = a2020 * b029 + a2120 * b120 + a2220 * b217 + a2320 * b317;
				_this32.self._32 = a3020 * b029 + a3120 * b120 + a3220 * b217 + a3320 * b317;
				b029 = m30.self._03;
				b120 = m30.self._13;
				b217 = m30.self._23;
				b317 = m30.self._33;
				_this32.self._03 = a0020 * b029 + a0120 * b120 + a0220 * b217 + a0320 * b317;
				_this32.self._13 = a1020 * b029 + a1120 * b120 + a1220 * b217 + a1320 * b317;
				_this32.self._23 = a2020 * b029 + a2120 * b120 + a2220 * b217 + a2320 * b317;
				_this32.self._33 = a3020 * b029 + a3120 * b120 + a3220 * b217 + a3320 * b317;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(StringTools.startsWith(c.link,"_biasLightViewProjectionMatrixSpot")) {
			var light2 = iron_object_Uniforms.getSpot(HxOverrides.cca(c.link,c.link.length - 1) - 48);
			if(light2 != null) {
				var _this33 = iron_object_Uniforms.helpMat;
				var m31 = light2.VP;
				_this33.self._00 = m31.self._00;
				_this33.self._01 = m31.self._01;
				_this33.self._02 = m31.self._02;
				_this33.self._03 = m31.self._03;
				_this33.self._10 = m31.self._10;
				_this33.self._11 = m31.self._11;
				_this33.self._12 = m31.self._12;
				_this33.self._13 = m31.self._13;
				_this33.self._20 = m31.self._20;
				_this33.self._21 = m31.self._21;
				_this33.self._22 = m31.self._22;
				_this33.self._23 = m31.self._23;
				_this33.self._30 = m31.self._30;
				_this33.self._31 = m31.self._31;
				_this33.self._32 = m31.self._32;
				_this33.self._33 = m31.self._33;
				var _this34 = iron_object_Uniforms.helpMat;
				var m32 = iron_object_Uniforms.biasMat;
				var a0021 = _this34.self._00;
				var a0121 = _this34.self._01;
				var a0221 = _this34.self._02;
				var a0321 = _this34.self._03;
				var a1021 = _this34.self._10;
				var a1121 = _this34.self._11;
				var a1221 = _this34.self._12;
				var a1321 = _this34.self._13;
				var a2021 = _this34.self._20;
				var a2121 = _this34.self._21;
				var a2221 = _this34.self._22;
				var a2321 = _this34.self._23;
				var a3021 = _this34.self._30;
				var a3121 = _this34.self._31;
				var a3221 = _this34.self._32;
				var a3321 = _this34.self._33;
				var b030 = m32.self._00;
				var b121 = m32.self._10;
				var b218 = m32.self._20;
				var b318 = m32.self._30;
				_this34.self._00 = a0021 * b030 + a0121 * b121 + a0221 * b218 + a0321 * b318;
				_this34.self._10 = a1021 * b030 + a1121 * b121 + a1221 * b218 + a1321 * b318;
				_this34.self._20 = a2021 * b030 + a2121 * b121 + a2221 * b218 + a2321 * b318;
				_this34.self._30 = a3021 * b030 + a3121 * b121 + a3221 * b218 + a3321 * b318;
				b030 = m32.self._01;
				b121 = m32.self._11;
				b218 = m32.self._21;
				b318 = m32.self._31;
				_this34.self._01 = a0021 * b030 + a0121 * b121 + a0221 * b218 + a0321 * b318;
				_this34.self._11 = a1021 * b030 + a1121 * b121 + a1221 * b218 + a1321 * b318;
				_this34.self._21 = a2021 * b030 + a2121 * b121 + a2221 * b218 + a2321 * b318;
				_this34.self._31 = a3021 * b030 + a3121 * b121 + a3221 * b218 + a3321 * b318;
				b030 = m32.self._02;
				b121 = m32.self._12;
				b218 = m32.self._22;
				b318 = m32.self._32;
				_this34.self._02 = a0021 * b030 + a0121 * b121 + a0221 * b218 + a0321 * b318;
				_this34.self._12 = a1021 * b030 + a1121 * b121 + a1221 * b218 + a1321 * b318;
				_this34.self._22 = a2021 * b030 + a2121 * b121 + a2221 * b218 + a2321 * b318;
				_this34.self._32 = a3021 * b030 + a3121 * b121 + a3221 * b218 + a3321 * b318;
				b030 = m32.self._03;
				b121 = m32.self._13;
				b218 = m32.self._23;
				b318 = m32.self._33;
				_this34.self._03 = a0021 * b030 + a0121 * b121 + a0221 * b218 + a0321 * b318;
				_this34.self._13 = a1021 * b030 + a1121 * b121 + a1221 * b218 + a1321 * b318;
				_this34.self._23 = a2021 * b030 + a2121 * b121 + a2221 * b218 + a2321 * b318;
				_this34.self._33 = a3021 * b030 + a3121 * b121 + a3221 * b218 + a3321 * b318;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_particleData") {
			var mo = js_Boot.__cast(object , iron_object_MeshObject);
			if(mo.particleOwner != null && mo.particleOwner.particleSystems != null) {
				m = mo.particleOwner.particleSystems[mo.particleIndex].getData();
			}
		} else if(iron_object_Uniforms.externalMat4Links != null) {
			var _g = 0;
			var _g1 = iron_object_Uniforms.externalMat4Links;
			while(_g < _g1.length) {
				var fn = _g1[_g];
				++_g;
				m = fn(object,iron_object_Uniforms.currentMat(object),c.link);
				if(m != null) {
					break;
				}
			}
		}
		if(m == null) {
			return;
		}
		g.setMatrix(location,m.self);
	} else if(c.type == "mat3") {
		var m33 = null;
		if(c.link == "_normalMatrix") {
			var _this35 = iron_object_Uniforms.helpMat;
			var m34 = object.transform.world;
			_this35.self._00 = m34.self._00;
			_this35.self._01 = m34.self._01;
			_this35.self._02 = m34.self._02;
			_this35.self._03 = m34.self._03;
			_this35.self._10 = m34.self._10;
			_this35.self._11 = m34.self._11;
			_this35.self._12 = m34.self._12;
			_this35.self._13 = m34.self._13;
			_this35.self._20 = m34.self._20;
			_this35.self._21 = m34.self._21;
			_this35.self._22 = m34.self._22;
			_this35.self._23 = m34.self._23;
			_this35.self._30 = m34.self._30;
			_this35.self._31 = m34.self._31;
			_this35.self._32 = m34.self._32;
			_this35.self._33 = m34.self._33;
			var _this36 = iron_object_Uniforms.helpMat;
			var m35 = iron_object_Uniforms.helpMat;
			var a0022 = m35.self._00;
			var a0122 = m35.self._01;
			var a0222 = m35.self._02;
			var a0322 = m35.self._03;
			var a1022 = m35.self._10;
			var a1122 = m35.self._11;
			var a1222 = m35.self._12;
			var a1322 = m35.self._13;
			var a2022 = m35.self._20;
			var a2122 = m35.self._21;
			var a2222 = m35.self._22;
			var a2322 = m35.self._23;
			var a3022 = m35.self._30;
			var a3122 = m35.self._31;
			var a3222 = m35.self._32;
			var a3322 = m35.self._33;
			var b003 = a0022 * a1122 - a0122 * a1022;
			var b0111 = a0022 * a1222 - a0222 * a1022;
			var b0210 = a0022 * a1322 - a0322 * a1022;
			var b033 = a0122 * a1222 - a0222 * a1122;
			var b043 = a0122 * a1322 - a0322 * a1122;
			var b053 = a0222 * a1322 - a0322 * a1222;
			var b063 = a2022 * a3122 - a2122 * a3022;
			var b073 = a2022 * a3222 - a2222 * a3022;
			var b083 = a2022 * a3322 - a2322 * a3022;
			var b093 = a2122 * a3222 - a2222 * a3122;
			var b103 = a2122 * a3322 - a2322 * a3122;
			var b1110 = a2222 * a3322 - a2322 * a3222;
			var det3 = b003 * b1110 - b0111 * b103 + b0210 * b093 + b033 * b083 - b043 * b073 + b053 * b063;
			if(det3 == 0.0) {
				_this36.self._00 = 1.0;
				_this36.self._01 = 0.0;
				_this36.self._02 = 0.0;
				_this36.self._03 = 0.0;
				_this36.self._10 = 0.0;
				_this36.self._11 = 1.0;
				_this36.self._12 = 0.0;
				_this36.self._13 = 0.0;
				_this36.self._20 = 0.0;
				_this36.self._21 = 0.0;
				_this36.self._22 = 1.0;
				_this36.self._23 = 0.0;
				_this36.self._30 = 0.0;
				_this36.self._31 = 0.0;
				_this36.self._32 = 0.0;
				_this36.self._33 = 1.0;
			} else {
				det3 = 1.0 / det3;
				_this36.self._00 = (a1122 * b1110 - a1222 * b103 + a1322 * b093) * det3;
				_this36.self._01 = (a0222 * b103 - a0122 * b1110 - a0322 * b093) * det3;
				_this36.self._02 = (a3122 * b053 - a3222 * b043 + a3322 * b033) * det3;
				_this36.self._03 = (a2222 * b043 - a2122 * b053 - a2322 * b033) * det3;
				_this36.self._10 = (a1222 * b083 - a1022 * b1110 - a1322 * b073) * det3;
				_this36.self._11 = (a0022 * b1110 - a0222 * b083 + a0322 * b073) * det3;
				_this36.self._12 = (a3222 * b0210 - a3022 * b053 - a3322 * b0111) * det3;
				_this36.self._13 = (a2022 * b053 - a2222 * b0210 + a2322 * b0111) * det3;
				_this36.self._20 = (a1022 * b103 - a1122 * b083 + a1322 * b063) * det3;
				_this36.self._21 = (a0122 * b083 - a0022 * b103 - a0322 * b063) * det3;
				_this36.self._22 = (a3022 * b043 - a3122 * b0210 + a3322 * b003) * det3;
				_this36.self._23 = (a2122 * b0210 - a2022 * b043 - a2322 * b003) * det3;
				_this36.self._30 = (a1122 * b073 - a1022 * b093 - a1222 * b063) * det3;
				_this36.self._31 = (a0022 * b093 - a0122 * b073 + a0222 * b063) * det3;
				_this36.self._32 = (a3122 * b0111 - a3022 * b033 - a3222 * b003) * det3;
				_this36.self._33 = (a2022 * b033 - a2122 * b0111 + a2222 * b003) * det3;
			}
			var _this37 = iron_object_Uniforms.helpMat;
			var f = _this37.self._01;
			_this37.self._01 = _this37.self._10;
			_this37.self._10 = f;
			f = _this37.self._02;
			_this37.self._02 = _this37.self._20;
			_this37.self._20 = f;
			f = _this37.self._12;
			_this37.self._12 = _this37.self._21;
			_this37.self._21 = f;
			var _this38 = iron_object_Uniforms.helpMat3;
			var m36 = iron_object_Uniforms.helpMat;
			_this38.self._00 = m36.self._00;
			_this38.self._01 = m36.self._01;
			_this38.self._02 = m36.self._02;
			_this38.self._10 = m36.self._10;
			_this38.self._11 = m36.self._11;
			_this38.self._12 = m36.self._12;
			_this38.self._20 = m36.self._20;
			_this38.self._21 = m36.self._21;
			_this38.self._22 = m36.self._22;
			m33 = iron_object_Uniforms.helpMat3;
		}
		if(c.link == "_viewMatrix3") {
			var _this39 = iron_object_Uniforms.helpMat3;
			var m37 = camera.V;
			_this39.self._00 = m37.self._00;
			_this39.self._01 = m37.self._01;
			_this39.self._02 = m37.self._02;
			_this39.self._10 = m37.self._10;
			_this39.self._11 = m37.self._11;
			_this39.self._12 = m37.self._12;
			_this39.self._20 = m37.self._20;
			_this39.self._21 = m37.self._21;
			_this39.self._22 = m37.self._22;
			m33 = iron_object_Uniforms.helpMat3;
		}
		if(m33 == null) {
			return;
		}
		g.setMatrix3(location,m33.self);
	} else if(c.type == "vec4") {
		var v = null;
		var _this40 = iron_object_Uniforms.helpVec;
		_this40.x = 0;
		_this40.y = 0;
		_this40.z = 0;
		_this40.w = 1.0;
		if(iron_object_Uniforms.externalVec4Links != null) {
			var _g2 = 0;
			var _g11 = iron_object_Uniforms.externalVec4Links;
			while(_g2 < _g11.length) {
				var fn1 = _g11[_g2];
				++_g2;
				v = fn1(object,iron_object_Uniforms.currentMat(object),c.link);
				if(v != null) {
					break;
				}
			}
		}
		if(v == null) {
			return;
		}
		g.setFloat4(location,v.x,v.y,v.z,v.w);
	} else if(c.type == "vec3") {
		var v1 = null;
		var _this41 = iron_object_Uniforms.helpVec;
		_this41.x = 0;
		_this41.y = 0;
		_this41.z = 0;
		_this41.w = 1.0;
		if(c.link == "_dim") {
			var d = object.transform.dim;
			var s = object.transform.scale;
			var _this42 = iron_object_Uniforms.helpVec;
			_this42.x = d.x / s.x;
			_this42.y = d.y / s.y;
			_this42.z = d.z / s.z;
			_this42.w = 1.0;
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_halfDim") {
			var d1 = object.transform.dim;
			var s1 = object.transform.scale;
			var _this43 = iron_object_Uniforms.helpVec;
			_this43.x = d1.x / s1.x / 2;
			_this43.y = d1.y / s1.y / 2;
			_this43.z = d1.z / s1.z / 2;
			_this43.w = 1.0;
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_worldPosition") {
			var _this44 = iron_object_Uniforms.helpVec;
			_this44.x = object.transform.world.self._30;
			_this44.y = object.transform.world.self._31;
			_this44.z = object.transform.world.self._32;
			_this44.w = 1.0;
			v1 = iron_object_Uniforms.helpVec;
		} else if(iron_object_Uniforms.externalVec3Links != null) {
			var _g3 = 0;
			var _g12 = iron_object_Uniforms.externalVec3Links;
			while(_g3 < _g12.length) {
				var f1 = _g12[_g3];
				++_g3;
				v1 = f1(object,iron_object_Uniforms.currentMat(object),c.link);
				if(v1 != null) {
					break;
				}
			}
		}
		if(v1 == null) {
			return;
		}
		g.setFloat3(location,v1.x,v1.y,v1.z);
	} else if(c.type == "vec2") {
		var vx = null;
		var vy = 0;
		if(c.link == "_tilesheetOffset") {
			var ts = (js_Boot.__cast(object , iron_object_MeshObject)).tilesheet;
			vx = ts.tileX;
			vy = ts.tileY;
		} else if(iron_object_Uniforms.externalVec2Links != null) {
			var _g4 = 0;
			var _g13 = iron_object_Uniforms.externalVec2Links;
			while(_g4 < _g13.length) {
				var fn2 = _g13[_g4];
				++_g4;
				var v2 = fn2(object,iron_object_Uniforms.currentMat(object),c.link);
				if(v2 != null) {
					vx = v2.x;
					vy = v2.y;
					break;
				}
			}
		}
		if(vx == null) {
			return;
		}
		g.setFloat2(location,vx,vy);
	} else if(c.type == "float") {
		var f2 = null;
		if(c.link == "_objectInfoIndex") {
			f2 = object.uid;
		} else if(c.link == "_objectInfoMaterialIndex") {
			f2 = iron_object_Uniforms.currentMat(object).uid;
		} else if(c.link == "_objectInfoRandom") {
			f2 = object.urandom;
		} else if(c.link == "_posUnpack") {
			f2 = iron_object_Uniforms.posUnpack != null ? iron_object_Uniforms.posUnpack : 1.0;
		} else if(c.link == "_texUnpack") {
			f2 = iron_object_Uniforms.texUnpack != null ? iron_object_Uniforms.texUnpack : 1.0;
		} else if(iron_object_Uniforms.externalFloatLinks != null) {
			var _g5 = 0;
			var _g14 = iron_object_Uniforms.externalFloatLinks;
			while(_g5 < _g14.length) {
				var fn3 = _g14[_g5];
				++_g5;
				var res = fn3(object,iron_object_Uniforms.currentMat(object),c.link);
				if(res != null) {
					f2 = res;
					break;
				}
			}
		}
		if(f2 == null) {
			return;
		}
		g.setFloat(location,f2);
	} else if(c.type == "floats") {
		var fa = null;
		if(c.link == "_skinBones") {
			if(object.animation != null) {
				fa = (js_Boot.__cast(object.animation , iron_object_BoneAnimation)).skinBuffer;
			}
		}
		if(fa == null && iron_object_Uniforms.externalFloatsLinks != null) {
			var _g6 = 0;
			var _g15 = iron_object_Uniforms.externalFloatsLinks;
			while(_g6 < _g15.length) {
				var fn4 = _g15[_g6];
				++_g6;
				fa = fn4(object,iron_object_Uniforms.currentMat(object),c.link);
				if(fa != null) {
					break;
				}
			}
		}
		if(fa == null) {
			return;
		}
		g.setFloats(location,fa);
	} else if(c.type == "int") {
		var i = null;
		if(c.link == "_uid") {
			i = object.uid;
		} else if(iron_object_Uniforms.externalIntLinks != null) {
			var _g7 = 0;
			var _g16 = iron_object_Uniforms.externalIntLinks;
			while(_g7 < _g16.length) {
				var fn5 = _g16[_g7];
				++_g7;
				var res1 = fn5(object,iron_object_Uniforms.currentMat(object),c.link);
				if(res1 != null) {
					i = res1;
					break;
				}
			}
		}
		if(i == null) {
			return;
		}
		g.setInt(location,i);
	}
};
iron_object_Uniforms.setMaterialConstants = function(g,context,materialContext) {
	if(materialContext.raw.bind_constants != null) {
		var _g = 0;
		var _g1 = materialContext.raw.bind_constants.length;
		while(_g < _g1) {
			var i = _g++;
			var matc = materialContext.raw.bind_constants[i];
			var pos = -1;
			var _g2 = 0;
			var _g11 = context.raw.constants.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				if(context.raw.constants[i1].name == matc.name) {
					pos = i1;
					break;
				}
			}
			if(pos == -1) {
				continue;
			}
			var c = context.raw.constants[pos];
			iron_object_Uniforms.setMaterialConstant(g,context.constants[pos],c,matc);
		}
	}
	if(materialContext.textures != null) {
		var _g3 = 0;
		var _g12 = materialContext.textures.length;
		while(_g3 < _g12) {
			var i2 = _g3++;
			var mname = materialContext.raw.bind_textures[i2].name;
			var _g4 = 0;
			var _g13 = context.textureUnits.length;
			while(_g4 < _g13) {
				var j = _g4++;
				var sname = context.raw.texture_units[j].name;
				if(mname == sname) {
					g.setTexture(context.textureUnits[j],materialContext.textures[i2]);
					materialContext.setTextureParameters(g,i2,context,j);
					break;
				}
			}
		}
	}
};
iron_object_Uniforms.getSpot = function(index) {
	var i = 0;
	var _g = 0;
	var _g1 = iron_Scene.active.lights;
	while(_g < _g1.length) {
		var l = _g1[_g];
		++_g;
		if(l.data.raw.type != "spot" && l.data.raw.type != "area") {
			continue;
		}
		if(i == index) {
			return l;
		}
		++i;
	}
	return null;
};
iron_object_Uniforms.currentMat = function(object) {
	if(object != null && ((object) instanceof iron_object_MeshObject)) {
		var mo = js_Boot.__cast(object , iron_object_MeshObject);
		return mo.materials[mo.materialIndex];
	}
	return null;
};
iron_object_Uniforms.setMaterialConstant = function(g,location,c,matc) {
	switch(c.type) {
	case "bool":
		g.setBool(location,matc.bool);
		break;
	case "float":
		g.setFloat(location,matc.float);
		break;
	case "int":
		g.setInt(location,matc.int);
		break;
	case "vec2":
		g.setFloat2(location,matc.vec2[0],matc.vec2[1]);
		break;
	case "vec3":
		g.setFloat3(location,matc.vec3[0],matc.vec3[1],matc.vec3[2]);
		break;
	case "vec4":
		g.setFloat4(location,matc.vec4[0],matc.vec4[1],matc.vec4[2],matc.vec4[3]);
		break;
	}
};
var iron_system_ArmPack = function() { };
$hxClasses["iron.system.ArmPack"] = iron_system_ArmPack;
iron_system_ArmPack.__name__ = "iron.system.ArmPack";
iron_system_ArmPack.read = function(i,key,parentKey) {
	if(parentKey == null) {
		parentKey = "";
	}
	if(key == null) {
		key = "";
	}
	try {
		var b = i.readByte();
		switch(b) {
		case 192:
			return null;
		case 194:
			return false;
		case 195:
			return true;
		case 196:
			return i.read(i.readByte());
		case 197:
			return i.read(i.readUInt16());
		case 198:
			return i.read(i.readInt32());
		case 202:
			return i.readFloat();
		case 204:
			return i.readByte();
		case 205:
			return i.readUInt16();
		case 206:
			return i.readInt32();
		case 208:
			return i.readInt8();
		case 209:
			return i.readInt16();
		case 210:
			return i.readInt32();
		case 217:
			return i.readString(i.readByte());
		case 218:
			return i.readString(i.readUInt16());
		case 219:
			return i.readString(i.readInt32());
		case 220:
			return iron_system_ArmPack.readArray(i,i.readUInt16(),key,parentKey);
		case 221:
			return iron_system_ArmPack.readArray(i,i.readInt32(),key,parentKey);
		case 222:
			return iron_system_ArmPack.readMap(i,i.readUInt16(),key,parentKey);
		case 223:
			return iron_system_ArmPack.readMap(i,i.readInt32(),key,parentKey);
		default:
			if(b < 128) {
				return b;
			} else if(b < 144) {
				return iron_system_ArmPack.readMap(i,15 & b,key,parentKey);
			} else if(b < 160) {
				return iron_system_ArmPack.readArray(i,15 & b,key,parentKey);
			} else if(b < 192) {
				return i.readString(31 & b);
			} else if(b > 223) {
				return -256 | b;
			}
		}
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		if(((e1) instanceof haxe_io_Eof)) {
			var e2 = e1;
		} else {
			throw e;
		}
	}
	return null;
};
iron_system_ArmPack.readArray = function(i,length,key,parentKey) {
	if(parentKey == null) {
		parentKey = "";
	}
	if(key == null) {
		key = "";
	}
	var b = i.readByte();
	var _g = i;
	_g.set_position(_g.pos - 1);
	if(b == 202) {
		var _g1 = i;
		_g1.set_position(_g1.pos + 1);
		var this1 = new Float32Array(length);
		var a = this1;
		var _g2 = 0;
		var _g11 = length;
		while(_g2 < _g11) {
			var x = _g2++;
			a[x] = i.readFloat();
		}
		return a;
	} else if(b == 210) {
		var _g3 = i;
		_g3.set_position(_g3.pos + 1);
		var this2 = new Uint32Array(length);
		var a1 = this2;
		var _g4 = 0;
		var _g12 = length;
		while(_g4 < _g12) {
			var x1 = _g4++;
			a1[x1] = i.readInt32();
		}
		return a1;
	} else if(b == 209) {
		var _g5 = i;
		_g5.set_position(_g5.pos + 1);
		var this3 = new Int16Array(length);
		var a2 = this3;
		var _g6 = 0;
		var _g13 = length;
		while(_g6 < _g13) {
			var x2 = _g6++;
			a2[x2] = i.readInt16();
		}
		return a2;
	} else {
		var a3 = [];
		var _g7 = 0;
		var _g14 = length;
		while(_g7 < _g14) {
			var x3 = _g7++;
			a3.push(iron_system_ArmPack.read(i,key,parentKey));
		}
		return a3;
	}
};
iron_system_ArmPack.readMap = function(i,length,key,parentKey) {
	if(parentKey == null) {
		parentKey = "";
	}
	if(key == null) {
		key = "";
	}
	var out = { };
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var n = _g++;
		var k = Std.string(iron_system_ArmPack.read(i));
		var v = iron_system_ArmPack.read(i,k,key);
		out[k] = v;
	}
	return out;
};
var iron_system_Audio = function() { };
$hxClasses["iron.system.Audio"] = iron_system_Audio;
iron_system_Audio.__name__ = "iron.system.Audio";
iron_system_Audio.play = function(sound,loop,stream) {
	if(stream == null) {
		stream = false;
	}
	if(loop == null) {
		loop = false;
	}
	if(stream && sound.compressedData != null) {
		return kha_audio2_Audio1.stream(sound,loop);
	} else if(sound.uncompressedData != null) {
		return kha_audio2_Audio1.play(sound,loop);
	} else {
		return null;
	}
};
var iron_system_VirtualButton = function() {
	this.down = false;
	this.released = false;
	this.started = false;
};
$hxClasses["iron.system.VirtualButton"] = iron_system_VirtualButton;
iron_system_VirtualButton.__name__ = "iron.system.VirtualButton";
iron_system_VirtualButton.prototype = {
	__class__: iron_system_VirtualButton
};
var iron_system_VirtualInput = function() {
	this.virtualButtons = null;
};
$hxClasses["iron.system.VirtualInput"] = iron_system_VirtualInput;
iron_system_VirtualInput.__name__ = "iron.system.VirtualInput";
iron_system_VirtualInput.prototype = {
	downVirtual: function(button) {
		if(this.virtualButtons != null) {
			var _this = this.virtualButtons;
			var vb = __map_reserved[button] != null ? _this.getReserved(button) : _this.h[button];
			if(vb != null) {
				vb.down = true;
				vb.started = true;
			}
		}
	}
	,upVirtual: function(button) {
		if(this.virtualButtons != null) {
			var _this = this.virtualButtons;
			var vb = __map_reserved[button] != null ? _this.getReserved(button) : _this.h[button];
			if(vb != null) {
				vb.down = false;
				vb.released = true;
			}
		}
	}
	,__class__: iron_system_VirtualInput
};
var iron_system_Mouse = function() {
	this.lastY = -1.0;
	this.lastX = -1.0;
	this.hidden = false;
	this.locked = false;
	this.wheelDelta = 0;
	this.movementY = 0.0;
	this.movementX = 0.0;
	this.moved = false;
	this.y = 0.0;
	this.x = 0.0;
	this.buttonsReleased = [false,false,false];
	this.buttonsStarted = [false,false,false];
	this.buttonsDown = [false,false,false];
	iron_system_VirtualInput.call(this);
	kha_input_Mouse.get().notify($bind(this,this.downListener),$bind(this,this.upListener),$bind(this,this.moveListener),$bind(this,this.wheelListener));
};
$hxClasses["iron.system.Mouse"] = iron_system_Mouse;
iron_system_Mouse.__name__ = "iron.system.Mouse";
iron_system_Mouse.__super__ = iron_system_VirtualInput;
iron_system_Mouse.prototype = $extend(iron_system_VirtualInput.prototype,{
	endFrame: function() {
		var tmp = this.buttonsStarted[1] = this.buttonsStarted[2] = false;
		this.buttonsStarted[0] = tmp;
		var tmp1 = this.buttonsReleased[1] = this.buttonsReleased[2] = false;
		this.buttonsReleased[0] = tmp1;
		this.moved = false;
		this.movementX = 0;
		this.movementY = 0;
		this.wheelDelta = 0;
	}
	,reset: function() {
		var tmp = this.buttonsDown[1] = this.buttonsDown[2] = false;
		this.buttonsDown[0] = tmp;
		this.endFrame();
	}
	,buttonIndex: function(button) {
		if(button == "left") {
			return 0;
		} else if(button == "right") {
			return 1;
		} else {
			return 2;
		}
	}
	,down: function(button) {
		if(button == null) {
			button = "left";
		}
		return this.buttonsDown[this.buttonIndex(button)];
	}
	,started: function(button) {
		if(button == null) {
			button = "left";
		}
		return this.buttonsStarted[this.buttonIndex(button)];
	}
	,lock: function() {
		if(kha_input_Mouse.get().canLock()) {
			kha_input_Mouse.get().lock();
			this.locked = true;
			this.hidden = true;
		}
	}
	,unlock: function() {
		if(kha_input_Mouse.get().canLock()) {
			kha_input_Mouse.get().unlock();
			this.locked = false;
			this.hidden = false;
		}
	}
	,downListener: function(index,x,y) {
		this.buttonsDown[index] = true;
		this.buttonsStarted[index] = true;
		this.x = x;
		this.y = y;
		if(index == 0) {
			this.lastX = x;
			this.lastY = y;
		}
		this.downVirtual(iron_system_Mouse.buttons[index]);
	}
	,upListener: function(index,x,y) {
		this.buttonsDown[index] = false;
		this.buttonsReleased[index] = true;
		this.x = x;
		this.y = y;
		this.upVirtual(iron_system_Mouse.buttons[index]);
	}
	,moveListener: function(x,y,movementX,movementY) {
		if(this.lastX == -1.0 && this.lastY == -1.0) {
			this.lastX = x;
			this.lastY = y;
		}
		if(this.locked) {
			this.movementX += movementX;
			this.movementY += movementY;
		} else {
			this.movementX += x - this.lastX;
			this.movementY += y - this.lastY;
		}
		this.lastX = x;
		this.lastY = y;
		this.x = x;
		this.y = y;
		this.moved = true;
	}
	,wheelListener: function(delta) {
		this.wheelDelta = delta;
	}
	,__class__: iron_system_Mouse
});
var iron_system_Pen = function() {
	this.lastY = -1.0;
	this.lastX = -1.0;
	this.pressure = 0.0;
	this.movementY = 0.0;
	this.movementX = 0.0;
	this.moved = false;
	this.y = 0.0;
	this.x = 0.0;
	this.buttonsReleased = [false];
	this.buttonsStarted = [false];
	this.buttonsDown = [false];
	iron_system_VirtualInput.call(this);
	kha_input_Pen.get().notify($bind(this,this.downListener),$bind(this,this.upListener),$bind(this,this.moveListener));
};
$hxClasses["iron.system.Pen"] = iron_system_Pen;
iron_system_Pen.__name__ = "iron.system.Pen";
iron_system_Pen.__super__ = iron_system_VirtualInput;
iron_system_Pen.prototype = $extend(iron_system_VirtualInput.prototype,{
	endFrame: function() {
		this.buttonsStarted[0] = false;
		this.buttonsReleased[0] = false;
		this.moved = false;
		this.movementX = 0;
		this.movementY = 0;
	}
	,reset: function() {
		this.buttonsDown[0] = false;
		this.endFrame();
	}
	,downListener: function(x,y,pressure) {
		this.buttonsDown[0] = true;
		this.buttonsStarted[0] = true;
		this.x = x;
		this.y = y;
		this.pressure = pressure;
	}
	,upListener: function(x,y,pressure) {
		this.buttonsDown[0] = false;
		this.buttonsReleased[0] = true;
		this.x = x;
		this.y = y;
		this.pressure = pressure;
	}
	,moveListener: function(x,y,pressure) {
		if(this.lastX == -1.0 && this.lastY == -1.0) {
			this.lastX = x;
			this.lastY = y;
		}
		this.movementX = x - this.lastX;
		this.movementY = y - this.lastY;
		this.lastX = x;
		this.lastY = y;
		this.x = x;
		this.y = y;
		this.moved = true;
		this.pressure = pressure;
	}
	,__class__: iron_system_Pen
});
var iron_system_Keyboard = function() {
	this.keysFrame = [];
	this.keysReleased = new haxe_ds_StringMap();
	this.keysStarted = new haxe_ds_StringMap();
	this.keysDown = new haxe_ds_StringMap();
	iron_system_VirtualInput.call(this);
	this.reset();
	kha_input_Keyboard.get().notify($bind(this,this.downListener),$bind(this,this.upListener),$bind(this,this.pressListener));
};
$hxClasses["iron.system.Keyboard"] = iron_system_Keyboard;
iron_system_Keyboard.__name__ = "iron.system.Keyboard";
iron_system_Keyboard.keyCode = function(key) {
	if(key == 32) {
		return "space";
	} else if(key == 8) {
		return "backspace";
	} else if(key == 9) {
		return "tab";
	} else if(key == 13) {
		return "enter";
	} else if(key == 16) {
		return "shift";
	} else if(key == 17) {
		return "control";
	} else if(key == 18) {
		return "alt";
	} else if(key == 27) {
		return "escape";
	} else if(key == 46) {
		return "delete";
	} else if(key == 38) {
		return "up";
	} else if(key == 40) {
		return "down";
	} else if(key == 37) {
		return "left";
	} else if(key == 39) {
		return "right";
	} else if(key == 1) {
		return "back";
	} else if(key == 188) {
		return "comma";
	} else if(key == 190) {
		return "period";
	} else if(key == 48) {
		return "0";
	} else if(key == 49) {
		return "1";
	} else if(key == 50) {
		return "2";
	} else if(key == 51) {
		return "3";
	} else if(key == 52) {
		return "4";
	} else if(key == 53) {
		return "5";
	} else if(key == 54) {
		return "6";
	} else if(key == 55) {
		return "7";
	} else if(key == 56) {
		return "8";
	} else if(key == 57) {
		return "9";
	} else if(key == 112) {
		return "f1";
	} else if(key == 113) {
		return "f2";
	} else if(key == 114) {
		return "f3";
	} else if(key == 115) {
		return "f4";
	} else if(key == 116) {
		return "f5";
	} else if(key == 117) {
		return "f6";
	} else if(key == 118) {
		return "f7";
	} else if(key == 119) {
		return "f8";
	} else if(key == 120) {
		return "f9";
	} else if(key == 121) {
		return "f10";
	} else if(key == 122) {
		return "f11";
	} else if(key == 123) {
		return "f12";
	} else {
		return String.fromCodePoint(key).toLowerCase();
	}
};
iron_system_Keyboard.__super__ = iron_system_VirtualInput;
iron_system_Keyboard.prototype = $extend(iron_system_VirtualInput.prototype,{
	endFrame: function() {
		if(this.keysFrame.length > 0) {
			var _g = 0;
			var _g1 = this.keysFrame;
			while(_g < _g1.length) {
				var s = _g1[_g];
				++_g;
				var _this = this.keysStarted;
				if(__map_reserved[s] != null) {
					_this.setReserved(s,false);
				} else {
					_this.h[s] = false;
				}
				var _this1 = this.keysReleased;
				if(__map_reserved[s] != null) {
					_this1.setReserved(s,false);
				} else {
					_this1.h[s] = false;
				}
			}
			this.keysFrame.splice(0,this.keysFrame.length);
		}
	}
	,reset: function() {
		var _g = 0;
		var _g1 = iron_system_Keyboard.keys;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var _this = this.keysDown;
			if(__map_reserved[s] != null) {
				_this.setReserved(s,false);
			} else {
				_this.h[s] = false;
			}
			var _this1 = this.keysStarted;
			if(__map_reserved[s] != null) {
				_this1.setReserved(s,false);
			} else {
				_this1.h[s] = false;
			}
			var _this2 = this.keysReleased;
			if(__map_reserved[s] != null) {
				_this2.setReserved(s,false);
			} else {
				_this2.h[s] = false;
			}
		}
		this.endFrame();
	}
	,down: function(key) {
		var _this = this.keysDown;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,started: function(key) {
		var _this = this.keysStarted;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,downListener: function(code) {
		var s = iron_system_Keyboard.keyCode(code);
		this.keysFrame.push(s);
		var _this = this.keysStarted;
		if(__map_reserved[s] != null) {
			_this.setReserved(s,true);
		} else {
			_this.h[s] = true;
		}
		var _this1 = this.keysDown;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,true);
		} else {
			_this1.h[s] = true;
		}
		this.downVirtual(s);
	}
	,upListener: function(code) {
		var s = iron_system_Keyboard.keyCode(code);
		this.keysFrame.push(s);
		var _this = this.keysReleased;
		if(__map_reserved[s] != null) {
			_this.setReserved(s,true);
		} else {
			_this.h[s] = true;
		}
		var _this1 = this.keysDown;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,false);
		} else {
			_this1.h[s] = false;
		}
		this.upVirtual(s);
	}
	,pressListener: function(char) {
	}
	,__class__: iron_system_Keyboard
});
var iron_system_GamepadStick = function() {
	this.movementY = 0.0;
	this.movementX = 0.0;
	this.moved = false;
	this.lastY = 0.0;
	this.lastX = 0.0;
	this.y = 0.0;
	this.x = 0.0;
};
$hxClasses["iron.system.GamepadStick"] = iron_system_GamepadStick;
iron_system_GamepadStick.__name__ = "iron.system.GamepadStick";
iron_system_GamepadStick.prototype = {
	__class__: iron_system_GamepadStick
};
var iron_system_Gamepad = function(i,virtual) {
	if(virtual == null) {
		virtual = false;
	}
	this.num = 0;
	this.connected = false;
	this.rightStick = new iron_system_GamepadStick();
	this.leftStick = new iron_system_GamepadStick();
	this.buttonsFrame = [];
	this.buttonsReleased = [];
	this.buttonsStarted = [];
	this.buttonsDown = [];
	iron_system_VirtualInput.call(this);
	var _g = 0;
	var _g1 = iron_system_Gamepad.buttons;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		this.buttonsDown.push(0.0);
		this.buttonsStarted.push(false);
		this.buttonsReleased.push(false);
	}
	this.num = i;
	this.reset();
	if(virtual) {
		this.connected = true;
	} else {
		this.connect();
	}
};
$hxClasses["iron.system.Gamepad"] = iron_system_Gamepad;
iron_system_Gamepad.__name__ = "iron.system.Gamepad";
iron_system_Gamepad.__super__ = iron_system_VirtualInput;
iron_system_Gamepad.prototype = $extend(iron_system_VirtualInput.prototype,{
	connect: function() {
		var gamepad = kha_input_Gamepad.get(this.num);
		if(gamepad == null) {
			return;
		}
		this.connected = true;
		gamepad.notify($bind(this,this.axisListener),$bind(this,this.buttonListener));
	}
	,endFrame: function() {
		if(this.buttonsFrame.length > 0) {
			var _g = 0;
			var _g1 = this.buttonsFrame;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				this.buttonsStarted[i] = false;
				this.buttonsReleased[i] = false;
			}
			this.buttonsFrame.splice(0,this.buttonsFrame.length);
		}
		this.leftStick.moved = false;
		this.leftStick.movementX = 0;
		this.leftStick.movementY = 0;
		this.rightStick.moved = false;
		this.rightStick.movementX = 0;
		this.rightStick.movementY = 0;
	}
	,reset: function() {
		var _g = 0;
		var _g1 = this.buttonsDown.length;
		while(_g < _g1) {
			var i = _g++;
			this.buttonsDown[i] = 0.0;
			this.buttonsStarted[i] = false;
			this.buttonsReleased[i] = false;
		}
		this.endFrame();
	}
	,buttonIndex: function(button) {
		var _g = 0;
		var _g1 = iron_system_Gamepad.buttons.length;
		while(_g < _g1) {
			var i = _g++;
			if(iron_system_Gamepad.buttons[i] == button) {
				return i;
			}
		}
		return 0;
	}
	,down: function(button) {
		return this.buttonsDown[this.buttonIndex(button)];
	}
	,axisListener: function(axis,value) {
		var stick = axis <= 1 ? this.leftStick : this.rightStick;
		if(axis == 0 || axis == 2) {
			stick.lastX = stick.x;
			stick.x = value;
			stick.movementX = stick.x - stick.lastX;
		} else if(axis == 1 || axis == 3) {
			stick.lastY = stick.y;
			stick.y = value;
			stick.movementY = stick.y - stick.lastY;
		}
		stick.moved = true;
	}
	,buttonListener: function(button,value) {
		this.buttonsFrame.push(button);
		this.buttonsDown[button] = value;
		if(value > 0) {
			this.buttonsStarted[button] = true;
		} else {
			this.buttonsReleased[button] = true;
		}
		if(value == 0.0) {
			this.upVirtual(iron_system_Gamepad.buttons[button]);
		} else if(value == 1.0) {
			this.downVirtual(iron_system_Gamepad.buttons[button]);
		}
	}
	,__class__: iron_system_Gamepad
});
var iron_system_Tween = function() { };
$hxClasses["iron.system.Tween"] = iron_system_Tween;
iron_system_Tween.__name__ = "iron.system.Tween";
iron_system_Tween.to = function(anim) {
	if(!iron_system_Tween.registered) {
		iron_system_Tween.registered = true;
		iron_App.notifyOnUpdate(iron_system_Tween.update);
		iron_App.notifyOnReset(function() {
			iron_App.notifyOnUpdate(iron_system_Tween.update);
			iron_system_Tween.reset();
		});
	}
	anim._time = 0;
	anim.isPlaying = anim.delay != null && anim.delay > 0.0 ? false : true;
	if(anim.ease == null) {
		anim.ease = 0;
	}
	if(anim.target != null && anim.props != null) {
		anim._comps = [];
		anim._x = [];
		anim._y = [];
		anim._z = [];
		anim._w = [];
		anim._normalize = [];
		var _g = 0;
		var _g1 = Reflect.fields(anim.props);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var val = Reflect.getProperty(anim.target,p);
			if(((val) instanceof iron_math_Vec4) || ((val) instanceof iron_math_Quat)) {
				anim._comps.push(4);
				anim._x.push(val.x);
				anim._y.push(val.y);
				anim._z.push(val.z);
				anim._w.push(val.w);
				anim._normalize.push(((val) instanceof iron_math_Quat));
			} else {
				anim._comps.push(1);
				anim._x.push(val);
				anim._y.push(0);
				anim._z.push(0);
				anim._w.push(0);
			}
		}
	}
	iron_system_Tween.anims.push(anim);
	return anim;
};
iron_system_Tween.timer = function(delay,done) {
	return iron_system_Tween.to({ target : null, props : null, duration : 0, delay : delay, done : done});
};
iron_system_Tween.reset = function() {
	iron_system_Tween.anims = [];
};
iron_system_Tween.update = function() {
	var d = 0.016666666666666666 * iron_system_Time.scale;
	var i = iron_system_Tween.anims.length;
	while(i-- > 0 && iron_system_Tween.anims.length > 0) {
		var a = iron_system_Tween.anims[i];
		if(a.delay > 0) {
			a.delay -= d;
			if(a.delay > 0) {
				continue;
			}
		}
		a._time += d;
		a.isPlaying = a._time < a.duration;
		if(a.target != null) {
			if(((a.target) instanceof iron_object_Transform)) {
				a.target.dirty = true;
			}
			var ps = Reflect.fields(a.props);
			var _g = 0;
			var _g1 = ps.length;
			while(_g < _g1) {
				var i1 = _g++;
				var p = ps[i1];
				var k = a._time / a.duration;
				if(k > 1) {
					k = 1;
				}
				if(a._comps[i1] == 1) {
					var fromVal = a._x[i1];
					var toVal = Reflect.getProperty(a.props,p);
					var val = fromVal + (toVal - fromVal) * iron_system_Tween.eases[a.ease](k);
					Reflect.setProperty(a.target,p,val);
				} else {
					var obj = Reflect.getProperty(a.props,p);
					var toX = Reflect.getProperty(obj,"x");
					var toY = Reflect.getProperty(obj,"y");
					var toZ = Reflect.getProperty(obj,"z");
					var toW = Reflect.getProperty(obj,"w");
					if(a._normalize[i1]) {
						var qdot = a._x[i1] * toX + a._y[i1] * toY + a._z[i1] * toZ + a._w[i1] * toW;
						if(qdot < 0.0) {
							toX = -toX;
							toY = -toY;
							toZ = -toZ;
							toW = -toW;
						}
					}
					var x = a._x[i1] + (toX - a._x[i1]) * iron_system_Tween.eases[a.ease](k);
					var y = a._y[i1] + (toY - a._y[i1]) * iron_system_Tween.eases[a.ease](k);
					var z = a._z[i1] + (toZ - a._z[i1]) * iron_system_Tween.eases[a.ease](k);
					var w = a._w[i1] + (toW - a._w[i1]) * iron_system_Tween.eases[a.ease](k);
					if(a._normalize[i1]) {
						var l = Math.sqrt(x * x + y * y + z * z + w * w);
						if(l > 0.0) {
							l = 1.0 / l;
							x *= l;
							y *= l;
							z *= l;
							w *= l;
						}
					}
					var t = Reflect.getProperty(a.target,p);
					Reflect.setProperty(t,"x",x);
					Reflect.setProperty(t,"y",y);
					Reflect.setProperty(t,"z",z);
					Reflect.setProperty(t,"w",w);
				}
			}
		}
		if(a.isPlaying) {
			if(a.tick != null) {
				a.tick();
			}
		} else {
			iron_system_Tween.anims.splice(i,1);
			--i;
			a.isPlaying = false;
			if(a.done != null) {
				a.done();
			}
		}
	}
};
iron_system_Tween.easeLinear = function(k) {
	return k;
};
iron_system_Tween.easeSineIn = function(k) {
	if(k == 0) {
		return 0;
	} else if(k == 1) {
		return 1;
	} else {
		return 1 - Math.cos(k * Math.PI / 2);
	}
};
iron_system_Tween.easeSineOut = function(k) {
	if(k == 0) {
		return 0;
	} else if(k == 1) {
		return 1;
	} else {
		return Math.sin(k * (Math.PI * 0.5));
	}
};
iron_system_Tween.easeSineInOut = function(k) {
	if(k == 0) {
		return 0;
	} else if(k == 1) {
		return 1;
	} else {
		return -0.5 * (Math.cos(Math.PI * k) - 1);
	}
};
iron_system_Tween.easeQuadIn = function(k) {
	return k * k;
};
iron_system_Tween.easeQuadOut = function(k) {
	return -k * (k - 2);
};
iron_system_Tween.easeQuadInOut = function(k) {
	if(k < 0.5) {
		return 2 * k * k;
	} else {
		return -2 * (--k * k) + 1;
	}
};
iron_system_Tween.easeCubicIn = function(k) {
	return k * k * k;
};
iron_system_Tween.easeCubicOut = function(k) {
	return --k * k * k + 1;
};
iron_system_Tween.easeCubicInOut = function(k) {
	if((k *= 2) < 1) {
		return 0.5 * k * k * k;
	} else {
		return 0.5 * ((k -= 2) * k * k + 2);
	}
};
iron_system_Tween.easeQuartIn = function(k) {
	return (k *= k) * k;
};
iron_system_Tween.easeQuartOut = function(k) {
	k = --k * k;
	return 1 - k * k;
};
iron_system_Tween.easeQuartInOut = function(k) {
	if((k *= 2) < 1) {
		return 0.5 * (k *= k) * k;
	} else {
		k = (k -= 2) * k;
		return -0.5 * (k * k - 2);
	}
};
iron_system_Tween.easeQuintIn = function(k) {
	return k * (k *= k) * k;
};
iron_system_Tween.easeQuintOut = function(k) {
	return --k * (k *= k) * k + 1;
};
iron_system_Tween.easeQuintInOut = function(k) {
	if((k *= 2) < 1) {
		return 0.5 * k * (k *= k) * k;
	} else {
		return 0.5 * (k -= 2) * (k *= k) * k + 1;
	}
};
iron_system_Tween.easeExpoIn = function(k) {
	if(k == 0) {
		return 0;
	} else {
		return Math.pow(2,10 * (k - 1));
	}
};
iron_system_Tween.easeExpoOut = function(k) {
	if(k == 1) {
		return 1;
	} else {
		return 1 - Math.pow(2,-10 * k);
	}
};
iron_system_Tween.easeExpoInOut = function(k) {
	if(k == 0) {
		return 0;
	}
	if(k == 1) {
		return 1;
	}
	if((k /= 0.5) < 1.0) {
		return 0.5 * Math.pow(2,10 * (k - 1));
	}
	return 0.5 * (2 - Math.pow(2,-10 * --k));
};
iron_system_Tween.easeCircIn = function(k) {
	return -(Math.sqrt(1 - k * k) - 1);
};
iron_system_Tween.easeCircOut = function(k) {
	return Math.sqrt(1 - (k - 1) * (k - 1));
};
iron_system_Tween.easeCircInOut = function(k) {
	if(k <= .5) {
		return (Math.sqrt(1 - k * k * 4) - 1) / -2;
	} else {
		return (Math.sqrt(1 - (k * 2 - 2) * (k * 2 - 2)) + 1) / 2;
	}
};
iron_system_Tween.easeBackIn = function(k) {
	if(k == 0) {
		return 0;
	} else if(k == 1) {
		return 1;
	} else {
		return k * k * (2.70158 * k - 1.70158);
	}
};
iron_system_Tween.easeBackOut = function(k) {
	if(k == 0) {
		return 0;
	} else if(k == 1) {
		return 1;
	} else {
		return --k * k * (2.70158 * k + 1.70158) + 1;
	}
};
iron_system_Tween.easeBackInOut = function(k) {
	if(k == 0) {
		return 0;
	} else if(k == 1) {
		return 1;
	} else if((k *= 2) < 1) {
		return 0.5 * (k * k * (3.5949095 * k - 2.5949095));
	} else {
		return 0.5 * ((k -= 2) * k * (3.5949095 * k + 2.5949095) + 2);
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = "js._Boot.HaxeError";
js__$Boot_HaxeError.wrap = function(val) {
	if(((val) instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(((o) instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = l;
			while(_g3 < _g11) {
				var i1 = _g3++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if(((o) instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(((o) instanceof cl)) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return $hxEnums[o.__enum__] == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html__$ArrayBuffer_ArrayBufferCompat = function() { };
$hxClasses["js.html._ArrayBuffer.ArrayBufferCompat"] = js_html__$ArrayBuffer_ArrayBufferCompat;
js_html__$ArrayBuffer_ArrayBufferCompat.__name__ = "js.html._ArrayBuffer.ArrayBufferCompat";
js_html__$ArrayBuffer_ArrayBufferCompat.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var resultArray = new Uint8Array(u.byteLength);
	resultArray.set(u);
	return resultArray.buffer;
};
var kha__$Assets_ImageList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.ImageList"] = kha__$Assets_ImageList;
kha__$Assets_ImageList.__name__ = "kha._Assets.ImageList";
kha__$Assets_ImageList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,__class__: kha__$Assets_ImageList
};
var kha__$Assets_SoundList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.SoundList"] = kha__$Assets_SoundList;
kha__$Assets_SoundList.__name__ = "kha._Assets.SoundList";
kha__$Assets_SoundList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,__class__: kha__$Assets_SoundList
};
var kha__$Assets_BlobList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.BlobList"] = kha__$Assets_BlobList;
kha__$Assets_BlobList.__name__ = "kha._Assets.BlobList";
kha__$Assets_BlobList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,__class__: kha__$Assets_BlobList
};
var kha__$Assets_FontList = function() {
	this.names = ["font_default"];
	this.font_defaultDescription = { name : "font_default", files : ["font_default.ttf"], type : "font"};
	this.font_defaultName = "font_default";
	this.font_default = null;
};
$hxClasses["kha._Assets.FontList"] = kha__$Assets_FontList;
kha__$Assets_FontList.__name__ = "kha._Assets.FontList";
kha__$Assets_FontList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,font_defaultLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 144, className : "kha._Assets.FontList", methodName : "font_defaultLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadFont("font_default",function(font) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 144, className : "kha._Assets.FontList", methodName : "font_defaultLoad"});
	}
	,font_defaultUnload: function() {
		this.font_default.unload();
		this.font_default = null;
	}
	,__class__: kha__$Assets_FontList
};
var kha__$Assets_VideoList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.VideoList"] = kha__$Assets_VideoList;
kha__$Assets_VideoList.__name__ = "kha._Assets.VideoList";
kha__$Assets_VideoList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,__class__: kha__$Assets_VideoList
};
var kha_Assets = function() { };
$hxClasses["kha.Assets"] = kha_Assets;
kha_Assets.__name__ = "kha.Assets";
kha_Assets.loadImageFromPath = function(path,readable,done,failed,pos) {
	var description = { files : [path], readable : readable};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadImageFromDescription(description,done,tmp);
};
kha_Assets.loadBlobFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadBlobFromDescription(description,done,tmp);
};
kha_Assets.loadSoundFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadSoundFromDescription(description,done,tmp);
	return;
};
kha_Assets.loadFont = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.fonts,name + "Description");
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadFontFromDescription(description,function(font) {
		kha_Assets.fonts[name] = font;
		done(font);
	},tmp);
	return;
};
kha_Assets.loadFontFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadFontFromDescription(description,done,tmp);
	return;
};
var kha_Canvas = function() { };
$hxClasses["kha.Canvas"] = kha_Canvas;
kha_Canvas.__name__ = "kha.Canvas";
kha_Canvas.prototype = {
	__class__: kha_Canvas
	,__properties__: {get_width:"get_width",get_height:"get_height",get_g4:"get_g4"}
};
var kha_Resource = function() { };
$hxClasses["kha.Resource"] = kha_Resource;
kha_Resource.__name__ = "kha.Resource";
var kha_Image = function() { };
$hxClasses["kha.Image"] = kha_Image;
kha_Image.__name__ = "kha.Image";
kha_Image.__interfaces__ = [kha_Resource,kha_Canvas];
kha_Image.__properties__ = {get_nonPow2Supported:"get_nonPow2Supported"};
kha_Image.create = function(width,height,format,usage) {
	if(format == null) {
		format = 0;
	}
	if(usage == null) {
		usage = 0;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,false);
	} else {
		return new kha_WebGLImage(width,height,format,false,0,1);
	}
};
kha_Image.create3D = function(width,height,depth,format,usage) {
	return null;
};
kha_Image.createRenderTarget = function(width,height,format,depthStencil,antiAliasingSamples,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	if(format == null) {
		format = 0;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,true);
	} else {
		return new kha_WebGLImage(width,height,format,true,depthStencil,antiAliasingSamples);
	}
};
kha_Image.fromImage = function(image,readable) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(image.width,image.height,0,false);
		img.image = image;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(image.width,image.height,0,false,0,1);
		img1.image = image;
		img1.createTexture();
		return img1;
	}
};
kha_Image.fromBytes = function(bytes,width,height,format,usage) {
	if(format == null) {
		format = 0;
	}
	if(usage == null) {
		usage = 0;
	}
	if(kha_SystemImpl.gl != null) {
		var img = new kha_WebGLImage(width,height,format,false,0,1);
		img.image = img.bytesToArray(bytes);
		img.createTexture();
		return img;
	}
	return null;
};
kha_Image.get_nonPow2Supported = function() {
	return kha_SystemImpl.gl != null;
};
kha_Image.prototype = {
	unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,generateMipmaps: function(levels) {
	}
	,setMipmaps: function(mipmaps) {
	}
	,setDepthStencilFrom: function(image) {
	}
	,get_width: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,get_depth: function() {
		return 1;
	}
	,get_realWidth: function() {
		return 0;
	}
	,get_realHeight: function() {
		return 0;
	}
	,get_g2: function() {
		return null;
	}
	,get_g4: function() {
		return null;
	}
	,__class__: kha_Image
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_realHeight:"get_realHeight",get_realWidth:"get_realWidth",get_depth:"get_depth",get_height:"get_height",get_width:"get_width"}
};
var kha_CanvasImage = function(width,height,format,renderTarget) {
	this.g2canvas = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.CanvasImage"] = kha_CanvasImage;
kha_CanvasImage.__name__ = "kha.CanvasImage";
kha_CanvasImage.init = function() {
	var canvas = window.document.createElement("canvas");
	if(canvas != null) {
		kha_CanvasImage.context = canvas.getContext("2d");
		canvas.width = 2048;
		canvas.height = 2048;
		kha_CanvasImage.context.globalCompositeOperation = "copy";
	}
};
kha_CanvasImage.__super__ = kha_Image;
kha_CanvasImage.prototype = $extend(kha_Image.prototype,{
	get_g2: function() {
		if(this.g2canvas == null) {
			var canvas = window.document.createElement("canvas");
			this.image = canvas;
			var context = canvas.getContext("2d");
			canvas.width = this.get_width();
			canvas.height = this.get_height();
			this.g2canvas = new kha_js_CanvasGraphics(context);
		}
		return this.g2canvas;
	}
	,get_g4: function() {
		return null;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.format == 0 ? 4 * this.get_width() * this.get_height() : this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,new Uint8Array(this.bytes.b.bufferValue));
			if(kha_SystemImpl.gl.getError() == 1282) {
				var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
				var _g = 0;
				var _g1 = this.get_height();
				while(_g < _g1) {
					var y = _g++;
					var _g2 = 0;
					var _g11 = this.get_width();
					while(_g2 < _g11) {
						var x = _g2++;
						var _this = this.bytes;
						var pos = y * this.get_width() + x;
						var value = _this.b[pos];
						var pos1 = y * this.get_width() * 4 + x * 4;
						rgbaBytes.b[pos1] = value;
						var pos2 = y * this.get_width() * 4 + x * 4 + 1;
						rgbaBytes.b[pos2] = value;
						var pos3 = y * this.get_width() * 4 + x * 4 + 2;
						rgbaBytes.b[pos3] = value;
						var pos4 = y * this.get_width() * 4 + x * 4 + 3;
						rgbaBytes.b[pos4] = 255;
					}
				}
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,new Uint8Array(rgbaBytes.b.bufferValue));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		this.image = null;
		this.video = null;
		this.data = null;
	}
	,__class__: kha_CanvasImage
});
var kha__$Color_Color_$Impl_$ = $hx_exports["kha"]["_Color"]["Color_Impl_"] = {};
$hxClasses["kha._Color.Color_Impl_"] = kha__$Color_Color_$Impl_$;
kha__$Color_Color_$Impl_$.__name__ = "kha._Color.Color_Impl_";
kha__$Color_Color_$Impl_$.__properties__ = {set_value:"set_value",get_value:"get_value",set_A:"set_A",get_A:"get_A",set_B:"set_B",get_B:"get_B",set_G:"set_G",get_G:"get_G",set_R:"set_R",get_R:"get_R",set_Ab:"set_Ab",get_Ab:"get_Ab",set_Bb:"set_Bb",get_Bb:"get_Bb",set_Gb:"set_Gb",get_Gb:"get_Gb",set_Rb:"set_Rb",get_Rb:"get_Rb"};
kha__$Color_Color_$Impl_$.fromValue = function(value) {
	return kha__$Color_Color_$Impl_$._new(value);
};
kha__$Color_Color_$Impl_$.fromBytes = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
};
kha__$Color_Color_$Impl_$.fromFloats = function(r,g,b,a) {
	if(a == null) {
		a = 1;
	}
	return kha__$Color_Color_$Impl_$._new((a * 255 | 0) << 24 | (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0));
};
kha__$Color_Color_$Impl_$.fromString = function(value) {
	if((value.length == 7 || value.length == 9) && value.charCodeAt(0) == 35) {
		var colorValue = Std.parseInt("0x" + HxOverrides.substr(value,1,null));
		if(value.length == 7) {
			colorValue += -16777216;
		}
		return kha__$Color_Color_$Impl_$._new(colorValue);
	} else {
		throw new js__$Boot_HaxeError("Invalid Color string: '" + value + "'");
	}
};
kha__$Color_Color_$Impl_$._new = function(value) {
	var this1 = value;
	return this1;
};
kha__$Color_Color_$Impl_$.get_value = function(this1) {
	return this1;
};
kha__$Color_Color_$Impl_$.set_value = function(this1,value) {
	this1 = value;
	return this1;
};
kha__$Color_Color_$Impl_$.get_Rb = function(this1) {
	return (this1 & 16711680) >>> 16;
};
kha__$Color_Color_$Impl_$.get_Gb = function(this1) {
	return (this1 & 65280) >>> 8;
};
kha__$Color_Color_$Impl_$.get_Bb = function(this1) {
	return this1 & 255;
};
kha__$Color_Color_$Impl_$.get_Ab = function(this1) {
	return this1 >>> 24;
};
kha__$Color_Color_$Impl_$.set_Rb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | i << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.set_Gb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | i << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.set_Bb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | i;
	return i;
};
kha__$Color_Color_$Impl_$.set_Ab = function(this1,i) {
	this1 = i << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.get_R = function(this1) {
	return ((this1 & 16711680) >>> 16) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_G = function(this1) {
	return ((this1 & 65280) >>> 8) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_B = function(this1) {
	return (this1 & 255) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_A = function(this1) {
	return (this1 >>> 24) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.set_R = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (f * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_G = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (f * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_B = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | (f * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_A = function(this1,f) {
	this1 = (f * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
var kha_CompilerDefines = function() { };
$hxClasses["kha.CompilerDefines"] = kha_CompilerDefines;
kha_CompilerDefines.__name__ = "kha.CompilerDefines";
var kha_Display = function() {
};
$hxClasses["kha.Display"] = kha_Display;
kha_Display.__name__ = "kha.Display";
kha_Display.__properties__ = {get_primary:"get_primary"};
kha_Display.get_primary = function() {
	return kha_Display.instance;
};
kha_Display.prototype = {
	get_frequency: function() {
		return 60;
	}
	,__class__: kha_Display
	,__properties__: {get_frequency:"get_frequency"}
};
var kha_DisplayMode = function() { };
$hxClasses["kha.DisplayMode"] = kha_DisplayMode;
kha_DisplayMode.__name__ = "kha.DisplayMode";
var kha_Framebuffer = function($window,g1,g2,g4,g5) {
	this.window = $window;
	this.graphics1 = g1;
	this.graphics2 = g2;
	this.graphics4 = g4;
	this.graphics5 = g5;
};
$hxClasses["kha.Framebuffer"] = kha_Framebuffer;
kha_Framebuffer.__name__ = "kha.Framebuffer";
kha_Framebuffer.__interfaces__ = [kha_Canvas];
kha_Framebuffer.prototype = {
	init: function(g1,g2,g4,g5) {
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
		this.graphics5 = g5;
	}
	,get_g2: function() {
		return this.graphics2;
	}
	,get_g4: function() {
		return this.graphics4;
	}
	,get_width: function() {
		return kha_System.windowWidth(this.window);
	}
	,get_height: function() {
		return kha_System.windowHeight(this.window);
	}
	,__class__: kha_Framebuffer
	,__properties__: {get_height:"get_height",get_width:"get_width",get_g4:"get_g4",get_g2:"get_g2"}
};
var kha_FramebufferOptions = function(frequency,verticalSync,colorBufferBits,depthBufferBits,stencilBufferBits,samplesPerPixel) {
	if(samplesPerPixel == null) {
		samplesPerPixel = 1;
	}
	if(stencilBufferBits == null) {
		stencilBufferBits = 8;
	}
	if(depthBufferBits == null) {
		depthBufferBits = 16;
	}
	if(colorBufferBits == null) {
		colorBufferBits = 32;
	}
	if(verticalSync == null) {
		verticalSync = true;
	}
	if(frequency == null) {
		frequency = 60;
	}
	this.samplesPerPixel = 1;
	this.stencilBufferBits = 8;
	this.depthBufferBits = 16;
	this.colorBufferBits = 32;
	this.verticalSync = true;
	this.frequency = 60;
	this.frequency = frequency;
	this.verticalSync = verticalSync;
	this.colorBufferBits = colorBufferBits;
	this.depthBufferBits = depthBufferBits;
	this.stencilBufferBits = stencilBufferBits;
	this.samplesPerPixel = samplesPerPixel;
};
$hxClasses["kha.FramebufferOptions"] = kha_FramebufferOptions;
kha_FramebufferOptions.__name__ = "kha.FramebufferOptions";
kha_FramebufferOptions.prototype = {
	__class__: kha_FramebufferOptions
};
var kha_AlignedQuad = function() {
};
$hxClasses["kha.AlignedQuad"] = kha_AlignedQuad;
kha_AlignedQuad.__name__ = "kha.AlignedQuad";
kha_AlignedQuad.prototype = {
	__class__: kha_AlignedQuad
};
var kha_KravurImage = function(size,ascent,descent,lineGap,width,height,chars,pixels) {
	this.mySize = size;
	this.width = width;
	this.height = height;
	this.chars = chars;
	this.baseline = ascent;
	var _g = 0;
	while(_g < chars.length) {
		var char = chars[_g];
		++_g;
		char.yoff += this.baseline;
	}
	this.texture = kha_Image.create(width,height,1);
	var bytes = this.texture.lock();
	var pos = 0;
	var _g1 = 0;
	var _g2 = height;
	while(_g1 < _g2) {
		var y = _g1++;
		var _g11 = 0;
		var _g21 = width;
		while(_g11 < _g21) {
			var x = _g11++;
			var v = pixels.readU8(pos);
			bytes.b[pos] = v;
			++pos;
		}
	}
	this.texture.unlock();
};
$hxClasses["kha.KravurImage"] = kha_KravurImage;
kha_KravurImage.__name__ = "kha.KravurImage";
kha_KravurImage.prototype = {
	getTexture: function() {
		return this.texture;
	}
	,getBakedQuad: function(q,char_index,xpos,ypos) {
		if(char_index >= this.chars.length) {
			return null;
		}
		var ipw = 1.0 / this.width;
		var iph = 1.0 / this.height;
		var b = this.chars[char_index];
		if(b == null) {
			return null;
		}
		var round_x = Math.round(xpos + b.xoff);
		var round_y = Math.round(ypos + b.yoff);
		q.x0 = round_x;
		q.y0 = round_y;
		q.x1 = round_x + b.x1 - b.x0;
		q.y1 = round_y + b.y1 - b.y0;
		q.s0 = b.x0 * ipw;
		q.t0 = b.y0 * iph;
		q.s1 = b.x1 * ipw;
		q.t1 = b.y1 * iph;
		q.xadvance = b.xadvance;
		return q;
	}
	,getCharWidth: function(charIndex) {
		if(this.chars.length == 0) {
			return 0;
		}
		var offset = kha_KravurImage.charBlocks[0];
		if(charIndex < offset) {
			return this.chars[0].xadvance;
		}
		var _g = 1;
		var _g1 = kha_KravurImage.charBlocks.length / 2 | 0;
		while(_g < _g1) {
			var i = _g++;
			var prevEnd = kha_KravurImage.charBlocks[i * 2 - 1];
			var start = kha_KravurImage.charBlocks[i * 2];
			if(charIndex > start - 1) {
				offset += start - 1 - prevEnd;
			}
		}
		if(charIndex - offset >= this.chars.length) {
			return this.chars[0].xadvance;
		}
		return this.chars[charIndex - offset].xadvance;
	}
	,getHeight: function() {
		return this.mySize;
	}
	,stringWidth: function(str) {
		var width = 0;
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) {
			var c = _g++;
			width += this.getCharWidth(HxOverrides.cca(str,c));
		}
		return width;
	}
	,__class__: kha_KravurImage
};
var kha_Kravur = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.blob = blob;
};
$hxClasses["kha.Kravur"] = kha_Kravur;
kha_Kravur.__name__ = "kha.Kravur";
kha_Kravur.__interfaces__ = [kha_Resource];
kha_Kravur.prototype = {
	_get: function(fontSize) {
		var glyphs = kha_graphics2_Graphics.fontGlyphs;
		if(glyphs != this.oldGlyphs) {
			this.oldGlyphs = glyphs;
			kha_KravurImage.charBlocks = [glyphs[0]];
			var nextChar = kha_KravurImage.charBlocks[0] + 1;
			var _g = 1;
			var _g1 = glyphs.length;
			while(_g < _g1) {
				var i = _g++;
				if(glyphs[i] != nextChar) {
					kha_KravurImage.charBlocks.push(glyphs[i - 1]);
					kha_KravurImage.charBlocks.push(glyphs[i]);
					nextChar = glyphs[i] + 1;
				} else {
					++nextChar;
				}
			}
			kha_KravurImage.charBlocks.push(glyphs[glyphs.length - 1]);
		}
		var imageIndex = fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			var width = 64;
			var height = 32;
			var this1 = new Array(glyphs.length);
			var baked = this1;
			var _g2 = 0;
			var _g11 = baked.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				baked[i1] = new kha_graphics2_truetype_Stbtt_$bakedchar();
			}
			var pixels = null;
			var status = -1;
			while(status <= 0) {
				if(height < width) {
					height *= 2;
				} else {
					width *= 2;
				}
				pixels = kha_internal_BytesBlob.alloc(width * height);
				status = kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap(this.blob,0,fontSize,pixels,width,height,glyphs,baked);
			}
			var info = new kha_graphics2_truetype_Stbtt_$fontinfo();
			kha_graphics2_truetype_StbTruetype.stbtt_InitFont(info,this.blob,0);
			var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics(info);
			var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(info,fontSize);
			var ascent = Math.round(metrics.ascent * scale);
			var descent = Math.round(metrics.descent * scale);
			var lineGap = Math.round(metrics.lineGap * scale);
			var image = new kha_KravurImage(fontSize | 0,ascent,descent,lineGap,width,height,baked,pixels);
			this.images.h[imageIndex] = image;
			return image;
		}
		return this.images.h[imageIndex];
	}
	,height: function(fontSize) {
		return this._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this._get(fontSize).stringWidth(str);
	}
	,unload: function() {
		this.blob = null;
		this.images = null;
	}
	,__class__: kha_Kravur
};
var kha_LoaderImpl = function() { };
$hxClasses["kha.LoaderImpl"] = kha_LoaderImpl;
kha_LoaderImpl.__name__ = "kha.LoaderImpl";
kha_LoaderImpl.loadImageFromDescription = function(desc,done,failed) {
	var readable = Object.prototype.hasOwnProperty.call(desc,"readable") && desc.readable;
	if(StringTools.endsWith(desc.files[0],".hdr")) {
		kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
			var hdrImage = kha_internal_HdrFormat.parse(blob.toBytes());
			var tmp = kha_Image.fromBytes(haxe_io_Bytes.ofData(hdrImage.data.buffer),hdrImage.width,hdrImage.height,2,readable ? 1 : 0);
			done(tmp);
		},failed);
	} else {
		var img = window.document.createElement("img");
		img.onerror = function(event) {
			failed({ url : desc.files[0], error : event});
		};
		img.onload = function(event1) {
			var tmp1 = kha_Image.fromImage(img,readable);
			done(tmp1);
		};
		img.src = desc.files[0];
		img.crossOrigin = "";
	}
};
kha_LoaderImpl.loadSoundFromDescription = function(desc,done,failed) {
	if(kha_SystemImpl._hasWebAudio) {
		var element = window.document.createElement("audio");
		if(element.canPlayType("audio/mp4") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var i = _g++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_WebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/mp3") != "") {
			var _g2 = 0;
			var _g11 = desc.files.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				var file1 = desc.files[i1];
				if(StringTools.endsWith(file1,".mp3")) {
					new kha_js_WebAudioSound(file1,done,failed);
					return;
				}
			}
		}
		var _g3 = 0;
		var _g12 = desc.files.length;
		while(_g3 < _g12) {
			var i2 = _g3++;
			var file2 = desc.files[i2];
			if(StringTools.endsWith(file2,".ogg")) {
				new kha_js_WebAudioSound(file2,done,failed);
				return;
			}
		}
	} else if(kha_SystemImpl.mobile) {
		var element1 = window.document.createElement("audio");
		if(element1.canPlayType("audio/mp4") != "") {
			var _g4 = 0;
			var _g13 = desc.files.length;
			while(_g4 < _g13) {
				var i3 = _g4++;
				var file3 = desc.files[i3];
				if(StringTools.endsWith(file3,".mp4")) {
					new kha_js_MobileWebAudioSound(file3,done,failed);
					return;
				}
			}
		}
		if(element1.canPlayType("audio/mp3") != "") {
			var _g5 = 0;
			var _g14 = desc.files.length;
			while(_g5 < _g14) {
				var i4 = _g5++;
				var file4 = desc.files[i4];
				if(StringTools.endsWith(file4,".mp3")) {
					new kha_js_MobileWebAudioSound(file4,done,failed);
					return;
				}
			}
		}
		var _g6 = 0;
		var _g15 = desc.files.length;
		while(_g6 < _g15) {
			var i5 = _g6++;
			var file5 = desc.files[i5];
			if(StringTools.endsWith(file5,".ogg")) {
				new kha_js_MobileWebAudioSound(file5,done,failed);
				return;
			}
		}
	} else {
		new kha_js_Sound(desc.files,done,failed);
	}
};
kha_LoaderImpl.loadRemote = function(desc,done,failed) {
	var request = new XMLHttpRequest();
	request.open("GET",desc.files[0],true);
	request.responseType = "arraybuffer";
	request.onreadystatechange = function() {
		if(request.readyState != 4) {
			return;
		}
		if(request.status >= 200 && request.status < 400 || request.status == 0 && request.statusText == "") {
			var bytes = null;
			var arrayBuffer = request.response;
			if(arrayBuffer != null) {
				var byteArray = new Uint8Array(arrayBuffer);
				bytes = haxe_io_Bytes.ofData(byteArray);
			} else if(request.responseBody != null) {
				var data = VBArray(request.responseBody).toArray();
				bytes = new haxe_io_Bytes(new ArrayBuffer(data.length));
				var _g = 0;
				var _g1 = data.length;
				while(_g < _g1) {
					var i = _g++;
					bytes.b[i] = data[i];
				}
			} else {
				failed({ url : desc.files[0]});
				return;
			}
			done(new kha_internal_BytesBlob(bytes));
		} else {
			failed({ url : desc.files[0]});
		}
	};
	request.send(null);
};
kha_LoaderImpl.loadBlobFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadRemote(desc,done,failed);
};
kha_LoaderImpl.loadFontFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
		done(new kha_Kravur(blob));
	},failed);
};
var kha_TimeTask = function() {
};
$hxClasses["kha.TimeTask"] = kha_TimeTask;
kha_TimeTask.__name__ = "kha.TimeTask";
kha_TimeTask.prototype = {
	__class__: kha_TimeTask
};
var kha_FrameTask = function(task,priority,id) {
	this.task = task;
	this.priority = priority;
	this.id = id;
	this.active = true;
	this.paused = false;
};
$hxClasses["kha.FrameTask"] = kha_FrameTask;
kha_FrameTask.__name__ = "kha.FrameTask";
kha_FrameTask.prototype = {
	__class__: kha_FrameTask
};
var kha_Scheduler = function() { };
$hxClasses["kha.Scheduler"] = kha_Scheduler;
kha_Scheduler.__name__ = "kha.Scheduler";
kha_Scheduler.init = function() {
	kha_Scheduler.deltas = [];
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) {
		var i = _g++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.stopped = true;
	kha_Scheduler.frame_tasks_sorted = true;
	kha_Scheduler.current = kha_Scheduler.lastTime = kha_Scheduler.realTime();
	kha_Scheduler.currentFrameTaskId = 0;
	kha_Scheduler.currentTimeTaskId = 0;
	kha_Scheduler.currentGroupId = 0;
	kha_Scheduler.timeTasks = [];
	kha_Scheduler.pausedTimeTasks = [];
	kha_Scheduler.outdatedTimeTasks = [];
	kha_Scheduler.timeTasksScratchpad = [];
	kha_Scheduler.frameTasks = [];
	kha_Scheduler.toDeleteFrame = [];
};
kha_Scheduler.start = function(restartTimers) {
	if(restartTimers == null) {
		restartTimers = false;
	}
	kha_Scheduler.vsync = kha_Window.get(0).get_vSynced();
	var hz = kha_Display.get_primary().get_frequency();
	if(hz >= 57 && hz <= 63) {
		hz = 60;
	}
	kha_Scheduler.onedifhz = 1.0 / hz;
	kha_Scheduler.stopped = false;
	kha_Scheduler.resetTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) {
		var i = _g++;
		kha_Scheduler.deltas[i] = 0;
	}
	if(restartTimers) {
		var _g2 = 0;
		var _g3 = kha_Scheduler.timeTasks;
		while(_g2 < _g3.length) {
			var timeTask = _g3[_g2];
			++_g2;
			timeTask.paused = false;
		}
		var _g4 = 0;
		var _g5 = kha_Scheduler.frameTasks;
		while(_g4 < _g5.length) {
			var frameTask = _g5[_g4];
			++_g4;
			frameTask.paused = false;
		}
	}
};
kha_Scheduler.executeFrame = function() {
	var now = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var delta = now - kha_Scheduler.lastTime;
	var frameEnd = kha_Scheduler.current;
	if(delta >= 0) {
		if(kha_netsync_Session.the() == null) {
			if(delta > kha_Scheduler.maxframetime) {
				kha_Scheduler.startTime += delta - kha_Scheduler.maxframetime;
				delta = kha_Scheduler.maxframetime;
				frameEnd += delta;
			} else if(kha_Scheduler.vsync) {
				var realdif = kha_Scheduler.onedifhz;
				while(realdif < delta - kha_Scheduler.onedifhz) realdif += kha_Scheduler.onedifhz;
				delta = realdif;
				var _g = 0;
				var _g1 = kha_Scheduler.DIF_COUNT - 2;
				while(_g < _g1) {
					var i = _g++;
					delta += kha_Scheduler.deltas[i];
					kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
				}
				delta += kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2];
				delta /= kha_Scheduler.DIF_COUNT;
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2] = realdif;
				frameEnd += delta;
			} else {
				var _g2 = 0;
				var _g11 = kha_Scheduler.DIF_COUNT - 1;
				while(_g2 < _g11) {
					var i1 = _g2++;
					kha_Scheduler.deltas[i1] = kha_Scheduler.deltas[i1 + 1];
				}
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 1] = delta;
				var next = 0;
				var _g21 = 0;
				var _g3 = kha_Scheduler.DIF_COUNT;
				while(_g21 < _g3) {
					var i2 = _g21++;
					next += kha_Scheduler.deltas[i2];
				}
				next /= kha_Scheduler.DIF_COUNT;
				frameEnd += next;
			}
		} else {
			frameEnd += delta;
		}
		kha_Scheduler.lastTime = frameEnd;
		if(!kha_Scheduler.stopped) {
			kha_Scheduler.current = frameEnd;
		}
		var _g4 = 0;
		var _g12 = kha_Scheduler.pausedTimeTasks;
		while(_g4 < _g12.length) {
			var pausedTask = _g12[_g4];
			++_g4;
			pausedTask.next += delta;
		}
		if(kha_Scheduler.stopped) {
			var _g22 = 0;
			var _g31 = kha_Scheduler.timeTasks;
			while(_g22 < _g31.length) {
				var timeTask = _g31[_g22];
				++_g22;
				timeTask.next += delta;
			}
		}
		kha_Scheduler.executeTimeTasks(frameEnd);
		var _g23 = 0;
		var _g32 = kha_Scheduler.outdatedTimeTasks;
		while(_g23 < _g32.length) {
			var task = _g32[_g23];
			++_g23;
			if(task.next < frameEnd - 10.0) {
				kha_Scheduler.timeTasksScratchpad.push(task);
			}
		}
		var _g41 = 0;
		var _g5 = kha_Scheduler.timeTasksScratchpad;
		while(_g41 < _g5.length) {
			var task1 = _g5[_g41];
			++_g41;
			HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task1);
		}
		while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	}
	kha_Scheduler.sortFrameTasks();
	var _g6 = 0;
	var _g13 = kha_Scheduler.frameTasks;
	while(_g6 < _g13.length) {
		var frameTask = _g13[_g6];
		++_g6;
		if(!kha_Scheduler.stopped && !frameTask.paused && frameTask.active) {
			if(!frameTask.task()) {
				frameTask.active = false;
			}
		}
	}
	var _g24 = 0;
	var _g33 = kha_Scheduler.frameTasks;
	while(_g24 < _g33.length) {
		var frameTask1 = _g33[_g24];
		++_g24;
		if(!frameTask1.active) {
			kha_Scheduler.toDeleteFrame.push(frameTask1);
		}
	}
	while(kha_Scheduler.toDeleteFrame.length > 0) HxOverrides.remove(kha_Scheduler.frameTasks,kha_Scheduler.toDeleteFrame.pop());
};
kha_Scheduler.executeTimeTasks = function(until) {
	while(kha_Scheduler.timeTasks.length > 0) {
		kha_Scheduler.activeTimeTask = kha_Scheduler.timeTasks[0];
		if(kha_Scheduler.activeTimeTask.next <= until) {
			kha_Scheduler.activeTimeTask.next += kha_Scheduler.activeTimeTask.period;
			HxOverrides.remove(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
			if(kha_Scheduler.activeTimeTask.active && kha_Scheduler.activeTimeTask.task()) {
				if(kha_Scheduler.activeTimeTask.period > 0 && (kha_Scheduler.activeTimeTask.duration == 0 || kha_Scheduler.activeTimeTask.duration >= kha_Scheduler.activeTimeTask.start + kha_Scheduler.activeTimeTask.next)) {
					kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
				} else {
					kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
				}
			} else {
				kha_Scheduler.activeTimeTask.active = false;
				kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
			}
		} else {
			break;
		}
	}
	kha_Scheduler.activeTimeTask = null;
};
kha_Scheduler.archiveTimeTask = function(timeTask,frameEnd) {
};
kha_Scheduler.time = function() {
	return kha_Scheduler.current;
};
kha_Scheduler.realTime = function() {
	return kha_System.get_time();
};
kha_Scheduler.resetTime = function() {
	var now = kha_System.get_time();
	var dif = now - kha_Scheduler.startTime;
	kha_Scheduler.startTime = now;
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		timeTask.start -= dif;
		timeTask.next -= dif;
	}
	var _g2 = 0;
	var _g3 = kha_Scheduler.DIF_COUNT;
	while(_g2 < _g3) {
		var i = _g2++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.current = 0;
	kha_Scheduler.lastTime = 0;
};
kha_Scheduler.addBreakableTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	var t = new kha_TimeTask();
	t.active = true;
	t.task = task;
	t.id = ++kha_Scheduler.currentTimeTaskId;
	t.groupId = groupId;
	t.start = kha_Scheduler.current + start;
	t.period = 0;
	if(period != 0) {
		t.period = period;
	}
	t.duration = 0;
	if(duration != 0) {
		t.duration = t.start + duration;
	}
	t.next = t.start;
	kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,t);
	return t.id;
};
kha_Scheduler.addTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(groupId,function() {
		task();
		return true;
	},start,period,duration);
};
kha_Scheduler.addTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.insertSorted = function(list,task) {
	var _g = 0;
	var _g1 = list.length;
	while(_g < _g1) {
		var i = _g++;
		if(list[i].next > task.next) {
			list.splice(i,0,task);
			return;
		}
	}
	list.push(task);
};
kha_Scheduler.sortFrameTasks = function() {
	if(kha_Scheduler.frame_tasks_sorted) {
		return;
	}
	kha_Scheduler.frameTasks.sort(function(a,b) {
		if(a.priority > b.priority) {
			return 1;
		} else if(a.priority < b.priority) {
			return -1;
		} else {
			return 0;
		}
	});
	kha_Scheduler.frame_tasks_sorted = true;
};
var kha_ScreenRotation = $hxEnums["kha.ScreenRotation"] = { __ename__ : true, __constructs__ : ["RotationNone","Rotation90","Rotation180","Rotation270"]
	,RotationNone: {_hx_index:0,__enum__:"kha.ScreenRotation",toString:$estr}
	,Rotation90: {_hx_index:1,__enum__:"kha.ScreenRotation",toString:$estr}
	,Rotation180: {_hx_index:2,__enum__:"kha.ScreenRotation",toString:$estr}
	,Rotation270: {_hx_index:3,__enum__:"kha.ScreenRotation",toString:$estr}
};
var kha_Shaders = function() { };
$hxClasses["kha.Shaders"] = kha_Shaders;
kha_Shaders.__name__ = "kha.Shaders";
kha_Shaders.init = function() {
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"CheckboxMat_mesh_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.CheckboxMat_mesh_frag = new kha_graphics4_FragmentShader(blobs,["CheckboxMat_mesh-webgl2.frag.essl"]);
	var blobs1 = [];
	var data1 = Reflect.field(kha_Shaders,"MARKER_spawnAllyMat_999_mesh_fragData" + 0);
	var bytes1 = haxe_Unserializer.run(data1);
	blobs1.push(kha_internal_BytesBlob.fromBytes(bytes1));
	kha_Shaders.MARKER_spawnAllyMat_999_mesh_frag = new kha_graphics4_FragmentShader(blobs1,["MARKER_spawnAllyMat_999_mesh-webgl2.frag.essl"]);
	var blobs2 = [];
	var data2 = Reflect.field(kha_Shaders,"MARKER_spawnEnemyMat_999_mesh_fragData" + 0);
	var bytes2 = haxe_Unserializer.run(data2);
	blobs2.push(kha_internal_BytesBlob.fromBytes(bytes2));
	kha_Shaders.MARKER_spawnEnemyMat_999_mesh_frag = new kha_graphics4_FragmentShader(blobs2,["MARKER_spawnEnemyMat_999_mesh-webgl2.frag.essl"]);
	var blobs3 = [];
	var data3 = Reflect.field(kha_Shaders,"MARKER_spawnPlayerMat_999_mesh_fragData" + 0);
	var bytes3 = haxe_Unserializer.run(data3);
	blobs3.push(kha_internal_BytesBlob.fromBytes(bytes3));
	kha_Shaders.MARKER_spawnPlayerMat_999_mesh_frag = new kha_graphics4_FragmentShader(blobs3,["MARKER_spawnPlayerMat_999_mesh-webgl2.frag.essl"]);
	var blobs4 = [];
	var data4 = Reflect.field(kha_Shaders,"Material_mesh_fragData" + 0);
	var bytes4 = haxe_Unserializer.run(data4);
	blobs4.push(kha_internal_BytesBlob.fromBytes(bytes4));
	kha_Shaders.Material_mesh_frag = new kha_graphics4_FragmentShader(blobs4,["Material_mesh-webgl2.frag.essl"]);
	var blobs5 = [];
	var data5 = Reflect.field(kha_Shaders,"StoneWall_045_mesh_fragData" + 0);
	var bytes5 = haxe_Unserializer.run(data5);
	blobs5.push(kha_internal_BytesBlob.fromBytes(bytes5));
	kha_Shaders.StoneWall_045_mesh_frag = new kha_graphics4_FragmentShader(blobs5,["StoneWall_045_mesh-webgl2.frag.essl"]);
	var blobs6 = [];
	var data6 = Reflect.field(kha_Shaders,"StoneWall_050_mesh_fragData" + 0);
	var bytes6 = haxe_Unserializer.run(data6);
	blobs6.push(kha_internal_BytesBlob.fromBytes(bytes6));
	kha_Shaders.StoneWall_050_mesh_frag = new kha_graphics4_FragmentShader(blobs6,["StoneWall_050_mesh-webgl2.frag.essl"]);
	var blobs7 = [];
	var data7 = Reflect.field(kha_Shaders,"StoneWall_999_mesh_fragData" + 0);
	var bytes7 = haxe_Unserializer.run(data7);
	blobs7.push(kha_internal_BytesBlob.fromBytes(bytes7));
	kha_Shaders.StoneWall_999_mesh_frag = new kha_graphics4_FragmentShader(blobs7,["StoneWall_999_mesh-webgl2.frag.essl"]);
	var blobs8 = [];
	var data8 = Reflect.field(kha_Shaders,"TextMat_mesh_fragData" + 0);
	var bytes8 = haxe_Unserializer.run(data8);
	blobs8.push(kha_internal_BytesBlob.fromBytes(bytes8));
	kha_Shaders.TextMat_mesh_frag = new kha_graphics4_FragmentShader(blobs8,["TextMat_mesh-webgl2.frag.essl"]);
	var blobs9 = [];
	var data9 = Reflect.field(kha_Shaders,"Water_mesh_fragData" + 0);
	var bytes9 = haxe_Unserializer.run(data9);
	blobs9.push(kha_internal_BytesBlob.fromBytes(bytes9));
	kha_Shaders.Water_mesh_frag = new kha_graphics4_FragmentShader(blobs9,["Water_mesh-webgl2.frag.essl"]);
	var blobs10 = [];
	var data10 = Reflect.field(kha_Shaders,"Water_shadowmap_fragData" + 0);
	var bytes10 = haxe_Unserializer.run(data10);
	blobs10.push(kha_internal_BytesBlob.fromBytes(bytes10));
	kha_Shaders.Water_shadowmap_frag = new kha_graphics4_FragmentShader(blobs10,["Water_shadowmap-webgl2.frag.essl"]);
	var blobs11 = [];
	var data11 = Reflect.field(kha_Shaders,"Water_translucent_fragData" + 0);
	var bytes11 = haxe_Unserializer.run(data11);
	blobs11.push(kha_internal_BytesBlob.fromBytes(bytes11));
	kha_Shaders.Water_translucent_frag = new kha_graphics4_FragmentShader(blobs11,["Water_translucent-webgl2.frag.essl"]);
	var blobs12 = [];
	var data12 = Reflect.field(kha_Shaders,"Water_translucent_vertData" + 0);
	var bytes12 = haxe_Unserializer.run(data12);
	blobs12.push(kha_internal_BytesBlob.fromBytes(bytes12));
	kha_Shaders.Water_translucent_vert = new kha_graphics4_VertexShader(blobs12,["Water_translucent-webgl2.vert.essl"]);
	var blobs13 = [];
	var data13 = Reflect.field(kha_Shaders,"Wood_mesh_fragData" + 0);
	var bytes13 = haxe_Unserializer.run(data13);
	blobs13.push(kha_internal_BytesBlob.fromBytes(bytes13));
	kha_Shaders.Wood_mesh_frag = new kha_graphics4_FragmentShader(blobs13,["Wood_mesh-webgl2.frag.essl"]);
	var blobs14 = [];
	var data14 = Reflect.field(kha_Shaders,"ally_arrow_mat_mesh_fragData" + 0);
	var bytes14 = haxe_Unserializer.run(data14);
	blobs14.push(kha_internal_BytesBlob.fromBytes(bytes14));
	kha_Shaders.ally_arrow_mat_mesh_frag = new kha_graphics4_FragmentShader(blobs14,["ally_arrow_mat_mesh-webgl2.frag.essl"]);
	var blobs15 = [];
	var data15 = Reflect.field(kha_Shaders,"ally_arrow_mat_mesh_vertData" + 0);
	var bytes15 = haxe_Unserializer.run(data15);
	blobs15.push(kha_internal_BytesBlob.fromBytes(bytes15));
	kha_Shaders.ally_arrow_mat_mesh_vert = new kha_graphics4_VertexShader(blobs15,["ally_arrow_mat_mesh-webgl2.vert.essl"]);
	var blobs16 = [];
	var data16 = Reflect.field(kha_Shaders,"ally_mat_017_mesh_fragData" + 0);
	var bytes16 = haxe_Unserializer.run(data16);
	blobs16.push(kha_internal_BytesBlob.fromBytes(bytes16));
	kha_Shaders.ally_mat_017_mesh_frag = new kha_graphics4_FragmentShader(blobs16,["ally_mat_017_mesh-webgl2.frag.essl"]);
	var blobs17 = [];
	var data17 = Reflect.field(kha_Shaders,"ally_mat_armskin_mesh_fragData" + 0);
	var bytes17 = haxe_Unserializer.run(data17);
	blobs17.push(kha_internal_BytesBlob.fromBytes(bytes17));
	kha_Shaders.ally_mat_armskin_mesh_frag = new kha_graphics4_FragmentShader(blobs17,["ally_mat_armskin_mesh-webgl2.frag.essl"]);
	var blobs18 = [];
	var data18 = Reflect.field(kha_Shaders,"ally_mat_armskin_mesh_vertData" + 0);
	var bytes18 = haxe_Unserializer.run(data18);
	blobs18.push(kha_internal_BytesBlob.fromBytes(bytes18));
	kha_Shaders.ally_mat_armskin_mesh_vert = new kha_graphics4_VertexShader(blobs18,["ally_mat_armskin_mesh-webgl2.vert.essl"]);
	var blobs19 = [];
	var data19 = Reflect.field(kha_Shaders,"ally_mat_armskin_shadowmap_vertData" + 0);
	var bytes19 = haxe_Unserializer.run(data19);
	blobs19.push(kha_internal_BytesBlob.fromBytes(bytes19));
	kha_Shaders.ally_mat_armskin_shadowmap_vert = new kha_graphics4_VertexShader(blobs19,["ally_mat_armskin_shadowmap-webgl2.vert.essl"]);
	var blobs20 = [];
	var data20 = Reflect.field(kha_Shaders,"ally_mat_mesh_fragData" + 0);
	var bytes20 = haxe_Unserializer.run(data20);
	blobs20.push(kha_internal_BytesBlob.fromBytes(bytes20));
	kha_Shaders.ally_mat_mesh_frag = new kha_graphics4_FragmentShader(blobs20,["ally_mat_mesh-webgl2.frag.essl"]);
	var blobs21 = [];
	var data21 = Reflect.field(kha_Shaders,"armdefault_mesh_fragData" + 0);
	var bytes21 = haxe_Unserializer.run(data21);
	blobs21.push(kha_internal_BytesBlob.fromBytes(bytes21));
	kha_Shaders.armdefault_mesh_frag = new kha_graphics4_FragmentShader(blobs21,["armdefault_mesh-webgl2.frag.essl"]);
	var blobs22 = [];
	var data22 = Reflect.field(kha_Shaders,"armdefault_mesh_vertData" + 0);
	var bytes22 = haxe_Unserializer.run(data22);
	blobs22.push(kha_internal_BytesBlob.fromBytes(bytes22));
	kha_Shaders.armdefault_mesh_vert = new kha_graphics4_VertexShader(blobs22,["armdefault_mesh-webgl2.vert.essl"]);
	var blobs23 = [];
	var data23 = Reflect.field(kha_Shaders,"armdefault_shadowmap_fragData" + 0);
	var bytes23 = haxe_Unserializer.run(data23);
	blobs23.push(kha_internal_BytesBlob.fromBytes(bytes23));
	kha_Shaders.armdefault_shadowmap_frag = new kha_graphics4_FragmentShader(blobs23,["armdefault_shadowmap-webgl2.frag.essl"]);
	var blobs24 = [];
	var data24 = Reflect.field(kha_Shaders,"armdefault_shadowmap_vertData" + 0);
	var bytes24 = haxe_Unserializer.run(data24);
	blobs24.push(kha_internal_BytesBlob.fromBytes(bytes24));
	kha_Shaders.armdefault_shadowmap_vert = new kha_graphics4_VertexShader(blobs24,["armdefault_shadowmap-webgl2.vert.essl"]);
	var blobs25 = [];
	var data25 = Reflect.field(kha_Shaders,"blur_edge_pass_fragData" + 0);
	var bytes25 = haxe_Unserializer.run(data25);
	blobs25.push(kha_internal_BytesBlob.fromBytes(bytes25));
	kha_Shaders.blur_edge_pass_frag = new kha_graphics4_FragmentShader(blobs25,["blur_edge_pass-webgl2.frag.essl"]);
	var blobs26 = [];
	var data26 = Reflect.field(kha_Shaders,"bow_mat_004_mesh_fragData" + 0);
	var bytes26 = haxe_Unserializer.run(data26);
	blobs26.push(kha_internal_BytesBlob.fromBytes(bytes26));
	kha_Shaders.bow_mat_004_mesh_frag = new kha_graphics4_FragmentShader(blobs26,["bow_mat_004_mesh-webgl2.frag.essl"]);
	var blobs27 = [];
	var data27 = Reflect.field(kha_Shaders,"bow_mat_005_mesh_fragData" + 0);
	var bytes27 = haxe_Unserializer.run(data27);
	blobs27.push(kha_internal_BytesBlob.fromBytes(bytes27));
	kha_Shaders.bow_mat_005_mesh_frag = new kha_graphics4_FragmentShader(blobs27,["bow_mat_005_mesh-webgl2.frag.essl"]);
	var blobs28 = [];
	var data28 = Reflect.field(kha_Shaders,"bow_mat_006_mesh_fragData" + 0);
	var bytes28 = haxe_Unserializer.run(data28);
	blobs28.push(kha_internal_BytesBlob.fromBytes(bytes28));
	kha_Shaders.bow_mat_006_mesh_frag = new kha_graphics4_FragmentShader(blobs28,["bow_mat_006_mesh-webgl2.frag.essl"]);
	var blobs29 = [];
	var data29 = Reflect.field(kha_Shaders,"bow_mat_mesh_fragData" + 0);
	var bytes29 = haxe_Unserializer.run(data29);
	blobs29.push(kha_internal_BytesBlob.fromBytes(bytes29));
	kha_Shaders.bow_mat_mesh_frag = new kha_graphics4_FragmentShader(blobs29,["bow_mat_mesh-webgl2.frag.essl"]);
	var blobs30 = [];
	var data30 = Reflect.field(kha_Shaders,"compositor_pass_fragData" + 0);
	var bytes30 = haxe_Unserializer.run(data30);
	blobs30.push(kha_internal_BytesBlob.fromBytes(bytes30));
	kha_Shaders.compositor_pass_frag = new kha_graphics4_FragmentShader(blobs30,["compositor_pass-webgl2.frag.essl"]);
	var blobs31 = [];
	var data31 = Reflect.field(kha_Shaders,"compositor_pass_vertData" + 0);
	var bytes31 = haxe_Unserializer.run(data31);
	blobs31.push(kha_internal_BytesBlob.fromBytes(bytes31));
	kha_Shaders.compositor_pass_vert = new kha_graphics4_VertexShader(blobs31,["compositor_pass-webgl2.vert.essl"]);
	var blobs32 = [];
	var data32 = Reflect.field(kha_Shaders,"deferred_light_fragData" + 0);
	var bytes32 = haxe_Unserializer.run(data32);
	blobs32.push(kha_internal_BytesBlob.fromBytes(bytes32));
	kha_Shaders.deferred_light_frag = new kha_graphics4_FragmentShader(blobs32,["deferred_light-webgl2.frag.essl"]);
	var blobs33 = [];
	var data33 = Reflect.field(kha_Shaders,"enemy_arrow_mat_mesh_fragData" + 0);
	var bytes33 = haxe_Unserializer.run(data33);
	blobs33.push(kha_internal_BytesBlob.fromBytes(bytes33));
	kha_Shaders.enemy_arrow_mat_mesh_frag = new kha_graphics4_FragmentShader(blobs33,["enemy_arrow_mat_mesh-webgl2.frag.essl"]);
	var blobs34 = [];
	var data34 = Reflect.field(kha_Shaders,"enemy_mat_armskin_mesh_fragData" + 0);
	var bytes34 = haxe_Unserializer.run(data34);
	blobs34.push(kha_internal_BytesBlob.fromBytes(bytes34));
	kha_Shaders.enemy_mat_armskin_mesh_frag = new kha_graphics4_FragmentShader(blobs34,["enemy_mat_armskin_mesh-webgl2.frag.essl"]);
	var blobs35 = [];
	var data35 = Reflect.field(kha_Shaders,"enemy_mat_mesh_fragData" + 0);
	var bytes35 = haxe_Unserializer.run(data35);
	blobs35.push(kha_internal_BytesBlob.fromBytes(bytes35));
	kha_Shaders.enemy_mat_mesh_frag = new kha_graphics4_FragmentShader(blobs35,["enemy_mat_mesh-webgl2.frag.essl"]);
	var blobs36 = [];
	var data36 = Reflect.field(kha_Shaders,"grassMat_mesh_fragData" + 0);
	var bytes36 = haxe_Unserializer.run(data36);
	blobs36.push(kha_internal_BytesBlob.fromBytes(bytes36));
	kha_Shaders.grassMat_mesh_frag = new kha_graphics4_FragmentShader(blobs36,["grassMat_mesh-webgl2.frag.essl"]);
	var blobs37 = [];
	var data37 = Reflect.field(kha_Shaders,"line_deferred_fragData" + 0);
	var bytes37 = haxe_Unserializer.run(data37);
	blobs37.push(kha_internal_BytesBlob.fromBytes(bytes37));
	kha_Shaders.line_deferred_frag = new kha_graphics4_FragmentShader(blobs37,["line_deferred-webgl2.frag.essl"]);
	var blobs38 = [];
	var data38 = Reflect.field(kha_Shaders,"line_fragData" + 0);
	var bytes38 = haxe_Unserializer.run(data38);
	blobs38.push(kha_internal_BytesBlob.fromBytes(bytes38));
	kha_Shaders.line_frag = new kha_graphics4_FragmentShader(blobs38,["line-webgl2.frag.essl"]);
	var blobs39 = [];
	var data39 = Reflect.field(kha_Shaders,"line_vertData" + 0);
	var bytes39 = haxe_Unserializer.run(data39);
	blobs39.push(kha_internal_BytesBlob.fromBytes(bytes39));
	kha_Shaders.line_vert = new kha_graphics4_VertexShader(blobs39,["line-webgl2.vert.essl"]);
	var blobs40 = [];
	var data40 = Reflect.field(kha_Shaders,"painter_colored_fragData" + 0);
	var bytes40 = haxe_Unserializer.run(data40);
	blobs40.push(kha_internal_BytesBlob.fromBytes(bytes40));
	kha_Shaders.painter_colored_frag = new kha_graphics4_FragmentShader(blobs40,["painter-colored-webgl2.frag.essl"]);
	var blobs41 = [];
	var data41 = Reflect.field(kha_Shaders,"painter_colored_vertData" + 0);
	var bytes41 = haxe_Unserializer.run(data41);
	blobs41.push(kha_internal_BytesBlob.fromBytes(bytes41));
	kha_Shaders.painter_colored_vert = new kha_graphics4_VertexShader(blobs41,["painter-colored-webgl2.vert.essl"]);
	var blobs42 = [];
	var data42 = Reflect.field(kha_Shaders,"painter_image_fragData" + 0);
	var bytes42 = haxe_Unserializer.run(data42);
	blobs42.push(kha_internal_BytesBlob.fromBytes(bytes42));
	kha_Shaders.painter_image_frag = new kha_graphics4_FragmentShader(blobs42,["painter-image-webgl2.frag.essl"]);
	var blobs43 = [];
	var data43 = Reflect.field(kha_Shaders,"painter_image_vertData" + 0);
	var bytes43 = haxe_Unserializer.run(data43);
	blobs43.push(kha_internal_BytesBlob.fromBytes(bytes43));
	kha_Shaders.painter_image_vert = new kha_graphics4_VertexShader(blobs43,["painter-image-webgl2.vert.essl"]);
	var blobs44 = [];
	var data44 = Reflect.field(kha_Shaders,"painter_text_fragData" + 0);
	var bytes44 = haxe_Unserializer.run(data44);
	blobs44.push(kha_internal_BytesBlob.fromBytes(bytes44));
	kha_Shaders.painter_text_frag = new kha_graphics4_FragmentShader(blobs44,["painter-text-webgl2.frag.essl"]);
	var blobs45 = [];
	var data45 = Reflect.field(kha_Shaders,"painter_text_vertData" + 0);
	var bytes45 = haxe_Unserializer.run(data45);
	blobs45.push(kha_internal_BytesBlob.fromBytes(bytes45));
	kha_Shaders.painter_text_vert = new kha_graphics4_VertexShader(blobs45,["painter-text-webgl2.vert.essl"]);
	var blobs46 = [];
	var data46 = Reflect.field(kha_Shaders,"painter_video_fragData" + 0);
	var bytes46 = haxe_Unserializer.run(data46);
	blobs46.push(kha_internal_BytesBlob.fromBytes(bytes46));
	kha_Shaders.painter_video_frag = new kha_graphics4_FragmentShader(blobs46,["painter-video-webgl2.frag.essl"]);
	var blobs47 = [];
	var data47 = Reflect.field(kha_Shaders,"painter_video_vertData" + 0);
	var bytes47 = haxe_Unserializer.run(data47);
	blobs47.push(kha_internal_BytesBlob.fromBytes(bytes47));
	kha_Shaders.painter_video_vert = new kha_graphics4_VertexShader(blobs47,["painter-video-webgl2.vert.essl"]);
	var blobs48 = [];
	var data48 = Reflect.field(kha_Shaders,"pass_vertData" + 0);
	var bytes48 = haxe_Unserializer.run(data48);
	blobs48.push(kha_internal_BytesBlob.fromBytes(bytes48));
	kha_Shaders.pass_vert = new kha_graphics4_VertexShader(blobs48,["pass-webgl2.vert.essl"]);
	var blobs49 = [];
	var data49 = Reflect.field(kha_Shaders,"pass_viewray_vertData" + 0);
	var bytes49 = haxe_Unserializer.run(data49);
	blobs49.push(kha_internal_BytesBlob.fromBytes(bytes49));
	kha_Shaders.pass_viewray_vert = new kha_graphics4_VertexShader(blobs49,["pass_viewray-webgl2.vert.essl"]);
	var blobs50 = [];
	var data50 = Reflect.field(kha_Shaders,"player_arrow_mat_006_mesh_fragData" + 0);
	var bytes50 = haxe_Unserializer.run(data50);
	blobs50.push(kha_internal_BytesBlob.fromBytes(bytes50));
	kha_Shaders.player_arrow_mat_006_mesh_frag = new kha_graphics4_FragmentShader(blobs50,["player_arrow_mat_006_mesh-webgl2.frag.essl"]);
	var blobs51 = [];
	var data51 = Reflect.field(kha_Shaders,"player_arrow_mat_008_mesh_fragData" + 0);
	var bytes51 = haxe_Unserializer.run(data51);
	blobs51.push(kha_internal_BytesBlob.fromBytes(bytes51));
	kha_Shaders.player_arrow_mat_008_mesh_frag = new kha_graphics4_FragmentShader(blobs51,["player_arrow_mat_008_mesh-webgl2.frag.essl"]);
	var blobs52 = [];
	var data52 = Reflect.field(kha_Shaders,"player_arrow_mat_009_mesh_fragData" + 0);
	var bytes52 = haxe_Unserializer.run(data52);
	blobs52.push(kha_internal_BytesBlob.fromBytes(bytes52));
	kha_Shaders.player_arrow_mat_009_mesh_frag = new kha_graphics4_FragmentShader(blobs52,["player_arrow_mat_009_mesh-webgl2.frag.essl"]);
	var blobs53 = [];
	var data53 = Reflect.field(kha_Shaders,"player_arrow_mat_mesh_fragData" + 0);
	var bytes53 = haxe_Unserializer.run(data53);
	blobs53.push(kha_internal_BytesBlob.fromBytes(bytes53));
	kha_Shaders.player_arrow_mat_mesh_frag = new kha_graphics4_FragmentShader(blobs53,["player_arrow_mat_mesh-webgl2.frag.essl"]);
	var blobs54 = [];
	var data54 = Reflect.field(kha_Shaders,"player_mat_001_mesh_fragData" + 0);
	var bytes54 = haxe_Unserializer.run(data54);
	blobs54.push(kha_internal_BytesBlob.fromBytes(bytes54));
	kha_Shaders.player_mat_001_mesh_frag = new kha_graphics4_FragmentShader(blobs54,["player_mat_001_mesh-webgl2.frag.essl"]);
	var blobs55 = [];
	var data55 = Reflect.field(kha_Shaders,"player_mat_002_mesh_fragData" + 0);
	var bytes55 = haxe_Unserializer.run(data55);
	blobs55.push(kha_internal_BytesBlob.fromBytes(bytes55));
	kha_Shaders.player_mat_002_mesh_frag = new kha_graphics4_FragmentShader(blobs55,["player_mat_002_mesh-webgl2.frag.essl"]);
	var blobs56 = [];
	var data56 = Reflect.field(kha_Shaders,"player_mat_003_mesh_fragData" + 0);
	var bytes56 = haxe_Unserializer.run(data56);
	blobs56.push(kha_internal_BytesBlob.fromBytes(bytes56));
	kha_Shaders.player_mat_003_mesh_frag = new kha_graphics4_FragmentShader(blobs56,["player_mat_003_mesh-webgl2.frag.essl"]);
	var blobs57 = [];
	var data57 = Reflect.field(kha_Shaders,"player_mat_armskin_mesh_fragData" + 0);
	var bytes57 = haxe_Unserializer.run(data57);
	blobs57.push(kha_internal_BytesBlob.fromBytes(bytes57));
	kha_Shaders.player_mat_armskin_mesh_frag = new kha_graphics4_FragmentShader(blobs57,["player_mat_armskin_mesh-webgl2.frag.essl"]);
	var blobs58 = [];
	var data58 = Reflect.field(kha_Shaders,"player_mat_mesh_fragData" + 0);
	var bytes58 = haxe_Unserializer.run(data58);
	blobs58.push(kha_internal_BytesBlob.fromBytes(bytes58));
	kha_Shaders.player_mat_mesh_frag = new kha_graphics4_FragmentShader(blobs58,["player_mat_mesh-webgl2.frag.essl"]);
	var blobs59 = [];
	var data59 = Reflect.field(kha_Shaders,"sky_mat_mesh_fragData" + 0);
	var bytes59 = haxe_Unserializer.run(data59);
	blobs59.push(kha_internal_BytesBlob.fromBytes(bytes59));
	kha_Shaders.sky_mat_mesh_frag = new kha_graphics4_FragmentShader(blobs59,["sky_mat_mesh-webgl2.frag.essl"]);
	var blobs60 = [];
	var data60 = Reflect.field(kha_Shaders,"sky_mat_mesh_vertData" + 0);
	var bytes60 = haxe_Unserializer.run(data60);
	blobs60.push(kha_internal_BytesBlob.fromBytes(bytes60));
	kha_Shaders.sky_mat_mesh_vert = new kha_graphics4_VertexShader(blobs60,["sky_mat_mesh-webgl2.vert.essl"]);
	var blobs61 = [];
	var data61 = Reflect.field(kha_Shaders,"sky_mid_mat_mesh_fragData" + 0);
	var bytes61 = haxe_Unserializer.run(data61);
	blobs61.push(kha_internal_BytesBlob.fromBytes(bytes61));
	kha_Shaders.sky_mid_mat_mesh_frag = new kha_graphics4_FragmentShader(blobs61,["sky_mid_mat_mesh-webgl2.frag.essl"]);
	var blobs62 = [];
	var data62 = Reflect.field(kha_Shaders,"sky_night_mat_mesh_fragData" + 0);
	var bytes62 = haxe_Unserializer.run(data62);
	blobs62.push(kha_internal_BytesBlob.fromBytes(bytes62));
	kha_Shaders.sky_night_mat_mesh_frag = new kha_graphics4_FragmentShader(blobs62,["sky_night_mat_mesh-webgl2.frag.essl"]);
	var blobs63 = [];
	var data63 = Reflect.field(kha_Shaders,"smaa_blend_weight_fragData" + 0);
	var bytes63 = haxe_Unserializer.run(data63);
	blobs63.push(kha_internal_BytesBlob.fromBytes(bytes63));
	kha_Shaders.smaa_blend_weight_frag = new kha_graphics4_FragmentShader(blobs63,["smaa_blend_weight-webgl2.frag.essl"]);
	var blobs64 = [];
	var data64 = Reflect.field(kha_Shaders,"smaa_blend_weight_vertData" + 0);
	var bytes64 = haxe_Unserializer.run(data64);
	blobs64.push(kha_internal_BytesBlob.fromBytes(bytes64));
	kha_Shaders.smaa_blend_weight_vert = new kha_graphics4_VertexShader(blobs64,["smaa_blend_weight-webgl2.vert.essl"]);
	var blobs65 = [];
	var data65 = Reflect.field(kha_Shaders,"smaa_edge_detect_fragData" + 0);
	var bytes65 = haxe_Unserializer.run(data65);
	blobs65.push(kha_internal_BytesBlob.fromBytes(bytes65));
	kha_Shaders.smaa_edge_detect_frag = new kha_graphics4_FragmentShader(blobs65,["smaa_edge_detect-webgl2.frag.essl"]);
	var blobs66 = [];
	var data66 = Reflect.field(kha_Shaders,"smaa_edge_detect_vertData" + 0);
	var bytes66 = haxe_Unserializer.run(data66);
	blobs66.push(kha_internal_BytesBlob.fromBytes(bytes66));
	kha_Shaders.smaa_edge_detect_vert = new kha_graphics4_VertexShader(blobs66,["smaa_edge_detect-webgl2.vert.essl"]);
	var blobs67 = [];
	var data67 = Reflect.field(kha_Shaders,"smaa_neighborhood_blend_fragData" + 0);
	var bytes67 = haxe_Unserializer.run(data67);
	blobs67.push(kha_internal_BytesBlob.fromBytes(bytes67));
	kha_Shaders.smaa_neighborhood_blend_frag = new kha_graphics4_FragmentShader(blobs67,["smaa_neighborhood_blend-webgl2.frag.essl"]);
	var blobs68 = [];
	var data68 = Reflect.field(kha_Shaders,"smaa_neighborhood_blend_vertData" + 0);
	var bytes68 = haxe_Unserializer.run(data68);
	blobs68.push(kha_internal_BytesBlob.fromBytes(bytes68));
	kha_Shaders.smaa_neighborhood_blend_vert = new kha_graphics4_VertexShader(blobs68,["smaa_neighborhood_blend-webgl2.vert.essl"]);
	var blobs69 = [];
	var data69 = Reflect.field(kha_Shaders,"ssao_pass_fragData" + 0);
	var bytes69 = haxe_Unserializer.run(data69);
	blobs69.push(kha_internal_BytesBlob.fromBytes(bytes69));
	kha_Shaders.ssao_pass_frag = new kha_graphics4_FragmentShader(blobs69,["ssao_pass-webgl2.frag.essl"]);
	var blobs70 = [];
	var data70 = Reflect.field(kha_Shaders,"translucent_resolve_fragData" + 0);
	var bytes70 = haxe_Unserializer.run(data70);
	blobs70.push(kha_internal_BytesBlob.fromBytes(bytes70));
	kha_Shaders.translucent_resolve_frag = new kha_graphics4_FragmentShader(blobs70,["translucent_resolve-webgl2.frag.essl"]);
	var blobs71 = [];
	var data71 = Reflect.field(kha_Shaders,"world_pass_fragData" + 0);
	var bytes71 = haxe_Unserializer.run(data71);
	blobs71.push(kha_internal_BytesBlob.fromBytes(bytes71));
	kha_Shaders.world_pass_frag = new kha_graphics4_FragmentShader(blobs71,["world_pass-webgl2.frag.essl"]);
	var blobs72 = [];
	var data72 = Reflect.field(kha_Shaders,"world_pass_vertData" + 0);
	var bytes72 = haxe_Unserializer.run(data72);
	blobs72.push(kha_internal_BytesBlob.fromBytes(bytes72));
	kha_Shaders.world_pass_vert = new kha_graphics4_VertexShader(blobs72,["world_pass-webgl2.vert.essl"]);
};
var kha_Sound = function() {
	this.length = 0;
};
$hxClasses["kha.Sound"] = kha_Sound;
kha_Sound.__name__ = "kha.Sound";
kha_Sound.__interfaces__ = [kha_Resource];
kha_Sound.prototype = {
	uncompress: function(done) {
		if(this.uncompressedData != null) {
			done();
			return;
		}
		var output = new haxe_io_BytesOutput();
		var header = kha_audio2_ogg_vorbis_Reader.readAll(this.compressedData,output,true);
		var soundBytes = output.getBytes();
		var count = soundBytes.length / 4 | 0;
		if(header.channel == 1) {
			this.length = count / kha_audio2_Audio.samplesPerSecond;
			var this1 = new Float32Array(count * 2);
			this.uncompressedData = this1;
			var _g = 0;
			var _g1 = count;
			while(_g < _g1) {
				var i = _g++;
				this.uncompressedData[i * 2] = soundBytes.getFloat(i * 4);
				this.uncompressedData[i * 2 + 1] = soundBytes.getFloat(i * 4);
			}
		} else {
			this.length = count / 2 / kha_audio2_Audio.samplesPerSecond;
			var this2 = new Float32Array(count);
			this.uncompressedData = this2;
			var _g2 = 0;
			var _g11 = count;
			while(_g2 < _g11) {
				var i1 = _g2++;
				this.uncompressedData[i1] = soundBytes.getFloat(i1 * 4);
			}
		}
		this.compressedData = null;
		done();
	}
	,__class__: kha_Sound
};
var kha_SystemOptions = function(title,width,height,$window,framebuffer) {
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	if(title == null) {
		title = "Kha";
	}
	this.framebuffer = null;
	this.window = null;
	this.height = -1;
	this.width = -1;
	this.title = "Kha";
	this.title = title;
	this.window = $window == null ? new kha_WindowOptions(null,null,null,null,null,null,null,null,null) : $window;
	if(width > 0) {
		this.window.width = width;
		this.width = width;
	} else {
		this.width = this.window.width;
	}
	if(height > 0) {
		this.window.height = height;
		this.height = height;
	} else {
		this.height = this.window.height;
	}
	if(this.window.title == null) {
		this.window.title = title;
	}
	this.framebuffer = framebuffer == null ? new kha_FramebufferOptions(null,null,null,null,null,null) : framebuffer;
};
$hxClasses["kha.SystemOptions"] = kha_SystemOptions;
kha_SystemOptions.__name__ = "kha.SystemOptions";
kha_SystemOptions.prototype = {
	__class__: kha_SystemOptions
};
var kha_System = function() { };
$hxClasses["kha.System"] = kha_System;
kha_System.__name__ = "kha.System";
kha_System.__properties__ = {get_time:"get_time"};
kha_System.start = function(options,callback) {
	kha_System.theTitle = options.title;
	kha_SystemImpl.init(options,callback);
};
kha_System.notifyOnFrames = function(listener) {
	kha_System.renderListeners.push(listener);
};
kha_System.notifyOnCutCopyPaste = function(cutListener,copyListener,pasteListener) {
	kha_System.cutListener = cutListener;
	kha_System.copyListener = copyListener;
	kha_System.pasteListener = pasteListener;
};
kha_System.render = function(framebuffers) {
	var _g = 0;
	var _g1 = kha_System.renderListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(framebuffers);
	}
};
kha_System.foreground = function() {
	var _g = 0;
	var _g1 = kha_System.foregroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.background = function() {
	var _g = 0;
	var _g1 = kha_System.backgroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.shutdown = function() {
	var _g = 0;
	var _g1 = kha_System.shutdownListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.get_time = function() {
	return kha_SystemImpl.getTime();
};
kha_System.windowWidth = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get($window).get_width();
};
kha_System.windowHeight = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get_all()[$window].get_height();
};
kha_System.stop = function() {
	return kha_SystemImpl.requestShutdown();
};
var kha_GamepadStates = function() {
	this.axes = [];
	this.buttons = [];
};
$hxClasses["kha.GamepadStates"] = kha_GamepadStates;
kha_GamepadStates.__name__ = "kha.GamepadStates";
kha_GamepadStates.prototype = {
	__class__: kha_GamepadStates
};
var kha_SystemImpl = function() { };
$hxClasses["kha.SystemImpl"] = kha_SystemImpl;
kha_SystemImpl.__name__ = "kha.SystemImpl";
kha_SystemImpl.init = function(options,callback) {
	kha_SystemImpl.options = options;
	kha_SystemImpl.mobile = kha_SystemImpl.isMobile();
	kha_SystemImpl.ios = kha_SystemImpl.isIOS();
	kha_SystemImpl.chrome = kha_SystemImpl.isChrome();
	kha_SystemImpl.firefox = kha_SystemImpl.isFirefox();
	kha_SystemImpl.ie = kha_SystemImpl.isIE();
	kha_SystemImpl.initSecondStep(callback);
};
kha_SystemImpl.initSecondStep = function(callback) {
	kha_SystemImpl.init2(kha_SystemImpl.options.window.width,kha_SystemImpl.options.window.height);
	callback(kha_SystemImpl.window);
};
kha_SystemImpl.isMobile = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Android") >= 0 || agent.indexOf("webOS") >= 0 || agent.indexOf("BlackBerry") >= 0 || agent.indexOf("Windows Phone") >= 0) {
		return true;
	}
	if(kha_SystemImpl.isIOS()) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIOS = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("iPhone") >= 0 || agent.indexOf("iPad") >= 0 || agent.indexOf("iPod") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isChrome = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Chrome") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isFirefox = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Firefox") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIE = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("MSIE ") >= 0 || agent.indexOf("Trident/") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.setCanvas = function(canvas) {
	kha_SystemImpl.khanvas = canvas;
};
kha_SystemImpl.getTime = function() {
	var performance = window.performance ? window.performance : window.Date;
	return performance.now() / 1000;
};
kha_SystemImpl.requestShutdown = function() {
	// !!! MANUAL EDIT. This isn't working, just go back to the pre-game page.
	quitGameCustom();
	// !!! MANUAL EDIT. removed.
	//window.close();
	return true;
};
kha_SystemImpl.init2 = function(defaultWidth,defaultHeight,backbufferFormat) {
	kha_SystemImpl.keyboard = new kha_input_Keyboard();
	kha_SystemImpl.mouse = new kha_input_MouseImpl();
	kha_SystemImpl.surface = new kha_input_Surface();
	kha_SystemImpl.gamepads = [];
	kha_SystemImpl.gamepadStates = [];
	kha_SystemImpl.gamepads[0] = new kha_input_Gamepad(0);
	kha_SystemImpl.gamepadStates[0] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[1] = new kha_input_Gamepad(1);
	kha_SystemImpl.gamepadStates[1] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[2] = new kha_input_Gamepad(2);
	kha_SystemImpl.gamepadStates[2] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[3] = new kha_input_Gamepad(3);
	kha_SystemImpl.gamepadStates[3] = new kha_GamepadStates();
	window.addEventListener("gamepadconnected",function(e) {
		kha_input_Gamepad.sendConnectEvent(e.gamepad.index);
	});
	window.addEventListener("gamepaddisconnected",function(e1) {
		kha_input_Gamepad.sendDisconnectEvent(e1.gamepad.index);
	});
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			kha_SystemImpl.pressedKeys.push(false);
		}
		var _g1 = 0;
		while(_g1 < 256) {
			var i1 = _g1++;
			kha_SystemImpl.pressedKeys.push(null);
		}
	}
	var onCopy = function(e2) {
		if(kha_System.copyListener != null) {
			var data = kha_System.copyListener();
			if(data != null) {
				e2.clipboardData.setData("text/plain",data);
			}
			e2.preventDefault();
		}
	};
	var onCut = function(e3) {
		if(kha_System.cutListener != null) {
			var data1 = kha_System.cutListener();
			if(data1 != null) {
				e3.clipboardData.setData("text/plain",data1);
			}
			e3.preventDefault();
		}
	};
	var onPaste = function(e4) {
		if(kha_System.pasteListener != null) {
			var onPaste1 = e4.clipboardData.getData("text/plain");
			kha_System.pasteListener(onPaste1);
			e4.preventDefault();
		}
	};
	var document = window.document;
	document.addEventListener("copy",onCopy);
	document.addEventListener("cut",onCut);
	document.addEventListener("paste",onPaste);
	if(kha_SystemImpl.firefox) {
		var canvas = kha_SystemImpl.getCanvasElement();
		var onPreTextEvents = function(e5) {
			if(!(e5.ctrlKey || e5.metaKey)) {
				return;
			}
			var isEvent = e5.keyCode == 67 || e5.keyCode == 88 || e5.keyCode == 86;
			if(!isEvent) {
				return;
			}
			var input = document.createElement("textarea");
			var onEvent = function(e6) {
				document.body.removeChild(input);
				canvas.focus();
			};
			if(e5.keyCode == 67) {
				input.oncopy = onEvent;
			} else if(e5.keyCode == 88) {
				input.oncut = onEvent;
			} else if(e5.keyCode == 86) {
				input.onpaste = onEvent;
			}
			document.body.appendChild(input);
			input.select();
		};
		canvas.addEventListener("keydown",onPreTextEvents);
	}
	kha_CanvasImage.init();
	kha_Scheduler.init();
	kha_SystemImpl.loadFinished(defaultWidth,defaultHeight);
};
kha_SystemImpl.getMouse = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.mouse;
};
kha_SystemImpl.getKeyboard = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.keyboard;
};
kha_SystemImpl.checkGamepad = function(pad) {
	var _g = 0;
	var _g1 = pad.axes.length;
	while(_g < _g1) {
		var i = _g++;
		if(pad.axes[i] != null) {
			var axis = pad.axes[i];
			if(i % 2 == 1) {
				axis = -axis;
			}
			if(kha_SystemImpl.gamepadStates[pad.index].axes[i] != axis) {
				kha_SystemImpl.gamepadStates[pad.index].axes[i] = axis;
				kha_SystemImpl.gamepads[pad.index].sendAxisEvent(i,axis);
			}
		}
	}
	var _g2 = 0;
	var _g3 = pad.buttons.length;
	while(_g2 < _g3) {
		var i1 = _g2++;
		if(pad.buttons[i1] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].buttons[i1] != pad.buttons[i1].value) {
				kha_SystemImpl.gamepadStates[pad.index].buttons[i1] = pad.buttons[i1].value;
				kha_SystemImpl.gamepads[pad.index].sendButtonEvent(i1,pad.buttons[i1].value);
			}
		}
	}
	if(pad.axes.length <= 4 && pad.buttons.length > 7) {
		kha_SystemImpl.gamepadStates[pad.index].axes[4] = pad.buttons[6].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(4,pad.buttons[6].value);
		kha_SystemImpl.gamepadStates[pad.index].axes[5] = pad.buttons[7].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(5,pad.buttons[7].value);
	}
};
kha_SystemImpl.getCanvasElement = function() {
	if(kha_SystemImpl.khanvas != null) {
		return kha_SystemImpl.khanvas;
	}
	return window.document.getElementById(kha_CompilerDefines.canvas_id);
};
kha_SystemImpl.loadFinished = function(defaultWidth,defaultHeight) {
	var canvas = kha_SystemImpl.getCanvasElement();
	canvas.style.cursor = "default";
	var gl = false;
	try {
		kha_SystemImpl.gl = canvas.getContext("webgl2",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
		kha_SystemImpl.gl.pixelStorei(37441,1);
		kha_SystemImpl.halfFloat = { HALF_FLOAT_OES : 5131};
		kha_SystemImpl.depthTexture = { UNSIGNED_INT_24_8_WEBGL : 34042};
		kha_SystemImpl.drawBuffers = { COLOR_ATTACHMENT0_WEBGL : 36064};
		kha_SystemImpl.elementIndexUint = true;
		kha_SystemImpl.gl.getExtension("EXT_color_buffer_float");
		kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
		kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
		kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
		if(kha_SystemImpl.anisotropicFilter == null) {
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
		}
		gl = true;
		kha_SystemImpl.gl2 = true;
		kha_Shaders.init();
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		haxe_Log.trace("Could not initialize WebGL 2, falling back to WebGL.",{ fileName : "kha/SystemImpl.hx", lineNumber : 354, className : "kha.SystemImpl", methodName : "loadFinished"});
	}
	if(!kha_SystemImpl.gl2) {
		try {
			kha_SystemImpl.gl = canvas.getContext("experimental-webgl",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
			kha_SystemImpl.gl.pixelStorei(37441,1);
			kha_SystemImpl.gl.getExtension("OES_texture_float");
			kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
			kha_SystemImpl.halfFloat = kha_SystemImpl.gl.getExtension("OES_texture_half_float");
			kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
			kha_SystemImpl.depthTexture = kha_SystemImpl.gl.getExtension("WEBGL_depth_texture");
			kha_SystemImpl.gl.getExtension("EXT_shader_texture_lod");
			kha_SystemImpl.gl.getExtension("OES_standard_derivatives");
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
			if(kha_SystemImpl.anisotropicFilter == null) {
				kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
			}
			kha_SystemImpl.drawBuffers = kha_SystemImpl.gl.getExtension("WEBGL_draw_buffers");
			kha_SystemImpl.elementIndexUint = kha_SystemImpl.gl.getExtension("OES_element_index_uint");
			gl = true;
			kha_Shaders.init();
		} catch( e2 ) {
			var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
			haxe_Log.trace("Could not initialize WebGL, falling back to <canvas>.",{ fileName : "kha/SystemImpl.hx", lineNumber : 376, className : "kha.SystemImpl", methodName : "loadFinished"});
		}
	}
	kha_SystemImpl.setCanvas(canvas);
	kha_SystemImpl.window = new kha_Window(defaultWidth,defaultHeight,canvas);
	if(gl) {
		var g4 = new kha_js_graphics4_Graphics();
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,null,g4);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),new kha_js_graphics4_Graphics2(kha_SystemImpl.frame),g4);
	} else {
		kha_js_Font.Kravur = kha_Kravur; kha_Kravur = kha_js_Font;
		var g2 = new kha_js_CanvasGraphics(canvas.getContext("2d"));
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,g2,null);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),g2,null);
	}
	if(!kha_SystemImpl.mobile && kha_audio2_Audio._init()) {
		kha_SystemImpl._hasWebAudio = true;
		kha_audio2_Audio1._init();
	} else if(kha_SystemImpl.mobile) {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_MobileWebAudio._init();
		kha_audio2_Audio1 = kha_js_MobileWebAudio;
	} else {
		kha_SystemImpl._hasWebAudio = false;
		kha_audio2_Audio1 = kha_js_AudioElementAudio;
	}
	kha_vr_VrInterface.instance = new kha_js_vr_VrInterface();
	kha_Scheduler.start();
	var $window = window;
	var requestAnimationFrame = $window.requestAnimationFrame;
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.mozRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.webkitRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.msRequestAnimationFrame;
	}
	var animate = null;
	animate = function(timestamp) {
		var window1 = window;
		if(requestAnimationFrame == null) {
			window1.setTimeout(animate,16.666666666666668);
		} else {
			requestAnimationFrame(animate);
		}
		var sysGamepads = kha_SystemImpl.getGamepads();
		if(sysGamepads != null) {
			var _g = 0;
			var _g1 = sysGamepads.length;
			while(_g < _g1) {
				var i = _g++;
				var pad = sysGamepads[i];
				if(pad != null) {
					kha_SystemImpl.checkGamepad(pad);
				}
			}
		}
		kha_Scheduler.executeFrame();
		if($bind(canvas,canvas.getContext)) {
			var displayWidth = canvas.clientWidth;
			var displayHeight = canvas.clientHeight;
			if(canvas.width != displayWidth || canvas.height != displayHeight) {
				canvas.width = displayWidth;
				canvas.height = displayHeight;
			}
			kha_System.render([kha_SystemImpl.frame]);
			if(kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.clearColor(1,1,1,1);
				kha_SystemImpl.gl.colorMask(false,false,false,true);
				kha_SystemImpl.gl.clear(16384);
				kha_SystemImpl.gl.colorMask(true,true,true,true);
			}
		}
	};
	if(requestAnimationFrame == null) {
		$window.setTimeout(animate,16.666666666666668);
	} else {
		requestAnimationFrame(animate);
	}
	canvas.focus();
	canvas.oncontextmenu = function(event) {
		event.stopPropagation();
		event.preventDefault();
	};
	canvas.onmousedown = kha_SystemImpl.mouseDown;
	canvas.onmousemove = kha_SystemImpl.mouseMove;
	if(kha_SystemImpl.keyboard != null) {
		canvas.onkeydown = kha_SystemImpl.keyDown;
		canvas.onkeyup = kha_SystemImpl.keyUp;
		canvas.onkeypress = kha_SystemImpl.keyPress;
	}
	canvas.onblur = kha_SystemImpl.onBlur;
	canvas.onfocus = kha_SystemImpl.onFocus;
	canvas.onmousewheel = canvas.onwheel = kha_SystemImpl.mouseWheel;
	canvas.onmouseleave = kha_SystemImpl.mouseLeave;
	canvas.addEventListener("wheel mousewheel",kha_SystemImpl.mouseWheel,false);
	canvas.addEventListener("touchstart",kha_SystemImpl.touchDown,false);
	canvas.addEventListener("touchend",kha_SystemImpl.touchUp,false);
	canvas.addEventListener("touchmove",kha_SystemImpl.touchMove,false);
	canvas.addEventListener("touchcancel",kha_SystemImpl.touchCancel,false);
	window.addEventListener("unload",function() {
		kha_System.shutdown();
	});
};
kha_SystemImpl.lockMouse = function() {
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.requestPointerLock))) {
		kha_SystemImpl.khanvas.requestPointerLock();
	} else if(kha_SystemImpl.khanvas.mozRequestPointerLock) {
		kha_SystemImpl.khanvas.mozRequestPointerLock();
	} else if(kha_SystemImpl.khanvas.webkitRequestPointerLock) {
		kha_SystemImpl.khanvas.webkitRequestPointerLock();
	}
};
kha_SystemImpl.unlockMouse = function() {
	if(document.exitPointerLock) {
		document.exitPointerLock();
	} else if(document.mozExitPointerLock) {
		document.mozExitPointerLock();
	} else if(document.webkitExitPointerLock) {
		document.webkitExitPointerLock();
	}
};
kha_SystemImpl.canLockMouse = function() {
	return 'pointerLockElement' in document ||
		'mozPointerLockElement' in document ||
		'webkitPointerLockElement' in document;
};
kha_SystemImpl.isMouseLocked = function() {
	return document.pointerLockElement === kha_SystemImpl.khanvas ||
			document.mozPointerLockElement === kha_SystemImpl.khanvas ||
			document.webkitPointerLockElement === kha_SystemImpl.khanvas;
};
kha_SystemImpl.notifyOfMouseLockChange = function(func,error) {
	window.document.addEventListener("pointerlockchange",func,false);
	window.document.addEventListener("mozpointerlockchange",func,false);
	window.document.addEventListener("webkitpointerlockchange",func,false);
	window.document.addEventListener("pointerlockerror",error,false);
	window.document.addEventListener("mozpointerlockerror",error,false);
	window.document.addEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.removeFromMouseLockChange = function(func,error) {
	window.document.removeEventListener("pointerlockchange",func,false);
	window.document.removeEventListener("mozpointerlockchange",func,false);
	window.document.removeEventListener("webkitpointerlockchange",func,false);
	window.document.removeEventListener("pointerlockerror",error,false);
	window.document.removeEventListener("mozpointerlockerror",error,false);
	window.document.removeEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.setMouseXY = function(event) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.mouseX = (event.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.mouseY = (event.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.unlockiOSSound = function() {
	if(!kha_SystemImpl.ios || kha_SystemImpl.iosSoundEnabled) {
		return;
	}
	var buffer = kha_js_MobileWebAudio._context.createBuffer(1,1,22050);
	var source = kha_js_MobileWebAudio._context.createBufferSource();
	source.buffer = buffer;
	source.connect(kha_js_MobileWebAudio._context.destination);
	source.start();
	source.stop();
	kha_SystemImpl.iosSoundEnabled = true;
};
kha_SystemImpl.unlockSound = function() {
	if(!kha_SystemImpl.soundEnabled) {
		var context = kha_audio2_Audio._context;
		if(context == null) {
			context = kha_audio2_Audio1._context;
		}
		if(context != null) {
			context.resume().then(function(c) {
				kha_SystemImpl.soundEnabled = true;
			})["catch"](function(err) {
				haxe_Log.trace(err,{ fileName : "kha/SystemImpl.hx", lineNumber : 615, className : "kha.SystemImpl", methodName : "unlockSound"});
			});
		}
	}
	kha_SystemImpl.unlockiOSSound();
};
kha_SystemImpl.mouseLeave = function() {
	kha_SystemImpl.mouse.sendLeaveEvent(0);
};
kha_SystemImpl.mouseWheel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	event.preventDefault();
	if(event.deltaMode == 0) {
		if(event.deltaY < 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,-1);
		} else if(event.deltaY > 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,1);
		}
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	if(event.deltaMode == 1) {
		kha_SystemImpl.minimumScroll = Math.min(kha_SystemImpl.minimumScroll,Math.abs(event.deltaY)) | 0;
		kha_SystemImpl.mouse.sendWheelEvent(0,event.deltaY / kha_SystemImpl.minimumScroll | 0);
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	kha_SystemImpl.insideInputEvent = false;
	return false;
};
kha_SystemImpl.mouseDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.setMouseXY(event);
	if(event.which == 1) {
		if(event.ctrlKey) {
			kha_SystemImpl.leftMouseCtrlDown = true;
			kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		} else {
			kha_SystemImpl.leftMouseCtrlDown = false;
			kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		}
		if(kha_SystemImpl.khanvas.setCapture != null) {
			kha_SystemImpl.khanvas.setCapture();
		} else {
			kha_SystemImpl.khanvas.ownerDocument.addEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
		}
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	} else if(event.which == 2) {
		kha_SystemImpl.mouse.sendDownEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	} else if(event.which == 3) {
		kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseLeftUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 1) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	if(kha_SystemImpl.khanvas.releaseCapture != null) {
		kha_SystemImpl.khanvas.ownerDocument.releaseCapture();
	} else {
		kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
	}
	if(kha_SystemImpl.leftMouseCtrlDown) {
		kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	} else {
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	}
	kha_SystemImpl.leftMouseCtrlDown = false;
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMiddleUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 2) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	kha_SystemImpl.mouse.sendUpEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseRightUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 3) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.documentMouseMove = function(event) {
	event.stopPropagation();
	kha_SystemImpl.mouseMove(event);
};
kha_SystemImpl.mouseMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	var lastMouseX = kha_SystemImpl.mouseX;
	var lastMouseY = kha_SystemImpl.mouseY;
	kha_SystemImpl.setMouseXY(event);
	var movementX = event.movementX;
	var movementY = event.movementY;
	if(event.movementX == null) {
		movementX = event.mozMovementX != null ? event.mozMovementX : event.webkitMovementX != null ? event.webkitMovementX : kha_SystemImpl.mouseX - lastMouseX;
		movementY = event.mozMovementY != null ? event.mozMovementY : event.webkitMovementY != null ? event.webkitMovementY : kha_SystemImpl.mouseY - lastMouseY;
	}
	if(kha_SystemImpl.firefox) {
		movementX = movementX * window.devicePixelRatio | 0;
		movementY = movementY * window.devicePixelRatio | 0;
	}
	kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY,movementX,movementY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.setTouchXY = function(touch) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.touchX = (touch.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.touchY = (touch.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.touchDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.stopPropagation();
	event.preventDefault();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(-1);
			if(id == -1) {
				id = kha_SystemImpl.iosTouchs.length;
			}
			kha_SystemImpl.iosTouchs[id] = touch.identifier;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchStartEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
			kha_SystemImpl.iosTouchs[id] = -1;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		if(index == 0) {
			var movementX = kha_SystemImpl.touchX - kha_SystemImpl.lastFirstTouchX;
			var movementY = kha_SystemImpl.touchY - kha_SystemImpl.lastFirstTouchY;
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
			kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.touchX,kha_SystemImpl.touchY,movementX,movementY);
		}
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.surface.sendMoveEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchCancel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.iosTouchs = [];
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.onBlur = function() {
	kha_System.background();
};
kha_SystemImpl.onFocus = function() {
	kha_System.foreground();
};
kha_SystemImpl.keyDown = function(event) {
	if((event.keyCode < 112 || event.keyCode > 123) && (event.key != null && event.key.length != 1)) {
		event.preventDefault();
	}
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		if(kha_SystemImpl.pressedKeys[event.keyCode]) {
			event.preventDefault();
			return;
		}
		kha_SystemImpl.pressedKeys[event.keyCode] = true;
	} else if(event.repeat) {
		event.preventDefault();
		return;
	}
	kha_SystemImpl.keyboard.sendDownEvent(event.keyCode);
};
kha_SystemImpl.keyUp = function(event) {
	event.preventDefault();
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys[event.keyCode] = false;
	}
	kha_SystemImpl.keyboard.sendUpEvent(event.keyCode);
};
kha_SystemImpl.keyPress = function(event) {
	if(event.which == 0) {
		return;
	}
	event.preventDefault();
	event.stopPropagation();
	var code = event.which;
	kha_SystemImpl.keyboard.sendPressEvent(String.fromCodePoint(code));
};
kha_SystemImpl.getGamepadId = function(index) {
	var sysGamepads = kha_SystemImpl.getGamepads();
	if(sysGamepads != null && sysGamepads[index]) {
		return sysGamepads[index].id;
	}
	return "unkown";
};
kha_SystemImpl.getGamepads = function() {
	if(kha_SystemImpl.chrome && kha_vr_VrInterface.instance.IsVrEnabled()) {
		return null;
	}
	if(navigator.getGamepads) {
		return window.navigator.getGamepads();
	} else {
		return null;
	}
};
kha_SystemImpl.getPen = function(num) {
	return null;
};
var kha_Video = function() { };
$hxClasses["kha.Video"] = kha_Video;
kha_Video.__name__ = "kha.Video";
kha_Video.__interfaces__ = [kha_Resource];
kha_Video.prototype = {
	__class__: kha_Video
};
var kha_WebGLImage = function(width,height,format,renderTarget,depthStencilFormat,samples) {
	this.depthTexture = null;
	this.texture = null;
	this.renderBuffer = null;
	this.frameBuffer = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.samples = samples;
	this.image = null;
	this.video = null;
	this.depthStencilFormat = depthStencilFormat;
	kha_WebGLImage.init();
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.WebGLImage"] = kha_WebGLImage;
kha_WebGLImage.__name__ = "kha.WebGLImage";
kha_WebGLImage.init = function() {
	if(kha_WebGLImage.context == null) {
		kha_WebGLImage.canvas = window.document.createElement("canvas");
		if(kha_WebGLImage.canvas != null) {
			kha_WebGLImage.context = kha_WebGLImage.canvas.getContext("2d");
			kha_WebGLImage.canvas.width = 4096;
			kha_WebGLImage.canvas.height = 4096;
			kha_WebGLImage.context.globalCompositeOperation = "copy";
		}
	}
};
kha_WebGLImage.formatByteSize = function(format) {
	switch(format) {
	case 0:
		return 4;
	case 1:
		return 1;
	case 2:
		return 16;
	case 3:
		return 2;
	case 4:
		return 8;
	case 5:
		return 4;
	case 6:
		return 2;
	default:
		return 4;
	}
};
kha_WebGLImage.__super__ = kha_Image;
kha_WebGLImage.prototype = $extend(kha_Image.prototype,{
	get_g2: function() {
		if(this.graphics2 == null) {
			this.graphics2 = new kha_js_graphics4_Graphics2(this);
		}
		return this.graphics2;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.format) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			}
			if(this.format == 3) {
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.texture,0);
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(3553,colortex);
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,colortex,0);
					kha_SystemImpl.gl.bindTexture(3553,this.texture);
				}
			} else {
				kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			if(kha_SystemImpl.gl.checkFramebufferStatus(36160) != 36053) {
				haxe_Log.trace("WebGL error: Framebuffer incomplete",{ fileName : "kha/WebGLImage.hx", lineNumber : 225, className : "kha.WebGLImage", methodName : "createTexture"});
			}
			kha_SystemImpl.gl.bindRenderbuffer(36161,null);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			switch(this.format) {
			case 0:
				if(((this.image) instanceof Uint8Array)) {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,5121,this.image);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
				}
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.myWidth,this.myHeight,0,6409,5121,this.image);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,this.image);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.image);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
			}
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,33189,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				if(depthStencilFormat == 1) {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5125,null);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				}
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
			}
			break;
		case 2:case 3:case 4:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,34041,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.get_realWidth(),this.get_realHeight(),0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,33306,3553,this.depthTexture,0);
			}
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,setDepth: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
	}
	,setDepthStencilFrom: function(image) {
		this.depthTexture = (js_Boot.__cast(image , kha_WebGLImage)).depthTexture;
		kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
	}
	,bytesToArray: function(bytes) {
		switch(this.format) {
		case 0:case 1:
			return new Uint8Array(bytes.b.bufferValue);
		case 2:case 4:case 5:case 6:
			return new Float32Array(bytes.b.bufferValue);
		default:
			return new Uint8Array(bytes.b.bufferValue);
		}
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			switch(this.format) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,this.bytesToArray(this.bytes));
				if(kha_SystemImpl.gl.getError() == 1282) {
					var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
					var _g = 0;
					var _g1 = this.get_height();
					while(_g < _g1) {
						var y = _g++;
						var _g2 = 0;
						var _g11 = this.get_width();
						while(_g2 < _g11) {
							var x = _g2++;
							var _this = this.bytes;
							var pos = y * this.get_width() + x;
							var value = _this.b[pos];
							var pos1 = y * this.get_width() * 4 + x * 4;
							rgbaBytes.b[pos1] = value;
							var pos2 = y * this.get_width() * 4 + x * 4 + 1;
							rgbaBytes.b[pos2] = value;
							var pos3 = y * this.get_width() * 4 + x * 4 + 2;
							rgbaBytes.b[pos3] = value;
							var pos4 = y * this.get_width() * 4 + x * 4 + 3;
							rgbaBytes.b[pos4] = 255;
						}
					}
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(rgbaBytes));
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_width(),this.get_height(),0,6408,5126,this.bytesToArray(this.bytes));
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_width(),this.get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.bytesToArray(this.bytes));
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		if(this.texture != null) {
			kha_SystemImpl.gl.deleteTexture(this.texture);
		}
		if(this.depthTexture != null) {
			kha_SystemImpl.gl.deleteTexture(this.depthTexture);
		}
		if(this.frameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.frameBuffer);
		}
		if(this.renderBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.renderBuffer);
		}
	}
	,generateMipmaps: function(levels) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.generateMipmap(3553);
	}
	,setMipmaps: function(mipmaps) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.format == 2) {
			var _g = 0;
			var _g1 = mipmaps.length;
			while(_g < _g1) {
				var i = _g++;
				kha_SystemImpl.gl.texImage2D(3553,i + 1,kha_SystemImpl.gl2 ? 34836 : 6408,mipmaps[i].get_width(),mipmaps[i].get_height(),0,6408,5126,(js_Boot.__cast(mipmaps[i] , kha_WebGLImage)).image);
			}
		} else if(this.format == 4) {
			var _g2 = 0;
			var _g11 = mipmaps.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				kha_SystemImpl.gl.texImage2D(3553,i1 + 1,kha_SystemImpl.gl2 ? 34842 : 6408,mipmaps[i1].get_width(),mipmaps[i1].get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,(js_Boot.__cast(mipmaps[i1] , kha_WebGLImage)).image);
			}
		} else {
			var _g3 = 0;
			var _g12 = mipmaps.length;
			while(_g3 < _g12) {
				var i2 = _g3++;
				kha_SystemImpl.gl.texImage2D(3553,i2 + 1,6408,6408,5121,(js_Boot.__cast(mipmaps[i2] , kha_WebGLImage)).image);
			}
		}
	}
	,__class__: kha_WebGLImage
});
var kha_Window = function(defaultWidth,defaultHeight,canvas) {
	this.canvas = canvas;
	this.defaultWidth = defaultWidth;
	this.defaultHeight = defaultHeight;
	kha_Window.windows.push(this);
};
$hxClasses["kha.Window"] = kha_Window;
kha_Window.__name__ = "kha.Window";
kha_Window.__properties__ = {get_all:"get_all"};
kha_Window.get = function(index) {
	return kha_Window.windows[index];
};
kha_Window.get_all = function() {
	return kha_Window.windows;
};
kha_Window.prototype = {
	get_width: function() {
		if(this.canvas.clientWidth == 0) {
			return this.defaultWidth;
		} else {
			return this.canvas.clientWidth;
		}
	}
	,get_height: function() {
		if(this.canvas.clientHeight == 0) {
			return this.defaultHeight;
		} else {
			return this.canvas.clientHeight;
		}
	}
	,get_vSynced: function() {
		return true;
	}
	,__class__: kha_Window
	,__properties__: {get_vSynced:"get_vSynced",get_height:"get_height",get_width:"get_width"}
};
var kha_WindowOptions = function(title,x,y,width,height,display,visible,windowFeatures,mode) {
	if(mode == null) {
		mode = 0;
	}
	if(visible == null) {
		visible = true;
	}
	if(height == null) {
		height = 600;
	}
	if(width == null) {
		width = 800;
	}
	if(y == null) {
		y = -1;
	}
	if(x == null) {
		x = -1;
	}
	this.mode = 0;
	this.windowFeatures = 1 | 4 | 2;
	this.visible = true;
	this.display = null;
	this.height = 600;
	this.width = 800;
	this.y = -1;
	this.x = -1;
	this.title = null;
	this.title = title;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.display = display == null ? kha_Display.get_primary() : display;
	this.visible = visible;
	this.windowFeatures = windowFeatures == null ? 1 | 4 | 2 : windowFeatures;
	this.mode = mode;
};
$hxClasses["kha.WindowOptions"] = kha_WindowOptions;
kha_WindowOptions.__name__ = "kha.WindowOptions";
kha_WindowOptions.prototype = {
	__class__: kha_WindowOptions
};
var kha_audio1_AudioChannel = function() { };
$hxClasses["kha.audio1.AudioChannel"] = kha_audio1_AudioChannel;
kha_audio1_AudioChannel.__name__ = "kha.audio1.AudioChannel";
kha_audio1_AudioChannel.prototype = {
	__class__: kha_audio1_AudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume"}
};
var kha_audio2_Audio = function() { };
$hxClasses["kha.audio2.Audio"] = kha_audio2_Audio;
kha_audio2_Audio.__name__ = "kha.audio2.Audio";
kha_audio2_Audio.initContext = function() {
	try {
		kha_audio2_Audio._context = new AudioContext();
		return;
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e2 ) {
		var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
	}
};
kha_audio2_Audio._init = function() {
	kha_audio2_Audio.initContext();
	if(kha_audio2_Audio._context == null) {
		return false;
	}
	var bufferSize = 2048;
	kha_audio2_Audio.buffer = new kha_audio2_Buffer(bufferSize * 4,2,kha_audio2_Audio._context.sampleRate | 0);
	kha_audio2_Audio.processingNode = kha_audio2_Audio._context.createScriptProcessor(bufferSize,0,2);
	kha_audio2_Audio.processingNode.onaudioprocess = function(e) {
		var output1 = e.outputBuffer.getChannelData(0);
		var output2 = e.outputBuffer.getChannelData(1);
		if(kha_audio2_Audio.audioCallback != null) {
			kha_audio2_Audio.audioCallback(e.outputBuffer.length * 2,kha_audio2_Audio.buffer);
			var _g = 0;
			var _g1 = e.outputBuffer.length;
			while(_g < _g1) {
				var i = _g++;
				output1[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				output2[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				if(kha_audio2_Audio.buffer.readLocation >= kha_audio2_Audio.buffer.size) {
					kha_audio2_Audio.buffer.readLocation = 0;
				}
			}
		} else {
			var _g2 = 0;
			var _g11 = e.outputBuffer.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				output1[i1] = 0;
				output2[i1] = 0;
			}
		}
	};
	kha_audio2_Audio.processingNode.connect(kha_audio2_Audio._context.destination);
	return true;
};
kha_audio2_Audio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var element = window.document.createElement("audio");
	var blob = new Blob([sound.compressedData.b.bufferValue],{ type : "audio/mp4"});
	element.src = URL.createObjectURL(blob);
	element.loop = loop;
	var channel = new kha_js_AEAudioChannel(element);
	channel.play();
	return channel;
};
var kha_audio2_Audio1 = function() { };
$hxClasses["kha.audio2.Audio1"] = kha_audio2_Audio1;
kha_audio2_Audio1.__name__ = "kha.audio2.Audio1";
kha_audio2_Audio1._init = function() {
	var this1 = new Array(16);
	kha_audio2_Audio1.soundChannels = this1;
	var this2 = new Array(16);
	kha_audio2_Audio1.streamChannels = this2;
	var this3 = new Array(16);
	kha_audio2_Audio1.internalSoundChannels = this3;
	var this4 = new Array(16);
	kha_audio2_Audio1.internalStreamChannels = this4;
	var this5 = new Float32Array(512);
	kha_audio2_Audio1.sampleCache1 = this5;
	var this6 = new Float32Array(512);
	kha_audio2_Audio1.sampleCache2 = this6;
	kha_audio2_Audio.audioCallback = kha_audio2_Audio1.mix;
};
kha_audio2_Audio1.mix = function(samples,buffer) {
	if(kha_audio2_Audio1.sampleCache1.length < samples) {
		var this1 = new Float32Array(samples);
		kha_audio2_Audio1.sampleCache1 = this1;
		var this2 = new Float32Array(samples);
		kha_audio2_Audio1.sampleCache2 = this2;
	}
	var _g = 0;
	var _g1 = samples;
	while(_g < _g1) {
		var i = _g++;
		kha_audio2_Audio1.sampleCache2[i] = 0;
	}
	kha_audio2_Audio1.internalSoundChannels[0] = kha_audio2_Audio1.soundChannels[0];
	kha_audio2_Audio1.internalSoundChannels[1] = kha_audio2_Audio1.soundChannels[1];
	kha_audio2_Audio1.internalSoundChannels[2] = kha_audio2_Audio1.soundChannels[2];
	kha_audio2_Audio1.internalSoundChannels[3] = kha_audio2_Audio1.soundChannels[3];
	kha_audio2_Audio1.internalSoundChannels[4] = kha_audio2_Audio1.soundChannels[4];
	kha_audio2_Audio1.internalSoundChannels[5] = kha_audio2_Audio1.soundChannels[5];
	kha_audio2_Audio1.internalSoundChannels[6] = kha_audio2_Audio1.soundChannels[6];
	kha_audio2_Audio1.internalSoundChannels[7] = kha_audio2_Audio1.soundChannels[7];
	kha_audio2_Audio1.internalSoundChannels[8] = kha_audio2_Audio1.soundChannels[8];
	kha_audio2_Audio1.internalSoundChannels[9] = kha_audio2_Audio1.soundChannels[9];
	kha_audio2_Audio1.internalSoundChannels[10] = kha_audio2_Audio1.soundChannels[10];
	kha_audio2_Audio1.internalSoundChannels[11] = kha_audio2_Audio1.soundChannels[11];
	kha_audio2_Audio1.internalSoundChannels[12] = kha_audio2_Audio1.soundChannels[12];
	kha_audio2_Audio1.internalSoundChannels[13] = kha_audio2_Audio1.soundChannels[13];
	kha_audio2_Audio1.internalSoundChannels[14] = kha_audio2_Audio1.soundChannels[14];
	kha_audio2_Audio1.internalSoundChannels[15] = kha_audio2_Audio1.soundChannels[15];
	kha_audio2_Audio1.internalStreamChannels[0] = kha_audio2_Audio1.streamChannels[0];
	kha_audio2_Audio1.internalStreamChannels[1] = kha_audio2_Audio1.streamChannels[1];
	kha_audio2_Audio1.internalStreamChannels[2] = kha_audio2_Audio1.streamChannels[2];
	kha_audio2_Audio1.internalStreamChannels[3] = kha_audio2_Audio1.streamChannels[3];
	kha_audio2_Audio1.internalStreamChannels[4] = kha_audio2_Audio1.streamChannels[4];
	kha_audio2_Audio1.internalStreamChannels[5] = kha_audio2_Audio1.streamChannels[5];
	kha_audio2_Audio1.internalStreamChannels[6] = kha_audio2_Audio1.streamChannels[6];
	kha_audio2_Audio1.internalStreamChannels[7] = kha_audio2_Audio1.streamChannels[7];
	kha_audio2_Audio1.internalStreamChannels[8] = kha_audio2_Audio1.streamChannels[8];
	kha_audio2_Audio1.internalStreamChannels[9] = kha_audio2_Audio1.streamChannels[9];
	kha_audio2_Audio1.internalStreamChannels[10] = kha_audio2_Audio1.streamChannels[10];
	kha_audio2_Audio1.internalStreamChannels[11] = kha_audio2_Audio1.streamChannels[11];
	kha_audio2_Audio1.internalStreamChannels[12] = kha_audio2_Audio1.streamChannels[12];
	kha_audio2_Audio1.internalStreamChannels[13] = kha_audio2_Audio1.streamChannels[13];
	kha_audio2_Audio1.internalStreamChannels[14] = kha_audio2_Audio1.streamChannels[14];
	kha_audio2_Audio1.internalStreamChannels[15] = kha_audio2_Audio1.streamChannels[15];
	var _g2 = 0;
	var _g3 = kha_audio2_Audio1.internalSoundChannels;
	while(_g2 < _g3.length) {
		var channel = _g3[_g2];
		++_g2;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g21 = 0;
		var _g31 = samples;
		while(_g21 < _g31) {
			var i1 = _g21++;
			kha_audio2_Audio1.sampleCache2[i1] += kha_audio2_Audio1.sampleCache1[i1] * channel.get_volume();
		}
	}
	var _g4 = 0;
	var _g5 = kha_audio2_Audio1.internalStreamChannels;
	while(_g4 < _g5.length) {
		var channel1 = _g5[_g4];
		++_g4;
		if(channel1 == null || channel1.get_finished()) {
			continue;
		}
		channel1.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g41 = 0;
		var _g51 = samples;
		while(_g41 < _g51) {
			var i2 = _g41++;
			kha_audio2_Audio1.sampleCache2[i2] += kha_audio2_Audio1.sampleCache1[i2] * channel1.get_volume();
		}
	}
	var _g6 = 0;
	var _g7 = samples;
	while(_g6 < _g7) {
		var i3 = _g6++;
		var a = kha_audio2_Audio1.sampleCache2[i3];
		var a1 = a < 1.0 ? a : 1.0;
		buffer.data[buffer.writeLocation] = a1 > -1.0 ? a1 : -1.0;
		buffer.writeLocation += 1;
		if(buffer.writeLocation >= buffer.size) {
			buffer.writeLocation = 0;
		}
	}
};
kha_audio2_Audio1.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = null;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished()) {
			channel = new kha_audio2_AudioChannel(loop);
			channel.data = sound.uncompressedData;
			kha_audio2_Audio1.soundChannels[i] = channel;
			break;
		}
	}
	return channel;
};
kha_audio2_Audio1._playAgain = function(channel) {
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished() || kha_audio2_Audio1.soundChannels[i] == channel) {
			kha_audio2_Audio1.soundChannels[i] = channel;
			break;
		}
	}
};
kha_audio2_Audio1.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var hardwareChannel = kha_audio2_Audio.stream(sound,loop);
	if(hardwareChannel != null) {
		return hardwareChannel;
	}
	var channel = null;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.streamChannels[i] == null || kha_audio2_Audio1.streamChannels[i].get_finished()) {
			channel = new kha_audio2_StreamChannel(sound.compressedData,loop);
			kha_audio2_Audio1.streamChannels[i] = channel;
			break;
		}
	}
	return channel;
};
var kha_audio2_AudioChannel = function(looping) {
	this.paused = false;
	this.looping = looping;
	this.myVolume = 1;
	this.myPosition = 0;
};
$hxClasses["kha.audio2.AudioChannel"] = kha_audio2_AudioChannel;
kha_audio2_AudioChannel.__name__ = "kha.audio2.AudioChannel";
kha_audio2_AudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_AudioChannel.prototype = {
	nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g = 0;
			var _g1 = length;
			while(_g < _g1) {
				var i = _g++;
				samples[i] = 0;
			}
			return;
		}
		var w_ptr = 0;
		var chk_ptr = 0;
		while(w_ptr < length) {
			var addressable_data = this.data.length - this.myPosition;
			var next_chunk = addressable_data < length - w_ptr ? addressable_data : length - w_ptr;
			while(chk_ptr < next_chunk) {
				samples[w_ptr] = this.data[this.myPosition];
				++this.myPosition;
				++chk_ptr;
				++w_ptr;
			}
			if(!this.looping) {
				break;
			} else {
				chk_ptr = 0;
				if(this.myPosition >= this.data.length) {
					this.myPosition = 0;
				}
			}
		}
		while(w_ptr < length) {
			samples[w_ptr] = 0;
			++w_ptr;
		}
	}
	,play: function() {
		this.paused = false;
		if(this.get_finished()) {
			this.myPosition = 0;
			kha_audio2_Audio1._playAgain(this);
		}
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,get_finished: function() {
		return this.myPosition >= this.data.length;
	}
	,__class__: kha_audio2_AudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume"}
};
var kha_audio2_Buffer = function(size,channels,samplesPerSecond) {
	this.size = size;
	var this1 = new Float32Array(size);
	this.data = this1;
	this.channels = channels;
	this.samplesPerSecond = samplesPerSecond;
	this.readLocation = 0;
	this.writeLocation = 0;
};
$hxClasses["kha.audio2.Buffer"] = kha_audio2_Buffer;
kha_audio2_Buffer.__name__ = "kha.audio2.Buffer";
kha_audio2_Buffer.prototype = {
	__class__: kha_audio2_Buffer
};
var kha_audio2_StreamChannel = function(data,loop) {
	this.paused = false;
	this.atend = false;
	this.myVolume = 1;
	this.loop = loop;
	this.reader = kha_audio2_ogg_vorbis_Reader.openFromBytes(data);
};
$hxClasses["kha.audio2.StreamChannel"] = kha_audio2_StreamChannel;
kha_audio2_StreamChannel.__name__ = "kha.audio2.StreamChannel";
kha_audio2_StreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_StreamChannel.prototype = {
	nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g = 0;
			var _g1 = length;
			while(_g < _g1) {
				var i = _g++;
				samples[i] = 0;
			}
			return;
		}
		var count = this.reader.read(samples,length / 2 | 0,2,sampleRate,true) * 2;
		if(count < length) {
			if(this.loop) {
				this.reader.set_currentMillisecond(0);
			} else {
				this.atend = true;
			}
			var _g2 = count;
			var _g11 = length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				samples[i1] = 0;
			}
		}
	}
	,play: function() {
		this.paused = false;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,get_finished: function() {
		return this.atend;
	}
	,__class__: kha_audio2_StreamChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume"}
};
var kha_audio2_ogg_tools_Crc32 = function() { };
$hxClasses["kha.audio2.ogg.tools.Crc32"] = kha_audio2_ogg_tools_Crc32;
kha_audio2_ogg_tools_Crc32.__name__ = "kha.audio2.ogg.tools.Crc32";
kha_audio2_ogg_tools_Crc32.init = function() {
	if(kha_audio2_ogg_tools_Crc32.table != null) {
		return;
	}
	var this1 = new Array(256);
	kha_audio2_ogg_tools_Crc32.table = this1;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		var s = i << 24;
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		kha_audio2_ogg_tools_Crc32.table[i] = s;
	}
};
var kha_audio2_ogg_vorbis_Reader = function(input,seekFunc,inputLength) {
	this.seekFunc = seekFunc;
	this.inputLength = inputLength;
	this.decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	this.decoder.setupSampleNumber(seekFunc,inputLength);
	this.loopStart = this.get_header().comment.get_loopStart();
	this.loopLength = this.get_header().comment.get_loopLength();
};
$hxClasses["kha.audio2.ogg.vorbis.Reader"] = kha_audio2_ogg_vorbis_Reader;
kha_audio2_ogg_vorbis_Reader.__name__ = "kha.audio2.ogg.vorbis.Reader";
kha_audio2_ogg_vorbis_Reader.openFromBytes = function(bytes) {
	var input = new haxe_io_BytesInput(bytes);
	var bytes1 = input;
	return new kha_audio2_ogg_vorbis_Reader(input,function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
};
kha_audio2_ogg_vorbis_Reader.seekBytes = function(bytes,pos) {
	bytes.set_position(pos);
};
kha_audio2_ogg_vorbis_Reader.readAll = function(bytes,output,useFloat) {
	if(useFloat == null) {
		useFloat = false;
	}
	var input = new haxe_io_BytesInput(bytes);
	var decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	var bytes1 = input;
	decoder.setupSampleNumber(function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
	var header = decoder.header;
	var count = 0;
	var bufferSize = 4096;
	var this1 = new Float32Array(bufferSize * header.channel);
	var buffer = this1;
	while(true) {
		var n = decoder.read(buffer,bufferSize,header.channel,header.sampleRate,useFloat);
		var _g = 0;
		var _g1 = n * header.channel;
		while(_g < _g1) {
			var i = _g++;
			output.writeFloat(buffer[i]);
		}
		if(n == 0) {
			break;
		}
		count += n;
	}
	return decoder.header;
};
kha_audio2_ogg_vorbis_Reader.prototype = {
	get_header: function() {
		return this.decoder.header;
	}
	,get_currentSample: function() {
		return this.decoder.currentSample;
	}
	,set_currentSample: function(value) {
		this.decoder.seek(this.seekFunc,this.inputLength,value);
		return this.decoder.currentSample;
	}
	,get_currentMillisecond: function() {
		var samples = this.get_currentSample();
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,set_currentMillisecond: function(value) {
		this.set_currentSample(Math.floor(_$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * (value / 1000)));
		return this.get_currentMillisecond();
	}
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		this.decoder.ensurePosition(this.seekFunc);
		if(samples == null) {
			samples = this.decoder.totalSample;
		}
		if(channels == null) {
			channels = this.get_header().channel;
		}
		if(sampleRate == null) {
			sampleRate = this.get_header().sampleRate;
		}
		return this.decoder.read(output,samples,channels,sampleRate,useFloat);
	}
	,__class__: kha_audio2_ogg_vorbis_Reader
	,__properties__: {set_currentMillisecond:"set_currentMillisecond",get_currentMillisecond:"get_currentMillisecond",set_currentSample:"set_currentSample",get_currentSample:"get_currentSample",get_header:"get_header"}
};
var kha_audio2_ogg_vorbis_VorbisDecodeState = function(input) {
	this.nextSeg = 0;
	this.firstDecode = false;
	this.bytesInSeg = 0;
	this.validBits = 0;
	this.input = input;
	this.inputPosition = 0;
	this.page = new kha_audio2_ogg_vorbis_data_Page();
	kha_audio2_ogg_tools_Crc32.init();
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecodeState"] = kha_audio2_ogg_vorbis_VorbisDecodeState;
kha_audio2_ogg_vorbis_VorbisDecodeState.__name__ = "kha.audio2.ogg.vorbis.VorbisDecodeState";
kha_audio2_ogg_vorbis_VorbisDecodeState.prototype = {
	setup: function(loc0,loc1) {
		this.inputPosition += 1;
		var segmentCount = this.input.readByte();
		this.inputPosition += segmentCount;
		var this1 = new Array(segmentCount);
		var vec = this1;
		var _g = 0;
		var _g1 = segmentCount;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		this.segments = vec;
		this.endSegWithKnownLoc = -2;
		if(loc0 != -1 || loc1 != -1) {
			var i1 = segmentCount - 1;
			while(i1 >= 0) {
				if(this.segments[i1] < 255) {
					break;
				}
				if(i1 >= 0) {
					this.endSegWithKnownLoc = i1;
					this.knownLocForPacket = loc0;
				}
				--i1;
			}
		}
		if(this.firstDecode) {
			var i2 = 0;
			var len = 0;
			var p = new kha_audio2_ogg_vorbis_data_ProbedPage();
			var _g2 = 0;
			var _g11 = segmentCount;
			while(_g2 < _g11) {
				var i3 = _g2++;
				len += this.segments[i3];
			}
			len += 27 + segmentCount;
			p.pageStart = this.firstAudioPageOffset;
			p.pageEnd = p.pageStart + len;
			p.firstDecodedSample = 0;
			p.lastDecodedSample = loc0;
			this.pFirst = p;
		}
		this.nextSeg = 0;
	}
	,clone: function(seekFunc) {
		var state = Object.create(kha_audio2_ogg_vorbis_VorbisDecodeState.prototype);
		seekFunc(this.inputPosition);
		state.input = this.input;
		state.eof = this.eof;
		state.validBits = this.validBits;
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		state.firstDecode = this.firstDecode;
		state.nextSeg = this.nextSeg;
		state.bytesInSeg = this.bytesInSeg;
		state.acc = state.acc;
		state.lastSeg = this.lastSeg;
		state.lastSegWhich = this.lastSegWhich;
		state.currentLoc = this.currentLoc;
		state.currentLocValid = this.currentLocValid;
		state.inputPosition = this.inputPosition;
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		state.error = this.error;
		state.segments = this.segments;
		state.pFirst = this.pFirst;
		state.pLast = this.pLast;
		state.page = this.page.clone();
		return state;
	}
	,next: function() {
		if(this.lastSeg) {
			return 0;
		}
		if(this.nextSeg == -1) {
			this.lastSegWhich = this.segments.length - 1;
			try {
				this.page.start(this);
			} catch( e ) {
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
				if(((e1) instanceof kha_audio2_ogg_vorbis_data_ReaderError)) {
					this.lastSeg = true;
					this.error = e1;
					return 0;
				} else {
					throw e;
				}
			}
			if((this.page.flag & 1) == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 171, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
			}
		}
		var len = this.segments[this.nextSeg++];
		if(len < 255) {
			this.lastSeg = true;
			this.lastSegWhich = this.nextSeg - 1;
		}
		if(this.nextSeg >= this.segments.length) {
			this.nextSeg = -1;
		}
		this.bytesInSeg = len;
		return len;
	}
	,startPacket: function() {
		while(this.nextSeg == -1) {
			this.page.start(this);
			if((this.page.flag & 1) != 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 193, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "startPacket"}));
			}
		}
		this.lastSeg = false;
		this.validBits = 0;
		this.bytesInSeg = 0;
	}
	,maybeStartPacket: function() {
		if(this.nextSeg == -1) {
			var eof = false;
			var x;
			try {
				this.inputPosition += 1;
				x = this.input.readByte();
			} catch( e ) {
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
				if(((e1) instanceof haxe_io_Eof)) {
					var e2 = e1;
					eof = true;
					x = 0;
				} else {
					throw e;
				}
			}
			if(eof) {
				return false;
			}
			var tmp;
			var tmp1;
			var tmp2;
			if(x == 79) {
				this.inputPosition += 1;
				tmp2 = this.input.readByte() != 103;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				this.inputPosition += 1;
				tmp1 = this.input.readByte() != 103;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				this.inputPosition += 1;
				tmp = this.input.readByte() != 83;
			} else {
				tmp = true;
			}
			if(tmp) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 218, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "maybeStartPacket"}));
			}
			this.page.startWithoutCapturePattern(this);
		}
		this.startPacket();
		return true;
	}
	,readBits: function(n) {
		if(this.validBits < 0) {
			return 0;
		} else if(this.validBits < n) {
			if(n > 24) {
				return this.readBits(24) + (this.readBits(n - 24) << 24);
			} else {
				if(this.validBits == 0) {
					this.acc = 0;
				}
				while(true) {
					if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
						this.validBits = -1;
						break;
					} else {
						this.bytesInSeg--;
						this.inputPosition += 1;
						this.acc = this.acc + (this.input.readByte() << this.validBits);
						this.validBits += 8;
					}
					if(!(this.validBits < n)) {
						break;
					}
				}
				if(this.validBits < 0) {
					return 0;
				} else {
					var z = this.acc & (1 << n) - 1;
					this.acc = this.acc >>> n;
					this.validBits -= n;
					return z;
				}
			}
		} else {
			var z1 = this.acc & (1 << n) - 1;
			this.acc = this.acc >>> n;
			this.validBits -= n;
			return z1;
		}
	}
	,firstPageValidate: function() {
		if(this.segments.length != 1) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"segmentCount",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 308, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
		if(this.segments[0] != 30) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 311, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
	}
	,startFirstDecode: function() {
		this.firstAudioPageOffset = this.inputPosition;
		this.firstDecode = true;
	}
	,prepHuffman: function() {
		if(this.validBits <= 24) {
			if(this.validBits == 0) {
				this.acc = 0;
			}
			while(true) {
				if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
					return;
				} else {
					this.bytesInSeg--;
					this.inputPosition += 1;
					this.acc = this.acc + (this.input.readByte() << this.validBits);
					this.validBits += 8;
				}
				if(!(this.validBits <= 24)) {
					break;
				}
			}
		}
	}
	,finishDecodePacket: function(previousLength,n,r) {
		var left = r.left.start;
		var currentLocValid = false;
		var n2 = n >> 1;
		if(this.firstDecode) {
			this.currentLoc = -n2;
			this.discardSamplesDeferred = n - r.right.end;
			currentLocValid = true;
			this.firstDecode = false;
		} else if(this.discardSamplesDeferred != 0) {
			r.left.start += this.discardSamplesDeferred;
			left = r.left.start;
			this.discardSamplesDeferred = 0;
		} else {
			var tmp = previousLength == 0 && currentLocValid;
		}
		if(this.lastSegWhich == this.endSegWithKnownLoc) {
			if(currentLocValid && (this.page.flag & 4) != 0) {
				var currentEnd = this.knownLocForPacket - (n - r.right.end);
				if(currentEnd < this.currentLoc + r.right.end) {
					var len = currentEnd < this.currentLoc ? 0 : currentEnd - this.currentLoc;
					len += r.left.start;
					this.currentLoc += len;
					return { len : len, left : left, right : r.right.start};
				}
			}
			this.currentLoc = this.knownLocForPacket - (n2 - r.left.start);
			currentLocValid = true;
		}
		if(currentLocValid) {
			this.currentLoc += r.right.start - r.left.start;
		}
		return { len : r.right.end, left : left, right : r.right.start};
	}
	,getSampleNumber: function(seekFunc,inputLength) {
		var restoreOffset = this.inputPosition;
		var previousSafe = _$UInt_UInt_$Impl_$.gte(inputLength,65536) && _$UInt_UInt_$Impl_$.gte(inputLength - 65536,this.firstAudioPageOffset) ? inputLength - 65536 : this.firstAudioPageOffset;
		seekFunc(this.inputPosition = previousSafe);
		var end = 0;
		var last = false;
		var _g = this.findPage(seekFunc,inputLength);
		switch(_g._hx_index) {
		case 0:
			var l = _g.last;
			var e = _g.end;
			end = e;
			last = l;
			break;
		case 1:
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		var lastPageLoc = this.inputPosition;
		_hx_loop1: while(!last) {
			seekFunc(this.inputPosition = end);
			var _g1 = this.findPage(seekFunc,inputLength);
			switch(_g1._hx_index) {
			case 0:
				var l1 = _g1.last;
				var e1 = _g1.end;
				end = e1;
				last = l1;
				break;
			case 1:
				break _hx_loop1;
			}
			previousSafe = lastPageLoc + 1;
			lastPageLoc = this.inputPosition;
		}
		seekFunc(this.inputPosition = lastPageLoc);
		this.inputPosition += 6;
		var this1 = new Array(6);
		var vec = this1;
		var _g2 = 0;
		var _g11 = 6;
		while(_g2 < _g11) {
			var i = _g2++;
			vec[i] = this.input.readByte();
		}
		var vorbisHeader = vec;
		this.inputPosition += 4;
		var lo = this.input.readInt32();
		this.inputPosition += 4;
		var hi = this.input.readInt32();
		if(lo == -1 && hi == -1 || hi > 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 553, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		this.pLast = new kha_audio2_ogg_vorbis_data_ProbedPage();
		this.pLast.pageStart = lastPageLoc;
		this.pLast.pageEnd = end;
		this.pLast.lastDecodedSample = lo;
		this.pLast.firstDecodedSample = null;
		this.pLast.afterPreviousPageStart = previousSafe;
		seekFunc(this.inputPosition = restoreOffset);
		return lo;
	}
	,findPage: function(seekFunc,inputLength) {
		try {
			while(true) {
				this.inputPosition += 1;
				var n = this.input.readByte();
				if(n == 79) {
					var retryLoc = this.inputPosition;
					if(retryLoc - 25 > inputLength) {
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
					}
					var tmp;
					var tmp1;
					this.inputPosition += 1;
					if(this.input.readByte() == 103) {
						this.inputPosition += 1;
						tmp1 = this.input.readByte() != 103;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						this.inputPosition += 1;
						tmp = this.input.readByte() != 83;
					} else {
						tmp = true;
					}
					if(tmp) {
						continue;
					}
					var this1 = new Array(27);
					var header = this1;
					header[0] = 79;
					header[1] = 103;
					header[2] = 103;
					header[3] = 83;
					this.inputPosition += 1;
					header[4] = this.input.readByte();
					this.inputPosition += 1;
					header[5] = this.input.readByte();
					this.inputPosition += 1;
					header[6] = this.input.readByte();
					this.inputPosition += 1;
					header[7] = this.input.readByte();
					this.inputPosition += 1;
					header[8] = this.input.readByte();
					this.inputPosition += 1;
					header[9] = this.input.readByte();
					this.inputPosition += 1;
					header[10] = this.input.readByte();
					this.inputPosition += 1;
					header[11] = this.input.readByte();
					this.inputPosition += 1;
					header[12] = this.input.readByte();
					this.inputPosition += 1;
					header[13] = this.input.readByte();
					this.inputPosition += 1;
					header[14] = this.input.readByte();
					this.inputPosition += 1;
					header[15] = this.input.readByte();
					this.inputPosition += 1;
					header[16] = this.input.readByte();
					this.inputPosition += 1;
					header[17] = this.input.readByte();
					this.inputPosition += 1;
					header[18] = this.input.readByte();
					this.inputPosition += 1;
					header[19] = this.input.readByte();
					this.inputPosition += 1;
					header[20] = this.input.readByte();
					this.inputPosition += 1;
					header[21] = this.input.readByte();
					this.inputPosition += 1;
					header[22] = this.input.readByte();
					this.inputPosition += 1;
					header[23] = this.input.readByte();
					this.inputPosition += 1;
					header[24] = this.input.readByte();
					this.inputPosition += 1;
					header[25] = this.input.readByte();
					this.inputPosition += 1;
					header[26] = this.input.readByte();
					if(header[4] != 0) {
						seekFunc(this.inputPosition = retryLoc);
						continue;
					}
					var goal = header[22] + (header[23] << 8) + (header[24] << 16) + (header[25] << 24);
					header[22] = 0;
					header[23] = 0;
					header[24] = 0;
					header[25] = 0;
					var crc = 0;
					var _g = 0;
					while(_g < 27) {
						var i = _g++;
						crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[header[i] ^ crc >>> 24];
					}
					var len = 0;
					try {
						var _g1 = 0;
						var _g2 = header[26];
						while(_g1 < _g2) {
							var i1 = _g1++;
							this.inputPosition += 1;
							var s = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[s ^ crc >>> 24];
							len += s;
						}
						var _g3 = 0;
						var _g4 = len;
						while(_g3 < _g4) {
							var i2 = _g3++;
							this.inputPosition += 1;
							var byte = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[byte ^ crc >>> 24];
						}
					} catch( e ) {
						var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
						if(((e1) instanceof haxe_io_Eof)) {
							var e2 = e1;
							return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
						} else {
							throw e;
						}
					}
					if(crc == goal) {
						var end = this.inputPosition;
						seekFunc(this.inputPosition = retryLoc - 1);
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found(end,(header[5] & 4) != 0);
					}
				}
			}
		} catch( e3 ) {
			var e4 = ((e3) instanceof js__$Boot_HaxeError) ? e3.val : e3;
			if(((e4) instanceof haxe_io_Eof)) {
				var e5 = e4;
				return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
			} else {
				throw e3;
			}
		}
	}
	,analyzePage: function(seekFunc,h) {
		var z = new kha_audio2_ogg_vorbis_data_ProbedPage();
		var this1 = new Array(255);
		var packetType = this1;
		z.pageStart = this.inputPosition;
		this.inputPosition += 27;
		var this2 = new Array(27);
		var vec = this2;
		var _g = 0;
		var _g1 = 27;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		var pageHeader = vec;
		var n = pageHeader[26];
		this.inputPosition += n;
		var this3 = new Array(n);
		var vec1 = this3;
		var _g2 = 0;
		var _g11 = n;
		while(_g2 < _g11) {
			var i1 = _g2++;
			vec1[i1] = this.input.readByte();
		}
		var lacing = vec1;
		var len = 0;
		var _g3 = 0;
		var _g12 = pageHeader[26];
		while(_g3 < _g12) {
			var i2 = _g3++;
			len += lacing[i2];
		}
		z.pageEnd = z.pageStart + 27 + pageHeader[26] + len;
		z.lastDecodedSample = pageHeader[6] + (pageHeader[7] << 8) + (pageHeader[8] << 16) + (pageHeader[9] << 16);
		if((pageHeader[5] & 4) != 0) {
			z.firstDecodedSample = null;
			seekFunc(this.inputPosition = z.pageStart);
			return z;
		}
		var numPacket = 0;
		var packetStart = (pageHeader[5] & 1) == 0;
		var modeCount = h.modes.length;
		var _g21 = 0;
		var _g31 = pageHeader[26];
		while(_g21 < _g31) {
			var i3 = _g21++;
			if(packetStart) {
				if(lacing[i3] == 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				this.inputPosition += 1;
				var n1 = this.input.readByte();
				if((n1 & 1) != 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				n1 >>= 1;
				var n2 = modeCount - 1;
				var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				var b = n2 < 16384 ? n2 < 16 ? log2_4[n2] : n2 < 512 ? 5 + log2_4[n2 >> 5] : 10 + log2_4[n2 >> 10] : n2 < 16777216 ? n2 < 524288 ? 15 + log2_4[n2 >> 15] : 20 + log2_4[n2 >> 20] : n2 < 536870912 ? 25 + log2_4[n2 >> 25] : n2 < -2147483648 ? 30 + log2_4[n2 >> 30] : 0;
				n1 &= (1 << b) - 1;
				if(n1 >= modeCount) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				packetType[numPacket++] = h.modes[n1].blockflag;
				var len1 = lacing[i3] - 1;
				this.inputPosition += len1;
				var this4 = new Array(len1);
				var vec2 = this4;
				var _g4 = 0;
				var _g13 = len1;
				while(_g4 < _g13) {
					var i4 = _g4++;
					vec2[i4] = this.input.readByte();
				}
			} else {
				var len2 = lacing[i3];
				this.inputPosition += len2;
				var this5 = new Array(len2);
				var vec3 = this5;
				var _g5 = 0;
				var _g14 = len2;
				while(_g5 < _g14) {
					var i5 = _g5++;
					vec3[i5] = this.input.readByte();
				}
			}
			packetStart = lacing[i3] < 255;
		}
		var samples = 0;
		if(numPacket > 1) {
			samples += packetType[numPacket - 1] ? h.blocksize1 : h.blocksize0;
		}
		var i6 = numPacket - 2;
		while(i6 >= 1) {
			--i6;
			if(packetType[i6]) {
				if(packetType[i6 + 1]) {
					samples += h.blocksize1 >> 1;
				} else {
					samples += (h.blocksize1 - h.blocksize0 >> 2) + (h.blocksize0 >> 1);
				}
			} else {
				samples += h.blocksize0 >> 1;
			}
			--i6;
		}
		z.firstDecodedSample = z.lastDecodedSample - samples;
		seekFunc(this.inputPosition = z.pageStart);
		return z;
	}
	,decodeScalarRaw: function(c) {
		this.prepHuffman();
		var codewordLengths = c.codewordLengths;
		var codewords = c.codewords;
		var sortedCodewords = c.sortedCodewords;
		if(c.entries > 8 ? sortedCodewords != null : codewords != null) {
			var n = this.acc;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			var code = n >>> 16 | n << 16;
			var x = 0;
			var n1 = c.sortedEntries;
			while(n1 > 1) {
				var m = x + (n1 >> 1);
				if(_$UInt_UInt_$Impl_$.gte(code,sortedCodewords[m])) {
					x = m;
					n1 -= n1 >> 1;
				} else {
					n1 >>= 1;
				}
			}
			if(!c.sparse) {
				x = c.sortedValues[x];
			}
			var len = codewordLengths[x];
			if(this.validBits >= len) {
				this.acc = this.acc >>> len;
				this.validBits -= len;
				return x;
			}
			this.validBits = 0;
			return -1;
		}
		var _g = 0;
		var _g1 = c.entries;
		while(_g < _g1) {
			var i = _g++;
			var cl = codewordLengths[i];
			if(cl == 255) {
				continue;
			}
			if(codewords[i] == (this.acc & (1 << cl) - 1)) {
				if(this.validBits >= cl) {
					this.acc = this.acc >>> cl;
					this.validBits -= cl;
					return i;
				}
				this.validBits = 0;
				return -1;
			}
		}
		this.error = new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 847, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"});
		this.validBits = 0;
		return -1;
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecodeState
};
var kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult = $hxEnums["kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult"] = { __ename__ : true, __constructs__ : ["Found","NotFound"]
	,Found: ($_=function(end,last) { return {_hx_index:0,end:end,last:last,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}; },$_.__params__ = ["end","last"],$_)
	,NotFound: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}
};
var kha_audio2_ogg_vorbis_VorbisDecoder = function(header,decodeState) {
	this.header = header;
	this.decodeState = decodeState;
	this.totalSample = null;
	this.currentSample = 0;
	this.previousLength = 0;
	var this1 = new Array(header.channel);
	this.channelBuffers = this1;
	var this2 = new Array(header.channel);
	this.previousWindow = this2;
	var this3 = new Array(header.channel);
	this.finalY = this3;
	var _g = 0;
	var _g1 = header.channel;
	while(_g < _g1) {
		var i = _g++;
		var this4 = this.channelBuffers;
		var this5 = new Array(header.blocksize1);
		var vec = this5;
		this4[i] = vec;
		var this6 = this.previousWindow;
		var this7 = new Array(header.blocksize1 / 2 | 0);
		var vec1 = this7;
		this6[i] = vec1;
		this.finalY[i] = [];
	}
	var this8 = new Array(2);
	this.a = this8;
	var this9 = new Array(2);
	this.b = this9;
	var this10 = new Array(2);
	this.c = this10;
	var this11 = new Array(2);
	this.window = this11;
	var this12 = new Array(2);
	this.bitReverseData = this12;
	this.initBlocksize(0,header.blocksize0);
	this.initBlocksize(1,header.blocksize1);
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecoder"] = kha_audio2_ogg_vorbis_VorbisDecoder;
kha_audio2_ogg_vorbis_VorbisDecoder.__name__ = "kha.audio2.ogg.vorbis.VorbisDecoder";
kha_audio2_ogg_vorbis_VorbisDecoder.start = function(input) {
	var decodeState = new kha_audio2_ogg_vorbis_VorbisDecodeState(input);
	var header = kha_audio2_ogg_vorbis_data_Header.read(decodeState);
	var decoder = new kha_audio2_ogg_vorbis_VorbisDecoder(header,decodeState);
	decodeState.startFirstDecode();
	decoder.pumpFirstFrame();
	return decoder;
};
kha_audio2_ogg_vorbis_VorbisDecoder.prototype = {
	read: function(output,samples,channels,sampleRate,useFloat) {
		var b = this.header.sampleRate;
		if((_$UInt_UInt_$Impl_$.toFloat(sampleRate) % _$UInt_UInt_$Impl_$.toFloat(b) | 0) != 0) {
			throw new js__$Boot_HaxeError("Unsupported sampleRate : can't convert " + Std.string(_$UInt_UInt_$Impl_$.toFloat(this.header.sampleRate)) + " to " + sampleRate);
		}
		if(channels % this.header.channel != 0) {
			throw new js__$Boot_HaxeError("Unsupported channels : can't convert " + this.header.channel + " to " + channels);
		}
		var b1 = this.header.sampleRate;
		var sampleRepeat = _$UInt_UInt_$Impl_$.toFloat(sampleRate) / _$UInt_UInt_$Impl_$.toFloat(b1) | 0;
		var channelRepeat = channels / this.header.channel | 0;
		var n = 0;
		var len = Math.floor(samples / sampleRepeat);
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		var index = 0;
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			var _g = this.channelBufferStart;
			var _g1 = this.channelBufferStart + k;
			while(_g < _g1) {
				var j = _g++;
				var _g2 = 0;
				var _g11 = sampleRepeat;
				while(_g2 < _g11) {
					var sr = _g2++;
					var _g3 = 0;
					var _g12 = this.header.channel;
					while(_g3 < _g12) {
						var i = _g3++;
						var _g4 = 0;
						var _g13 = channelRepeat;
						while(_g4 < _g13) {
							var cr = _g4++;
							var value = this.channelBuffers[i][j];
							if(value > 1) {
								value = 1;
							} else if(value < -1) {
								value = -1;
							}
							if(useFloat) {
								output[index] = value;
								++index;
							}
						}
					}
				}
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		var _g5 = n;
		var _g14 = len;
		while(_g5 < _g14) {
			var j1 = _g5++;
			var _g6 = 0;
			var _g15 = sampleRepeat;
			while(_g6 < _g15) {
				var sr1 = _g6++;
				var _g7 = 0;
				var _g16 = this.header.channel;
				while(_g7 < _g16) {
					var i1 = _g7++;
					var _g8 = 0;
					var _g17 = channelRepeat;
					while(_g8 < _g17) {
						var cr1 = _g8++;
						if(useFloat) {
							output[index] = 0;
							++index;
						}
					}
				}
			}
		}
		this.currentSample += len;
		return len * sampleRepeat;
	}
	,skipSamples: function(len) {
		var n = 0;
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		this.currentSample += len;
		return len;
	}
	,setupSampleNumber: function(seekFunc,inputLength) {
		if(this.totalSample == null) {
			this.totalSample = this.decodeState.getSampleNumber(seekFunc,inputLength);
		}
	}
	,seek: function(seekFunc,inputLength,sampleNumber) {
		if(this.currentSample == sampleNumber) {
			return;
		}
		if(this.totalSample == null) {
			this.setupSampleNumber(seekFunc,inputLength);
			if(this.totalSample == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 187, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
		if(sampleNumber < 0) {
			sampleNumber = 0;
		}
		var p0 = this.decodeState.pFirst;
		var p1 = this.decodeState.pLast;
		if(sampleNumber >= p1.lastDecodedSample) {
			sampleNumber = p1.lastDecodedSample - 1;
		}
		if(sampleNumber < p0.lastDecodedSample) {
			this.seekFrameFromPage(seekFunc,p0.pageStart,0,sampleNumber);
		} else {
			var attempts = 0;
			while(p0.pageEnd < p1.pageStart) {
				var startOffset = p0.pageEnd;
				var endOffset = p1.afterPreviousPageStart;
				var startSample = p0.lastDecodedSample;
				var endSample = p1.lastDecodedSample;
				if(startSample == null || endSample == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 219, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				if(_$UInt_UInt_$Impl_$.gt(endOffset,startOffset + 4000)) {
					endOffset = endOffset - 4000;
				}
				var probe = startOffset + Math.floor(_$UInt_UInt_$Impl_$.toFloat(endOffset - startOffset) / _$UInt_UInt_$Impl_$.toFloat(endSample - startSample) * (sampleNumber - startSample));
				if(attempts >= 4) {
					var probe2 = startOffset + (endOffset - startOffset >>> 1);
					probe = attempts >= 8 ? probe2 : _$UInt_UInt_$Impl_$.gt(probe2,probe) ? probe + (probe2 - probe >>> 1) : probe2 + (probe - probe2 >>> 1);
				}
				++attempts;
				seekFunc(this.decodeState.inputPosition = probe);
				switch(this.decodeState.findPage(seekFunc,inputLength)._hx_index) {
				case 0:
					break;
				case 1:
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 249, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				var q = this.decodeState.analyzePage(seekFunc,this.header);
				if(q == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 255, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				q.afterPreviousPageStart = probe;
				if(q.pageStart == p1.pageStart) {
					p1 = q;
					continue;
				}
				if(sampleNumber < q.lastDecodedSample) {
					p1 = q;
				} else {
					p0 = q;
				}
			}
			if(p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {
				this.seekFrameFromPage(seekFunc,p1.pageStart,p0.lastDecodedSample,sampleNumber);
			} else {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 275, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
	}
	,seekFrameFromPage: function(seekFunc,pageStart,firstSample,targetSample) {
		var frame = 0;
		var frameStart = firstSample;
		seekFunc(this.decodeState.inputPosition = pageStart);
		this.decodeState.nextSeg = -1;
		var leftEnd = 0;
		var leftStart = 0;
		var prevState = null;
		var lastState = null;
		while(true) {
			prevState = lastState;
			lastState = this.decodeState.clone(seekFunc);
			var initialResult = this.decodeInitial();
			if(initialResult == null) {
				lastState = prevState;
				break;
			}
			leftStart = initialResult.left.start;
			leftEnd = initialResult.left.end;
			var start = frame == 0 ? leftEnd : leftStart;
			if(targetSample < frameStart + initialResult.right.start - start) {
				break;
			}
			var _this = this.decodeState;
			while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
				_this.bytesInSeg--;
				_this.inputPosition += 1;
				_this.input.readByte();
			}
			frameStart += initialResult.right.start - start;
			++frame;
		}
		this.decodeState = lastState;
		seekFunc(this.decodeState.inputPosition);
		this.previousLength = 0;
		this.pumpFirstFrame();
		this.currentSample = frameStart;
		this.skipSamples(targetSample - frameStart);
	}
	,ensurePosition: function(seekFunc) {
		seekFunc(this.decodeState.inputPosition);
	}
	,getFrameFloat: function() {
		var result = this.decodePacket();
		if(result == null) {
			this.channelBufferStart = this.channelBufferEnd = 0;
			return 0;
		}
		var len = this.finishFrame(result);
		this.channelBufferStart = result.left;
		this.channelBufferEnd = result.left + len;
		return len;
	}
	,pumpFirstFrame: function() {
		this.finishFrame(this.decodePacket());
	}
	,finishFrame: function(r) {
		var len = r.len;
		var right = r.right;
		var left = r.left;
		if(this.previousLength != 0) {
			var n = this.previousLength;
			var w = this.getWindow(n);
			var _g = 0;
			var _g1 = this.header.channel;
			while(_g < _g1) {
				var i = _g++;
				var cb = this.channelBuffers[i];
				var pw = this.previousWindow[i];
				var _g2 = 0;
				var _g11 = n;
				while(_g2 < _g11) {
					var j = _g2++;
					cb[left + j] = cb[left + j] * w[j] + pw[j] * w[n - 1 - j];
				}
			}
		}
		var prev = this.previousLength;
		this.previousLength = len - right;
		var _g3 = 0;
		var _g12 = this.header.channel;
		while(_g3 < _g12) {
			var i1 = _g3++;
			var pw1 = this.previousWindow[i1];
			var cb1 = this.channelBuffers[i1];
			var _g4 = 0;
			var _g13 = len - right;
			while(_g4 < _g13) {
				var j1 = _g4++;
				pw1[j1] = cb1[right + j1];
			}
		}
		if(prev == 0) {
			return 0;
		}
		if(len < right) {
			right = len;
		}
		return right - left;
	}
	,getWindow: function(len) {
		len <<= 1;
		if(len == this.header.blocksize0) {
			return this.window[0];
		} else if(len == this.header.blocksize1) {
			return this.window[1];
		} else {
			return null;
		}
	}
	,initBlocksize: function(bs,n) {
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = this.a;
		var this2 = new Array(n2);
		this1[bs] = this2;
		var this3 = this.b;
		var this4 = new Array(n2);
		this3[bs] = this4;
		var this5 = this.c;
		var this6 = new Array(n4);
		this5[bs] = this6;
		var this7 = this.window;
		var this8 = new Array(n2);
		this7[bs] = this8;
		var this9 = this.bitReverseData;
		var this10 = new Array(n8);
		this9[bs] = this10;
		kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors(n,this.a[bs],this.b[bs],this.c[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeWindow(n,this.window[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse(n,this.bitReverseData[bs]);
	}
	,inverseMdct: function(buffer,n,blocktype) {
		var bt = blocktype ? 1 : 0;
		var a = this.a[bt];
		var b = this.b[bt];
		var c = this.c[bt];
		var bitReverse = this.bitReverseData[bt];
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = new Array(n2);
		var buf2 = this1;
		var dOffset = n2 - 2;
		var aaOffset = 0;
		var eOffset = 0;
		var eStopOffset = n2;
		while(eOffset != eStopOffset) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		var u = buffer;
		var v = buf2;
		var aaOffset1 = n2 - 8;
		var eOffset0 = n4;
		var eOffset1 = 0;
		var dOffset0 = n4;
		var dOffset1 = 0;
		while(aaOffset1 >= 0) {
			var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
			var v40_20 = v[eOffset0] - v[eOffset1];
			u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
			u[dOffset0] = v[eOffset0] + v[eOffset1];
			u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
			u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
			v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
			v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
			u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
			u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
			u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
			u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
			aaOffset1 -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		var i_off = n2 - 1 - n4 * 0;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eeOffset0] - u[eeOffset2];
			var k01_21 = u[eeOffset0 + -1] - u[eeOffset2 + -1];
			var _g = eeOffset0;
			var _g1 = u;
			_g1[_g] = _g1[_g] + u[eeOffset2];
			var _g2 = eeOffset0 + -1;
			var _g11 = u;
			_g11[_g2] = _g11[_g2] + u[eeOffset2 + -1];
			u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -2] - u[eeOffset2 + -2];
			k01_21 = u[eeOffset0 + -3] - u[eeOffset2 + -3];
			var _g3 = eeOffset0 + -2;
			var _g12 = u;
			_g12[_g3] = _g12[_g3] + u[eeOffset2 + -2];
			var _g4 = eeOffset0 + -3;
			var _g13 = u;
			_g13[_g4] = _g13[_g4] + u[eeOffset2 + -3];
			u[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -4] - u[eeOffset2 + -4];
			k01_21 = u[eeOffset0 + -5] - u[eeOffset2 + -5];
			var _g5 = eeOffset0 + -4;
			var _g14 = u;
			_g14[_g5] = _g14[_g5] + u[eeOffset2 + -4];
			var _g6 = eeOffset0 + -5;
			var _g15 = u;
			_g15[_g6] = _g15[_g6] + u[eeOffset2 + -5];
			u[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -6] - u[eeOffset2 + -6];
			k01_21 = u[eeOffset0 + -7] - u[eeOffset2 + -7];
			var _g7 = eeOffset0 + -6;
			var _g16 = u;
			_g16[_g7] = _g16[_g7] + u[eeOffset2 + -6];
			var _g8 = eeOffset0 + -7;
			var _g17 = u;
			_g17[_g8] = _g17[_g8] + u[eeOffset2 + -7];
			u[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var i_off1 = n2 - 1 - n4;
		var eeOffset01 = i_off1;
		var eeOffset21 = i_off1 + -(n >> 3);
		var aOffset1 = 0;
		var i1 = (n >> 4 >> 2) + 1;
		while(--i1 > 0) {
			var k00_201 = u[eeOffset01] - u[eeOffset21];
			var k01_211 = u[eeOffset01 + -1] - u[eeOffset21 + -1];
			var _g9 = eeOffset01;
			var _g18 = u;
			_g18[_g9] = _g18[_g9] + u[eeOffset21];
			var _g10 = eeOffset01 + -1;
			var _g19 = u;
			_g19[_g10] = _g19[_g10] + u[eeOffset21 + -1];
			u[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -1] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -2] - u[eeOffset21 + -2];
			k01_211 = u[eeOffset01 + -3] - u[eeOffset21 + -3];
			var _g20 = eeOffset01 + -2;
			var _g110 = u;
			_g110[_g20] = _g110[_g20] + u[eeOffset21 + -2];
			var _g21 = eeOffset01 + -3;
			var _g111 = u;
			_g111[_g21] = _g111[_g21] + u[eeOffset21 + -3];
			u[eeOffset21 + -2] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -3] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -4] - u[eeOffset21 + -4];
			k01_211 = u[eeOffset01 + -5] - u[eeOffset21 + -5];
			var _g22 = eeOffset01 + -4;
			var _g112 = u;
			_g112[_g22] = _g112[_g22] + u[eeOffset21 + -4];
			var _g23 = eeOffset01 + -5;
			var _g113 = u;
			_g113[_g23] = _g113[_g23] + u[eeOffset21 + -5];
			u[eeOffset21 + -4] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -5] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -6] - u[eeOffset21 + -6];
			k01_211 = u[eeOffset01 + -7] - u[eeOffset21 + -7];
			var _g24 = eeOffset01 + -6;
			var _g114 = u;
			_g114[_g24] = _g114[_g24] + u[eeOffset21 + -6];
			var _g25 = eeOffset01 + -7;
			var _g115 = u;
			_g115[_g25] = _g115[_g25] + u[eeOffset21 + -7];
			u[eeOffset21 + -6] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -7] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			eeOffset01 -= 8;
			eeOffset21 -= 8;
		}
		var d0 = n2 - 1 - n8 * 0;
		var aOffset2 = 0;
		var eOffset01 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i2 = (n >> 5 >> 2) + 1;
		while(--i2 > 0) {
			var k00_202 = u[eOffset01] - u[eOffset2];
			var k01_212 = u[eOffset01 + -1] - u[eOffset2 + -1];
			var _g26 = eOffset01;
			var _g116 = u;
			_g116[_g26] = _g116[_g26] + u[eOffset2];
			var _g27 = eOffset01 + -1;
			var _g117 = u;
			_g117[_g27] = _g117[_g27] + u[eOffset2 + -1];
			u[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -1] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -2] - u[eOffset2 + -2];
			k01_212 = u[eOffset01 + -3] - u[eOffset2 + -3];
			var _g28 = eOffset01 + -2;
			var _g118 = u;
			_g118[_g28] = _g118[_g28] + u[eOffset2 + -2];
			var _g29 = eOffset01 + -3;
			var _g119 = u;
			_g119[_g29] = _g119[_g29] + u[eOffset2 + -3];
			u[eOffset2 + -2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -3] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -4] - u[eOffset2 + -4];
			k01_212 = u[eOffset01 + -5] - u[eOffset2 + -5];
			var _g30 = eOffset01 + -4;
			var _g120 = u;
			_g120[_g30] = _g120[_g30] + u[eOffset2 + -4];
			var _g31 = eOffset01 + -5;
			var _g121 = u;
			_g121[_g31] = _g121[_g31] + u[eOffset2 + -5];
			u[eOffset2 + -4] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -5] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -6] - u[eOffset2 + -6];
			k01_212 = u[eOffset01 + -7] - u[eOffset2 + -7];
			var _g32 = eOffset01 + -6;
			var _g122 = u;
			_g122[_g32] = _g122[_g32] + u[eOffset2 + -6];
			var _g33 = eOffset01 + -7;
			var _g123 = u;
			_g123[_g33] = _g123[_g33] + u[eOffset2 + -7];
			u[eOffset2 + -6] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -7] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			eOffset01 -= 8;
			eOffset2 -= 8;
			aOffset2 += 16;
		}
		var d01 = n2 - 1 - n8;
		var aOffset3 = 0;
		var eOffset02 = d01;
		var eOffset21 = d01 + -(n >> 4);
		var i3 = (n >> 5 >> 2) + 1;
		while(--i3 > 0) {
			var k00_203 = u[eOffset02] - u[eOffset21];
			var k01_213 = u[eOffset02 + -1] - u[eOffset21 + -1];
			var _g34 = eOffset02;
			var _g124 = u;
			_g124[_g34] = _g124[_g34] + u[eOffset21];
			var _g35 = eOffset02 + -1;
			var _g125 = u;
			_g125[_g35] = _g125[_g35] + u[eOffset21 + -1];
			u[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -1] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -2] - u[eOffset21 + -2];
			k01_213 = u[eOffset02 + -3] - u[eOffset21 + -3];
			var _g36 = eOffset02 + -2;
			var _g126 = u;
			_g126[_g36] = _g126[_g36] + u[eOffset21 + -2];
			var _g37 = eOffset02 + -3;
			var _g127 = u;
			_g127[_g37] = _g127[_g37] + u[eOffset21 + -3];
			u[eOffset21 + -2] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -3] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -4] - u[eOffset21 + -4];
			k01_213 = u[eOffset02 + -5] - u[eOffset21 + -5];
			var _g38 = eOffset02 + -4;
			var _g128 = u;
			_g128[_g38] = _g128[_g38] + u[eOffset21 + -4];
			var _g39 = eOffset02 + -5;
			var _g129 = u;
			_g129[_g39] = _g129[_g39] + u[eOffset21 + -5];
			u[eOffset21 + -4] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -5] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -6] - u[eOffset21 + -6];
			k01_213 = u[eOffset02 + -7] - u[eOffset21 + -7];
			var _g40 = eOffset02 + -6;
			var _g130 = u;
			_g130[_g40] = _g130[_g40] + u[eOffset21 + -6];
			var _g41 = eOffset02 + -7;
			var _g131 = u;
			_g131[_g41] = _g131[_g41] + u[eOffset21 + -7];
			u[eOffset21 + -6] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -7] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			eOffset02 -= 8;
			eOffset21 -= 8;
			aOffset3 += 16;
		}
		var d02 = n2 - 1 - n8 * 2;
		var aOffset4 = 0;
		var eOffset03 = d02;
		var eOffset22 = d02 + -(n >> 4);
		var i4 = (n >> 5 >> 2) + 1;
		while(--i4 > 0) {
			var k00_204 = u[eOffset03] - u[eOffset22];
			var k01_214 = u[eOffset03 + -1] - u[eOffset22 + -1];
			var _g42 = eOffset03;
			var _g132 = u;
			_g132[_g42] = _g132[_g42] + u[eOffset22];
			var _g43 = eOffset03 + -1;
			var _g133 = u;
			_g133[_g43] = _g133[_g43] + u[eOffset22 + -1];
			u[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -1] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -2] - u[eOffset22 + -2];
			k01_214 = u[eOffset03 + -3] - u[eOffset22 + -3];
			var _g44 = eOffset03 + -2;
			var _g134 = u;
			_g134[_g44] = _g134[_g44] + u[eOffset22 + -2];
			var _g45 = eOffset03 + -3;
			var _g135 = u;
			_g135[_g45] = _g135[_g45] + u[eOffset22 + -3];
			u[eOffset22 + -2] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -3] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -4] - u[eOffset22 + -4];
			k01_214 = u[eOffset03 + -5] - u[eOffset22 + -5];
			var _g46 = eOffset03 + -4;
			var _g136 = u;
			_g136[_g46] = _g136[_g46] + u[eOffset22 + -4];
			var _g47 = eOffset03 + -5;
			var _g137 = u;
			_g137[_g47] = _g137[_g47] + u[eOffset22 + -5];
			u[eOffset22 + -4] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -5] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -6] - u[eOffset22 + -6];
			k01_214 = u[eOffset03 + -7] - u[eOffset22 + -7];
			var _g48 = eOffset03 + -6;
			var _g138 = u;
			_g138[_g48] = _g138[_g48] + u[eOffset22 + -6];
			var _g49 = eOffset03 + -7;
			var _g139 = u;
			_g139[_g49] = _g139[_g49] + u[eOffset22 + -7];
			u[eOffset22 + -6] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -7] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			eOffset03 -= 8;
			eOffset22 -= 8;
			aOffset4 += 16;
		}
		var d03 = n2 - 1 - n8 * 3;
		var aOffset5 = 0;
		var eOffset04 = d03;
		var eOffset23 = d03 + -(n >> 4);
		var i5 = (n >> 5 >> 2) + 1;
		while(--i5 > 0) {
			var k00_205 = u[eOffset04] - u[eOffset23];
			var k01_215 = u[eOffset04 + -1] - u[eOffset23 + -1];
			var _g50 = eOffset04;
			var _g140 = u;
			_g140[_g50] = _g140[_g50] + u[eOffset23];
			var _g51 = eOffset04 + -1;
			var _g141 = u;
			_g141[_g51] = _g141[_g51] + u[eOffset23 + -1];
			u[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -1] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -2] - u[eOffset23 + -2];
			k01_215 = u[eOffset04 + -3] - u[eOffset23 + -3];
			var _g52 = eOffset04 + -2;
			var _g142 = u;
			_g142[_g52] = _g142[_g52] + u[eOffset23 + -2];
			var _g53 = eOffset04 + -3;
			var _g143 = u;
			_g143[_g53] = _g143[_g53] + u[eOffset23 + -3];
			u[eOffset23 + -2] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -3] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -4] - u[eOffset23 + -4];
			k01_215 = u[eOffset04 + -5] - u[eOffset23 + -5];
			var _g54 = eOffset04 + -4;
			var _g144 = u;
			_g144[_g54] = _g144[_g54] + u[eOffset23 + -4];
			var _g55 = eOffset04 + -5;
			var _g145 = u;
			_g145[_g55] = _g145[_g55] + u[eOffset23 + -5];
			u[eOffset23 + -4] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -5] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -6] - u[eOffset23 + -6];
			k01_215 = u[eOffset04 + -7] - u[eOffset23 + -7];
			var _g56 = eOffset04 + -6;
			var _g146 = u;
			_g146[_g56] = _g146[_g56] + u[eOffset23 + -6];
			var _g57 = eOffset04 + -7;
			var _g147 = u;
			_g147[_g57] = _g147[_g57] + u[eOffset23 + -7];
			u[eOffset23 + -6] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -7] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			eOffset04 -= 8;
			eOffset23 -= 8;
			aOffset5 += 16;
		}
		var _g58 = 2;
		var _g148 = ld - 3 >> 1;
		while(_g58 < _g148) {
			var l = _g58++;
			var k0 = n >> l + 2;
			var k0_2 = k0 >> 1;
			var lim = 1 << l + 1;
			var _g59 = 0;
			var _g149 = lim;
			while(_g59 < _g149) {
				var i6 = _g59++;
				var d04 = n2 - 1 - k0 * i6;
				var k1 = 1 << l + 3;
				var aOffset6 = 0;
				var eOffset05 = d04;
				var eOffset24 = d04 + -k0_2;
				var i7 = (n >> l + 4 >> 2) + 1;
				while(--i7 > 0) {
					var k00_206 = u[eOffset05] - u[eOffset24];
					var k01_216 = u[eOffset05 + -1] - u[eOffset24 + -1];
					var _g60 = eOffset05;
					var _g150 = u;
					_g150[_g60] = _g150[_g60] + u[eOffset24];
					var _g61 = eOffset05 + -1;
					var _g151 = u;
					_g151[_g61] = _g151[_g61] + u[eOffset24 + -1];
					u[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -1] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -2] - u[eOffset24 + -2];
					k01_216 = u[eOffset05 + -3] - u[eOffset24 + -3];
					var _g62 = eOffset05 + -2;
					var _g152 = u;
					_g152[_g62] = _g152[_g62] + u[eOffset24 + -2];
					var _g63 = eOffset05 + -3;
					var _g153 = u;
					_g153[_g63] = _g153[_g63] + u[eOffset24 + -3];
					u[eOffset24 + -2] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -3] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -4] - u[eOffset24 + -4];
					k01_216 = u[eOffset05 + -5] - u[eOffset24 + -5];
					var _g64 = eOffset05 + -4;
					var _g154 = u;
					_g154[_g64] = _g154[_g64] + u[eOffset24 + -4];
					var _g65 = eOffset05 + -5;
					var _g155 = u;
					_g155[_g65] = _g155[_g65] + u[eOffset24 + -5];
					u[eOffset24 + -4] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -5] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -6] - u[eOffset24 + -6];
					k01_216 = u[eOffset05 + -7] - u[eOffset24 + -7];
					var _g66 = eOffset05 + -6;
					var _g156 = u;
					_g156[_g66] = _g156[_g66] + u[eOffset24 + -6];
					var _g67 = eOffset05 + -7;
					var _g157 = u;
					_g157[_g67] = _g157[_g67] + u[eOffset24 + -7];
					u[eOffset24 + -6] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -7] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					eOffset05 -= 8;
					eOffset24 -= 8;
					aOffset6 += k1;
				}
			}
		}
		var _g210 = ld - 3 >> 1;
		var _g310 = ld - 6;
		while(_g210 < _g310) {
			var l1 = _g210++;
			var k01 = n >> l1 + 2;
			var k11 = 1 << l1 + 3;
			var k0_21 = k01 >> 1;
			var rlim = n >> l1 + 6;
			var lim1 = 1 << l1 + 1;
			var aOffset7 = 0;
			var i_off2 = n2 - 1;
			var r = rlim + 1;
			while(--r > 0) {
				var A0 = a[aOffset7];
				var A1 = a[aOffset7 + 1];
				var A2 = a[aOffset7 + k11];
				var A3 = a[aOffset7 + k11 + 1];
				var A4 = a[aOffset7 + k11 * 2];
				var A5 = a[aOffset7 + k11 * 2 + 1];
				var A6 = a[aOffset7 + k11 * 3];
				var A7 = a[aOffset7 + k11 * 3 + 1];
				var eeOffset02 = i_off2;
				var eeOffset22 = i_off2 + -k0_21;
				var i8 = lim1 + 1;
				while(--i8 > 0) {
					var k00 = u[eeOffset02] - u[eeOffset22];
					var k111 = u[eeOffset02 + -1] - u[eeOffset22 + -1];
					u[eeOffset02] = u[eeOffset02] + u[eeOffset22];
					u[eeOffset02 + -1] = u[eeOffset02 + -1] + u[eeOffset22 + -1];
					u[eeOffset22] = k00 * A0 - k111 * A1;
					u[eeOffset22 + -1] = k111 * A0 + k00 * A1;
					k00 = u[eeOffset02 + -2] - u[eeOffset22 + -2];
					k111 = u[eeOffset02 + -3] - u[eeOffset22 + -3];
					u[eeOffset02 + -2] = u[eeOffset02 + -2] + u[eeOffset22 + -2];
					u[eeOffset02 + -3] = u[eeOffset02 + -3] + u[eeOffset22 + -3];
					u[eeOffset22 + -2] = k00 * A2 - k111 * A3;
					u[eeOffset22 + -3] = k111 * A2 + k00 * A3;
					k00 = u[eeOffset02 + -4] - u[eeOffset22 + -4];
					k111 = u[eeOffset02 + -5] - u[eeOffset22 + -5];
					u[eeOffset02 + -4] = u[eeOffset02 + -4] + u[eeOffset22 + -4];
					u[eeOffset02 + -5] = u[eeOffset02 + -5] + u[eeOffset22 + -5];
					u[eeOffset22 + -4] = k00 * A4 - k111 * A5;
					u[eeOffset22 + -5] = k111 * A4 + k00 * A5;
					k00 = u[eeOffset02 + -6] - u[eeOffset22 + -6];
					k111 = u[eeOffset02 + -7] - u[eeOffset22 + -7];
					u[eeOffset02 + -6] = u[eeOffset02 + -6] + u[eeOffset22 + -6];
					u[eeOffset02 + -7] = u[eeOffset02 + -7] + u[eeOffset22 + -7];
					u[eeOffset22 + -6] = k00 * A6 - k111 * A7;
					u[eeOffset22 + -7] = k111 * A6 + k00 * A7;
					eeOffset02 -= k01;
					eeOffset22 -= k01;
				}
				aOffset7 += k11 * 4;
				i_off2 -= 8;
			}
		}
		var i_off3 = n2 - 1;
		var A21 = a[n >> 3];
		var zOffset = i_off3;
		var baseOffset = i_off3 - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			var t0 = u[zOffset];
			var t1 = u[zOffset + -8];
			u[zOffset + -8] = t0 - t1;
			u[zOffset] = t0 + t1;
			t0 = u[zOffset + -1];
			t1 = u[zOffset + -9];
			u[zOffset + -9] = t0 - t1;
			u[zOffset + -1] = t0 + t1;
			t0 = u[zOffset + -2];
			t1 = u[zOffset + -10];
			var k001 = t0 - t1;
			u[zOffset + -2] = t0 + t1;
			t0 = u[zOffset + -3];
			t1 = u[zOffset + -11];
			var k112 = t0 - t1;
			u[zOffset + -3] = t0 + t1;
			u[zOffset + -10] = (k001 + k112) * A21;
			u[zOffset + -11] = (k112 - k001) * A21;
			t0 = u[zOffset + -4];
			t1 = u[zOffset + -12];
			k001 = t1 - t0;
			u[zOffset + -4] = t0 + t1;
			t0 = u[zOffset + -5];
			t1 = u[zOffset + -13];
			k112 = t0 - t1;
			u[zOffset + -5] = t0 + t1;
			u[zOffset + -12] = k112;
			u[zOffset + -13] = k001;
			t0 = u[zOffset + -6];
			t1 = u[zOffset + -14];
			k001 = t1 - t0;
			u[zOffset + -6] = t0 + t1;
			t0 = u[zOffset + -7];
			t1 = u[zOffset + -15];
			k112 = t0 - t1;
			u[zOffset + -7] = t0 + t1;
			u[zOffset + -14] = (k001 + k112) * A21;
			u[zOffset + -15] = (k001 - k112) * A21;
			var t01 = u[zOffset];
			var t11 = u[zOffset + -4];
			var k002 = t01 - t11;
			var y0 = t01 + t11;
			t01 = u[zOffset + -2];
			t11 = u[zOffset + -6];
			var y2 = t01 + t11;
			var k22 = t01 - t11;
			u[zOffset] = y0 + y2;
			u[zOffset + -2] = y0 - y2;
			var k33 = u[zOffset + -3] - u[zOffset + -7];
			u[zOffset + -4] = k002 + k33;
			u[zOffset + -6] = k002 - k33;
			t01 = u[zOffset + -1];
			t11 = u[zOffset + -5];
			var k113 = t01 - t11;
			var y1 = t01 + t11;
			var y3 = u[zOffset + -3] + u[zOffset + -7];
			u[zOffset + -1] = y1 + y3;
			u[zOffset + -3] = y1 - y3;
			u[zOffset + -5] = k113 - k22;
			u[zOffset + -7] = k113 + k22;
			var zOffset1 = zOffset - 8;
			var t02 = u[zOffset1];
			var t12 = u[zOffset1 + -4];
			var k003 = t02 - t12;
			var y01 = t02 + t12;
			t02 = u[zOffset1 + -2];
			t12 = u[zOffset1 + -6];
			var y21 = t02 + t12;
			var k221 = t02 - t12;
			u[zOffset1] = y01 + y21;
			u[zOffset1 + -2] = y01 - y21;
			var k331 = u[zOffset1 + -3] - u[zOffset1 + -7];
			u[zOffset1 + -4] = k003 + k331;
			u[zOffset1 + -6] = k003 - k331;
			t02 = u[zOffset1 + -1];
			t12 = u[zOffset1 + -5];
			var k114 = t02 - t12;
			var y11 = t02 + t12;
			var y31 = u[zOffset1 + -3] + u[zOffset1 + -7];
			u[zOffset1 + -1] = y11 + y31;
			u[zOffset1 + -3] = y11 - y31;
			u[zOffset1 + -5] = k114 - k221;
			u[zOffset1 + -7] = k114 + k221;
			zOffset -= 16;
		}
		var brOffset = 0;
		var dOffset01 = n4 - 4;
		var dOffset11 = n2 - 4;
		while(dOffset01 >= 0) {
			var k4 = bitReverse[brOffset];
			v[dOffset11 + 3] = u[k4];
			v[dOffset11 + 2] = u[k4 + 1];
			v[dOffset01 + 3] = u[k4 + 2];
			v[dOffset01 + 2] = u[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			v[dOffset11 + 1] = u[k4];
			v[dOffset11] = u[k4 + 1];
			v[dOffset01 + 1] = u[k4 + 2];
			v[dOffset01] = u[k4 + 3];
			dOffset01 -= 4;
			dOffset11 -= 4;
			brOffset += 2;
		}
		var cOffset = 0;
		var dOffset2 = 0;
		var eOffset3 = n2 - 4;
		while(dOffset2 < eOffset3) {
			var a02 = v[dOffset2] - v[eOffset3 + 2];
			var a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
			var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			var b2 = v[dOffset2] + v[eOffset3 + 2];
			var b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
			v[dOffset2] = b2 + b0;
			v[dOffset2 + 1] = b3 + b1;
			v[eOffset3 + 2] = b2 - b0;
			v[eOffset3 + 3] = b1 - b3;
			a02 = v[dOffset2 + 2] - v[eOffset3];
			a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = v[dOffset2 + 2] + v[eOffset3];
			b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
			v[dOffset2 + 2] = b2 + b0;
			v[dOffset2 + 3] = b3 + b1;
			v[eOffset3] = b2 - b0;
			v[eOffset3 + 1] = b1 - b3;
			cOffset += 4;
			dOffset2 += 4;
			eOffset3 -= 4;
		}
		var bOffset = n2 - 8;
		var eOffset4 = n2 - 8;
		var dOffset02 = 0;
		var dOffset12 = n2 - 4;
		var dOffset21 = n2;
		var dOffset3 = n - 4;
		while(eOffset4 >= 0) {
			var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
			var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
			buffer[dOffset02] = p3;
			buffer[dOffset12 + 3] = -p3;
			buffer[dOffset21] = p2;
			buffer[dOffset3 + 3] = p2;
			var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
			var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
			buffer[dOffset02 + 1] = p1;
			buffer[dOffset12 + 2] = -p1;
			buffer[dOffset21 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
			buffer[dOffset02 + 2] = p3;
			buffer[dOffset12 + 1] = -p3;
			buffer[dOffset21 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
			p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
			buffer[dOffset02 + 3] = p1;
			buffer[dOffset12] = -p1;
			buffer[dOffset21 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset4 -= 8;
			dOffset02 += 4;
			dOffset21 += 4;
			dOffset12 -= 4;
			dOffset3 -= 4;
		}
	}
	,decodePacket: function() {
		var result = this.decodeInitial();
		if(result == null) {
			return null;
		}
		var rest = this.decodePacketRest(result);
		return rest;
	}
	,decodeInitial: function() {
		this.channelBufferStart = this.channelBufferEnd = 0;
		while(true) {
			if(!this.decodeState.maybeStartPacket()) {
				return null;
			}
			if(this.decodeState.readBits(1) != 0) {
				while(true) {
					var _this = this.decodeState;
					var x;
					if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
						x = -1;
					} else {
						_this.bytesInSeg--;
						_this.inputPosition += 1;
						x = _this.input.readByte();
					}
					_this.validBits = 0;
					if(!(-1 != x)) {
						break;
					}
				}
				continue;
			}
			break;
		}
		var n = this.header.modes.length - 1;
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var i = this.decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
		if(i == -1 || i >= this.header.modes.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodeInitial"}));
		}
		var m = this.header.modes[i];
		var n1;
		var prev;
		var next;
		if(m.blockflag) {
			n1 = this.header.blocksize1;
			prev = this.decodeState.readBits(1);
			next = this.decodeState.readBits(1);
		} else {
			next = 0;
			prev = next;
			n1 = this.header.blocksize0;
		}
		var windowCenter = n1 >> 1;
		return { mode : i, left : m.blockflag && prev == 0 ? { start : n1 - this.header.blocksize0 >> 2, end : n1 + this.header.blocksize0 >> 2} : { start : 0, end : windowCenter}, right : m.blockflag && next == 0 ? { start : n1 * 3 - this.header.blocksize0 >> 2, end : n1 * 3 + this.header.blocksize0 >> 2} : { start : windowCenter, end : n1}};
	}
	,decodePacketRest: function(r) {
		var len = 0;
		var m = this.header.modes[r.mode];
		var this1 = new Array(256);
		var zeroChannel = this1;
		var this2 = new Array(256);
		var reallyZeroChannel = this2;
		var n = m.blockflag ? this.header.blocksize1 : this.header.blocksize0;
		var map = this.header.mapping[m.mapping];
		var n2 = n >> 1;
		var rangeList = [256,128,86,64];
		var codebooks = this.header.codebooks;
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			var s = map.chan[i].mux;
			zeroChannel[i] = false;
			var floor = this.header.floorConfig[map.submapFloor[s]];
			if(floor.type == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 581, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodePacketRest"}));
			} else {
				var g = floor.floor1;
				if(this.decodeState.readBits(1) != 0) {
					var fy = [];
					var this3 = new Array(256);
					var step2Flag = this3;
					var range = rangeList[g.floor1Multiplier - 1];
					var offset = 2;
					fy = this.finalY[i];
					var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[0] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_4[range] : range < 512 ? 5 + log2_4[range >> 5] : 10 + log2_4[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_4[range >> 15] : 20 + log2_4[range >> 20] : range < 536870912 ? 25 + log2_4[range >> 25] : range < -2147483648 ? 30 + log2_4[range >> 30] : 0) - 1);
					var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[1] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_41[range] : range < 512 ? 5 + log2_41[range >> 5] : 10 + log2_41[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_41[range >> 15] : 20 + log2_41[range >> 20] : range < 536870912 ? 25 + log2_41[range >> 25] : range < -2147483648 ? 30 + log2_41[range >> 30] : 0) - 1);
					var _g2 = 0;
					var _g11 = g.partitions;
					while(_g2 < _g11) {
						var j = _g2++;
						var pclass = g.partitionClassList[j];
						var cdim = g.classDimensions[pclass];
						var cbits = g.classSubclasses[pclass];
						var csub = (1 << cbits) - 1;
						var cval = 0;
						if(cbits != 0) {
							var c = codebooks[g.classMasterbooks[pclass]];
							var _this = this.decodeState;
							if(_this.validBits < 10) {
								_this.prepHuffman();
							}
							var i1 = c.fastHuffman[_this.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								_this.acc = _this.acc >>> l;
								_this.validBits -= l;
								if(_this.validBits < 0) {
									_this.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = _this.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							cval = val;
						}
						var books = g.subclassBooks[pclass];
						var _g3 = 0;
						var _g12 = cdim;
						while(_g3 < _g12) {
							var k = _g3++;
							var book = books[cval & csub];
							cval >>= cbits;
							var tmp = offset++;
							var tmp1;
							if(book >= 0) {
								var _this1 = this.decodeState;
								var c1 = codebooks[book];
								if(_this1.validBits < 10) {
									_this1.prepHuffman();
								}
								var i2 = c1.fastHuffman[_this1.acc & 1023];
								var val1;
								if(i2 >= 0) {
									var l1 = c1.codewordLengths[i2];
									_this1.acc = _this1.acc >>> l1;
									_this1.validBits -= l1;
									if(_this1.validBits < 0) {
										_this1.validBits = 0;
										val1 = -1;
									} else {
										val1 = i2;
									}
								} else {
									val1 = _this1.decodeScalarRaw(c1);
								}
								if(c1.sparse) {
									val1 = c1.sortedValues[val1];
								}
								tmp1 = val1;
							} else {
								tmp1 = 0;
							}
							fy[tmp] = tmp1;
						}
					}
					if(this.decodeState.validBits == -1) {
						zeroChannel[i] = true;
						continue;
					}
					step2Flag[0] = step2Flag[1] = true;
					var naighbors = g.neighbors;
					var xlist = g.xlist;
					var _g21 = 2;
					var _g31 = g.values;
					while(_g21 < _g31) {
						var j1 = _g21++;
						var low = naighbors[j1][0];
						var high = naighbors[j1][1];
						var x0 = xlist[low];
						var y0 = fy[low];
						var dy = fy[high] - y0;
						var adx = xlist[high] - x0;
						var err = Math.abs(dy) * (xlist[j1] - x0);
						var off = err / adx | 0;
						var lowroom = dy < 0 ? y0 - off : y0 + off;
						var val2 = fy[j1];
						var highroom = range - lowroom;
						var room = highroom < lowroom ? highroom * 2 : lowroom * 2;
						if(val2 != 0) {
							step2Flag[low] = step2Flag[high] = true;
							step2Flag[j1] = true;
							if(val2 >= room) {
								if(highroom > lowroom) {
									fy[j1] = val2 - lowroom + lowroom;
								} else {
									fy[j1] = lowroom - val2 + highroom - 1;
								}
							} else if((val2 & 1) != 0) {
								fy[j1] = lowroom - (val2 + 1 >> 1);
							} else {
								fy[j1] = lowroom + (val2 >> 1);
							}
						} else {
							step2Flag[j1] = false;
							fy[j1] = lowroom;
						}
					}
					var _g4 = 0;
					var _g5 = g.values;
					while(_g4 < _g5) {
						var j2 = _g4++;
						if(!step2Flag[j2]) {
							fy[j2] = -1;
						}
					}
				} else {
					zeroChannel[i] = true;
				}
			}
		}
		var _g22 = 0;
		var _g32 = this.header.channel;
		while(_g22 < _g32) {
			var i3 = _g22++;
			reallyZeroChannel[i3] = zeroChannel[i3];
		}
		var _g41 = 0;
		var _g51 = map.couplingSteps;
		while(_g41 < _g51) {
			var i4 = _g41++;
			if(!zeroChannel[map.chan[i4].magnitude] || !zeroChannel[map.chan[i4].angle]) {
				zeroChannel[map.chan[i4].magnitude] = zeroChannel[map.chan[i4].angle] = false;
			}
		}
		var _g6 = 0;
		var _g7 = map.submaps;
		while(_g6 < _g7) {
			var i5 = _g6++;
			var this4 = new Array(this.header.channel);
			var residueBuffers = this4;
			var this5 = new Array(256);
			var doNotDecode = this5;
			var ch = 0;
			var _g61 = 0;
			var _g71 = this.header.channel;
			while(_g61 < _g71) {
				var j3 = _g61++;
				if(map.chan[j3].mux == i5) {
					if(zeroChannel[j3]) {
						doNotDecode[ch] = true;
						residueBuffers[ch] = null;
					} else {
						doNotDecode[ch] = false;
						residueBuffers[ch] = this.channelBuffers[j3];
					}
					++ch;
				}
			}
			var r1 = map.submapResidue[i5];
			var residue = this.header.residueConfig[r1];
			residue.decode(this.decodeState,this.header,residueBuffers,ch,n2,doNotDecode,this.channelBuffers);
		}
		var i6 = map.couplingSteps;
		var n21 = n >> 1;
		while(--i6 >= 0) {
			var m1 = this.channelBuffers[map.chan[i6].magnitude];
			var a = this.channelBuffers[map.chan[i6].angle];
			var _g8 = 0;
			var _g9 = n21;
			while(_g8 < _g9) {
				var j4 = _g8++;
				var a2;
				var m2;
				if(m1[j4] > 0) {
					if(a[j4] > 0) {
						m2 = m1[j4];
						a2 = m1[j4] - a[j4];
					} else {
						a2 = m1[j4];
						m2 = m1[j4] + a[j4];
					}
				} else if(a[j4] > 0) {
					m2 = m1[j4];
					a2 = m1[j4] + a[j4];
				} else {
					a2 = m1[j4];
					m2 = m1[j4] - a[j4];
				}
				m1[j4] = m2;
				a[j4] = a2;
			}
		}
		var _g81 = 0;
		var _g91 = this.header.channel;
		while(_g81 < _g91) {
			var i7 = _g81++;
			if(reallyZeroChannel[i7]) {
				var _g82 = 0;
				var _g92 = n21;
				while(_g82 < _g92) {
					var j5 = _g82++;
					this.channelBuffers[i7][j5] = 0;
				}
			} else {
				map.doFloor(this.header.floorConfig,i7,n,this.channelBuffers[i7],this.finalY[i7],null);
			}
		}
		var _g10 = 0;
		var _g111 = this.header.channel;
		while(_g10 < _g111) {
			var i8 = _g10++;
			this.inverseMdct(this.channelBuffers[i8],n,m.blockflag);
		}
		var _this2 = this.decodeState;
		while(_this2.bytesInSeg != 0 || !_this2.lastSeg && _this2.next() != 0) {
			_this2.bytesInSeg--;
			_this2.inputPosition += 1;
			_this2.input.readByte();
		}
		return this.decodeState.finishDecodePacket(this.previousLength,n,r);
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecoder
};
var kha_audio2_ogg_vorbis_VorbisTools = function() { };
$hxClasses["kha.audio2.ogg.vorbis.VorbisTools"] = kha_audio2_ogg_vorbis_VorbisTools;
kha_audio2_ogg_vorbis_VorbisTools.__name__ = "kha.audio2.ogg.vorbis.VorbisTools";
kha_audio2_ogg_vorbis_VorbisTools.pointCompare = function(a,b) {
	if(a.x < b.x) {
		return -1;
	} else if(a.x > b.x) {
		return 1;
	} else {
		return 0;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.uintAsc = function(a,b) {
	if(_$UInt_UInt_$Impl_$.gt(b,a)) {
		return -1;
	} else if(a == b) {
		return 0;
	} else {
		return 1;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.lookup1Values = function(entries,dim) {
	var r = Math.exp(Math.log(entries) / dim) | 0;
	if((Math.pow(r + 1,dim) | 0) <= entries) {
		++r;
	}
	return r;
};
kha_audio2_ogg_vorbis_VorbisTools.computeWindow = function(n,$window) {
	var n2 = n >> 1;
	var _g = 0;
	var _g1 = n2;
	while(_g < _g1) {
		var i = _g++;
		$window[i] = Math.sin(1.5707963267948966 * kha_audio2_ogg_vorbis_VorbisTools.square(Math.sin((i + 0.5) / n2 * 0.5 * 3.14159265358979323846264)));
	}
};
kha_audio2_ogg_vorbis_VorbisTools.square = function(f) {
	return f * f;
};
kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse = function(n,rev) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var n8 = n >> 3;
	var _g = 0;
	var _g1 = n8;
	while(_g < _g1) {
		var i = _g++;
		var n1 = i;
		n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
		n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
		n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
		n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
		rev[i] = (n1 >>> 16 | n1 << 16) >>> 32 - ld + 3 << 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors = function(n,af,bf,cf) {
	var n4 = n >> 2;
	var n8 = n >> 3;
	var k2 = 0;
	var _g = 0;
	var _g1 = n4;
	while(_g < _g1) {
		var k = _g++;
		af[k2] = Math.cos(4 * k * 3.14159265358979323846264 / n);
		af[k2 + 1] = -Math.sin(4 * k * 3.14159265358979323846264 / n);
		bf[k2] = Math.cos((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		bf[k2 + 1] = Math.sin((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		k2 += 2;
	}
	var k21 = 0;
	var _g2 = 0;
	var _g3 = n8;
	while(_g2 < _g3) {
		var k1 = _g2++;
		cf[k21] = Math.cos(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		cf[k21 + 1] = -Math.sin(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		k21 += 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.drawLine = function(output,x0,y0,x1,y1,n) {
	if(kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable == null) {
		var this1 = new Array(32);
		kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable = this1;
		var _g = 0;
		while(_g < 32) {
			var i = _g++;
			var this2 = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable;
			var this3 = new Array(64);
			this2[i] = this3;
			var _g1 = 1;
			while(_g1 < 64) {
				var j = _g1++;
				kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i][j] = i / j | 0;
			}
		}
	}
	var dy = y1 - y0;
	var adx = x1 - x0;
	var ady = dy < 0 ? -dy : dy;
	var base;
	var x = x0;
	var y = y0;
	var err = 0;
	var sy;
	if(adx < 64 && ady < 32) {
		if(dy < 0) {
			base = -kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base - 1;
		} else {
			base = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base + 1;
		}
	} else {
		base = dy / adx | 0;
		sy = dy < 0 ? base - 1 : base + 1;
	}
	ady -= (base < 0 ? -base : base) * adx;
	if(x1 > n) {
		x1 = n;
	}
	var _g2 = x;
	var _g11 = output;
	_g11[_g2] = _g11[_g2] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	var _g3 = x + 1;
	var _g12 = x1;
	while(_g3 < _g12) {
		var i1 = _g3++;
		err += ady;
		if(err >= adx) {
			err -= adx;
			y += sy;
		} else {
			y += base;
		}
		var _g4 = i1;
		var _g13 = output;
		_g13[_g4] = _g13[_g4] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	}
};
var kha_audio2_ogg_vorbis_data_Codebook = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Codebook"] = kha_audio2_ogg_vorbis_data_Codebook;
kha_audio2_ogg_vorbis_data_Codebook.__name__ = "kha.audio2.ogg.vorbis.data.Codebook";
kha_audio2_ogg_vorbis_data_Codebook.read = function(decodeState) {
	var c = new kha_audio2_ogg_vorbis_data_Codebook();
	if(decodeState.readBits(8) != 66 || decodeState.readBits(8) != 67 || decodeState.readBits(8) != 86) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 40, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	var x = decodeState.readBits(8);
	c.dimensions = (decodeState.readBits(8) << 8) + x;
	var x1 = decodeState.readBits(8);
	var y = decodeState.readBits(8);
	c.entries = (decodeState.readBits(8) << 16) + (y << 8) + x1;
	var ordered = decodeState.readBits(1);
	c.sparse = ordered != 0 ? false : decodeState.readBits(1) != 0;
	var this1 = new Array(c.entries);
	var lengths = this1;
	if(!c.sparse) {
		c.codewordLengths = lengths;
	}
	var total = 0;
	if(ordered != 0) {
		var currentEntry = 0;
		var currentLength = decodeState.readBits(5) + 1;
		while(currentEntry < c.entries) {
			var limit = c.entries - currentEntry;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n = decodeState.readBits(limit < 16384 ? limit < 16 ? log2_4[limit] : limit < 512 ? 5 + log2_4[limit >> 5] : 10 + log2_4[limit >> 10] : limit < 16777216 ? limit < 524288 ? 15 + log2_4[limit >> 15] : 20 + log2_4[limit >> 20] : limit < 536870912 ? 25 + log2_4[limit >> 25] : limit < -2147483648 ? 30 + log2_4[limit >> 30] : 0);
			if(currentEntry + n > c.entries) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook entrys",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				lengths[currentEntry + i] = currentLength;
			}
			currentEntry += n;
			++currentLength;
		}
	} else {
		var _g2 = 0;
		var _g11 = c.entries;
		while(_g2 < _g11) {
			var j = _g2++;
			var present = c.sparse ? decodeState.readBits(1) : 1;
			if(present != 0) {
				lengths[j] = decodeState.readBits(5) + 1;
				++total;
			} else {
				lengths[j] = 255;
			}
		}
	}
	if(c.sparse && total >= c.entries >> 2) {
		c.codewordLengths = lengths;
		c.sparse = false;
	}
	var tmp;
	if(c.sparse) {
		tmp = total;
	} else {
		var sortedCount = 0;
		var _g3 = 0;
		var _g12 = c.entries;
		while(_g3 < _g12) {
			var j1 = _g3++;
			var l = lengths[j1];
			if(l > 10 && l != 255) {
				++sortedCount;
			}
		}
		tmp = sortedCount;
	}
	c.sortedEntries = tmp;
	var values = null;
	if(!c.sparse) {
		var this2 = new Array(c.entries);
		c.codewords = this2;
	} else {
		if(c.sortedEntries != 0) {
			var this3 = new Array(c.sortedEntries);
			c.codewordLengths = this3;
			var this4 = new Array(c.entries);
			c.codewords = this4;
			var this5 = new Array(c.entries);
			values = this5;
		}
		var size = c.entries + 64 * c.sortedEntries;
	}
	if(!c.computeCodewords(lengths,c.entries,values)) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"compute codewords",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 120, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.sortedEntries != 0) {
		c.sortedCodewords = [];
		var this6 = new Array(c.sortedEntries);
		c.sortedValues = this6;
		c.computeSortedHuffman(lengths,values);
	}
	if(c.sparse) {
		values = null;
		c.codewords = null;
		lengths = null;
	}
	c.computeAcceleratedHuffman();
	c.lookupType = decodeState.readBits(4);
	if(c.lookupType > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook lookup type",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 143, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.lookupType > 0) {
		var x2 = decodeState.readBits(32);
		var mantissa = _$UInt_UInt_$Impl_$.toFloat(x2 & 2097151);
		var sign = x2 & -2147483648;
		var exp = (x2 & 2145386496) >>> 21;
		var res = sign != 0 ? -mantissa : mantissa;
		c.minimumValue = res * Math.pow(2,exp - 788);
		var x3 = decodeState.readBits(32);
		var mantissa1 = _$UInt_UInt_$Impl_$.toFloat(x3 & 2097151);
		var sign1 = x3 & -2147483648;
		var exp1 = (x3 & 2145386496) >>> 21;
		var res1 = sign1 != 0 ? -mantissa1 : mantissa1;
		c.deltaValue = res1 * Math.pow(2,exp1 - 788);
		c.valueBits = decodeState.readBits(4) + 1;
		c.sequenceP = decodeState.readBits(1) != 0;
		if(c.lookupType == 1) {
			c.lookupValues = kha_audio2_ogg_vorbis_VorbisTools.lookup1Values(c.entries,c.dimensions);
		} else {
			c.lookupValues = c.entries * c.dimensions;
		}
		var this7 = new Array(c.lookupValues);
		var mults = this7;
		var _g4 = 0;
		var _g13 = c.lookupValues;
		while(_g4 < _g13) {
			var j2 = _g4++;
			var q = decodeState.readBits(c.valueBits);
			if(q == -1) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"fail lookup",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 161, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			mults[j2] = q;
		}
		var this8 = new Array(c.lookupValues);
		c.multiplicands = this8;
		var _g21 = 0;
		var _g31 = c.lookupValues;
		while(_g21 < _g31) {
			var j3 = _g21++;
			c.multiplicands[j3] = mults[j3] * c.deltaValue + c.minimumValue;
		}
		if(c.lookupType == 2 && c.sequenceP) {
			var _g22 = 1;
			var _g32 = c.lookupValues;
			while(_g22 < _g32) {
				var j4 = _g22++;
				c.multiplicands[j4] = c.multiplicands[j4 - 1];
			}
			c.sequenceP = false;
		}
	}
	return c;
};
kha_audio2_ogg_vorbis_data_Codebook.prototype = {
	computeCodewords: function(len,n,values) {
		var this1 = new Array(32);
		var available = this1;
		available[0] = 0;
		available[1] = 0;
		available[2] = 0;
		available[3] = 0;
		available[4] = 0;
		available[5] = 0;
		available[6] = 0;
		available[7] = 0;
		available[8] = 0;
		available[9] = 0;
		available[10] = 0;
		available[11] = 0;
		available[12] = 0;
		available[13] = 0;
		available[14] = 0;
		available[15] = 0;
		available[16] = 0;
		available[17] = 0;
		available[18] = 0;
		available[19] = 0;
		available[20] = 0;
		available[21] = 0;
		available[22] = 0;
		available[23] = 0;
		available[24] = 0;
		available[25] = 0;
		available[26] = 0;
		available[27] = 0;
		available[28] = 0;
		available[29] = 0;
		available[30] = 0;
		available[31] = 0;
		var k = 0;
		while(k < n) {
			if(len[k] < 255) {
				break;
			}
			++k;
		}
		if(k == n) {
			return true;
		}
		var m = 0;
		var count = m++;
		if(!this.sparse) {
			this.codewords[k] = 0;
		} else {
			this.codewords[count] = 0;
			this.codewordLengths[count] = len[k];
			values[count] = k;
		}
		var i = 0;
		while(++i <= len[k]) available[i] = 1 << 32 - i;
		i = k;
		while(++i < n) {
			var z = len[i];
			if(z == 255) {
				continue;
			}
			while(z > 0 && available[z] == 0) --z;
			if(z == 0) {
				return false;
			}
			var res = available[z];
			available[z] = 0;
			var n1 = res;
			n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
			n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
			n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
			n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
			var huffCode = n1 >>> 16 | n1 << 16;
			var count1 = m++;
			if(!this.sparse) {
				this.codewords[i] = huffCode;
			} else {
				this.codewords[count1] = huffCode;
				this.codewordLengths[count1] = len[i];
				values[count1] = i;
			}
			if(z != len[i]) {
				var y = len[i];
				while(y > z) {
					available[y] = res + (1 << 32 - y);
					--y;
				}
			}
		}
		return true;
	}
	,computeSortedHuffman: function(lengths,values) {
		if(!this.sparse) {
			var k = 0;
			var _g = 0;
			var _g1 = this.entries;
			while(_g < _g1) {
				var i = _g++;
				var len = lengths[i];
				if(this.sparse ? true : len == 255 ? false : len > 10) {
					var n = this.codewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					this.sortedCodewords[k++] = n >>> 16 | n << 16;
				}
			}
		} else {
			var _g2 = 0;
			var _g11 = this.sortedEntries;
			while(_g2 < _g11) {
				var i1 = _g2++;
				var n1 = this.codewords[i1];
				n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
				n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
				n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
				n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
				this.sortedCodewords[i1] = n1 >>> 16 | n1 << 16;
			}
		}
		this.sortedCodewords[this.sortedEntries] = -1;
		this.sortedCodewords.sort(kha_audio2_ogg_vorbis_VorbisTools.uintAsc);
		var len1 = this.sparse ? this.sortedEntries : this.entries;
		var _g3 = 0;
		var _g12 = len1;
		while(_g3 < _g12) {
			var i2 = _g3++;
			var huffLen = this.sparse ? lengths[values[i2]] : lengths[i2];
			if(this.sparse ? true : huffLen == 255 ? false : huffLen > 10) {
				var n2 = this.codewords[i2];
				n2 = (n2 & -1431655766) >>> 1 | (n2 & 1431655765) << 1;
				n2 = (n2 & -858993460) >>> 2 | (n2 & 858993459) << 2;
				n2 = (n2 & -252645136) >>> 4 | (n2 & 252645135) << 4;
				n2 = (n2 & -16711936) >>> 8 | (n2 & 16711935) << 8;
				var code = n2 >>> 16 | n2 << 16;
				var x = 0;
				var n3 = this.sortedEntries;
				while(n3 > 1) {
					var m = x + (n3 >> 1);
					if(_$UInt_UInt_$Impl_$.gte(code,this.sortedCodewords[m])) {
						x = m;
						n3 -= n3 >> 1;
					} else {
						n3 >>= 1;
					}
				}
				if(this.sparse) {
					this.sortedValues[x] = values[i2];
					this.codewordLengths[x] = huffLen;
				} else {
					this.sortedValues[x] = i2;
				}
			}
		}
	}
	,computeAcceleratedHuffman: function() {
		var this1 = new Array(1024);
		this.fastHuffman = this1;
		this.fastHuffman[0] = -1;
		var _g = 0;
		var _g1 = 1024;
		while(_g < _g1) {
			var i = _g++;
			this.fastHuffman[i] = -1;
		}
		var len = this.sparse ? this.sortedEntries : this.entries;
		var _g2 = 0;
		var _g3 = len;
		while(_g2 < _g3) {
			var i1 = _g2++;
			if(this.codewordLengths[i1] <= 10) {
				var z;
				if(this.sparse) {
					var n = this.sortedCodewords[i1];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					z = n >>> 16 | n << 16;
				} else {
					z = this.codewords[i1];
				}
				while(z < 1024) {
					this.fastHuffman[z] = i1;
					z += 1 << this.codewordLengths[i1];
				}
			}
		}
	}
	,codebookDecode: function(decodeState,output,offset,len) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		var minimumValue = this.minimumValue;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		if(this.lookupType == 1) {
			var div = 1;
			var last = 0.0;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i1 = _g++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1;
				var _g11 = output;
				_g11[_g2] = _g11[_g2] + val1;
				if(sequenceP) {
					last = val1 + minimumValue;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		if(sequenceP) {
			var last1 = 0.0;
			var _g3 = 0;
			var _g12 = len;
			while(_g3 < _g12) {
				var i2 = _g3++;
				var val2 = multiplicands[z + i2] + last1;
				var _g4 = offset + i2;
				var _g13 = output;
				_g13[_g4] = _g13[_g4] + val2;
				last1 = val2 + minimumValue;
			}
		} else {
			var last2 = 0.0;
			var _g5 = 0;
			var _g14 = len;
			while(_g5 < _g14) {
				var i3 = _g5++;
				var _g6 = offset + i3;
				var _g15 = output;
				_g15[_g6] = _g15[_g6] + (multiplicands[z + i3] + last2);
			}
		}
		return true;
	}
	,codebookDecodeStep: function(decodeState,output,offset,len,step) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var last = 0.0;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		if(this.lookupType == 1) {
			var div = 1;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i1 = _g++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1 * step;
				var _g11 = output;
				_g11[_g2] = _g11[_g2] + val1;
				if(sequenceP) {
					last = val1;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		var _g3 = 0;
		var _g12 = len;
		while(_g3 < _g12) {
			var i2 = _g3++;
			var val2 = multiplicands[z + i2] + last;
			var _g4 = offset + i2 * step;
			var _g13 = output;
			_g13[_g4] = _g13[_g4] + val2;
			if(sequenceP) {
				last = val2;
			}
		}
		return true;
	}
	,decodeDeinterleaveRepeat: function(decodeState,residueBuffers,ch,cInter,pInter,len,totalDecode) {
		var effective = this.dimensions;
		if(this.lookupType == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 488, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
		}
		var multiplicands = this.multiplicands;
		var sequenceP = this.sequenceP;
		var lookupValues = this.lookupValues;
		while(totalDecode > 0) {
			var last = 0.0;
			if(decodeState.validBits < 10) {
				decodeState.prepHuffman();
			}
			var i = this.fastHuffman[decodeState.acc & 1023];
			var val;
			if(i >= 0) {
				var l = this.codewordLengths[i];
				decodeState.acc = decodeState.acc >>> l;
				decodeState.validBits -= l;
				if(decodeState.validBits < 0) {
					decodeState.validBits = 0;
					val = -1;
				} else {
					val = i;
				}
			} else {
				val = decodeState.decodeScalarRaw(this);
			}
			if(this.sparse) {
				val = this.sortedValues[val];
			}
			var z = val;
			if(z < 0) {
				if(decodeState.bytesInSeg == 0 && decodeState.lastSeg) {
					return null;
				}
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 503, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
			}
			if(cInter + pInter * ch + effective > len * ch) {
				effective = len * ch - (pInter * ch - cInter);
			}
			if(this.lookupType == 1) {
				var div = 1;
				if(sequenceP) {
					var _g = 0;
					var _g1 = effective;
					while(_g < _g1) {
						var i1 = _g++;
						var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val1 = multiplicands[off] + last;
						var _g2 = pInter;
						var _g11 = residueBuffers[cInter];
						_g11[_g2] = _g11[_g2] + val1;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val1;
						div = div * lookupValues;
					}
				} else {
					var _g3 = 0;
					var _g12 = effective;
					while(_g3 < _g12) {
						var i2 = _g3++;
						var off1 = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val2 = multiplicands[off1] + last;
						var _g4 = pInter;
						var _g13 = residueBuffers[cInter];
						_g13[_g4] = _g13[_g4] + val2;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						div = div * lookupValues;
					}
				}
			} else {
				z *= this.dimensions;
				if(sequenceP) {
					var _g5 = 0;
					var _g14 = effective;
					while(_g5 < _g14) {
						var i3 = _g5++;
						var val3 = multiplicands[z + i3] + last;
						var _g6 = pInter;
						var _g15 = residueBuffers[cInter];
						_g15[_g6] = _g15[_g6] + val3;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val3;
					}
				} else {
					var _g7 = 0;
					var _g16 = effective;
					while(_g7 < _g16) {
						var i4 = _g7++;
						var val4 = multiplicands[z + i4] + last;
						var _g8 = pInter;
						var _g17 = residueBuffers[cInter];
						_g17[_g8] = _g17[_g8] + val4;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
					}
				}
			}
			totalDecode -= effective;
		}
		return { cInter : cInter, pInter : pInter};
	}
	,residueDecode: function(decodeState,target,offset,n,rtype) {
		if(rtype == 0) {
			var step = n / this.dimensions | 0;
			var _g = 0;
			var _g1 = step;
			while(_g < _g1) {
				var k = _g++;
				if(!this.codebookDecodeStep(decodeState,target,offset + k,n - offset - k,step)) {
					return false;
				}
			}
		} else {
			var k1 = 0;
			while(k1 < n) {
				if(!this.codebookDecode(decodeState,target,offset,n - k1)) {
					return false;
				}
				k1 += this.dimensions;
				offset += this.dimensions;
			}
		}
		return true;
	}
	,__class__: kha_audio2_ogg_vorbis_data_Codebook
};
var kha_audio2_ogg_vorbis_data_Comment = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["kha.audio2.ogg.vorbis.data.Comment"] = kha_audio2_ogg_vorbis_data_Comment;
kha_audio2_ogg_vorbis_data_Comment.__name__ = "kha.audio2.ogg.vorbis.data.Comment";
kha_audio2_ogg_vorbis_data_Comment.prototype = {
	get_loopStart: function() {
		return Std.parseInt(this.getString("loopstart"));
	}
	,get_loopLength: function() {
		return Std.parseInt(this.getString("looplength"));
	}
	,add: function(key,value) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			(__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).push(value);
		} else {
			var v = [value];
			var _this2 = this.data;
			if(__map_reserved[key] != null) {
				_this2.setReserved(key,v);
			} else {
				_this2.h[key] = v;
			}
		}
	}
	,getString: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			return (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key])[0];
		} else {
			return null;
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Comment
	,__properties__: {get_loopLength:"get_loopLength",get_loopStart:"get_loopStart"}
};
var kha_audio2_ogg_vorbis_data_Floor = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor"] = kha_audio2_ogg_vorbis_data_Floor;
kha_audio2_ogg_vorbis_data_Floor.__name__ = "kha.audio2.ogg.vorbis.data.Floor";
kha_audio2_ogg_vorbis_data_Floor.read = function(decodeState,codebooks) {
	var floor = new kha_audio2_ogg_vorbis_data_Floor();
	floor.type = decodeState.readBits(16);
	if(floor.type > 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 28, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	}
	if(floor.type == 0) {
		var g = floor.floor0 = new kha_audio2_ogg_vorbis_data_Floor0();
		g.order = decodeState.readBits(8);
		g.rate = decodeState.readBits(16);
		g.barkMapSize = decodeState.readBits(16);
		g.amplitudeBits = decodeState.readBits(6);
		g.amplitudeOffset = decodeState.readBits(8);
		g.numberOfBooks = decodeState.readBits(4) + 1;
		var _g = 0;
		var _g1 = g.numberOfBooks;
		while(_g < _g1) {
			var j = _g++;
			g.bookList[j] = decodeState.readBits(8);
		}
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 41, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	} else {
		var p = [];
		var g1 = floor.floor1 = new kha_audio2_ogg_vorbis_data_Floor1();
		var maxClass = -1;
		g1.partitions = decodeState.readBits(5);
		var this1 = new Array(g1.partitions);
		g1.partitionClassList = this1;
		var _g2 = 0;
		var _g11 = g1.partitions;
		while(_g2 < _g11) {
			var j1 = _g2++;
			g1.partitionClassList[j1] = decodeState.readBits(4);
			if(g1.partitionClassList[j1] > maxClass) {
				maxClass = g1.partitionClassList[j1];
			}
		}
		var this2 = new Array(maxClass + 1);
		g1.classDimensions = this2;
		var this3 = new Array(maxClass + 1);
		g1.classMasterbooks = this3;
		var this4 = new Array(maxClass + 1);
		g1.classSubclasses = this4;
		var this5 = new Array(maxClass + 1);
		g1.subclassBooks = this5;
		var _g21 = 0;
		var _g3 = maxClass + 1;
		while(_g21 < _g3) {
			var j2 = _g21++;
			g1.classDimensions[j2] = decodeState.readBits(3) + 1;
			g1.classSubclasses[j2] = decodeState.readBits(2);
			if(g1.classSubclasses[j2] != 0) {
				g1.classMasterbooks[j2] = decodeState.readBits(8);
				if(g1.classMasterbooks[j2] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 64, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
			var kl = 1 << g1.classSubclasses[j2];
			var this6 = g1.subclassBooks;
			var this7 = new Array(kl);
			this6[j2] = this7;
			var _g22 = 0;
			var _g31 = kl;
			while(_g22 < _g31) {
				var k = _g22++;
				g1.subclassBooks[j2][k] = decodeState.readBits(8) - 1;
				if(g1.subclassBooks[j2][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
		}
		g1.floor1Multiplier = decodeState.readBits(2) + 1;
		g1.rangebits = decodeState.readBits(4);
		var this8 = new Array(250);
		g1.xlist = this8;
		g1.xlist[0] = 0;
		g1.xlist[1] = 1 << g1.rangebits;
		g1.values = 2;
		var _g4 = 0;
		var _g5 = g1.partitions;
		while(_g4 < _g5) {
			var j3 = _g4++;
			var c = g1.partitionClassList[j3];
			var _g41 = 0;
			var _g51 = g1.classDimensions[c];
			while(_g41 < _g51) {
				var k1 = _g41++;
				g1.xlist[g1.values] = decodeState.readBits(g1.rangebits);
				g1.values++;
			}
		}
		var _g6 = 0;
		var _g7 = g1.values;
		while(_g6 < _g7) {
			var j4 = _g6++;
			p.push(new kha_audio2_ogg_vorbis_data_IntPoint());
			p[j4].x = g1.xlist[j4];
			p[j4].y = j4;
		}
		p.sort(kha_audio2_ogg_vorbis_VorbisTools.pointCompare);
		var this9 = new Array(g1.values);
		g1.sortedOrder = this9;
		var _g8 = 0;
		var _g9 = g1.values;
		while(_g8 < _g9) {
			var j5 = _g8++;
			g1.sortedOrder[j5] = p[j5].y;
		}
		var this10 = new Array(g1.values);
		g1.neighbors = this10;
		var _g10 = 2;
		var _g111 = g1.values;
		while(_g10 < _g111) {
			var j6 = _g10++;
			var x = g1.xlist;
			var low = -1;
			var high = 65536;
			var plow = 0;
			var phigh = 0;
			var _g12 = 0;
			var _g13 = j6;
			while(_g12 < _g13) {
				var i = _g12++;
				if(x[i] > low && x[i] < x[j6]) {
					plow = i;
					low = x[i];
				}
				if(x[i] < high && x[i] > x[j6]) {
					phigh = i;
					high = x[i];
				}
			}
			var ne_low = plow;
			var ne_high = phigh;
			var this11 = g1.neighbors;
			var this12 = new Array(g1.values);
			this11[j6] = this12;
			g1.neighbors[j6][0] = ne_low;
			g1.neighbors[j6][1] = ne_high;
		}
	}
	return floor;
};
kha_audio2_ogg_vorbis_data_Floor.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor
};
var kha_audio2_ogg_vorbis_data_Floor0 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor0"] = kha_audio2_ogg_vorbis_data_Floor0;
kha_audio2_ogg_vorbis_data_Floor0.__name__ = "kha.audio2.ogg.vorbis.data.Floor0";
kha_audio2_ogg_vorbis_data_Floor0.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor0
};
var kha_audio2_ogg_vorbis_data_Floor1 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor1"] = kha_audio2_ogg_vorbis_data_Floor1;
kha_audio2_ogg_vorbis_data_Floor1.__name__ = "kha.audio2.ogg.vorbis.data.Floor1";
kha_audio2_ogg_vorbis_data_Floor1.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor1
};
var kha_audio2_ogg_vorbis_data_Header = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Header"] = kha_audio2_ogg_vorbis_data_Header;
kha_audio2_ogg_vorbis_data_Header.__name__ = "kha.audio2.ogg.vorbis.data.Header";
kha_audio2_ogg_vorbis_data_Header.read = function(decodeState) {
	var page = decodeState.page;
	page.start(decodeState);
	if((page.flag & 2) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"not firstPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 4) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"lastPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 1) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"continuedPacket",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.firstPageValidate();
	decodeState.inputPosition += 1;
	if(decodeState.input.readByte() != 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 57, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new haxe_io_Bytes(new ArrayBuffer(6));
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[0] = x;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[1] = x1;
	var x2;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x2 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x2 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[2] = x2;
	var x3;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x3 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x3 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[3] = x3;
	var x4;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x4 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x4 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[4] = x4;
	var x5;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x5 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x5 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[5] = x5;
	if(header.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	decodeState.inputPosition += 4;
	var version = decodeState.input.readInt32();
	if(version != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"vorbis version : " + version,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 66, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header1 = new kha_audio2_ogg_vorbis_data_Header();
	decodeState.inputPosition += 1;
	header1.channel = decodeState.input.readByte();
	if(header1.channel == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no channel",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	} else if(header1.channel > 16) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,"too many channels",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 75, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.sampleRate = decodeState.input.readInt32();
	if(header1.sampleRate == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no sampling rate",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 80, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.maximumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.nominalBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.minimumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 1;
	var x6 = decodeState.input.readByte();
	var log0 = x6 & 15;
	var log1 = x6 >> 4;
	header1.blocksize0 = 1 << log0;
	header1.blocksize1 = 1 << log1;
	if(log0 < 6 || log0 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 93, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log1 < 6 || log1 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 96, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log0 > log1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 99, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 1;
	var x7 = decodeState.input.readByte();
	if((x7 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 105, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.page.start(decodeState);
	decodeState.startPacket();
	var len = 0;
	var output = new haxe_io_BytesOutput();
	while(true) {
		len = decodeState.next();
		if(!(len != 0)) {
			break;
		}
		decodeState.inputPosition += len;
		output.write(decodeState.input.read(len));
		decodeState.bytesInSeg = 0;
	}
	var packetInput = new haxe_io_BytesInput(output.getBytes());
	packetInput.readByte();
	packetInput.read(6);
	var vendorLength = packetInput.readInt32();
	header1.vendor = packetInput.readString(vendorLength);
	header1.comment = new kha_audio2_ogg_vorbis_data_Comment();
	var commentCount = packetInput.readInt32();
	var _g = 0;
	var _g1 = commentCount;
	while(_g < _g1) {
		var i = _g++;
		var n = packetInput.readInt32();
		var str = packetInput.readString(n);
		var splitter = str.indexOf("=");
		if(splitter != -1) {
			header1.comment.add(str.substring(0,splitter),str.substring(splitter + 1));
		}
	}
	var x8 = packetInput.readByte();
	if((x8 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 141, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.startPacket();
	var x9;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x9 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x9 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	if(x9 != 5) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"setup packet",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 149, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header2 = new haxe_io_Bytes(new ArrayBuffer(6));
	var x10;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x10 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x10 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[0] = x10;
	var x11;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x11 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x11 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[1] = x11;
	var x12;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x12 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x12 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[2] = x12;
	var x13;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x13 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x13 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[3] = x13;
	var x14;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x14 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x14 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[4] = x14;
	var x15;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x15 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x15 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[5] = x15;
	if(header2.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	var codebookCount = decodeState.readBits(8) + 1;
	var this1 = new Array(codebookCount);
	header1.codebooks = this1;
	var _g2 = 0;
	var _g11 = codebookCount;
	while(_g2 < _g11) {
		var i1 = _g2++;
		header1.codebooks[i1] = kha_audio2_ogg_vorbis_data_Codebook.read(decodeState);
	}
	x7 = decodeState.readBits(6) + 1;
	var _g21 = 0;
	var _g3 = x7;
	while(_g21 < _g3) {
		var i2 = _g21++;
		if(decodeState.readBits(16) != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 165, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	var floorCount = decodeState.readBits(6) + 1;
	var this2 = new Array(floorCount);
	header1.floorConfig = this2;
	var _g4 = 0;
	var _g5 = floorCount;
	while(_g4 < _g5) {
		var i3 = _g4++;
		header1.floorConfig[i3] = kha_audio2_ogg_vorbis_data_Floor.read(decodeState,header1.codebooks);
	}
	var residueCount = decodeState.readBits(6) + 1;
	var this3 = new Array(residueCount);
	header1.residueConfig = this3;
	var _g6 = 0;
	var _g7 = residueCount;
	while(_g6 < _g7) {
		var i4 = _g6++;
		header1.residueConfig[i4] = kha_audio2_ogg_vorbis_data_Residue.read(decodeState,header1.codebooks);
	}
	var mappingCount = decodeState.readBits(6) + 1;
	var this4 = new Array(mappingCount);
	header1.mapping = this4;
	var _g8 = 0;
	var _g9 = mappingCount;
	while(_g8 < _g9) {
		var i5 = _g8++;
		var map = kha_audio2_ogg_vorbis_data_Mapping.read(decodeState,header1.channel);
		header1.mapping[i5] = map;
		var _g81 = 0;
		var _g91 = map.submaps;
		while(_g81 < _g91) {
			var j = _g81++;
			if(map.submapFloor[j] >= header1.floorConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 191, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
			if(map.submapResidue[j] >= header1.residueConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 194, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
	}
	var modeCount = decodeState.readBits(6) + 1;
	var this5 = new Array(modeCount);
	header1.modes = this5;
	var _g10 = 0;
	var _g111 = modeCount;
	while(_g10 < _g111) {
		var i6 = _g10++;
		var mode = kha_audio2_ogg_vorbis_data_Mode.read(decodeState);
		header1.modes[i6] = mode;
		if(mode.mapping >= header1.mapping.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 205, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	while(decodeState.bytesInSeg != 0 || !decodeState.lastSeg && decodeState.next() != 0) {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		decodeState.input.readByte();
	}
	return header1;
};
kha_audio2_ogg_vorbis_data_Header.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Header
};
var kha_audio2_ogg_vorbis_data_IntPoint = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.IntPoint"] = kha_audio2_ogg_vorbis_data_IntPoint;
kha_audio2_ogg_vorbis_data_IntPoint.__name__ = "kha.audio2.ogg.vorbis.data.IntPoint";
kha_audio2_ogg_vorbis_data_IntPoint.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_IntPoint
};
var kha_audio2_ogg_vorbis_data_Mapping = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mapping"] = kha_audio2_ogg_vorbis_data_Mapping;
kha_audio2_ogg_vorbis_data_Mapping.__name__ = "kha.audio2.ogg.vorbis.data.Mapping";
kha_audio2_ogg_vorbis_data_Mapping.read = function(decodeState,channels) {
	var m = new kha_audio2_ogg_vorbis_data_Mapping();
	var mappingType = decodeState.readBits(16);
	if(mappingType != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"mapping type " + mappingType,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	var this1 = new Array(channels);
	m.chan = this1;
	var _g = 0;
	var _g1 = channels;
	while(_g < _g1) {
		var j = _g++;
		m.chan[j] = new kha_audio2_ogg_vorbis_data_MappingChannel();
	}
	if(decodeState.readBits(1) != 0) {
		m.submaps = decodeState.readBits(4) + 1;
	} else {
		m.submaps = 1;
	}
	if(decodeState.readBits(1) != 0) {
		m.couplingSteps = decodeState.readBits(8) + 1;
		var _g2 = 0;
		var _g3 = m.couplingSteps;
		while(_g2 < _g3) {
			var k = _g2++;
			var n = channels - 1;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].magnitude = decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
			var n1 = channels - 1;
			var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].angle = decodeState.readBits(n1 < 16384 ? n1 < 16 ? log2_41[n1] : n1 < 512 ? 5 + log2_41[n1 >> 5] : 10 + log2_41[n1 >> 10] : n1 < 16777216 ? n1 < 524288 ? 15 + log2_41[n1 >> 15] : 20 + log2_41[n1 >> 20] : n1 < 536870912 ? 25 + log2_41[n1 >> 25] : n1 < -2147483648 ? 30 + log2_41[n1 >> 30] : 0);
			if(m.chan[k].magnitude >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].angle >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].magnitude == m.chan[k].angle) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		m.couplingSteps = 0;
	}
	if(decodeState.readBits(2) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 61, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	if(m.submaps > 1) {
		var _g21 = 0;
		var _g31 = channels;
		while(_g21 < _g31) {
			var j1 = _g21++;
			m.chan[j1].mux = decodeState.readBits(4);
			if(m.chan[j1].mux >= m.submaps) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		var _g22 = 0;
		var _g32 = channels;
		while(_g22 < _g32) {
			var j2 = _g22++;
			m.chan[j2].mux = 0;
		}
	}
	var this2 = new Array(m.submaps);
	m.submapFloor = this2;
	var this3 = new Array(m.submaps);
	m.submapResidue = this3;
	var _g23 = 0;
	var _g33 = m.submaps;
	while(_g23 < _g33) {
		var j3 = _g23++;
		decodeState.readBits(8);
		m.submapFloor[j3] = decodeState.readBits(8);
		m.submapResidue[j3] = decodeState.readBits(8);
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mapping.prototype = {
	doFloor: function(floors,i,n,target,finalY,step2Flag) {
		var n2 = n >> 1;
		var s = this.chan[i].mux;
		var floor;
		var floor1 = floors[this.submapFloor[s]];
		if(floor1.type == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 94, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "doFloor"}));
		} else {
			var g = floor1.floor1;
			var lx = 0;
			var ly = finalY[0] * g.floor1Multiplier;
			var _g = 1;
			var _g1 = g.values;
			while(_g < _g1) {
				var q = _g++;
				var j = g.sortedOrder[q];
				if(finalY[j] >= 0) {
					var hy = finalY[j] * g.floor1Multiplier;
					var hx = g.xlist[j];
					kha_audio2_ogg_vorbis_VorbisTools.drawLine(target,lx,ly,hx,hy,n2);
					lx = hx;
					ly = hy;
				}
			}
			if(lx < n2) {
				var _g2 = lx;
				var _g3 = n2;
				while(_g2 < _g3) {
					var j1 = _g2++;
					var _g21 = j1;
					var _g31 = target;
					_g31[_g21] = _g31[_g21] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[ly];
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Mapping
};
var kha_audio2_ogg_vorbis_data_MappingChannel = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.MappingChannel"] = kha_audio2_ogg_vorbis_data_MappingChannel;
kha_audio2_ogg_vorbis_data_MappingChannel.__name__ = "kha.audio2.ogg.vorbis.data.MappingChannel";
kha_audio2_ogg_vorbis_data_MappingChannel.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_MappingChannel
};
var kha_audio2_ogg_vorbis_data_Mode = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mode"] = kha_audio2_ogg_vorbis_data_Mode;
kha_audio2_ogg_vorbis_data_Mode.__name__ = "kha.audio2.ogg.vorbis.data.Mode";
kha_audio2_ogg_vorbis_data_Mode.read = function(decodeState) {
	var m = new kha_audio2_ogg_vorbis_data_Mode();
	m.blockflag = decodeState.readBits(1) != 0;
	m.windowtype = decodeState.readBits(16);
	m.transformtype = decodeState.readBits(16);
	m.mapping = decodeState.readBits(8);
	if(m.windowtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	if(m.transformtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 25, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mode.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Mode
};
var kha_audio2_ogg_vorbis_data_Page = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Page"] = kha_audio2_ogg_vorbis_data_Page;
kha_audio2_ogg_vorbis_data_Page.__name__ = "kha.audio2.ogg.vorbis.data.Page";
kha_audio2_ogg_vorbis_data_Page.prototype = {
	clone: function() {
		var page = new kha_audio2_ogg_vorbis_data_Page();
		page.flag = this.flag;
		return page;
	}
	,start: function(decodeState) {
		var tmp;
		var tmp1;
		var tmp2;
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() == 79) {
			decodeState.inputPosition += 1;
			tmp2 = decodeState.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			decodeState.inputPosition += 1;
			tmp1 = decodeState.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			decodeState.inputPosition += 1;
			tmp = decodeState.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 324, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
		this.startWithoutCapturePattern(decodeState);
	}
	,startWithoutCapturePattern: function(decodeState) {
		decodeState.inputPosition += 1;
		var version = decodeState.input.readByte();
		if(version != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,"" + version,{ fileName : "kha/audio2/ogg/vorbis/data/Page.hx", lineNumber : 34, className : "kha.audio2.ogg.vorbis.data.Page", methodName : "startWithoutCapturePattern"}));
		}
		decodeState.inputPosition += 1;
		this.flag = decodeState.input.readByte();
		decodeState.inputPosition += 4;
		var loc0 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		var loc1 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.setup(loc0,loc1);
	}
	,__class__: kha_audio2_ogg_vorbis_data_Page
};
var kha_audio2_ogg_vorbis_data_ProbedPage = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.ProbedPage"] = kha_audio2_ogg_vorbis_data_ProbedPage;
kha_audio2_ogg_vorbis_data_ProbedPage.__name__ = "kha.audio2.ogg.vorbis.data.ProbedPage";
kha_audio2_ogg_vorbis_data_ProbedPage.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_ProbedPage
};
var kha_audio2_ogg_vorbis_data_ReaderError = function(type,message,posInfos) {
	if(message == null) {
		message = "";
	}
	this.type = type;
	this.message = message;
	this.posInfos = posInfos;
};
$hxClasses["kha.audio2.ogg.vorbis.data.ReaderError"] = kha_audio2_ogg_vorbis_data_ReaderError;
kha_audio2_ogg_vorbis_data_ReaderError.__name__ = "kha.audio2.ogg.vorbis.data.ReaderError";
kha_audio2_ogg_vorbis_data_ReaderError.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_ReaderError
};
var kha_audio2_ogg_vorbis_data_ReaderErrorType = $hxEnums["kha.audio2.ogg.vorbis.data.ReaderErrorType"] = { __ename__ : true, __constructs__ : ["NEED_MORE_DATA","INVALID_API_MIXING","OUTOFMEM","FEATURE_NOT_SUPPORTED","TOO_MANY_CHANNELS","FILE_OPEN_FAILURE","SEEK_WITHOUT_LENGTH","UNEXPECTED_EOF","SEEK_INVALID","INVALID_SETUP","INVALID_STREAM","MISSING_CAPTURE_PATTERN","INVALID_STREAM_STRUCTURE_VERSION","CONTINUED_PACKET_FLAG_INVALID","INCORRECT_STREAM_SERIAL_NUMBER","INVALID_FIRST_PAGE","BAD_PACKET_TYPE","CANT_FIND_LAST_PAGE","SEEK_FAILED","OTHER"]
	,NEED_MORE_DATA: {_hx_index:0,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_API_MIXING: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OUTOFMEM: {_hx_index:2,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FEATURE_NOT_SUPPORTED: {_hx_index:3,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,TOO_MANY_CHANNELS: {_hx_index:4,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FILE_OPEN_FAILURE: {_hx_index:5,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_WITHOUT_LENGTH: {_hx_index:6,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,UNEXPECTED_EOF: {_hx_index:7,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_INVALID: {_hx_index:8,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_SETUP: {_hx_index:9,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM: {_hx_index:10,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,MISSING_CAPTURE_PATTERN: {_hx_index:11,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM_STRUCTURE_VERSION: {_hx_index:12,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CONTINUED_PACKET_FLAG_INVALID: {_hx_index:13,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INCORRECT_STREAM_SERIAL_NUMBER: {_hx_index:14,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_FIRST_PAGE: {_hx_index:15,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,BAD_PACKET_TYPE: {_hx_index:16,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CANT_FIND_LAST_PAGE: {_hx_index:17,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_FAILED: {_hx_index:18,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OTHER: {_hx_index:19,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
};
var kha_audio2_ogg_vorbis_data_Residue = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Residue"] = kha_audio2_ogg_vorbis_data_Residue;
kha_audio2_ogg_vorbis_data_Residue.__name__ = "kha.audio2.ogg.vorbis.data.Residue";
kha_audio2_ogg_vorbis_data_Residue.read = function(decodeState,codebooks) {
	var r = new kha_audio2_ogg_vorbis_data_Residue();
	r.type = decodeState.readBits(16);
	if(r.type > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 29, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
	}
	var this1 = new Array(64);
	var residueCascade = this1;
	r.begin = decodeState.readBits(24);
	r.end = decodeState.readBits(24);
	r.partSize = decodeState.readBits(24) + 1;
	var classifications = r.classifications = decodeState.readBits(6) + 1;
	r.classbook = decodeState.readBits(8);
	var _g = 0;
	var _g1 = r.classifications;
	while(_g < _g1) {
		var j = _g++;
		var highBits = 0;
		var lowBits = decodeState.readBits(3);
		if(decodeState.readBits(1) != 0) {
			highBits = decodeState.readBits(5);
		}
		residueCascade[j] = highBits * 8 + lowBits;
	}
	var this2 = new Array(r.classifications);
	r.residueBooks = this2;
	var _g2 = 0;
	var _g3 = r.classifications;
	while(_g2 < _g3) {
		var j1 = _g2++;
		var this3 = r.residueBooks;
		var this4 = new Array(8);
		this3[j1] = this4;
		var _g21 = 0;
		while(_g21 < 8) {
			var k = _g21++;
			if((residueCascade[j1] & 1 << k) != 0) {
				r.residueBooks[j1][k] = decodeState.readBits(8);
				if(r.residueBooks[j1][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 55, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
				}
			} else {
				r.residueBooks[j1][k] = -1;
			}
		}
	}
	var el = codebooks[r.classbook].entries;
	var classwords = codebooks[r.classbook].dimensions;
	var this5 = new Array(el);
	r.classdata = this5;
	var _g4 = 0;
	var _g5 = el;
	while(_g4 < _g5) {
		var j2 = _g4++;
		var temp = j2;
		var k1 = classwords;
		var this6 = r.classdata;
		var this7 = new Array(classwords);
		var cd = this6[j2] = this7;
		while(--k1 >= 0) {
			cd[k1] = temp % classifications;
			temp = temp / classifications | 0;
		}
	}
	return r;
};
kha_audio2_ogg_vorbis_data_Residue.prototype = {
	decode: function(decodeState,header,residueBuffers,ch,n,doNotDecode,channelBuffers) {
		var codebooks = header.codebooks;
		var classwords = codebooks[this.classbook].dimensions;
		var nRead = this.end - this.begin;
		var partSize = this.partSize;
		var partRead = _$UInt_UInt_$Impl_$.toFloat(nRead) / _$UInt_UInt_$Impl_$.toFloat(partSize) | 0;
		var this1 = new Array(header.channel * partRead + 1);
		var classifications = this1;
		var _g = 0;
		var _g1 = ch;
		while(_g < _g1) {
			var i = _g++;
			if(!doNotDecode[i]) {
				var buffer = residueBuffers[i];
				var _g2 = 0;
				var _g11 = buffer.length;
				while(_g2 < _g11) {
					var j = _g2++;
					buffer[j] = 0;
				}
			}
		}
		if(this.type == 2 && ch != 1) {
			var _g21 = 0;
			var _g3 = ch;
			while(_g21 < _g3) {
				var j1 = _g21++;
				if(!doNotDecode[j1]) {
					break;
				} else if(j1 == ch - 1) {
					return;
				}
			}
			var _g4 = 0;
			while(_g4 < 8) {
				var pass = _g4++;
				var pcount = 0;
				var classSet = 0;
				if(ch == 2) {
					while(pcount < partRead) {
						var z = this.begin + pcount * partSize;
						var cInter = z & 1;
						var pInter = z >>> 1;
						if(pass == 0) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i1 = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var q = val;
							if(q == -1) {
								return;
							}
							var i2 = classwords;
							while(--i2 >= 0) {
								classifications[i2 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						var _g41 = 0;
						var _g5 = classwords;
						while(_g41 < _g5) {
							var i3 = _g41++;
							if(pcount >= partRead) {
								break;
							}
							var z1 = this.begin + pcount * partSize;
							var c1 = classifications[pcount];
							var b = this.residueBooks[c1][pass];
							if(b >= 0) {
								var book = codebooks[b];
								var result = book.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z1 = z1 + partSize;
								cInter = z1 & 1;
								pInter = z1 >>> 1;
							}
							++pcount;
						}
					}
				} else if(ch == 1) {
					while(pcount < partRead) {
						var z2 = this.begin + pcount * partSize;
						var cInter1 = 0;
						var pInter1 = z2;
						if(pass == 0) {
							var c2 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i4 = c2.fastHuffman[decodeState.acc & 1023];
							var val1;
							if(i4 >= 0) {
								var l1 = c2.codewordLengths[i4];
								decodeState.acc = decodeState.acc >>> l1;
								decodeState.validBits -= l1;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val1 = -1;
								} else {
									val1 = i4;
								}
							} else {
								val1 = decodeState.decodeScalarRaw(c2);
							}
							if(c2.sparse) {
								val1 = c2.sortedValues[val1];
							}
							var q1 = val1;
							if(q1 == -1) {
								return;
							}
							var i5 = classwords;
							while(--i5 >= 0) {
								classifications[i5 + pcount] = q1 % this.classifications;
								q1 = q1 / this.classifications | 0;
							}
						}
						var _g42 = 0;
						var _g51 = classwords;
						while(_g42 < _g51) {
							var i6 = _g42++;
							if(pcount >= partRead) {
								break;
							}
							var z3 = this.begin + pcount * partSize;
							var b1 = this.residueBooks[classifications[pcount]][pass];
							if(b1 >= 0) {
								var book1 = codebooks[b1];
								var result1 = book1.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter1,pInter1,n,partSize);
								if(result1 == null) {
									return;
								} else {
									cInter1 = result1.cInter;
									pInter1 = result1.pInter;
								}
							} else {
								z3 = z3 + partSize;
								cInter1 = 0;
								pInter1 = z3;
							}
							++pcount;
						}
					}
				} else {
					while(pcount < partRead) {
						var z4 = this.begin + pcount * partSize;
						var cInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						var pInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						if(pass == 0) {
							var c3 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i7 = c3.fastHuffman[decodeState.acc & 1023];
							var val2;
							if(i7 >= 0) {
								var l2 = c3.codewordLengths[i7];
								decodeState.acc = decodeState.acc >>> l2;
								decodeState.validBits -= l2;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val2 = -1;
								} else {
									val2 = i7;
								}
							} else {
								val2 = decodeState.decodeScalarRaw(c3);
							}
							if(c3.sparse) {
								val2 = c3.sortedValues[val2];
							}
							var q2 = val2;
							if(q2 == -1) {
								return;
							}
							var i8 = classwords;
							while(--i8 >= 0) {
								classifications[i8 + pcount] = q2 % this.classifications;
								q2 = q2 / this.classifications | 0;
							}
						}
						var _g43 = 0;
						var _g52 = classwords;
						while(_g43 < _g52) {
							var i9 = _g43++;
							if(pcount >= partRead) {
								break;
							}
							var z5 = this.begin + pcount * partSize;
							var b2 = this.residueBooks[classifications[pcount]][pass];
							if(b2 >= 0) {
								var book2 = codebooks[b2];
								var result2 = book2.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter2,pInter2,n,partSize);
								if(result2 == null) {
									return;
								} else {
									cInter2 = result2.cInter;
									pInter2 = result2.pInter;
								}
							} else {
								z5 = z5 + partSize;
								cInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
								pInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
							}
							++pcount;
						}
					}
				}
			}
			return;
		}
		var _g22 = 0;
		while(_g22 < 8) {
			var pass1 = _g22++;
			var pcount1 = 0;
			var classSet1 = 0;
			while(pcount1 < partRead) {
				if(pass1 == 0) {
					var _g23 = 0;
					var _g31 = ch;
					while(_g23 < _g31) {
						var j2 = _g23++;
						if(!doNotDecode[j2]) {
							var c4 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i10 = c4.fastHuffman[decodeState.acc & 1023];
							var val3;
							if(i10 >= 0) {
								var l3 = c4.codewordLengths[i10];
								decodeState.acc = decodeState.acc >>> l3;
								decodeState.validBits -= l3;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val3 = -1;
								} else {
									val3 = i10;
								}
							} else {
								val3 = decodeState.decodeScalarRaw(c4);
							}
							if(c4.sparse) {
								val3 = c4.sortedValues[val3];
							}
							var temp = val3;
							if(temp == -1) {
								return;
							}
							var i11 = classwords;
							while(--i11 >= 0) {
								classifications[j2 * partRead + i11 + pcount1] = temp % this.classifications;
								temp = temp / this.classifications | 0;
							}
						}
					}
				}
				var _g24 = 0;
				var _g32 = classwords;
				while(_g24 < _g32) {
					var i12 = _g24++;
					if(pcount1 >= partRead) {
						break;
					}
					var _g25 = 0;
					var _g33 = ch;
					while(_g25 < _g33) {
						var j3 = _g25++;
						if(!doNotDecode[j3]) {
							var c5 = classifications[j3 * partRead + pcount1];
							var b3 = this.residueBooks[c5][pass1];
							if(b3 >= 0) {
								var target = residueBuffers[j3];
								var offset = this.begin + pcount1 * partSize;
								var n1 = partSize;
								var book3 = codebooks[b3];
								if(!book3.residueDecode(decodeState,target,offset,n1,this.type)) {
									return;
								}
							}
						}
					}
					++pcount1;
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Residue
};
var kha_graphics1_Graphics = function() { };
$hxClasses["kha.graphics1.Graphics"] = kha_graphics1_Graphics;
kha_graphics1_Graphics.__name__ = "kha.graphics1.Graphics";
var kha_graphics2_Graphics = function() {
	this.transformations = [];
	this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
	this.opacities = [];
	this.opacities.push(1);
	this.myFontSize = 12;
	this.pipe = null;
};
$hxClasses["kha.graphics2.Graphics"] = kha_graphics2_Graphics;
kha_graphics2_Graphics.__name__ = "kha.graphics2.Graphics";
kha_graphics2_Graphics.prototype = {
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
	}
	,end: function() {
	}
	,drawImage: function(img,x,y) {
		this.drawSubImage(img,x,y,0,0,img.get_width(),img.get_height());
	}
	,drawSubImage: function(img,x,y,sx,sy,sw,sh) {
		this.drawScaledSubImage(img,sx,sy,sw,sh,x,y,sw,sh);
	}
	,drawScaledImage: function(img,dx,dy,dw,dh) {
		this.drawScaledSubImage(img,0,0,img.get_width(),img.get_height(),dx,dy,dw,dh);
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,fillRect: function(x,y,width,height) {
	}
	,drawString: function(text,x,y) {
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
	}
	,set_imageScaleQuality: function(value) {
		return kha_graphics2_ImageScaleQuality.High;
	}
	,get_color: function() {
		return -16777216;
	}
	,set_color: function(color) {
		return -16777216;
	}
	,get_font: function() {
		return null;
	}
	,set_font: function(font) {
		return null;
	}
	,get_fontSize: function() {
		return this.myFontSize;
	}
	,set_fontSize: function(value) {
		return this.myFontSize = value;
	}
	,pushTransformation: function(transformation) {
		var trans = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
		trans._00 = transformation._00;
		trans._10 = transformation._10;
		trans._20 = transformation._20;
		trans._01 = transformation._01;
		trans._11 = transformation._11;
		trans._21 = transformation._21;
		trans._02 = transformation._02;
		trans._12 = transformation._12;
		trans._22 = transformation._22;
		this.setTransformation(trans);
		this.transformations.push(trans);
	}
	,popTransformation: function() {
		var ret = this.transformations.pop();
		this.setTransformation(this.transformations[this.transformations.length - 1]);
		return ret;
	}
	,pushRotation: function(angle,centerx,centery) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = centerx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = centery;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m__00 = Math.cos(angle);
		var m__10 = -Math.sin(angle);
		var m__20 = 0;
		var m__01 = Math.sin(angle);
		var m__11 = Math.cos(angle);
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		var _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		var _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		var _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		var _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		var _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		var _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		var _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		var _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__001 = 1;
		var m__101 = 0;
		var m__201 = -centerx;
		var m__011 = 0;
		var m__111 = 1;
		var m__211 = -centery;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var _this__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		var _this__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		var _this__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		var _this__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		var _this__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		var _this__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		var _this__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		var _this__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		var _this__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var m = this.transformations[this.transformations.length - 1];
		this.pushTransformation(new kha_math_FastMatrix3(_this__002 * m._00 + _this__102 * m._01 + _this__202 * m._02,_this__002 * m._10 + _this__102 * m._11 + _this__202 * m._12,_this__002 * m._20 + _this__102 * m._21 + _this__202 * m._22,_this__012 * m._00 + _this__112 * m._01 + _this__212 * m._02,_this__012 * m._10 + _this__112 * m._11 + _this__212 * m._12,_this__012 * m._20 + _this__112 * m._21 + _this__212 * m._22,_this__022 * m._00 + _this__122 * m._01 + _this__222 * m._02,_this__022 * m._10 + _this__122 * m._11 + _this__222 * m._12,_this__022 * m._20 + _this__122 * m._21 + _this__222 * m._22));
	}
	,get_opacity: function() {
		return this.opacities[this.opacities.length - 1];
	}
	,set_opacity: function(opacity) {
		this.setOpacity(opacity);
		return this.opacities[this.opacities.length - 1] = opacity;
	}
	,setTransformation: function(transformation) {
	}
	,setOpacity: function(opacity) {
	}
	,__class__: kha_graphics2_Graphics
	,__properties__: {set_opacity:"set_opacity",get_opacity:"get_opacity",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_font:"set_font",get_font:"get_font",set_color:"set_color",get_color:"get_color",set_imageScaleQuality:"set_imageScaleQuality"}
};
var kha_graphics2_Graphics1 = function(canvas) {
	this.canvas = canvas;
};
$hxClasses["kha.graphics2.Graphics1"] = kha_graphics2_Graphics1;
kha_graphics2_Graphics1.__name__ = "kha.graphics2.Graphics1";
kha_graphics2_Graphics1.__interfaces__ = [kha_graphics1_Graphics];
kha_graphics2_Graphics1.prototype = {
	__class__: kha_graphics2_Graphics1
};
var kha_graphics2_ImageScaleQuality = $hxEnums["kha.graphics2.ImageScaleQuality"] = { __ename__ : true, __constructs__ : ["Low","High"]
	,Low: {_hx_index:0,__enum__:"kha.graphics2.ImageScaleQuality",toString:$estr}
	,High: {_hx_index:1,__enum__:"kha.graphics2.ImageScaleQuality",toString:$estr}
};
var kha_graphics2_truetype_VectorOfIntPointer = function() {
};
$hxClasses["kha.graphics2.truetype.VectorOfIntPointer"] = kha_graphics2_truetype_VectorOfIntPointer;
kha_graphics2_truetype_VectorOfIntPointer.__name__ = "kha.graphics2.truetype.VectorOfIntPointer";
kha_graphics2_truetype_VectorOfIntPointer.prototype = {
	__class__: kha_graphics2_truetype_VectorOfIntPointer
};
var kha_graphics2_truetype_Stbtt_$temp_$rect = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_rect"] = kha_graphics2_truetype_Stbtt_$temp_$rect;
kha_graphics2_truetype_Stbtt_$temp_$rect.__name__ = "kha.graphics2.truetype.Stbtt_temp_rect";
kha_graphics2_truetype_Stbtt_$temp_$rect.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$rect
};
var kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.__name__ = "kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics";
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_font_v_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.__name__ = "kha.graphics2.truetype.Stbtt_temp_font_v_metrics";
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics
};
var kha_graphics2_truetype_Stbtt_$bakedchar = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_bakedchar"] = kha_graphics2_truetype_Stbtt_$bakedchar;
kha_graphics2_truetype_Stbtt_$bakedchar.__name__ = "kha.graphics2.truetype.Stbtt_bakedchar";
kha_graphics2_truetype_Stbtt_$bakedchar.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$bakedchar
};
var kha_graphics2_truetype_Stbtt_$fontinfo = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_fontinfo"] = kha_graphics2_truetype_Stbtt_$fontinfo;
kha_graphics2_truetype_Stbtt_$fontinfo.__name__ = "kha.graphics2.truetype.Stbtt_fontinfo";
kha_graphics2_truetype_Stbtt_$fontinfo.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$fontinfo
};
var kha_graphics2_truetype_Stbtt_$vertex = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_vertex"] = kha_graphics2_truetype_Stbtt_$vertex;
kha_graphics2_truetype_Stbtt_$vertex.__name__ = "kha.graphics2.truetype.Stbtt_vertex";
kha_graphics2_truetype_Stbtt_$vertex.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$vertex
};
var kha_graphics2_truetype_Stbtt_$_$bitmap = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__bitmap"] = kha_graphics2_truetype_Stbtt_$_$bitmap;
kha_graphics2_truetype_Stbtt_$_$bitmap.__name__ = "kha.graphics2.truetype.Stbtt__bitmap";
kha_graphics2_truetype_Stbtt_$_$bitmap.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$bitmap
};
var kha_graphics2_truetype_Stbtt_$_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__edge"] = kha_graphics2_truetype_Stbtt_$_$edge;
kha_graphics2_truetype_Stbtt_$_$edge.__name__ = "kha.graphics2.truetype.Stbtt__edge";
kha_graphics2_truetype_Stbtt_$_$edge.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$edge
};
var kha_graphics2_truetype_Stbtt_$_$active_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__active_edge"] = kha_graphics2_truetype_Stbtt_$_$active_$edge;
kha_graphics2_truetype_Stbtt_$_$active_$edge.__name__ = "kha.graphics2.truetype.Stbtt__active_edge";
kha_graphics2_truetype_Stbtt_$_$active_$edge.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$active_$edge
};
var kha_graphics2_truetype_Stbtt_$_$point = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__point"] = kha_graphics2_truetype_Stbtt_$_$point;
kha_graphics2_truetype_Stbtt_$_$point.__name__ = "kha.graphics2.truetype.Stbtt__point";
kha_graphics2_truetype_Stbtt_$_$point.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$point
};
var kha_graphics2_truetype_StbTruetype = function() { };
$hxClasses["kha.graphics2.truetype.StbTruetype"] = kha_graphics2_truetype_StbTruetype;
kha_graphics2_truetype_StbTruetype.__name__ = "kha.graphics2.truetype.StbTruetype";
kha_graphics2_truetype_StbTruetype.stbtt__find_table = function(data,fontstart,tag) {
	var pos = fontstart + 4;
	var ch1 = data.readU8(pos);
	var ch2 = data.readU8(pos + 1);
	var num_tables = ch2 | ch1 << 8;
	var tabledir = fontstart + 12;
	var _g = 0;
	var _g1 = num_tables;
	while(_g < _g1) {
		var i = _g++;
		var loc = tabledir + 16 * i;
		var c0 = HxOverrides.cca(tag,0);
		var c1 = HxOverrides.cca(tag,1);
		var c2 = HxOverrides.cca(tag,2);
		var c3 = HxOverrides.cca(tag,3);
		if(data.readU8(loc) == c0 && data.readU8(loc + 1) == c1 && data.readU8(loc + 2) == c2 && data.readU8(loc + 3) == c3) {
			var pos1 = loc + 8;
			var ch11 = data.readU8(pos1);
			var ch21 = data.readU8(pos1 + 1);
			var ch3 = data.readU8(pos1 + 2);
			var ch4 = data.readU8(pos1 + 3);
			return ch4 | ch3 << 8 | ch21 << 16 | ch11 << 24;
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_InitFont = function(info,data,fontstart) {
	info.data = data;
	info.fontstart = fontstart;
	var cmap = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"cmap");
	info.loca = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"loca");
	info.head = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"head");
	info.glyf = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"glyf");
	info.hhea = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hhea");
	info.hmtx = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hmtx");
	info.kern = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"kern");
	if(cmap == 0 || info.loca == 0 || info.head == 0 || info.glyf == 0 || info.hhea == 0 || info.hmtx == 0) {
		return false;
	}
	var t = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"maxp");
	if(t != 0) {
		var pos = t + 4;
		var ch1 = data.readU8(pos);
		var ch2 = data.readU8(pos + 1);
		info.numGlyphs = ch2 | ch1 << 8;
	} else {
		info.numGlyphs = 65535;
	}
	var pos1 = cmap + 2;
	var ch11 = data.readU8(pos1);
	var ch21 = data.readU8(pos1 + 1);
	var numTables = ch21 | ch11 << 8;
	info.index_map = 0;
	var _g = 0;
	var _g1 = numTables;
	while(_g < _g1) {
		var i = _g++;
		var encoding_record = cmap + 4 + 8 * i;
		var ch12 = data.readU8(encoding_record);
		var ch22 = data.readU8(encoding_record + 1);
		switch(ch22 | ch12 << 8) {
		case 0:
			var pos2 = encoding_record + 4;
			var ch13 = data.readU8(pos2);
			var ch23 = data.readU8(pos2 + 1);
			var ch3 = data.readU8(pos2 + 2);
			var ch4 = data.readU8(pos2 + 3);
			info.index_map = cmap + (ch4 | ch3 << 8 | ch23 << 16 | ch13 << 24);
			break;
		case 3:
			var pos3 = encoding_record + 2;
			var ch14 = data.readU8(pos3);
			var ch24 = data.readU8(pos3 + 1);
			switch(ch24 | ch14 << 8) {
			case 1:case 10:
				var pos4 = encoding_record + 4;
				var ch15 = data.readU8(pos4);
				var ch25 = data.readU8(pos4 + 1);
				var ch31 = data.readU8(pos4 + 2);
				var ch41 = data.readU8(pos4 + 3);
				info.index_map = cmap + (ch41 | ch31 << 8 | ch25 << 16 | ch15 << 24);
				break;
			}
			break;
		}
	}
	if(info.index_map == 0) {
		return false;
	}
	var pos5 = info.head + 50;
	var ch16 = data.readU8(pos5);
	var ch26 = data.readU8(pos5 + 1);
	info.indexToLocFormat = ch26 | ch16 << 8;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex = function(info,unicode_codepoint) {
	var data = info.data;
	var index_map = info.index_map;
	var ch1 = data.readU8(index_map);
	var ch2 = data.readU8(index_map + 1);
	var format = ch2 | ch1 << 8;
	if(format == 0) {
		var pos = index_map + 2;
		var ch11 = data.readU8(pos);
		var ch21 = data.readU8(pos + 1);
		var bytes = ch21 | ch11 << 8;
		if(unicode_codepoint < bytes - 6) {
			return data.readU8(index_map + 6 + unicode_codepoint);
		}
		return 0;
	} else if(format == 6) {
		var pos1 = index_map + 6;
		var ch12 = data.readU8(pos1);
		var ch22 = data.readU8(pos1 + 1);
		var first = ch22 | ch12 << 8;
		var pos2 = index_map + 8;
		var ch13 = data.readU8(pos2);
		var ch23 = data.readU8(pos2 + 1);
		var count = ch23 | ch13 << 8;
		if(unicode_codepoint >= first && unicode_codepoint < first + count) {
			var pos3 = index_map + 10 + (unicode_codepoint - first) * 2;
			var ch14 = data.readU8(pos3);
			var ch24 = data.readU8(pos3 + 1);
			return ch24 | ch14 << 8;
		}
		return 0;
	} else if(format == 2) {
		throw new js__$Boot_HaxeError("Error");
	} else if(format == 4) {
		var pos4 = index_map + 6;
		var ch15 = data.readU8(pos4);
		var ch25 = data.readU8(pos4 + 1);
		var segcount = (ch25 | ch15 << 8) >> 1;
		var pos5 = index_map + 8;
		var ch16 = data.readU8(pos5);
		var ch26 = data.readU8(pos5 + 1);
		var searchRange = (ch26 | ch16 << 8) >> 1;
		var pos6 = index_map + 10;
		var ch17 = data.readU8(pos6);
		var ch27 = data.readU8(pos6 + 1);
		var entrySelector = ch27 | ch17 << 8;
		var pos7 = index_map + 12;
		var ch18 = data.readU8(pos7);
		var ch28 = data.readU8(pos7 + 1);
		var rangeShift = (ch28 | ch18 << 8) >> 1;
		var endCount = index_map + 14;
		var search = endCount;
		if(unicode_codepoint > 65535) {
			return 0;
		}
		var pos8 = search + rangeShift * 2;
		var ch19 = data.readU8(pos8);
		var ch29 = data.readU8(pos8 + 1);
		if(unicode_codepoint >= (ch29 | ch19 << 8)) {
			search += rangeShift * 2;
		}
		search -= 2;
		while(entrySelector != 0) {
			searchRange >>= 1;
			var pos9 = search + searchRange * 2;
			var ch110 = data.readU8(pos9);
			var ch210 = data.readU8(pos9 + 1);
			var end = ch210 | ch110 << 8;
			if(unicode_codepoint > end) {
				search += searchRange * 2;
			}
			--entrySelector;
		}
		search += 2;
		var item = search - endCount >> 1;
		var pos10 = endCount + 2 * item;
		var ch111 = data.readU8(pos10);
		var ch211 = data.readU8(pos10 + 1);
		if(unicode_codepoint > (ch211 | ch111 << 8)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var pos11 = index_map + 14 + segcount * 2 + 2 + 2 * item;
		var ch112 = data.readU8(pos11);
		var ch212 = data.readU8(pos11 + 1);
		var start = ch212 | ch112 << 8;
		if(unicode_codepoint < start) {
			return 0;
		}
		var pos12 = index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch113 = data.readU8(pos12);
		var ch213 = data.readU8(pos12 + 1);
		var offset = ch213 | ch113 << 8;
		if(offset == 0) {
			var pos13 = index_map + 14 + segcount * 4 + 2 + 2 * item;
			var ch114 = data.readU8(pos13);
			var ch214 = data.readU8(pos13 + 1);
			var n = ch214 | ch114 << 8;
			return unicode_codepoint + ((n & 32768) != 0 ? n - 65536 : n);
		}
		var pos14 = offset + (unicode_codepoint - start) * 2 + index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch115 = data.readU8(pos14);
		var ch215 = data.readU8(pos14 + 1);
		return ch215 | ch115 << 8;
	} else if(format == 12 || format == 13) {
		var pos15 = index_map + 12;
		var ch116 = data.readU8(pos15);
		var ch216 = data.readU8(pos15 + 1);
		var ch3 = data.readU8(pos15 + 2);
		var ch4 = data.readU8(pos15 + 3);
		var ngroups = ch4 | ch3 << 8 | ch216 << 16 | ch116 << 24;
		var low = 0;
		var high = ngroups;
		while(low < high) {
			var mid = low + (high - low >> 1);
			var pos16 = index_map + 16 + mid * 12;
			var ch117 = data.readU8(pos16);
			var ch217 = data.readU8(pos16 + 1);
			var ch31 = data.readU8(pos16 + 2);
			var ch41 = data.readU8(pos16 + 3);
			var start_char = ch41 | ch31 << 8 | ch217 << 16 | ch117 << 24;
			var pos17 = index_map + 16 + mid * 12 + 4;
			var ch118 = data.readU8(pos17);
			var ch218 = data.readU8(pos17 + 1);
			var ch32 = data.readU8(pos17 + 2);
			var ch42 = data.readU8(pos17 + 3);
			var end_char = ch42 | ch32 << 8 | ch218 << 16 | ch118 << 24;
			if(unicode_codepoint < start_char) {
				high = mid;
			} else if(unicode_codepoint > end_char) {
				low = mid + 1;
			} else {
				var pos18 = index_map + 16 + mid * 12 + 8;
				var ch119 = data.readU8(pos18);
				var ch219 = data.readU8(pos18 + 1);
				var ch33 = data.readU8(pos18 + 2);
				var ch43 = data.readU8(pos18 + 3);
				var start_glyph = ch43 | ch33 << 8 | ch219 << 16 | ch119 << 24;
				if(format == 12) {
					return start_glyph + unicode_codepoint - start_char;
				} else {
					return start_glyph;
				}
			}
		}
		return 0;
	}
	throw new js__$Boot_HaxeError("Error");
};
kha_graphics2_truetype_StbTruetype.stbtt_setvertex = function(v,type,x,y,cx,cy) {
	v.type = type;
	v.x = x;
	v.y = y;
	v.cx = cx;
	v.cy = cy;
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset = function(info,glyph_index) {
	var g1;
	var g2;
	if(glyph_index >= info.numGlyphs) {
		return -1;
	}
	if(info.indexToLocFormat >= 2) {
		return -1;
	}
	if(info.indexToLocFormat == 0) {
		var info1 = info.glyf;
		var p = info.data;
		var pos = info.loca + glyph_index * 2;
		var ch1 = p.readU8(pos);
		var ch2 = p.readU8(pos + 1);
		g1 = info1 + (ch2 | ch1 << 8) * 2;
		var info2 = info.glyf;
		var p1 = info.data;
		var pos1 = info.loca + glyph_index * 2 + 2;
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		g2 = info2 + (ch21 | ch11 << 8) * 2;
	} else {
		var info3 = info.glyf;
		var p2 = info.data;
		var pos2 = info.loca + glyph_index * 4;
		var ch12 = p2.readU8(pos2);
		var ch22 = p2.readU8(pos2 + 1);
		var ch3 = p2.readU8(pos2 + 2);
		var ch4 = p2.readU8(pos2 + 3);
		g1 = info3 + (ch4 | ch3 << 8 | ch22 << 16 | ch12 << 24);
		var info4 = info.glyf;
		var p3 = info.data;
		var pos3 = info.loca + glyph_index * 4 + 4;
		var ch13 = p3.readU8(pos3);
		var ch23 = p3.readU8(pos3 + 1);
		var ch31 = p3.readU8(pos3 + 2);
		var ch41 = p3.readU8(pos3 + 3);
		g2 = info4 + (ch41 | ch31 << 8 | ch23 << 16 | ch13 << 24);
	}
	if(g1 == g2) {
		return -1;
	} else {
		return g1;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox = function(info,glyph_index,rect) {
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return false;
	}
	var p = info.data;
	var pos = g + 2;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = g + 4;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = g + 6;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	var p3 = info.data;
	var pos3 = g + 8;
	var ch13 = p3.readU8(pos3);
	var ch23 = p3.readU8(pos3 + 1);
	var n3 = ch23 | ch13 << 8;
	rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt__close_shape = function(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy) {
	if(start_off) {
		if(was_off) {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + scx >> 1,cy + scy >> 1,cx,cy);
		}
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,scx,scy);
	} else if(was_off) {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,cx,cy);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,sx,sy,0,0);
	}
	return num_vertices;
};
kha_graphics2_truetype_StbTruetype.copyVertices = function(from,to,offset,count) {
	var _g = 0;
	var _g1 = count;
	while(_g < _g1) {
		var i = _g++;
		to[offset + i] = from[i];
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape = function(info,glyph_index) {
	var endPtsOfContours;
	var data = info.data;
	var vertices = null;
	var num_vertices = 0;
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return null;
	}
	var ch1 = data.readU8(g);
	var ch2 = data.readU8(g + 1);
	var n = ch2 | ch1 << 8;
	var numberOfContours = (n & 32768) != 0 ? n - 65536 : n;
	if(numberOfContours > 0) {
		var flags = 0;
		var j = 0;
		var next_move = 0;
		var off = 0;
		var was_off = false;
		var start_off = false;
		var pointsIndex = 0;
		endPtsOfContours = data.sub(g + 10,data.get_length() - (g + 10));
		var pos = g + 10 + numberOfContours * 2;
		var ch11 = data.readU8(pos);
		var ch21 = data.readU8(pos + 1);
		var ins = ch21 | ch11 << 8;
		var points = data.sub(g + 10 + numberOfContours * 2 + 2 + ins,data.get_length() - (g + 10 + numberOfContours * 2 + 2 + ins));
		var pos1 = numberOfContours * 2 - 2;
		var ch12 = endPtsOfContours.readU8(pos1);
		var ch22 = endPtsOfContours.readU8(pos1 + 1);
		var n1 = 1 + (ch22 | ch12 << 8);
		var m = n1 + 2 * numberOfContours;
		var this1 = new Array(m);
		vertices = this1;
		if(vertices == null) {
			return null;
		} else {
			var _g = 0;
			var _g1 = vertices.length;
			while(_g < _g1) {
				var i = _g++;
				vertices[i] = new kha_graphics2_truetype_Stbtt_$vertex();
			}
		}
		next_move = 0;
		var flagcount = 0;
		off = m - n1;
		var _g2 = 0;
		var _g11 = n1;
		while(_g2 < _g11) {
			var i1 = _g2++;
			if(flagcount == 0) {
				flags = points.readU8(pointsIndex++);
				if((flags & 8) != 0) {
					flagcount = points.readU8(pointsIndex++);
				}
			} else {
				--flagcount;
			}
			vertices[off + i1].type = flags;
		}
		var x = 0;
		var _g21 = 0;
		var _g3 = n1;
		while(_g21 < _g3) {
			var i2 = _g21++;
			flags = vertices[off + i2].type;
			if((flags & 2) != 0) {
				var dx = points.readU8(pointsIndex++);
				x += (flags & 16) != 0 ? dx : -dx;
			} else if((flags & 16) == 0) {
				var value;
				var ch13 = points.readU8(pointsIndex);
				var ch23 = points.readU8(pointsIndex + 1);
				var n2 = ch23 | ch13 << 8;
				if((n2 & 32768) != 0) {
					value = n2 - 65536;
				} else {
					value = n2;
				}
				x += value;
				pointsIndex += 2;
			}
			vertices[off + i2].x = x;
		}
		var y = 0;
		var _g4 = 0;
		var _g5 = n1;
		while(_g4 < _g5) {
			var i3 = _g4++;
			flags = vertices[off + i3].type;
			if((flags & 4) != 0) {
				var dy = points.readU8(pointsIndex++);
				y += (flags & 32) != 0 ? dy : -dy;
			} else if((flags & 32) == 0) {
				var value1;
				var ch14 = points.readU8(pointsIndex);
				var ch24 = points.readU8(pointsIndex + 1);
				var n3 = ch24 | ch14 << 8;
				if((n3 & 32768) != 0) {
					value1 = n3 - 65536;
				} else {
					value1 = n3;
				}
				y += value1;
				pointsIndex += 2;
			}
			vertices[off + i3].y = y;
		}
		num_vertices = 0;
		var scy = 0;
		var scx = scy;
		var cy = scx;
		var cx = cy;
		var sy = cx;
		var sx = sy;
		var i4 = 0;
		while(i4 < n1) {
			flags = vertices[off + i4].type;
			x = vertices[off + i4].x;
			y = vertices[off + i4].y;
			if(next_move == i4) {
				if(i4 != 0) {
					num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
				}
				start_off = (flags & 1) == 0;
				if(start_off) {
					scx = x;
					scy = y;
					if((vertices[off + i4 + 1].type & 1) == 0) {
						sx = x + vertices[off + i4 + 1].x >> 1;
						sy = y + vertices[off + i4 + 1].y >> 1;
					} else {
						sx = vertices[off + i4 + 1].x;
						sy = vertices[off + i4 + 1].y;
						++i4;
					}
				} else {
					sx = x;
					sy = y;
				}
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],1,sx,sy,0,0);
				was_off = false;
				var pos2 = j * 2;
				var ch15 = endPtsOfContours.readU8(pos2);
				var ch25 = endPtsOfContours.readU8(pos2 + 1);
				next_move = 1 + (ch25 | ch15 << 8);
				++j;
			} else if((flags & 1) == 0) {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + x >> 1,cy + y >> 1,cx,cy);
				}
				cx = x;
				cy = y;
				was_off = true;
			} else {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,x,y,cx,cy);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,x,y,0,0);
				}
				was_off = false;
			}
			++i4;
		}
		num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
	} else if(numberOfContours == -1) {
		var more = 1;
		var comp = data.sub(g + 10,data.get_length() - (g + 10));
		var compIndex = 0;
		num_vertices = 0;
		vertices = null;
		while(more != 0) {
			var comp_num_verts = 0;
			var i5;
			var comp_verts = null;
			var tmp = null;
			var mtx0 = 1;
			var mtx1 = 0;
			var mtx2 = 0;
			var mtx3 = 1;
			var mtx4 = 0;
			var mtx5 = 0;
			var ch16 = comp.readU8(compIndex);
			var ch26 = comp.readU8(compIndex + 1);
			var n4 = ch26 | ch16 << 8;
			var flags1 = (n4 & 32768) != 0 ? n4 - 65536 : n4;
			compIndex += 2;
			var ch17 = comp.readU8(compIndex);
			var ch27 = comp.readU8(compIndex + 1);
			var n5 = ch27 | ch17 << 8;
			var gidx = (n5 & 32768) != 0 ? n5 - 65536 : n5;
			compIndex += 2;
			if((flags1 & 2) != 0) {
				if((flags1 & 1) != 0) {
					var ch18 = comp.readU8(compIndex);
					var ch28 = comp.readU8(compIndex + 1);
					var n6 = ch28 | ch18 << 8;
					mtx4 = (n6 & 32768) != 0 ? n6 - 65536 : n6;
					compIndex += 2;
					var ch19 = comp.readU8(compIndex);
					var ch29 = comp.readU8(compIndex + 1);
					var n7 = ch29 | ch19 << 8;
					mtx5 = (n7 & 32768) != 0 ? n7 - 65536 : n7;
					compIndex += 2;
				} else {
					var n8 = comp.readU8(compIndex);
					mtx4 = n8 >= 128 ? n8 - 256 : n8;
					++compIndex;
					var n9 = comp.readU8(compIndex);
					mtx5 = n9 >= 128 ? n9 - 256 : n9;
					++compIndex;
				}
			} else {
				throw new js__$Boot_HaxeError("Error");
			}
			if((flags1 & 8) != 0) {
				var ch110 = comp.readU8(compIndex);
				var ch210 = comp.readU8(compIndex + 1);
				var n10 = ch210 | ch110 << 8;
				mtx3 = ((n10 & 32768) != 0 ? n10 - 65536 : n10) / 16384.0;
				mtx0 = mtx3;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
			} else if((flags1 & 64) != 0) {
				var ch111 = comp.readU8(compIndex);
				var ch211 = comp.readU8(compIndex + 1);
				var n11 = ch211 | ch111 << 8;
				mtx0 = ((n11 & 32768) != 0 ? n11 - 65536 : n11) / 16384.0;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
				var ch112 = comp.readU8(compIndex);
				var ch212 = comp.readU8(compIndex + 1);
				var n12 = ch212 | ch112 << 8;
				mtx3 = ((n12 & 32768) != 0 ? n12 - 65536 : n12) / 16384.0;
				compIndex += 2;
			} else if((flags1 & 128) != 0) {
				var ch113 = comp.readU8(compIndex);
				var ch213 = comp.readU8(compIndex + 1);
				var n13 = ch213 | ch113 << 8;
				mtx0 = ((n13 & 32768) != 0 ? n13 - 65536 : n13) / 16384.0;
				compIndex += 2;
				var ch114 = comp.readU8(compIndex);
				var ch214 = comp.readU8(compIndex + 1);
				var n14 = ch214 | ch114 << 8;
				mtx1 = ((n14 & 32768) != 0 ? n14 - 65536 : n14) / 16384.0;
				compIndex += 2;
				var ch115 = comp.readU8(compIndex);
				var ch215 = comp.readU8(compIndex + 1);
				var n15 = ch215 | ch115 << 8;
				mtx2 = ((n15 & 32768) != 0 ? n15 - 65536 : n15) / 16384.0;
				compIndex += 2;
				var ch116 = comp.readU8(compIndex);
				var ch216 = comp.readU8(compIndex + 1);
				var n16 = ch216 | ch116 << 8;
				mtx3 = ((n16 & 32768) != 0 ? n16 - 65536 : n16) / 16384.0;
				compIndex += 2;
			}
			var m1 = Math.sqrt(mtx0 * mtx0 + mtx1 * mtx1);
			var n17 = Math.sqrt(mtx2 * mtx2 + mtx3 * mtx3);
			comp_verts = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,gidx);
			comp_num_verts = comp_verts == null ? 0 : comp_verts.length;
			if(comp_num_verts > 0) {
				var _g6 = 0;
				var _g12 = comp_num_verts;
				while(_g6 < _g12) {
					var i6 = _g6++;
					var v = comp_verts[i6];
					var x1 = v.x;
					var y1 = v.y;
					v.x = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.y = n17 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
					x1 = v.cx;
					y1 = v.cy;
					v.cx = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.cy = n17 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
				}
				var this2 = new Array(num_vertices + comp_num_verts);
				tmp = this2;
				if(tmp == null) {
					return null;
				}
				if(num_vertices > 0) {
					kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
				}
				kha_graphics2_truetype_StbTruetype.copyVertices(comp_verts,tmp,num_vertices,comp_num_verts);
				vertices = tmp;
				num_vertices += comp_num_verts;
			}
			more = flags1 & 32;
		}
	} else if(numberOfContours < 0) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(vertices == null) {
		return null;
	}
	if(vertices.length < num_vertices) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(num_vertices < vertices.length) {
		var this3 = new Array(num_vertices);
		var tmp1 = this3;
		kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp1,0,num_vertices);
		return tmp1;
	} else {
		return vertices;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics = function(info,glyph_index) {
	var p = info.data;
	var pos = info.hhea + 34;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var numOfLongHorMetrics = ch2 | ch1 << 8;
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics();
	if(glyph_index < numOfLongHorMetrics) {
		var p1 = info.data;
		var pos1 = info.hmtx + 4 * glyph_index;
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		var n = ch21 | ch11 << 8;
		metrics.advanceWidth = (n & 32768) != 0 ? n - 65536 : n;
		var p2 = info.data;
		var pos2 = info.hmtx + 4 * glyph_index + 2;
		var ch12 = p2.readU8(pos2);
		var ch22 = p2.readU8(pos2 + 1);
		var n1 = ch22 | ch12 << 8;
		metrics.leftSideBearing = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	} else {
		var p3 = info.data;
		var pos3 = info.hmtx + 4 * (numOfLongHorMetrics - 1);
		var ch13 = p3.readU8(pos3);
		var ch23 = p3.readU8(pos3 + 1);
		var n2 = ch23 | ch13 << 8;
		metrics.advanceWidth = (n2 & 32768) != 0 ? n2 - 65536 : n2;
		var p4 = info.data;
		var pos4 = info.hmtx + 4 * numOfLongHorMetrics + 2 * (glyph_index - numOfLongHorMetrics);
		var ch14 = p4.readU8(pos4);
		var ch24 = p4.readU8(pos4 + 1);
		var n3 = ch24 | ch14 << 8;
		metrics.leftSideBearing = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	}
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics = function(info) {
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics();
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	metrics.ascent = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	metrics.descent = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = info.hhea + 8;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	metrics.lineGap = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight = function(info,height) {
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	var fheight = ((n & 32768) != 0 ? n - 65536 : n) - ((n1 & 32768) != 0 ? n1 - 65536 : n1);
	return height / fheight;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel = function(font,glyph,scale_x,scale_y,shift_x,shift_y) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(font,glyph,rect)) {
		rect.x0 = 0;
		rect.y0 = 0;
		rect.x1 = 0;
		rect.y1 = 0;
	} else {
		var x0 = rect.x0;
		var x1 = rect.x1;
		var y0 = rect.y0;
		var y1 = rect.y1;
		rect.x0 = Math.floor(x0 * scale_x + shift_x);
		rect.y0 = Math.floor(-y1 * scale_y + shift_y);
		rect.x1 = Math.ceil(x1 * scale_x + shift_x);
		rect.y1 = Math.ceil(-y0 * scale_y + shift_y);
	}
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox = function(font,glyph,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt__new_active = function(e,eIndex,off_x,start_point) {
	var z = new kha_graphics2_truetype_Stbtt_$_$active_$edge();
	var dxdy = (e[eIndex].x1 - e[eIndex].x0) / (e[eIndex].y1 - e[eIndex].y0);
	if(z == null) {
		return z;
	}
	z.fdx = dxdy;
	z.fdy = dxdy != 0.0 ? 1.0 / dxdy : 0.0;
	z.fx = e[eIndex].x0 + dxdy * (start_point - e[eIndex].y0);
	z.fx -= off_x;
	z.direction = e[eIndex].invert ? 1.0 : -1.0;
	z.sy = e[eIndex].y0;
	z.ey = e[eIndex].y1;
	z.next = null;
	return z;
};
kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge = function(scanline,scanlineIndex,x,e,x0,y0,x1,y1) {
	if(y0 == y1) {
		return;
	}
	if(!(y0 < y1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(!(e.sy <= e.ey)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(y0 > e.ey) {
		return;
	}
	if(y1 < e.sy) {
		return;
	}
	if(y0 < e.sy) {
		x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);
		y0 = e.sy;
	}
	if(y1 > e.ey) {
		x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);
		y1 = e.ey;
	}
	if(x0 == x) {
		if(!(x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 == x + 1) {
		if(!(x1 >= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 <= x) {
		if(!(x1 <= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 >= x + 1) {
		if(!(x1 >= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(!(x1 >= x && x1 <= x + 1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(x0 <= x && x1 <= x) {
		var _g = scanlineIndex + x;
		var _g1 = scanline;
		_g1[_g] = _g1[_g] + e.direction * (y1 - y0);
	} else if(!(x0 >= x + 1 && x1 >= x + 1)) {
		if(!(x0 >= x && x0 <= x + 1 && x1 >= x && x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var _g2 = scanlineIndex + x;
		var _g11 = scanline;
		_g11[_g2] = _g11[_g2] + e.direction * (y1 - y0) * (1 - (x0 - x + (x1 - x)) / 2);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new = function(scanline,scanline_fill,scanline_fillIndex,len,e,y_top) {
	var y_bottom = y_top + 1;
	while(e != null) {
		if(!(e.ey >= y_top)) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(e.fdx == 0) {
			var x0 = e.fx;
			if(x0 < len) {
				if(x0 >= 0) {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x0 | 0,e,x0,y_top,x0,y_bottom);
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,x0 + 1 | 0,e,x0,y_top,x0,y_bottom);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,0,e,x0,y_top,x0,y_bottom);
				}
			}
		} else {
			var x01 = e.fx;
			var dx = e.fdx;
			var xb = x01 + dx;
			var x_top;
			var x_bottom;
			var sy0;
			var sy1;
			var dy = e.fdy;
			if(!(e.sy <= y_bottom && e.ey >= y_top)) {
				throw new js__$Boot_HaxeError("Error");
			}
			if(e.sy > y_top) {
				x_top = x01 + dx * (e.sy - y_top);
				sy0 = e.sy;
			} else {
				x_top = x01;
				sy0 = y_top;
			}
			if(e.ey < y_bottom) {
				x_bottom = x01 + dx * (e.ey - y_top);
				sy1 = e.ey;
			} else {
				x_bottom = xb;
				sy1 = y_bottom;
			}
			if(x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {
				if((x_top | 0) == (x_bottom | 0)) {
					var x = x_top | 0;
					var height = sy1 - sy0;
					if(!(x >= 0 && x < len)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g = x;
					var _g1 = scanline;
					_g1[_g] = _g1[_g] + e.direction * (1 - (x_top - x + (x_bottom - x)) / 2) * height;
					var _g2 = scanline_fillIndex + x;
					var _g11 = scanline_fill;
					_g11[_g2] = _g11[_g2] + e.direction * height;
				} else {
					var x1;
					if(x_top > x_bottom) {
						sy0 = y_bottom - (sy0 - y_top);
						sy1 = y_bottom - (sy1 - y_top);
						var t = sy0;
						sy0 = sy1;
						sy1 = t;
						t = x_bottom;
						x_bottom = x_top;
						x_top = t;
						dx = -dx;
						dy = -dy;
						t = x01;
						x01 = xb;
						xb = t;
					}
					var x11 = x_top | 0;
					var x2 = x_bottom | 0;
					var y_crossing = (x11 + 1 - x01) * dy + y_top;
					var sign = e.direction;
					var area = sign * (y_crossing - sy0);
					var _g3 = x11;
					var _g12 = scanline;
					_g12[_g3] = _g12[_g3] + area * (1 - (x_top - x11 + (x11 + 1 - x11)) / 2);
					var step = sign * dy;
					var _g4 = x11 + 1;
					var _g13 = x2;
					while(_g4 < _g13) {
						var x3 = _g4++;
						var _g5 = x3;
						var _g14 = scanline;
						_g14[_g5] = _g14[_g5] + (area + step / 2);
						area += step;
					}
					y_crossing += dy * (x2 - (x11 + 1));
					if(!(Math.abs(area) <= 1.01)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g21 = x2;
					var _g31 = scanline;
					_g31[_g21] = _g31[_g21] + (area + sign * (1 - (x2 - x2 + (x_bottom - x2)) / 2) * (sy1 - y_crossing));
					var _g22 = scanline_fillIndex + x2;
					var _g32 = scanline_fill;
					_g32[_g22] = _g32[_g22] + sign * (sy1 - sy0);
				}
			} else {
				var _g6 = 0;
				var _g15 = len;
				while(_g6 < _g15) {
					var x4 = _g6++;
					var y0 = y_top;
					var x12 = x4;
					var x21 = x4 + 1;
					var x31 = xb;
					var y3 = y_bottom;
					var y1 = (x4 - x01) / dx + y_top;
					var y2 = (x4 + 1 - x01) / dx + y_top;
					if(x01 < x12 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x12 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x12 && x31 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x31 < x12 && x01 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x21 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x21 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x31,y3);
					}
				}
			}
		}
		e = e.next;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges = function(result,e,n,vsubsample,off_x,off_y) {
	var active = null;
	var j = 0;
	var scanline;
	var scanline2Index = 0;
	var eIndex = 0;
	if(result.w > 64) {
		var this1 = new Array(result.w * 2 + 1);
		scanline = this1;
	} else {
		var this2 = new Array(129);
		scanline = this2;
	}
	var scanline2 = scanline;
	scanline2Index = result.w;
	var y = off_y;
	e[eIndex + n].y0 = off_y + result.h + 1;
	while(j < result.h) {
		var scan_y_top = y + 0.0;
		var scan_y_bottom = y + 1.0;
		var step_value = active;
		var step_parent = null;
		var _g = 0;
		var _g1 = result.w;
		while(_g < _g1) {
			var i = _g++;
			scanline[i] = 0;
		}
		var _g2 = 0;
		var _g3 = result.w + 1;
		while(_g2 < _g3) {
			var i1 = _g2++;
			scanline2[scanline2Index + i1] = 0;
		}
		while(step_value != null) {
			var z = step_value;
			if(z.ey <= scan_y_top) {
				if(step_parent == null) {
					active = z.next;
					step_value = z.next;
				} else {
					step_parent.next = z.next;
					step_value = z.next;
				}
				if(z.direction == 0) {
					throw new js__$Boot_HaxeError("Error");
				}
				z.direction = 0;
			} else {
				step_parent = step_value;
				step_value = step_value.next;
			}
		}
		while(e[eIndex].y0 <= scan_y_bottom) {
			if(e[eIndex].y0 != e[eIndex].y1) {
				var z1 = kha_graphics2_truetype_StbTruetype.stbtt__new_active(e,eIndex,off_x,scan_y_top);
				if(!(z1.ey >= scan_y_top)) {
					throw new js__$Boot_HaxeError("Error");
				}
				z1.next = active;
				active = z1;
			}
			++eIndex;
		}
		if(active != null) {
			kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new(scanline,scanline2,scanline2Index + 1,result.w,active,scan_y_top);
		}
		var sum = 0;
		var _g4 = 0;
		var _g5 = result.w;
		while(_g4 < _g5) {
			var i2 = _g4++;
			sum += scanline2[scanline2Index + i2];
			var k = scanline[i2] + sum;
			k = Math.abs(k) * 255.0 + 0.5;
			var m = k | 0;
			if(m > 255) {
				m = 255;
			}
			result.pixels.writeU8(result.pixels_offset + j * result.stride + i2,m);
		}
		step_parent = null;
		step_value = active;
		while(step_value != null) {
			var z2 = step_value;
			z2.fx += z2.fdx;
			step_parent = step_value;
			step_value = step_value.next;
		}
		++y;
		++j;
	}
};
kha_graphics2_truetype_StbTruetype.STBTT__COMPARE = function(a,b) {
	return a.y0 < b.y0;
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort = function(p,n) {
	var i;
	var j;
	var _g = 1;
	var _g1 = n;
	while(_g < _g1) {
		var i1 = _g++;
		var t = p[i1];
		var a = t;
		j = i1;
		while(j > 0) {
			var b = p[j - 1];
			var c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(a,b);
			if(!c) {
				break;
			}
			p[j] = p[j - 1];
			--j;
		}
		if(i1 != j) {
			p[j] = t;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort = function(p,pIndex,n) {
	while(n > 12) {
		var t;
		var c;
		var m = n >> 1;
		var c01 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + m]);
		var c12 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + m],p[pIndex + n - 1]);
		if(c01 != c12) {
			c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + n - 1]);
			var z = c == c12 ? 0 : n - 1;
			t = p[pIndex + z];
			p[pIndex + z] = p[pIndex + m];
			p[pIndex + m] = t;
		}
		t = p[pIndex];
		p[pIndex] = p[pIndex + m];
		p[pIndex + m] = t;
		var i = 1;
		var j = n - 1;
		while(true) {
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + i],p[pIndex])) ++i;
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + j])) --j;
			if(i >= j) {
				break;
			}
			t = p[pIndex + i];
			p[pIndex + i] = p[pIndex + j];
			p[pIndex + j] = t;
			++i;
			--j;
		}
		if(j < n - i) {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex,j);
			pIndex += i;
			n -= i;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex + i,n - i);
			n = j;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges = function(p,n) {
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,0,n);
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort(p,n);
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize = function(result,pts,wcount,windings,scale_x,scale_y,shift_x,shift_y,off_x,off_y,invert) {
	var y_scale_inv = invert ? -scale_y : scale_y;
	var i;
	var j;
	var k;
	var vsubsample = 1;
	var ptsIndex = 0;
	var n = 0;
	var _g = 0;
	var _g1 = windings;
	while(_g < _g1) {
		var i1 = _g++;
		n += wcount[i1];
	}
	var this1 = new Array(n + 1);
	var e = this1;
	if(e == null) {
		return;
	} else {
		var _g2 = 0;
		var _g3 = e.length;
		while(_g2 < _g3) {
			var i2 = _g2++;
			e[i2] = new kha_graphics2_truetype_Stbtt_$_$edge();
		}
	}
	n = 0;
	var m = 0;
	var _g21 = 0;
	var _g31 = windings;
	while(_g21 < _g31) {
		var i3 = _g21++;
		var p = pts;
		var pIndex = ptsIndex + m;
		m += wcount[i3];
		j = wcount[i3] - 1;
		var _g22 = 0;
		var _g32 = wcount[i3];
		while(_g22 < _g32) {
			var k1 = _g22++;
			var a = k1;
			var b = j;
			if(p[pIndex + j].y == p[pIndex + k1].y) {
				j = k1;
				continue;
			}
			e[n].invert = false;
			if(invert ? p[pIndex + j].y > p[pIndex + k1].y : p[pIndex + j].y < p[pIndex + k1].y) {
				e[n].invert = true;
				a = j;
				b = k1;
			}
			e[n].x0 = p[pIndex + a].x * scale_x + shift_x;
			e[n].y0 = (p[pIndex + a].y * y_scale_inv + shift_y) * vsubsample;
			e[n].x1 = p[pIndex + b].x * scale_x + shift_x;
			e[n].y1 = (p[pIndex + b].y * y_scale_inv + shift_y) * vsubsample;
			++n;
			j = k1;
		}
	}
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges(e,n);
	kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges(result,e,n,vsubsample,off_x,off_y);
};
kha_graphics2_truetype_StbTruetype.stbtt__add_point = function(points,n,x,y) {
	if(points == null) {
		return;
	}
	points[n].x = x;
	points[n].y = y;
};
kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve = function(points,num_points,x0,y0,x1,y1,x2,y2,objspace_flatness_squared,n) {
	var mx = (x0 + 2 * x1 + x2) / 4;
	var my = (y0 + 2 * y1 + y2) / 4;
	var dx = (x0 + x2) / 2 - mx;
	var dy = (y0 + y2) / 2 - my;
	if(n > 16) {
		return 1;
	}
	if(dx * dx + dy * dy > objspace_flatness_squared) {
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,x0,y0,(x0 + x1) / 2.0,(y0 + y1) / 2.0,mx,my,objspace_flatness_squared,n + 1);
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,mx,my,(x1 + x2) / 2.0,(y1 + y2) / 2.0,x2,y2,objspace_flatness_squared,n + 1);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x2,y2);
		num_points.value += 1;
	}
	return 1;
};
kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves = function(vertices,num_verts,objspace_flatness,contour_lengths,num_contours) {
	var points = null;
	var num_points = 0;
	var objspace_flatness_squared = objspace_flatness * objspace_flatness;
	var i;
	var n = 0;
	var start = 0;
	var pass;
	var _g = 0;
	var _g1 = num_verts;
	while(_g < _g1) {
		var i1 = _g++;
		if(vertices[i1].type == 1) {
			++n;
		}
	}
	num_contours.value = n;
	if(n == 0) {
		return null;
	}
	var this1 = new Array(n);
	contour_lengths.value = this1;
	if(contour_lengths.value == null) {
		num_contours.value = 0;
		return null;
	}
	var _g2 = 0;
	while(_g2 < 2) {
		var pass1 = _g2++;
		var x = 0;
		var y = 0;
		if(pass1 == 1) {
			var this2 = new Array(num_points);
			points = this2;
			if(points == null) {
				contour_lengths.value = null;
				num_contours.value = 0;
				return null;
			} else {
				var _g21 = 0;
				var _g3 = points.length;
				while(_g21 < _g3) {
					var i2 = _g21++;
					points[i2] = new kha_graphics2_truetype_Stbtt_$_$point();
				}
			}
		}
		num_points = 0;
		n = -1;
		var _g22 = 0;
		var _g31 = num_verts;
		while(_g22 < _g31) {
			var i3 = _g22++;
			switch(vertices[i3].type) {
			case 1:
				if(n >= 0) {
					contour_lengths.value[n] = num_points - start;
				}
				++n;
				start = num_points;
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 2:
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 3:
				var num_points_reference = { value : num_points};
				kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points_reference,x,y,vertices[i3].cx,vertices[i3].cy,vertices[i3].x,vertices[i3].y,objspace_flatness_squared,0);
				num_points = num_points_reference.value;
				x = vertices[i3].x;
				y = vertices[i3].y;
				break;
			}
		}
		contour_lengths.value[n] = num_points - start;
	}
	return points;
};
kha_graphics2_truetype_StbTruetype.stbtt_Rasterize = function(result,flatness_in_pixels,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert) {
	var scale = scale_x > scale_y ? scale_y : scale_x;
	var winding_count = 0;
	var winding_lengths = null;
	var winding_count_reference = { value : winding_count};
	var winding_lengths_reference = new kha_graphics2_truetype_VectorOfIntPointer();
	var windings = kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves(vertices,num_verts,flatness_in_pixels / scale,winding_lengths_reference,winding_count_reference);
	winding_count = winding_count_reference.value;
	winding_lengths = winding_lengths_reference.value;
	if(windings != null) {
		kha_graphics2_truetype_StbTruetype.stbtt__rasterize(result,windings,winding_lengths,winding_count,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,glyph) {
	var ix0 = 0;
	var iy0 = 0;
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices == null ? 0 : vertices.length;
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	ix0 = rect.x0;
	iy0 = rect.y0;
	gbm.pixels = output;
	gbm.pixels_offset = output_offset;
	gbm.w = out_w;
	gbm.h = out_h;
	gbm.stride = out_stride;
	if(gbm.w != 0 && gbm.h != 0) {
		kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,glyph) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,glyph);
};
kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap = function(data,offset,pixel_height,pixels,pw,ph,chars,chardata) {
	var f = new kha_graphics2_truetype_Stbtt_$fontinfo();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_InitFont(f,data,offset)) {
		return -1;
	}
	var _g = 0;
	var _g1 = pw * ph;
	while(_g < _g1) {
		var i = _g++;
		pixels.writeU8(i,0);
	}
	var y = 1;
	var x = y;
	var bottom_y = 1;
	var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(f,pixel_height);
	var i1 = 0;
	var _g2 = 0;
	while(_g2 < chars.length) {
		var index = chars[_g2];
		++_g2;
		var g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,index);
		var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(f,g);
		var advance = metrics.advanceWidth;
		var lsb = metrics.leftSideBearing;
		var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox(f,g,scale,scale);
		var x0 = rect.x0;
		var y0 = rect.y0;
		var x1 = rect.x1;
		var y1 = rect.y1;
		var gw = x1 - x0;
		var gh = y1 - y0;
		if(x + gw + 1 >= pw) {
			y = bottom_y;
			x = 1;
		}
		if(y + gh + 1 >= ph) {
			return -i1;
		}
		if(x + gw >= pw) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(y + gh >= ph) {
			throw new js__$Boot_HaxeError("Error");
		}
		kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap(f,pixels,x + y * pw,gw,gh,pw,scale,scale,g);
		chardata[i1].x0 = x;
		chardata[i1].y0 = y;
		chardata[i1].x1 = x + gw;
		chardata[i1].y1 = y + gh;
		chardata[i1].xadvance = scale * advance;
		chardata[i1].xoff = x0;
		chardata[i1].yoff = y0;
		x = x + gw + 1;
		if(y + gh + 1 > bottom_y) {
			bottom_y = y + gh + 1;
		}
		++i1;
	}
	return bottom_y;
};
var kha_graphics4_ConstantLocation = function() { };
$hxClasses["kha.graphics4.ConstantLocation"] = kha_graphics4_ConstantLocation;
kha_graphics4_ConstantLocation.__name__ = "kha.graphics4.ConstantLocation";
var kha_graphics4_CubeMap = function(size,format,renderTarget,depthStencilFormat) {
	this.isDepthAttachment = false;
	this.depthTexture = null;
	this.texture = null;
	this.frameBuffer = null;
	this.myWidth = size;
	this.myHeight = size;
	this.format = format;
	this.renderTarget = renderTarget;
	this.depthStencilFormat = depthStencilFormat;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.graphics4.CubeMap"] = kha_graphics4_CubeMap;
kha_graphics4_CubeMap.__name__ = "kha.graphics4.CubeMap";
kha_graphics4_CubeMap.__interfaces__ = [kha_Resource,kha_Canvas];
kha_graphics4_CubeMap.createRenderTarget = function(size,format,depthStencil,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(format == null) {
		format = 0;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	return new kha_graphics4_CubeMap(size,format,true,depthStencil);
};
kha_graphics4_CubeMap.prototype = {
	createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
		kha_SystemImpl.gl.texParameteri(34067,10240,9729);
		kha_SystemImpl.gl.texParameteri(34067,10241,9729);
		kha_SystemImpl.gl.texParameteri(34067,10242,33071);
		kha_SystemImpl.gl.texParameteri(34067,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.format) {
			case 0:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
			}
			if(this.format == 3) {
				kha_SystemImpl.gl.texParameteri(34067,10240,9728);
				kha_SystemImpl.gl.texParameteri(34067,10241,9728);
				this.isDepthAttachment = true;
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(34067,colortex);
					kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34069,colortex,0);
					kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34070,colortex,0);
					kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34071,colortex,0);
					kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34072,colortex,0);
					kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34073,colortex,0);
					kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34074,colortex,0);
					kha_SystemImpl.gl.bindTexture(34067,this.texture);
				}
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		}
		kha_SystemImpl.gl.bindTexture(34067,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			if(depthStencilFormat == 1) {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.myWidth,this.myHeight,0,6402,5125,null);
			} else {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
			}
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36096,34067,this.depthTexture,0);
			break;
		case 2:case 3:case 4:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.myWidth,this.myHeight,0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,33306,34067,this.depthTexture,0);
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
	}
	,setDepth: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,__class__: kha_graphics4_CubeMap
	,__properties__: {get_g4:"get_g4",get_height:"get_height",get_width:"get_width"}
};
var kha_graphics4_FragmentShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35632;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.FragmentShader"] = kha_graphics4_FragmentShader;
kha_graphics4_FragmentShader.__name__ = "kha.graphics4.FragmentShader";
kha_graphics4_FragmentShader.fromSource = function(source) {
	var shader = new kha_graphics4_FragmentShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_FragmentShader.prototype = {
	__class__: kha_graphics4_FragmentShader
};
var kha_graphics4_GeometryShader = function() { };
$hxClasses["kha.graphics4.GeometryShader"] = kha_graphics4_GeometryShader;
kha_graphics4_GeometryShader.__name__ = "kha.graphics4.GeometryShader";
var kha_graphics4_Graphics = function() { };
$hxClasses["kha.graphics4.Graphics"] = kha_graphics4_Graphics;
kha_graphics4_Graphics.__name__ = "kha.graphics4.Graphics";
kha_graphics4_Graphics.prototype = {
	__class__: kha_graphics4_Graphics
};
var kha_graphics4_PipelineCache = function(pipeline) {
	this.pipeline = pipeline;
	this.projectionLocation = pipeline.getConstantLocation("projectionMatrix");
	this.textureLocation = pipeline.getTextureUnit("tex");
};
$hxClasses["kha.graphics4.PipelineCache"] = kha_graphics4_PipelineCache;
kha_graphics4_PipelineCache.__name__ = "kha.graphics4.PipelineCache";
kha_graphics4_PipelineCache.prototype = {
	__class__: kha_graphics4_PipelineCache
};
var kha_graphics4_ImageShaderPainter = function(g4) {
	this.myPipeline = null;
	this.bilinearMipmaps = false;
	this.bilinear = false;
	this.g = g4;
	kha_graphics4_ImageShaderPainter.bufferIndex = 0;
	kha_graphics4_ImageShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_ImageShaderPainter.standardImagePipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.ImageShaderPainter"] = kha_graphics4_ImageShaderPainter;
kha_graphics4_ImageShaderPainter.__name__ = "kha.graphics4.ImageShaderPainter";
kha_graphics4_ImageShaderPainter.initShaders = function() {
	if(kha_graphics4_ImageShaderPainter.structure == null) {
		kha_graphics4_ImageShaderPainter.structure = kha_graphics4_Graphics2.createImageVertexStructure();
	}
	if(kha_graphics4_ImageShaderPainter.standardImagePipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_ImageShaderPainter.structure);
		pipeline.compile();
		kha_graphics4_ImageShaderPainter.standardImagePipeline = new kha_graphics4_PipelineCache(pipeline);
	}
};
kha_graphics4_ImageShaderPainter.prototype = {
	setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ImageShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ImageShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(6000,kha_graphics4_ImageShaderPainter.structure,1);
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ImageShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(9000,0);
			var indices = kha_graphics4_ImageShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1500) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_ImageShaderPainter.indexBuffer.unlock();
		}
	}
	,drawBuffer: function() {
		kha_graphics4_ImageShaderPainter.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_ImageShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ImageShaderPainter.indexBuffer);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setTexture(this.myPipeline.textureLocation,kha_graphics4_ImageShaderPainter.lastTexture);
		this.g.setTextureParameters(this.myPipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,this.bilinearMipmaps ? 2 : 0);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ImageShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(this.myPipeline.textureLocation,null);
		kha_graphics4_ImageShaderPainter.bufferIndex = 0;
		kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,end: function() {
		if(kha_graphics4_ImageShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_ImageShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_ImageShaderPainter
};
var kha_graphics4_ColoredShaderPainter = function(g4) {
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_ColoredShaderPainter.standardColorPipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.ColoredShaderPainter"] = kha_graphics4_ColoredShaderPainter;
kha_graphics4_ColoredShaderPainter.__name__ = "kha.graphics4.ColoredShaderPainter";
kha_graphics4_ColoredShaderPainter.initShaders = function() {
	if(kha_graphics4_ColoredShaderPainter.structure == null) {
		kha_graphics4_ColoredShaderPainter.structure = kha_graphics4_Graphics2.createColoredVertexStructure();
	}
	if(kha_graphics4_ColoredShaderPainter.standardColorPipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createColoredPipeline(kha_graphics4_ColoredShaderPainter.structure);
		pipeline.compile();
		kha_graphics4_ColoredShaderPainter.standardColorPipeline = new kha_graphics4_PipelineCache(pipeline);
	}
};
kha_graphics4_ColoredShaderPainter.prototype = {
	setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ColoredShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ColoredShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(400,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(600,0);
			var indices = kha_graphics4_ColoredShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 100) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_ColoredShaderPainter.indexBuffer.unlock();
			kha_graphics4_ColoredShaderPainter.triangleVertexBuffer = new kha_graphics4_VertexBuffer(300,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer = new kha_graphics4_IndexBuffer(300,0);
			var triIndices = kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.lock();
			var _g1 = 0;
			while(_g1 < 100) {
				var i1 = _g1++;
				triIndices[i1 * 3] = i1 * 3;
				triIndices[i1 * 3 + 1] = i1 * 3 + 1;
				triIndices[i1 * 3 + 2] = i1 * 3 + 2;
			}
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 7] = topleftx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 8] = toplefty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 9] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 14] = toprightx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 15] = toprighty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 16] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 21] = bottomrightx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 22] = bottomrighty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 23] = -5.0;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		var r = a * (((color & 16711680) >>> 16) * 0.00392156862745098);
		var g = a * (((color & 65280) >>> 8) * 0.00392156862745098);
		var b = a * ((color & 255) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 3] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 4] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 5] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 6] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 10] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 11] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 12] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 13] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 17] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 18] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 19] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 20] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 24] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 25] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 26] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 27] = a;
	}
	,setTriVertices: function(x1,y1,x2,y2,x3,y3) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex] = x1;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 1] = y1;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 7] = x2;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 8] = y2;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 9] = -5.0;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 14] = x3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 15] = y3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 16] = -5.0;
	}
	,setTriColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		var r = a * (((color & 16711680) >>> 16) * 0.00392156862745098);
		var g = a * (((color & 65280) >>> 8) * 0.00392156862745098);
		var b = a * ((color & 255) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 3] = r;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 4] = g;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 5] = b;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 6] = a;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 10] = r;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 11] = g;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 12] = b;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 13] = a;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 17] = r;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 18] = g;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 19] = b;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 20] = a;
	}
	,drawBuffer: function(trisDone) {
		if(!trisDone) {
			if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
				this.drawTriBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.indexBuffer);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.bufferIndex * 2 * 3);
		kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
	}
	,drawTriBuffer: function(rectsDone) {
		if(!rectsDone) {
			if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
				this.drawBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.triangleVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.triangleIndexBuffer);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
	}
	,fillRect: function(opacity,color,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex + 1 >= 100) {
			this.drawBuffer(false);
		}
		this.setRectColors(opacity,color);
		this.setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty);
		++kha_graphics4_ColoredShaderPainter.bufferIndex;
	}
	,fillTriangle: function(opacity,color,x1,y1,x2,y2,x3,y3) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex + 1 >= 100) {
			this.drawTriBuffer(false);
		}
		this.setTriColors(opacity,color);
		this.setTriVertices(x1,y1,x2,y2,x3,y3);
		++kha_graphics4_ColoredShaderPainter.triangleBufferIndex;
	}
	,__class__: kha_graphics4_ColoredShaderPainter
};
var kha_graphics4_TextShaderPainter = function(g4) {
	this.bakedQuadCache = new kha_AlignedQuad();
	this.bilinear = false;
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_TextShaderPainter.bufferIndex = 0;
	kha_graphics4_TextShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_TextShaderPainter.standardTextPipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.TextShaderPainter"] = kha_graphics4_TextShaderPainter;
kha_graphics4_TextShaderPainter.__name__ = "kha.graphics4.TextShaderPainter";
kha_graphics4_TextShaderPainter.initShaders = function() {
	if(kha_graphics4_TextShaderPainter.structure == null) {
		kha_graphics4_TextShaderPainter.structure = kha_graphics4_Graphics2.createTextVertexStructure();
	}
	if(kha_graphics4_TextShaderPainter.standardTextPipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createTextPipeline(kha_graphics4_TextShaderPainter.structure);
		pipeline.compile();
		kha_graphics4_TextShaderPainter.standardTextPipeline = new kha_graphics4_PipelineCache(pipeline);
	}
};
kha_graphics4_TextShaderPainter.findIndex = function(charCode) {
	var glyphs = kha_graphics2_Graphics.fontGlyphs;
	var blocks = kha_KravurImage.charBlocks;
	var offset = 0;
	var _g = 0;
	var _g1 = blocks.length / 2 | 0;
	while(_g < _g1) {
		var i = _g++;
		var start = blocks[i * 2];
		var end = blocks[i * 2 + 1];
		if(charCode >= start && charCode <= end) {
			return offset + charCode - start;
		}
		offset += end - start + 1;
	}
	return 0;
};
kha_graphics4_TextShaderPainter.prototype = {
	setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_TextShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_TextShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(400,kha_graphics4_TextShaderPainter.structure,1);
			kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_TextShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(600,0);
			var indices = kha_graphics4_TextShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 100) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_TextShaderPainter.indexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 9] = topleftx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 10] = toplefty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 11] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 18] = toprightx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 19] = toprighty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 20] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 27] = bottomrightx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 28] = bottomrighty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 29] = -5.0;
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 31] = bottom;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 5] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 6] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 7] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 14] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 15] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 16] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 23] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 24] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 25] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 32] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 33] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 34] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 35] = a;
	}
	,drawBuffer: function() {
		kha_graphics4_TextShaderPainter.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_TextShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_TextShaderPainter.indexBuffer);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setTexture(this.myPipeline.textureLocation,kha_graphics4_TextShaderPainter.lastTexture);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.setTextureParameters(this.myPipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,0);
		this.g.drawIndexedVertices(0,kha_graphics4_TextShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(this.myPipeline.textureLocation,null);
		kha_graphics4_TextShaderPainter.bufferIndex = 0;
		kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setFont: function(font) {
		this.font = js_Boot.__cast(font , kha_Kravur);
	}
	,startString: function(text) {
		this.text = text;
	}
	,charCodeAt: function(position) {
		return HxOverrides.cca(this.text,position);
	}
	,stringLength: function() {
		return this.text.length;
	}
	,endString: function() {
		this.text = null;
	}
	,drawString: function(text,opacity,color,x,y,transformation) {
		var font = this.font._get(this.fontSize);
		var tex = font.getTexture();
		if(kha_graphics4_TextShaderPainter.lastTexture != null && tex != kha_graphics4_TextShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = tex;
		var xpos = x;
		var ypos = y;
		this.startString(text);
		var _g = 0;
		var _g1 = this.stringLength();
		while(_g < _g1) {
			var i = _g++;
			var q = font.getBakedQuad(this.bakedQuadCache,kha_graphics4_TextShaderPainter.findIndex(this.charCodeAt(i)),xpos,ypos);
			if(q != null) {
				if(kha_graphics4_TextShaderPainter.bufferIndex + 1 >= 100) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				var value_x = q.x0;
				var value_y = q.y1;
				var w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				var x1 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				var y1 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				var p0_x = x1;
				var p0_y = y1;
				var value_x1 = q.x0;
				var value_y1 = q.y0;
				var w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				var x2 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				var y2 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				var p1_x = x2;
				var p1_y = y2;
				var value_x2 = q.x1;
				var value_y2 = q.y0;
				var w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				var x3 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				var y3 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				var p2_x = x3;
				var p2_y = y3;
				var value_x3 = q.x1;
				var value_y3 = q.y1;
				var w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				var x4 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				var y4 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				var p3_x = x4;
				var p3_y = y4;
				this.setRectVertices(p0_x,p0_y,p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
				xpos += q.xadvance;
				++kha_graphics4_TextShaderPainter.bufferIndex;
			}
		}
		this.endString();
	}
	,end: function() {
		if(kha_graphics4_TextShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_TextShaderPainter
};
var kha_graphics4_Graphics2 = function(canvas) {
	this.myImageScaleQuality = kha_graphics2_ImageScaleQuality.High;
	kha_graphics2_Graphics.call(this);
	this.set_color(-1);
	this.canvas = canvas;
	this.g = canvas.get_g4();
	this.imagePainter = new kha_graphics4_ImageShaderPainter(this.g);
	this.coloredPainter = new kha_graphics4_ColoredShaderPainter(this.g);
	this.textPainter = new kha_graphics4_TextShaderPainter(this.g);
	this.textPainter.fontSize = this.get_fontSize();
	this.projectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.setProjection();
	if(kha_graphics4_Graphics2.videoPipeline == null) {
		kha_graphics4_Graphics2.videoPipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_Graphics2.createImageVertexStructure());
		kha_graphics4_Graphics2.videoPipeline.fragmentShader = kha_Shaders.painter_video_frag;
		kha_graphics4_Graphics2.videoPipeline.vertexShader = kha_Shaders.painter_video_vert;
		kha_graphics4_Graphics2.videoPipeline.compile();
	}
};
$hxClasses["kha.graphics4.Graphics2"] = kha_graphics4_Graphics2;
kha_graphics4_Graphics2.__name__ = "kha.graphics4.Graphics2";
kha_graphics4_Graphics2.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_graphics4_Graphics2.createImageVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createImagePipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_image_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_image_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 1;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 1;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createColoredVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createColoredPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_colored_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_colored_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 1;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 1;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createTextVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createTextPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_text_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_text_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 3;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 3;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.__super__ = kha_graphics2_Graphics;
kha_graphics4_Graphics2.prototype = $extend(kha_graphics2_Graphics.prototype,{
	setProjection: function() {
		var width = this.canvas.get_width();
		var height = this.canvas.get_height();
		if(((this.canvas) instanceof kha_Framebuffer)) {
			var _this = this.projectionMatrix;
			var tx = -width / width;
			var ty = -height / (0 - height);
			var tz = -1.0002000200020003;
			var m__00 = 2 / width;
			var m__10 = 0;
			var m__20 = 0;
			var m__30 = tx;
			var m__01 = 0;
			var m__11 = 2 / (0 - height);
			var m__21 = 0;
			var m__31 = ty;
			var m__02 = 0;
			var m__12 = 0;
			var m__22 = -0.002000200020002;
			var m__32 = tz;
			var m__03 = 0;
			var m__13 = 0;
			var m__23 = 0;
			var m__33 = 1;
			_this._00 = m__00;
			_this._10 = m__10;
			_this._20 = m__20;
			_this._30 = m__30;
			_this._01 = m__01;
			_this._11 = m__11;
			_this._21 = m__21;
			_this._31 = m__31;
			_this._02 = m__02;
			_this._12 = m__12;
			_this._22 = m__22;
			_this._32 = m__32;
			_this._03 = m__03;
			_this._13 = m__13;
			_this._23 = m__23;
			_this._33 = m__33;
		} else {
			if(!kha_Image.get_nonPow2Supported()) {
				width = kha_graphics4_Graphics2.upperPowerOfTwo(width);
				height = kha_graphics4_Graphics2.upperPowerOfTwo(height);
			}
			if(this.g.renderTargetsInvertedY()) {
				var _this1 = this.projectionMatrix;
				var tx1 = -width / width;
				var ty1 = -height / height;
				var tz1 = -1.0002000200020003;
				var m__001 = 2 / width;
				var m__101 = 0;
				var m__201 = 0;
				var m__301 = tx1;
				var m__011 = 0;
				var m__111 = 2 / height;
				var m__211 = 0;
				var m__311 = ty1;
				var m__021 = 0;
				var m__121 = 0;
				var m__221 = -0.002000200020002;
				var m__321 = tz1;
				var m__031 = 0;
				var m__131 = 0;
				var m__231 = 0;
				var m__331 = 1;
				_this1._00 = m__001;
				_this1._10 = m__101;
				_this1._20 = m__201;
				_this1._30 = m__301;
				_this1._01 = m__011;
				_this1._11 = m__111;
				_this1._21 = m__211;
				_this1._31 = m__311;
				_this1._02 = m__021;
				_this1._12 = m__121;
				_this1._22 = m__221;
				_this1._32 = m__321;
				_this1._03 = m__031;
				_this1._13 = m__131;
				_this1._23 = m__231;
				_this1._33 = m__331;
			} else {
				var _this2 = this.projectionMatrix;
				var tx2 = -width / width;
				var ty2 = -height / (0 - height);
				var tz2 = -1.0002000200020003;
				var m__002 = 2 / width;
				var m__102 = 0;
				var m__202 = 0;
				var m__302 = tx2;
				var m__012 = 0;
				var m__112 = 2 / (0 - height);
				var m__212 = 0;
				var m__312 = ty2;
				var m__022 = 0;
				var m__122 = 0;
				var m__222 = -0.002000200020002;
				var m__322 = tz2;
				var m__032 = 0;
				var m__132 = 0;
				var m__232 = 0;
				var m__332 = 1;
				_this2._00 = m__002;
				_this2._10 = m__102;
				_this2._20 = m__202;
				_this2._30 = m__302;
				_this2._01 = m__012;
				_this2._11 = m__112;
				_this2._21 = m__212;
				_this2._31 = m__312;
				_this2._02 = m__022;
				_this2._12 = m__122;
				_this2._22 = m__222;
				_this2._32 = m__322;
				_this2._03 = m__032;
				_this2._13 = m__132;
				_this2._23 = m__232;
				_this2._33 = m__332;
			}
		}
		this.imagePainter.setProjection(this.projectionMatrix);
		this.coloredPainter.setProjection(this.projectionMatrix);
		this.textPainter.setProjection(this.projectionMatrix);
	}
	,drawImage: function(img,x,y) {
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var xw = x + img.get_width();
		var yh = y + img.get_height();
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x = x;
		var value_y = yh;
		var w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		var x1 = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		var y1 = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		var p1_x = x1;
		var p1_y = y1;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x1 = x;
		var value_y1 = y;
		var w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		var x2 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		var y2 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		var p2_x = x2;
		var p2_y = y2;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x2 = xw;
		var value_y2 = y;
		var w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		var x3 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		var y3 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		var p3_x = x3;
		var p3_y = y3;
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_x3 = xw;
		var value_y3 = yh;
		var w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		var x4 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		var y4 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		var p4_x = x4;
		var p4_y = y4;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this5.drawBuffer();
		}
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 35] = a;
		var right = tex.get_width() / tex.get_realWidth();
		var bottom = tex.get_height() / tex.get_realHeight();
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 3] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 12] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 13] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 22] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 31] = bottom;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = p1_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = p1_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = p2_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = p2_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = p3_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = p3_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = p4_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = p4_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,drawScaledSubImage: function(img,sx,sy,sw,sh,dx,dy,dw,dh) {
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x = dx;
		var value_y = dy + dh;
		var w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		var x = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		var y = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		var p1_x = x;
		var p1_y = y;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x1 = dx;
		var value_y1 = dy;
		var w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		var x1 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		var y1 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		var p2_x = x1;
		var p2_y = y1;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x2 = dx + dw;
		var value_y2 = dy;
		var w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		var x2 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		var y2 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		var p3_x = x2;
		var p3_y = y2;
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_x3 = dx + dw;
		var value_y3 = dy + dh;
		var w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		var x3 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		var y3 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		var p4_x = x3;
		var p4_y = y3;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this5.drawBuffer();
		}
		var left = sx / tex.get_realWidth();
		var top = sy / tex.get_realHeight();
		var right = (sx + sw) / tex.get_realWidth();
		var bottom = (sy + sh) / tex.get_realHeight();
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 31] = bottom;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 35] = a;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = p1_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = p1_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = p2_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = p2_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = p3_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = p3_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = p4_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = p4_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_color: function(color) {
		return this.myColor = color;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var value_x = x - strength / 2;
		var value_y = y + strength / 2;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var p1 = new kha_math_FastVector2(x1,y1);
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x1 = x - strength / 2;
		var value_y1 = y - strength / 2;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x2 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y2 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var p2 = new kha_math_FastVector2(x2,y2);
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x2 = x + width + strength / 2;
		var value_y2 = y - strength / 2;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x3 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y3 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var p3 = new kha_math_FastVector2(x3,y3);
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x3 = x + width + strength / 2;
		var value_y3 = y + strength / 2;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x4 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y4 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		var p4 = new kha_math_FastVector2(x4,y4);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_x4 = x - strength / 2;
		var value_y4 = y + height - strength / 2;
		var w4 = _this4._02 * value_x4 + _this4._12 * value_y4 + _this4._22;
		var x5 = (_this4._00 * value_x4 + _this4._10 * value_y4 + _this4._20) / w4;
		var y5 = (_this4._01 * value_x4 + _this4._11 * value_y4 + _this4._21) / w4;
		p1 = new kha_math_FastVector2(x5,y5);
		var _this5 = this.transformations[this.transformations.length - 1];
		var value_x5 = x - strength / 2;
		var value_y5 = y + strength / 2;
		var w5 = _this5._02 * value_x5 + _this5._12 * value_y5 + _this5._22;
		var x6 = (_this5._00 * value_x5 + _this5._10 * value_y5 + _this5._20) / w5;
		var y6 = (_this5._01 * value_x5 + _this5._11 * value_y5 + _this5._21) / w5;
		p2 = new kha_math_FastVector2(x6,y6);
		var _this6 = this.transformations[this.transformations.length - 1];
		var value_x6 = x + strength / 2;
		var value_y6 = y + strength / 2;
		var w6 = _this6._02 * value_x6 + _this6._12 * value_y6 + _this6._22;
		var x7 = (_this6._00 * value_x6 + _this6._10 * value_y6 + _this6._20) / w6;
		var y7 = (_this6._01 * value_x6 + _this6._11 * value_y6 + _this6._21) / w6;
		p3 = new kha_math_FastVector2(x7,y7);
		var _this7 = this.transformations[this.transformations.length - 1];
		var value_x7 = x + strength / 2;
		var value_y7 = y + height - strength / 2;
		var w7 = _this7._02 * value_x7 + _this7._12 * value_y7 + _this7._22;
		var x8 = (_this7._00 * value_x7 + _this7._10 * value_y7 + _this7._20) / w7;
		var y8 = (_this7._01 * value_x7 + _this7._11 * value_y7 + _this7._21) / w7;
		p4 = new kha_math_FastVector2(x8,y8);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this8 = this.transformations[this.transformations.length - 1];
		var value_x8 = x - strength / 2;
		var value_y8 = y + height + strength / 2;
		var w8 = _this8._02 * value_x8 + _this8._12 * value_y8 + _this8._22;
		var x9 = (_this8._00 * value_x8 + _this8._10 * value_y8 + _this8._20) / w8;
		var y9 = (_this8._01 * value_x8 + _this8._11 * value_y8 + _this8._21) / w8;
		p1 = new kha_math_FastVector2(x9,y9);
		var _this9 = this.transformations[this.transformations.length - 1];
		var value_x9 = x - strength / 2;
		var value_y9 = y + height - strength / 2;
		var w9 = _this9._02 * value_x9 + _this9._12 * value_y9 + _this9._22;
		var x10 = (_this9._00 * value_x9 + _this9._10 * value_y9 + _this9._20) / w9;
		var y10 = (_this9._01 * value_x9 + _this9._11 * value_y9 + _this9._21) / w9;
		p2 = new kha_math_FastVector2(x10,y10);
		var _this10 = this.transformations[this.transformations.length - 1];
		var value_x10 = x + width + strength / 2;
		var value_y10 = y + height - strength / 2;
		var w10 = _this10._02 * value_x10 + _this10._12 * value_y10 + _this10._22;
		var x11 = (_this10._00 * value_x10 + _this10._10 * value_y10 + _this10._20) / w10;
		var y11 = (_this10._01 * value_x10 + _this10._11 * value_y10 + _this10._21) / w10;
		p3 = new kha_math_FastVector2(x11,y11);
		var _this11 = this.transformations[this.transformations.length - 1];
		var value_x11 = x + width + strength / 2;
		var value_y11 = y + height + strength / 2;
		var w11 = _this11._02 * value_x11 + _this11._12 * value_y11 + _this11._22;
		var x12 = (_this11._00 * value_x11 + _this11._10 * value_y11 + _this11._20) / w11;
		var y12 = (_this11._01 * value_x11 + _this11._11 * value_y11 + _this11._21) / w11;
		p4 = new kha_math_FastVector2(x12,y12);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this12 = this.transformations[this.transformations.length - 1];
		var value_x12 = x + width - strength / 2;
		var value_y12 = y + height - strength / 2;
		var w12 = _this12._02 * value_x12 + _this12._12 * value_y12 + _this12._22;
		var x13 = (_this12._00 * value_x12 + _this12._10 * value_y12 + _this12._20) / w12;
		var y13 = (_this12._01 * value_x12 + _this12._11 * value_y12 + _this12._21) / w12;
		p1 = new kha_math_FastVector2(x13,y13);
		var _this13 = this.transformations[this.transformations.length - 1];
		var value_x13 = x + width - strength / 2;
		var value_y13 = y + strength / 2;
		var w13 = _this13._02 * value_x13 + _this13._12 * value_y13 + _this13._22;
		var x14 = (_this13._00 * value_x13 + _this13._10 * value_y13 + _this13._20) / w13;
		var y14 = (_this13._01 * value_x13 + _this13._11 * value_y13 + _this13._21) / w13;
		p2 = new kha_math_FastVector2(x14,y14);
		var _this14 = this.transformations[this.transformations.length - 1];
		var value_x14 = x + width + strength / 2;
		var value_y14 = y + strength / 2;
		var w14 = _this14._02 * value_x14 + _this14._12 * value_y14 + _this14._22;
		var x15 = (_this14._00 * value_x14 + _this14._10 * value_y14 + _this14._20) / w14;
		var y15 = (_this14._01 * value_x14 + _this14._11 * value_y14 + _this14._21) / w14;
		p3 = new kha_math_FastVector2(x15,y15);
		var _this15 = this.transformations[this.transformations.length - 1];
		var value_x15 = x + width + strength / 2;
		var value_y15 = y + height - strength / 2;
		var w15 = _this15._02 * value_x15 + _this15._12 * value_y15 + _this15._22;
		var x16 = (_this15._00 * value_x15 + _this15._10 * value_y15 + _this15._20) / w15;
		var y16 = (_this15._01 * value_x15 + _this15._11 * value_y15 + _this15._21) / w15;
		p4 = new kha_math_FastVector2(x16,y16);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
	}
	,fillRect: function(x,y,width,height) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var value_x = x;
		var value_y = y + height;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var p1_x = x1;
		var p1_y = y1;
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x1 = x;
		var value_y1 = y;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x2 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y2 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var p2_x = x2;
		var p2_y = y2;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x2 = x + width;
		var value_y2 = y;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x3 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y3 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var p3_x = x3;
		var p3_y = y3;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x3 = x + width;
		var value_y3 = y + height;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x4 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y4 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		var p4_x = x4;
		var p4_y = y4;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
	}
	,drawString: function(text,x,y) {
		this.imagePainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawString(text,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformations.length - 1]);
	}
	,get_font: function() {
		return this.myFont;
	}
	,set_font: function(font) {
		this.textPainter.setFont(font);
		return this.myFont = font;
	}
	,set_fontSize: function(value) {
		return kha_graphics2_Graphics.prototype.set_fontSize.call(this,this.textPainter.fontSize = value);
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var vec;
		if(y2 == y1) {
			vec = new kha_math_FastVector2(0,-1);
		} else {
			vec = new kha_math_FastVector2(1,-(x2 - x1) / (y2 - y1));
		}
		vec.set_length(strength);
		var p1 = new kha_math_FastVector2(x1 + 0.5 * vec.x,y1 + 0.5 * vec.y);
		var p2 = new kha_math_FastVector2(x2 + 0.5 * vec.x,y2 + 0.5 * vec.y);
		var p3 = new kha_math_FastVector2(p1.x - vec.x,p1.y - vec.y);
		var p4 = new kha_math_FastVector2(p2.x - vec.x,p2.y - vec.y);
		var _this = this.transformations[this.transformations.length - 1];
		var w = _this._02 * p1.x + _this._12 * p1.y + _this._22;
		var x = (_this._00 * p1.x + _this._10 * p1.y + _this._20) / w;
		var y = (_this._01 * p1.x + _this._11 * p1.y + _this._21) / w;
		p1 = new kha_math_FastVector2(x,y);
		var _this1 = this.transformations[this.transformations.length - 1];
		var w1 = _this1._02 * p2.x + _this1._12 * p2.y + _this1._22;
		var x3 = (_this1._00 * p2.x + _this1._10 * p2.y + _this1._20) / w1;
		var y3 = (_this1._01 * p2.x + _this1._11 * p2.y + _this1._21) / w1;
		p2 = new kha_math_FastVector2(x3,y3);
		var _this2 = this.transformations[this.transformations.length - 1];
		var w2 = _this2._02 * p3.x + _this2._12 * p3.y + _this2._22;
		var x4 = (_this2._00 * p3.x + _this2._10 * p3.y + _this2._20) / w2;
		var y4 = (_this2._01 * p3.x + _this2._11 * p3.y + _this2._21) / w2;
		p3 = new kha_math_FastVector2(x4,y4);
		var _this3 = this.transformations[this.transformations.length - 1];
		var w3 = _this3._02 * p4.x + _this3._12 * p4.y + _this3._22;
		var x5 = (_this3._00 * p4.x + _this3._10 * p4.y + _this3._20) / w3;
		var y5 = (_this3._01 * p4.x + _this3._11 * p4.y + _this3._21) / w3;
		p4 = new kha_math_FastVector2(x5,y5);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p3.x,p3.y,p2.x,p2.y,p4.x,p4.y);
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var p1_x = x;
		var p1_y = y;
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x1 = x2;
		var value_y1 = y2;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x4 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y4 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var p2_x = x4;
		var p2_y = y4;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x2 = x3;
		var value_y2 = y3;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x5 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y5 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var p3_x = x5;
		var p3_y = y5;
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
	}
	,set_imageScaleQuality: function(value) {
		this.imagePainter.setBilinearFilter(value == kha_graphics2_ImageScaleQuality.High);
		this.textPainter.setBilinearFilter(value == kha_graphics2_ImageScaleQuality.High);
		return this.myImageScaleQuality = value;
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(kha_graphics4_Graphics2.current == null) {
			kha_graphics4_Graphics2.current = this;
		} else {
			throw new js__$Boot_HaxeError("End before you begin");
		}
		this.g.begin();
		if(clear) {
			this.clear(clearColor);
		}
		this.setProjection();
	}
	,clear: function(color) {
		this.flush();
		this.g.clear(color == null ? -16777216 : color);
	}
	,flush: function() {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
	}
	,end: function() {
		this.flush();
		this.g.end();
		if(kha_graphics4_Graphics2.current == this) {
			kha_graphics4_Graphics2.current = null;
		} else {
			throw new js__$Boot_HaxeError("Begin before you end");
		}
	}
	,__class__: kha_graphics4_Graphics2
});
var kha_graphics4_IndexBuffer = function(indexCount,usage,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	this.usage = usage;
	this.mySize = indexCount;
	this.buffer = kha_SystemImpl.gl.createBuffer();
	var this1 = new Uint32Array(indexCount);
	this._data = this1;
};
$hxClasses["kha.graphics4.IndexBuffer"] = kha_graphics4_IndexBuffer;
kha_graphics4_IndexBuffer.__name__ = "kha.graphics4.IndexBuffer";
kha_graphics4_IndexBuffer.prototype = {
	lock: function(start,count) {
		if(start == null) {
			start = 0;
		}
		if(count == null) {
			count = this.mySize;
		}
		return this._data.subarray(start,start + count);
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
		var glData = kha_SystemImpl.elementIndexUint == null ? new Uint16Array(this._data) : this._data;
		kha_SystemImpl.gl.bufferData(34963,glData,this.usage == 1 ? 35048 : 35044);
	}
	,set: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
	}
	,count: function() {
		return this.mySize;
	}
	,__class__: kha_graphics4_IndexBuffer
};
var kha_graphics4_PipelineStateBase = function() {
	this.inputLayout = null;
	this.vertexShader = null;
	this.fragmentShader = null;
	this.geometryShader = null;
	this.tessellationControlShader = null;
	this.tessellationEvaluationShader = null;
	this.cullMode = 2;
	this.depthWrite = false;
	this.depthMode = 0;
	this.stencilMode = 0;
	this.stencilBothPass = 0;
	this.stencilDepthFail = 0;
	this.stencilFail = 0;
	this.stencilReferenceValue = kha_graphics4_StencilValue.Static(0);
	this.stencilReadMask = 255;
	this.stencilWriteMask = 255;
	this.blendSource = 1;
	this.blendDestination = 2;
	this.blendOperation = 0;
	this.alphaBlendSource = 1;
	this.alphaBlendDestination = 2;
	this.alphaBlendOperation = 0;
	this.colorWriteMasksRed = [];
	this.colorWriteMasksGreen = [];
	this.colorWriteMasksBlue = [];
	this.colorWriteMasksAlpha = [];
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.conservativeRasterization = false;
};
$hxClasses["kha.graphics4.PipelineStateBase"] = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineStateBase.__name__ = "kha.graphics4.PipelineStateBase";
kha_graphics4_PipelineStateBase.prototype = {
	__class__: kha_graphics4_PipelineStateBase
};
var kha_graphics4_PipelineState = function() {
	this.program = null;
	kha_graphics4_PipelineStateBase.call(this);
	this.textures = [];
	this.textureValues = [];
};
$hxClasses["kha.graphics4.PipelineState"] = kha_graphics4_PipelineState;
kha_graphics4_PipelineState.__name__ = "kha.graphics4.PipelineState";
kha_graphics4_PipelineState.__super__ = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineState.prototype = $extend(kha_graphics4_PipelineStateBase.prototype,{
	'delete': function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
	}
	,compile: function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
		this.program = kha_SystemImpl.gl.createProgram();
		this.compileShader(this.vertexShader);
		this.compileShader(this.fragmentShader);
		kha_SystemImpl.gl.attachShader(this.program,this.vertexShader.shader);
		kha_SystemImpl.gl.attachShader(this.program,this.fragmentShader.shader);
		var index = 0;
		var _g = 0;
		var _g1 = this.inputLayout;
		while(_g < _g1.length) {
			var structure = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g11 = structure.elements;
			while(_g2 < _g11.length) {
				var element = _g11[_g2];
				++_g2;
				kha_SystemImpl.gl.bindAttribLocation(this.program,index,element.name);
				if(element.data == 4) {
					index += 4;
				} else {
					++index;
				}
			}
		}
		kha_SystemImpl.gl.linkProgram(this.program);
		if(!kha_SystemImpl.gl.getProgramParameter(this.program,35714)) {
			throw new js__$Boot_HaxeError("Could not link the shader program:\n" + kha_SystemImpl.gl.getProgramInfoLog(this.program));
		}
	}
	,set: function() {
		kha_SystemImpl.gl.useProgram(this.program);
		var _g = 0;
		var _g1 = this.textureValues.length;
		while(_g < _g1) {
			var index = _g++;
			kha_SystemImpl.gl.uniform1i(this.textureValues[index],index);
		}
		kha_SystemImpl.gl.colorMask(this.colorWriteMasksRed[0],this.colorWriteMasksGreen[0],this.colorWriteMasksBlue[0],this.colorWriteMasksAlpha[0]);
	}
	,compileShader: function(shader) {
		if(shader.shader != null) {
			return;
		}
		var s = kha_SystemImpl.gl.createShader(shader.type);
		var highp = kha_SystemImpl.gl.getShaderPrecisionFormat(35632,36338);
		var highpSupported = highp.precision != 0;
		var files = shader.files;
		var _g = 0;
		var _g1 = files.length;
		while(_g < _g1) {
			var i = _g++;
			if(kha_SystemImpl.gl2) {
				if(files[i].indexOf("-webgl2") >= 0 || files[i].indexOf("runtime-string") >= 0) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			} else {
				if(!highpSupported && (files[i].indexOf("-relaxed") >= 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
				if(highpSupported && (files[i].indexOf("-relaxed") < 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			}
		}
		kha_SystemImpl.gl.compileShader(s);
		if(!kha_SystemImpl.gl.getShaderParameter(s,35713)) {
			throw new js__$Boot_HaxeError("Could not compile shader:\n" + kha_SystemImpl.gl.getShaderInfoLog(s));
		}
		shader.shader = s;
	}
	,getConstantLocation: function(name) {
		var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
		if(location == null) {
			haxe_Log.trace("Warning: Uniform " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 92, className : "kha.graphics4.PipelineState", methodName : "getConstantLocation"});
		}
		var type = 5126;
		var count = kha_SystemImpl.gl.getProgramParameter(this.program,35718);
		var _g = 0;
		var _g1 = count;
		while(_g < _g1) {
			var i = _g++;
			var info = kha_SystemImpl.gl.getActiveUniform(this.program,i);
			if(info.name == name || info.name == name + "[0]") {
				type = info.type;
				break;
			}
		}
		return new kha_js_graphics4_ConstantLocation(location,type);
	}
	,getTextureUnit: function(name) {
		var index = this.findTexture(name);
		if(index < 0) {
			var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
			if(location == null) {
				haxe_Log.trace("Warning: Sampler " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 111, className : "kha.graphics4.PipelineState", methodName : "getTextureUnit"});
			}
			index = this.textures.length;
			this.textureValues.push(location);
			this.textures.push(name);
		}
		return new kha_js_graphics4_TextureUnit(index);
	}
	,findTexture: function(name) {
		var _g = 0;
		var _g1 = this.textures.length;
		while(_g < _g1) {
			var index = _g++;
			if(this.textures[index] == name) {
				return index;
			}
		}
		return -1;
	}
	,__class__: kha_graphics4_PipelineState
});
var kha_graphics4_StencilValue = $hxEnums["kha.graphics4.StencilValue"] = { __ename__ : true, __constructs__ : ["Dynamic","Static"]
	,Dynamic: {_hx_index:0,__enum__:"kha.graphics4.StencilValue",toString:$estr}
	,Static: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"kha.graphics4.StencilValue",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var kha_graphics4_TessellationControlShader = function() { };
$hxClasses["kha.graphics4.TessellationControlShader"] = kha_graphics4_TessellationControlShader;
kha_graphics4_TessellationControlShader.__name__ = "kha.graphics4.TessellationControlShader";
var kha_graphics4_TessellationEvaluationShader = function() { };
$hxClasses["kha.graphics4.TessellationEvaluationShader"] = kha_graphics4_TessellationEvaluationShader;
kha_graphics4_TessellationEvaluationShader.__name__ = "kha.graphics4.TessellationEvaluationShader";
var kha_graphics4_TextureUnit = function() { };
$hxClasses["kha.graphics4.TextureUnit"] = kha_graphics4_TextureUnit;
kha_graphics4_TextureUnit.__name__ = "kha.graphics4.TextureUnit";
var kha_graphics4_VertexBuffer = function(vertexCount,structure,usage,instanceDataStepRate,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	if(instanceDataStepRate == null) {
		instanceDataStepRate = 0;
	}
	this.usage = usage;
	this.instanceDataStepRate = instanceDataStepRate;
	this.mySize = vertexCount;
	this.myStride = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) {
		var element = _g1[_g];
		++_g;
		switch(element.data) {
		case 0:
			this.myStride += 4;
			break;
		case 1:
			this.myStride += 8;
			break;
		case 2:
			this.myStride += 12;
			break;
		case 3:
			this.myStride += 16;
			break;
		case 4:
			this.myStride += 64;
			break;
		case 5:
			this.myStride += 4;
			break;
		case 6:
			this.myStride += 8;
			break;
		}
	}
	this.buffer = kha_SystemImpl.gl.createBuffer();
	var this1 = new Float32Array(vertexCount * this.myStride / 4 | 0);
	this._data = this1;
	this.sizes = [];
	this.offsets = [];
	this.types = [];
	this.sizes[structure.elements.length - 1] = 0;
	this.offsets[structure.elements.length - 1] = 0;
	this.types[structure.elements.length - 1] = 0;
	var offset = 0;
	var index = 0;
	var _g2 = 0;
	var _g3 = structure.elements;
	while(_g2 < _g3.length) {
		var element1 = _g3[_g2];
		++_g2;
		var size;
		var type;
		switch(element1.data) {
		case 0:
			size = 1;
			type = 5126;
			break;
		case 1:
			size = 2;
			type = 5126;
			break;
		case 2:
			size = 3;
			type = 5126;
			break;
		case 3:
			size = 4;
			type = 5126;
			break;
		case 4:
			size = 16;
			type = 5126;
			break;
		case 5:
			size = 2;
			type = 5122;
			break;
		case 6:
			size = 4;
			type = 5122;
			break;
		}
		this.sizes[index] = size;
		this.offsets[index] = offset;
		this.types[index] = type;
		switch(element1.data) {
		case 0:
			offset += 4;
			break;
		case 1:
			offset += 8;
			break;
		case 2:
			offset += 12;
			break;
		case 3:
			offset += 16;
			break;
		case 4:
			offset += 64;
			break;
		case 5:
			offset += 4;
			break;
		case 6:
			offset += 8;
			break;
		}
		++index;
	}
};
$hxClasses["kha.graphics4.VertexBuffer"] = kha_graphics4_VertexBuffer;
kha_graphics4_VertexBuffer.__name__ = "kha.graphics4.VertexBuffer";
kha_graphics4_VertexBuffer.prototype = {
	lock: function(start,count) {
		if(start == null) {
			start = 0;
		}
		if(count == null) {
			count = this.mySize;
		}
		return this._data.subarray(start * this.stride(),(start + count) * this.stride());
	}
	,lockInt16: function(start,count) {
		var this1 = new Int16Array(this.lock(start,count).buffer);
		return this1;
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		kha_SystemImpl.gl.bufferData(34962,this._data,this.usage == 1 ? 35048 : 35044);
	}
	,stride: function() {
		return this.myStride;
	}
	,set: function(offset) {
		var ext = kha_SystemImpl.gl2 ? true : kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		var attributesOffset = 0;
		var _g = 0;
		var _g1 = this.sizes.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.sizes[i] > 4) {
				var size = this.sizes[i];
				var addonOffset = 0;
				while(size > 0) {
					kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
					kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,4,5126,false,this.myStride,this.offsets[i] + addonOffset);
					if(ext) {
						if(kha_SystemImpl.gl2) {
							kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
						} else {
							ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
						}
					}
					size -= 4;
					addonOffset += 16;
					++attributesOffset;
				}
			} else {
				var normalized = this.types[i] == 5126 ? false : true;
				kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
				kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,this.sizes[i],this.types[i],normalized,this.myStride,this.offsets[i]);
				if(ext) {
					if(kha_SystemImpl.gl2) {
						kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
					} else {
						ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
					}
				}
				++attributesOffset;
			}
		}
		return attributesOffset;
	}
	,__class__: kha_graphics4_VertexBuffer
};
var kha_graphics4_VertexElement = function(name,data) {
	this.name = name;
	this.data = data;
};
$hxClasses["kha.graphics4.VertexElement"] = kha_graphics4_VertexElement;
kha_graphics4_VertexElement.__name__ = "kha.graphics4.VertexElement";
kha_graphics4_VertexElement.prototype = {
	__class__: kha_graphics4_VertexElement
};
var kha_graphics4_VertexShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35633;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.VertexShader"] = kha_graphics4_VertexShader;
kha_graphics4_VertexShader.__name__ = "kha.graphics4.VertexShader";
kha_graphics4_VertexShader.fromSource = function(source) {
	var shader = new kha_graphics4_VertexShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_VertexShader.prototype = {
	__class__: kha_graphics4_VertexShader
};
var kha_graphics4_VertexStructure = function() {
	this.elements = [];
	this.instanced = false;
};
$hxClasses["kha.graphics4.VertexStructure"] = kha_graphics4_VertexStructure;
kha_graphics4_VertexStructure.__name__ = "kha.graphics4.VertexStructure";
kha_graphics4_VertexStructure.prototype = {
	add: function(name,data) {
		this.elements.push(new kha_graphics4_VertexElement(name,data));
	}
	,size: function() {
		return this.elements.length;
	}
	,byteSize: function() {
		var byteSize = 0;
		var _g = 0;
		var _g1 = this.elements.length;
		while(_g < _g1) {
			var i = _g++;
			byteSize += this.dataByteSize(this.elements[i].data);
		}
		return byteSize;
	}
	,dataByteSize: function(data) {
		switch(data) {
		case 0:
			return 4;
		case 1:
			return 8;
		case 2:
			return 12;
		case 3:
			return 16;
		case 4:
			return 64;
		case 5:
			return 4;
		case 6:
			return 8;
		}
	}
	,get: function(index) {
		return this.elements[index];
	}
	,__class__: kha_graphics4_VertexStructure
};
var kha_graphics5_Graphics = function() { };
$hxClasses["kha.graphics5.Graphics"] = kha_graphics5_Graphics;
kha_graphics5_Graphics.__name__ = "kha.graphics5.Graphics";
var kha_input_Gamepad = $hx_exports["kha"]["input"]["Gamepad"] = function(index,id) {
	if(id == null) {
		id = "unknown";
	}
	if(index == null) {
		index = 0;
	}
	this.index = index;
	this.axisListeners = [];
	this.buttonListeners = [];
	kha_input_Gamepad.instances[index] = this;
};
$hxClasses["kha.input.Gamepad"] = kha_input_Gamepad;
kha_input_Gamepad.__name__ = "kha.input.Gamepad";
kha_input_Gamepad.get = function(index) {
	if(index == null) {
		index = 0;
	}
	if(index >= kha_input_Gamepad.instances.length) {
		return null;
	}
	return kha_input_Gamepad.instances[index];
};
kha_input_Gamepad.notifyOnConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		kha_input_Gamepad.connectListeners.push(connectListener);
	}
	if(disconnectListener != null) {
		kha_input_Gamepad.disconnectListeners.push(disconnectListener);
	}
};
kha_input_Gamepad.removeConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.connectListeners,connectListener);
	}
	if(disconnectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.disconnectListeners,disconnectListener);
	}
};
kha_input_Gamepad.sendConnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = true;
	var _g = 0;
	var _g1 = kha_input_Gamepad.connectListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(index);
	}
};
kha_input_Gamepad.sendDisconnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = false;
	var _g = 0;
	var _g1 = kha_input_Gamepad.disconnectListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(index);
	}
};
kha_input_Gamepad.prototype = {
	notify: function(axisListener,buttonListener) {
		if(axisListener != null) {
			this.axisListeners.push(axisListener);
		}
		if(buttonListener != null) {
			this.buttonListeners.push(buttonListener);
		}
	}
	,remove: function(axisListener,buttonListener) {
		if(axisListener != null) {
			HxOverrides.remove(this.axisListeners,axisListener);
		}
		if(buttonListener != null) {
			HxOverrides.remove(this.buttonListeners,buttonListener);
		}
	}
	,get_id: function() {
		return kha_SystemImpl.getGamepadId(this.index);
	}
	,sendAxisEvent: function(axis,value) {
		var _g = 0;
		var _g1 = this.axisListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(axis,value);
		}
	}
	,sendButtonEvent: function(button,value) {
		var _g = 0;
		var _g1 = this.buttonListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(button,value);
		}
	}
	,__class__: kha_input_Gamepad
	,__properties__: {get_id:"get_id"}
};
var kha_netsync_Controller = function() {
	this.__id = kha_netsync_ControllerBuilder.nextId++;
	this._inputBuffer = new haxe_io_Bytes(new ArrayBuffer(1));
};
$hxClasses["kha.netsync.Controller"] = kha_netsync_Controller;
kha_netsync_Controller.__name__ = "kha.netsync.Controller";
kha_netsync_Controller.prototype = {
	_id: function() {
		return this.__id;
	}
	,__class__: kha_netsync_Controller
};
var kha_input_Keyboard = $hx_exports["kha"]["input"]["Keyboard"] = function() {
	kha_netsync_Controller.call(this);
	this.downListeners = [];
	this.upListeners = [];
	this.pressListeners = [];
	kha_input_Keyboard.instance = this;
};
$hxClasses["kha.input.Keyboard"] = kha_input_Keyboard;
kha_input_Keyboard.__name__ = "kha.input.Keyboard";
kha_input_Keyboard.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getKeyboard(num);
};
kha_input_Keyboard.__super__ = kha_netsync_Controller;
kha_input_Keyboard.prototype = $extend(kha_netsync_Controller.prototype,{
	notify: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			this.downListeners.push(downListener);
		}
		if(upListener != null) {
			this.upListeners.push(upListener);
		}
		if(pressListener != null) {
			this.pressListeners.push(pressListener);
		}
	}
	,remove: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			HxOverrides.remove(this.downListeners,downListener);
		}
		if(upListener != null) {
			HxOverrides.remove(this.upListeners,upListener);
		}
		if(pressListener != null) {
			HxOverrides.remove(this.pressListeners,pressListener);
		}
	}
	,show: function() {
	}
	,hide: function() {
	}
	,sendDownEvent: function(code) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,0);
			bytes.b[4] = code;
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.downListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendUpEvent: function(code) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,1);
			bytes.b[4] = code;
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.upListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendPressEvent: function(char) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,2);
			bytes.b[4] = HxOverrides.cca(char,0);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.pressListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(char);
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			var input0 = bytes.b[4];
			this.sendDownEvent(input0);
			return;
		}
		if(funcindex == 1) {
			var input01 = bytes.b[4];
			this.sendUpEvent(input01);
			return;
		}
		if(funcindex == 2) {
			var code = bytes.b[4];
			var input02 = String.fromCodePoint(code);
			this.sendPressEvent(input02);
			return;
		}
	}
	,__class__: kha_input_Keyboard
});
var kha_input_Mouse = $hx_exports["kha"]["input"]["Mouse"] = function() {
	kha_netsync_Controller.call(this);
	kha_input_Mouse.instance = this;
};
$hxClasses["kha.input.Mouse"] = kha_input_Mouse;
kha_input_Mouse.__name__ = "kha.input.Mouse";
kha_input_Mouse.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getMouse(num);
};
kha_input_Mouse.__super__ = kha_netsync_Controller;
kha_input_Mouse.prototype = $extend(kha_netsync_Controller.prototype,{
	notify: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,remove: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners == null) {
				this.windowWheelListeners = [];
			}
			while(this.windowWheelListeners.length <= windowId) this.windowWheelListeners.push([]);
			this.windowWheelListeners[windowId].push(wheelListener);
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners == null) {
				this.windowLeaveListeners = [];
			}
			while(this.windowLeaveListeners.length <= windowId) this.windowLeaveListeners.push([]);
			this.windowLeaveListeners[windowId].push(leaveListener);
		}
	}
	,removeWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners != null) {
				if(windowId < this.windowDownListeners.length) {
					HxOverrides.remove(this.windowDownListeners[windowId],downListener);
				} else {
					haxe_Log.trace("no downListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 110, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no downListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 114, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(upListener != null) {
			if(this.windowUpListeners != null) {
				if(windowId < this.windowUpListeners.length) {
					HxOverrides.remove(this.windowUpListeners[windowId],upListener);
				} else {
					haxe_Log.trace("no upListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 124, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no upListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 128, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(moveListener != null) {
			if(this.windowMoveListeners != null) {
				if(windowId < this.windowMoveListeners.length) {
					HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
				} else {
					haxe_Log.trace("no moveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 138, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no moveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 142, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners != null) {
				if(windowId < this.windowWheelListeners.length) {
					HxOverrides.remove(this.windowWheelListeners[windowId],wheelListener);
				} else {
					haxe_Log.trace("no wheelListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 152, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no wheelListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 156, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners != null) {
				if(windowId < this.windowLeaveListeners.length) {
					HxOverrides.remove(this.windowLeaveListeners[windowId],leaveListener);
				} else {
					haxe_Log.trace("no leaveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 166, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no leaveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 170, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,canLock: function() {
		return false;
	}
	,isLocked: function() {
		return false;
	}
	,notifyOnLockChange: function(change,error) {
	}
	,removeFromLockChange: function(change,error) {
	}
	,hideSystemCursor: function() {
	}
	,showSystemCursor: function() {
	}
	,sendLeaveEvent: function(windowId) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(8));
			bytes.setInt32(0,0);
			bytes.setInt32(4,windowId);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowLeaveListeners != null) {
			var _g = 0;
			var _g1 = this.windowLeaveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener();
			}
		}
	}
	,sendDownEvent: function(windowId,button,x,y) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,1);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendUpEvent: function(windowId,button,x,y) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,2);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendMoveEvent: function(windowId,x,y,movementX,movementY) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(24));
			bytes.setInt32(0,3);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,x);
			bytes.setInt32(12,y);
			bytes.setInt32(16,movementX);
			bytes.setInt32(20,movementY);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,movementX,movementY);
			}
		}
	}
	,sendWheelEvent: function(windowId,delta) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(12));
			bytes.setInt32(0,4);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,delta);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowWheelListeners != null) {
			var _g = 0;
			var _g1 = this.windowWheelListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(delta);
			}
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			var input0 = bytes.getInt32(4);
			this.sendLeaveEvent(input0);
			return;
		}
		if(funcindex == 1) {
			var input01 = bytes.getInt32(4);
			var input1 = bytes.getInt32(8);
			var input2 = bytes.getInt32(12);
			var input3 = bytes.getInt32(16);
			this.sendDownEvent(input01,input1,input2,input3);
			return;
		}
		if(funcindex == 2) {
			var input02 = bytes.getInt32(4);
			var input11 = bytes.getInt32(8);
			var input21 = bytes.getInt32(12);
			var input31 = bytes.getInt32(16);
			this.sendUpEvent(input02,input11,input21,input31);
			return;
		}
		if(funcindex == 3) {
			var input03 = bytes.getInt32(4);
			var input12 = bytes.getInt32(8);
			var input22 = bytes.getInt32(12);
			var input32 = bytes.getInt32(16);
			var input4 = bytes.getInt32(20);
			this.sendMoveEvent(input03,input12,input22,input32,input4);
			return;
		}
		if(funcindex == 4) {
			var input04 = bytes.getInt32(4);
			var input13 = bytes.getInt32(8);
			this.sendWheelEvent(input04,input13);
			return;
		}
	}
	,__class__: kha_input_Mouse
});
var kha_input_MouseImpl = function() {
	kha_input_Mouse.call(this);
};
$hxClasses["kha.input.MouseImpl"] = kha_input_MouseImpl;
kha_input_MouseImpl.__name__ = "kha.input.MouseImpl";
kha_input_MouseImpl.__super__ = kha_input_Mouse;
kha_input_MouseImpl.prototype = $extend(kha_input_Mouse.prototype,{
	lock: function() {
		kha_SystemImpl.lockMouse();
	}
	,unlock: function() {
		kha_SystemImpl.unlockMouse();
	}
	,canLock: function() {
		return kha_SystemImpl.canLockMouse();
	}
	,isLocked: function() {
		return kha_SystemImpl.isMouseLocked();
	}
	,notifyOnLockChange: function(func,error) {
		kha_SystemImpl.notifyOfMouseLockChange(func,error);
	}
	,removeFromLockChange: function(func,error) {
		kha_SystemImpl.removeFromMouseLockChange(func,error);
	}
	,hideSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "none";
	}
	,showSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "default";
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
	}
	,__class__: kha_input_MouseImpl
});
var kha_input_Pen = function() {
	kha_input_Pen.instance = this;
};
$hxClasses["kha.input.Pen"] = kha_input_Pen;
kha_input_Pen.__name__ = "kha.input.Pen";
kha_input_Pen.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getPen(num);
};
kha_input_Pen.prototype = {
	notify: function(downListener,upListener,moveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
	}
	,__class__: kha_input_Pen
};
var kha_input_Surface = $hx_exports["kha"]["input"]["Surface"] = function() {
	this.touchStartListeners = [];
	this.touchEndListeners = [];
	this.moveListeners = [];
	kha_input_Surface.instance = this;
};
$hxClasses["kha.input.Surface"] = kha_input_Surface;
kha_input_Surface.__name__ = "kha.input.Surface";
kha_input_Surface.get = function(num) {
	if(num == null) {
		num = 0;
	}
	if(num != 0) {
		return null;
	}
	return kha_input_Surface.instance;
};
kha_input_Surface.prototype = {
	notify: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			this.touchStartListeners.push(touchStartListener);
		}
		if(touchEndListener != null) {
			this.touchEndListeners.push(touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,remove: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			HxOverrides.remove(this.touchStartListeners,touchStartListener);
		}
		if(touchEndListener != null) {
			HxOverrides.remove(this.touchEndListeners,touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,sendTouchStartEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchStartListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendTouchEndEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchEndListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendMoveEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.moveListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,__class__: kha_input_Surface
};
var kha_internal_BytesBlob = function(bytes) {
	this.bytes = bytes;
};
$hxClasses["kha.internal.BytesBlob"] = kha_internal_BytesBlob;
kha_internal_BytesBlob.__name__ = "kha.internal.BytesBlob";
kha_internal_BytesBlob.__interfaces__ = [kha_Resource];
kha_internal_BytesBlob.fromBytes = function(bytes) {
	return new kha_internal_BytesBlob(bytes);
};
kha_internal_BytesBlob.alloc = function(size) {
	return new kha_internal_BytesBlob(new haxe_io_Bytes(new ArrayBuffer(size)));
};
kha_internal_BytesBlob.prototype = {
	sub: function(start,length) {
		return new kha_internal_BytesBlob(this.bytes.sub(start,length));
	}
	,get_length: function() {
		return this.bytes.length;
	}
	,writeU8: function(position,value) {
		this.bytes.b[position] = value;
	}
	,readU8: function(position) {
		var byte = this.bytes.b[position];
		++position;
		return byte;
	}
	,toString: function() {
		return this.bytes.toString();
	}
	,toBytes: function() {
		return this.bytes;
	}
	,__class__: kha_internal_BytesBlob
	,__properties__: {get_length:"get_length"}
};
var kha_internal_HdrFormat = function() { };
$hxClasses["kha.internal.HdrFormat"] = kha_internal_HdrFormat;
kha_internal_HdrFormat.__name__ = "kha.internal.HdrFormat";
kha_internal_HdrFormat.readBuf = function(buf) {
	var bytesRead = 0;
	while(true) {
		buf[bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < buf.length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readBufOffset = function(buf,offset,length) {
	var bytesRead = 0;
	while(true) {
		buf[offset + bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readPixelsRaw = function(buffer,data,offset,numpixels) {
	var numExpected = 4 * numpixels;
	var numRead = kha_internal_HdrFormat.readBufOffset(data,offset,numExpected);
	if(numRead < numExpected) {
		haxe_Log.trace("Error reading raw pixels: got " + numRead + " bytes, expected " + numExpected,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 43, className : "kha.internal.HdrFormat", methodName : "readPixelsRaw"});
		return;
	}
};
kha_internal_HdrFormat.readPixelsRawRLE = function(buffer,data,offset,scanline_width,num_scanlines) {
	var this1 = new Uint8Array(4);
	var rgbe = this1;
	var scanline_buffer = null;
	var ptr;
	var ptr_end;
	var count;
	var this2 = new Uint8Array(2);
	var buf = this2;
	var bufferLength = buffer.length;
	while(num_scanlines > 0) {
		if(kha_internal_HdrFormat.readBuf(rgbe) < rgbe.length) {
			haxe_Log.trace("Error reading bytes: expected " + rgbe.length,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 59, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(rgbe[0] != 2 || rgbe[1] != 2 || (rgbe[2] & 128) != 0) {
			data[offset++] = rgbe[0] & 255;
			data[offset++] = rgbe[1] & 255;
			data[offset++] = rgbe[2] & 255;
			data[offset++] = rgbe[3] & 255;
			kha_internal_HdrFormat.readPixelsRaw(buffer,data,offset,scanline_width * num_scanlines - 1);
			return;
		}
		if(((rgbe[2] & 255) << 8 | rgbe[3] & 255) != scanline_width) {
			haxe_Log.trace("Wrong scanline width " + ((rgbe[2] & 255) << 8 | rgbe[3] & 255) + ", expected " + scanline_width,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 74, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(scanline_buffer == null) {
			var this3 = new Uint8Array(4 * scanline_width);
			scanline_buffer = this3;
		}
		ptr = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			ptr_end = (i + 1) * scanline_width;
			while(ptr < ptr_end) {
				if(kha_internal_HdrFormat.readBuf(buf) < buf.length) {
					haxe_Log.trace("Error reading 2-byte buffer",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 88, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
					return;
				}
				if((buf[0] & 255) > 128) {
					count = (buf[0] & 255) - 128;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 95, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					while(count-- > 0) scanline_buffer[ptr++] = buf[1] & 255;
				} else {
					count = buf[0] & 255;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 106, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					scanline_buffer[ptr++] = buf[1] & 255;
					if(--count > 0) {
						if(kha_internal_HdrFormat.readBufOffset(scanline_buffer,ptr,count) < count) {
							haxe_Log.trace("Error reading non-run data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 112, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
							return;
						}
						ptr += count;
					}
				}
			}
		}
		var _g1 = 0;
		var _g2 = scanline_width;
		while(_g1 < _g2) {
			var i1 = _g1++;
			data[offset] = scanline_buffer[i1] & 255;
			data[offset + 1] = scanline_buffer[i1 + scanline_width] & 255;
			data[offset + 2] = scanline_buffer[i1 + 2 * scanline_width] & 255;
			data[offset + 3] = scanline_buffer[i1 + 3 * scanline_width] & 255;
			offset += 4;
		}
		--num_scanlines;
	}
};
kha_internal_HdrFormat.readLine = function() {
	var buf = "";
	while(true) {
		var b = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(b == 10) {
			++kha_internal_HdrFormat.fileOffset;
			break;
		}
		buf += String.fromCodePoint(b);
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength)) {
			break;
		}
	}
	return buf;
};
kha_internal_HdrFormat.parse = function(bytes) {
	kha_internal_HdrFormat.buffer = haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes(bytes);
	kha_internal_HdrFormat.bufferLength = kha_internal_HdrFormat.buffer.length;
	kha_internal_HdrFormat.fileOffset = 0;
	var width = 0;
	var height = 0;
	var exposure = 1.0;
	var gamma = 1.0;
	var rle = false;
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		var line = kha_internal_HdrFormat.readLine();
		if(kha_internal_HdrFormat.formatPattern.match(line)) {
			rle = true;
		} else if(kha_internal_HdrFormat.exposurePattern.match(line)) {
			exposure = parseFloat(kha_internal_HdrFormat.exposurePattern.matched(1));
		} else if(kha_internal_HdrFormat.widthHeightPattern.match(line)) {
			height = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(1));
			width = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(2));
			break;
		}
	}
	if(!rle) {
		haxe_Log.trace("File is not run length encoded!",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 175, className : "kha.internal.HdrFormat", methodName : "parse"});
		return null;
	}
	var this1 = new Uint8Array(width * height * 4);
	var data = this1;
	var scanline_width = width;
	var num_scanlines = height;
	kha_internal_HdrFormat.readPixelsRawRLE(kha_internal_HdrFormat.buffer,data,0,scanline_width,num_scanlines);
	var this2 = new Float32Array(width * height * 4);
	var floatData = this2;
	var offset = 0;
	while(offset < data.length) {
		var r = data[offset] / 255;
		var g = data[offset + 1] / 255;
		var b = data[offset + 2] / 255;
		var e = data[offset + 3];
		var f = Math.pow(2.0,e - 128.0);
		r *= f;
		g *= f;
		b *= f;
		floatData[offset] = r;
		floatData[offset + 1] = g;
		floatData[offset + 2] = b;
		floatData[offset + 3] = 1.0;
		offset += 4;
	}
	return { width : width, height : height, data : floatData};
};
var kha_js_AEAudioChannel = function(element) {
	this.stopped = false;
	this.element = element;
};
$hxClasses["kha.js.AEAudioChannel"] = kha_js_AEAudioChannel;
kha_js_AEAudioChannel.__name__ = "kha.js.AEAudioChannel";
kha_js_AEAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_AEAudioChannel.prototype = {
	play: function() {
		this.stopped = false;
		if(kha_SystemImpl.mobile) {
			if(kha_SystemImpl.insideInputEvent) {
				this.element.play();
				kha_SystemImpl.mobileAudioPlaying = true;
			} else if(kha_SystemImpl.mobileAudioPlaying) {
				this.element.play();
			} else {
				kha_js_AEAudioChannel.todo.push(this);
			}
		} else {
			this.element.play();
		}
	}
	,get_length: function() {
		if(isFinite(this.element.duration)) {
			return this.element.duration;
		} else {
			return Infinity;
		}
	}
	,get_position: function() {
		return this.element.currentTime;
	}
	,set_volume: function(value) {
		return this.element.volume = value;
	}
	,get_finished: function() {
		if(!this.stopped) {
			return this.get_position() >= this.get_length();
		} else {
			return true;
		}
	}
	,__class__: kha_js_AEAudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_js_AudioElementAudio = function() { };
$hxClasses["kha.js.AudioElementAudio"] = kha_js_AudioElementAudio;
kha_js_AudioElementAudio.__name__ = "kha.js.AudioElementAudio";
kha_js_AudioElementAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_AudioElementAudio.stream(sound,loop);
};
kha_js_AudioElementAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	sound.element.loop = loop;
	var channel = new kha_js_AEAudioChannel(sound.element);
	channel.play();
	return channel;
};
var kha_js_CanvasGraphics = function(canvas) {
	this.bakedQuadCache = new kha_AlignedQuad();
	kha_graphics2_Graphics.call(this);
	this.canvas = canvas;
	kha_js_CanvasGraphics.instance = this;
	this.myColor = kha__$Color_Color_$Impl_$.fromBytes(0,0,0);
};
$hxClasses["kha.js.CanvasGraphics"] = kha_js_CanvasGraphics;
kha_js_CanvasGraphics.__name__ = "kha.js.CanvasGraphics";
kha_js_CanvasGraphics.__super__ = kha_graphics2_Graphics;
kha_js_CanvasGraphics.prototype = $extend(kha_graphics2_Graphics.prototype,{
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(clear) {
			this.clear(clearColor);
		}
	}
	,clear: function(color) {
		if(color == null) {
			color = 0;
		}
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		if((color >>> 24) * 0.00392156862745098 == 0) {
			this.canvas.clearRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		} else {
			this.canvas.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		}
		this.set_color(this.myColor);
	}
	,end: function() {
	}
	,drawImage: function(img,x,y) {
		this.canvas.globalAlpha = this.get_opacity();
		this.canvas.drawImage((js_Boot.__cast(img , kha_CanvasImage)).image,x,y);
		this.canvas.globalAlpha = 1;
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
		this.canvas.globalAlpha = this.get_opacity();
		try {
			if(dw < 0 || dh < 0) {
				this.canvas.save();
				this.canvas.translate(dx,dy);
				var x = 0.0;
				var y = 0.0;
				if(dw < 0) {
					this.canvas.scale(-1,1);
					x = -dw;
				}
				if(dh < 0) {
					this.canvas.scale(1,-1);
					y = -dh;
				}
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,x,y,dw,dh);
				this.canvas.restore();
			} else {
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,dx,dy,dw,dh);
			}
		} catch( ex ) {
			var ex1 = ((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex;
		}
		this.canvas.globalAlpha = 1;
	}
	,set_color: function(color) {
		this.myColor = color;
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		return color;
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_imageScaleQuality: function(value) {
		if(value == kha_graphics2_ImageScaleQuality.Low) {
			this.canvas.mozImageSmoothingEnabled = false;
			this.canvas.webkitImageSmoothingEnabled = false;
			this.canvas.msImageSmoothingEnabled = false;
			this.canvas.imageSmoothingEnabled = false;
		} else {
			this.canvas.mozImageSmoothingEnabled = true;
			this.canvas.webkitImageSmoothingEnabled = true;
			this.canvas.msImageSmoothingEnabled = true;
			this.canvas.imageSmoothingEnabled = true;
		}
		return this.scaleQuality = value;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.rect(x,y,width,height);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillRect: function(x,y,width,height) {
		var tmp = this.get_opacity();
		this.canvas.globalAlpha = tmp * ((this.myColor >>> 24) * 0.00392156862745098);
		this.canvas.fillRect(x,y,width,height);
		this.canvas.globalAlpha = this.get_opacity();
	}
	,drawString: function(text,x,y) {
		var image = this.webfont.getImage(this.get_fontSize(),this.myColor);
		if(image.width > 0) {
			var xpos = x;
			var ypos = y;
			var _g = 0;
			var _g1 = text.length;
			while(_g < _g1) {
				var i = _g++;
				var q = this.webfont.kravur._get(this.get_fontSize()).getBakedQuad(this.bakedQuadCache,kha_graphics2_Graphics.fontGlyphs.indexOf(HxOverrides.cca(text,i)),xpos,ypos);
				if(q != null) {
					if(q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0) {
						this.canvas.drawImage(image,q.s0 * image.width,q.t0 * image.height,(q.s1 - q.s0) * image.width,(q.t1 - q.t0) * image.height,q.x0,q.y0,q.x1 - q.x0,q.y1 - q.y0);
					}
					xpos += q.xadvance;
				}
			}
		}
	}
	,set_font: function(font) {
		this.webfont = js_Boot.__cast(font , kha_js_Font);
		return this.webfont;
	}
	,get_font: function() {
		return this.webfont;
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldWith = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.moveTo(x1,y1);
		this.canvas.lineTo(x2,y2);
		this.canvas.moveTo(0,0);
		this.canvas.stroke();
		this.canvas.lineWidth = oldWith;
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.canvas.beginPath();
		this.canvas.closePath();
		this.canvas.fill();
	}
	,setTransformation: function(transformation) {
		this.canvas.setTransform(transformation._00,transformation._01,transformation._10,transformation._11,transformation._20,transformation._21);
	}
	,__class__: kha_js_CanvasGraphics
});
var kha_js_Font = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.kravur = new kha_js_Font.Kravur(blob);
};
$hxClasses["kha.js.Font"] = kha_js_Font;
kha_js_Font.__name__ = "kha.js.Font";
kha_js_Font.__interfaces__ = [kha_Resource];
kha_js_Font.prototype = {
	getImage: function(fontSize,color) {
		var glyphs = kha_graphics2_Graphics.fontGlyphs;
		var imageIndex = fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			var this1 = this.images;
			var v = new haxe_ds_IntMap();
			this1.h[imageIndex] = v;
		}
		if(!this.images.h[imageIndex].h.hasOwnProperty(color)) {
			var kravur = this.kravur._get(fontSize);
			var canvas = window.document.createElement("canvas");
			canvas.width = kravur.width;
			canvas.height = kravur.height;
			var ctx = canvas.getContext("2d");
			ctx.fillStyle = "black";
			ctx.fillRect(0,0,kravur.width,kravur.height);
			var imageData = ctx.getImageData(0,0,kravur.width,kravur.height);
			var bytes = (js_Boot.__cast(kravur.getTexture() , kha_CanvasImage)).bytes;
			var _g = 0;
			var _g1 = bytes.length;
			while(_g < _g1) {
				var i = _g++;
				imageData.data[i * 4] = (color & 16711680) >>> 16;
				imageData.data[i * 4 + 1] = (color & 65280) >>> 8;
				imageData.data[i * 4 + 2] = color & 255;
				imageData.data[i * 4 + 3] = bytes.b[i];
			}
			ctx.putImageData(imageData,0,0);
			var img = window.document.createElement("img");
			img.src = canvas.toDataURL("image/png");
			this.images.h[imageIndex].h[color] = img;
			return img;
		}
		return this.images.h[imageIndex].h[color];
	}
	,__class__: kha_js_Font
};
var kha_js_MobileWebAudio = function() { };
$hxClasses["kha.js.MobileWebAudio"] = kha_js_MobileWebAudio;
kha_js_MobileWebAudio.__name__ = "kha.js.MobileWebAudio";
kha_js_MobileWebAudio._init = function() {
	try {
		kha_js_MobileWebAudio._context = new AudioContext();
		return;
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e2 ) {
		var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
	}
};
kha_js_MobileWebAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = new kha_js_MobileWebAudioChannel(sound,loop);
	channel.play();
	return channel;
};
kha_js_MobileWebAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_MobileWebAudio.play(sound,loop);
};
var kha_js_MobileWebAudioChannel = function(sound,loop) {
	this.stopped = false;
	this.paused = false;
	this.buffer = sound._buffer;
	this.loop = loop;
	this.createSource();
};
$hxClasses["kha.js.MobileWebAudioChannel"] = kha_js_MobileWebAudioChannel;
kha_js_MobileWebAudioChannel.__name__ = "kha.js.MobileWebAudioChannel";
kha_js_MobileWebAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_MobileWebAudioChannel.prototype = {
	createSource: function() {
		var _gthis = this;
		this.source = kha_js_MobileWebAudio._context.createBufferSource();
		this.source.loop = this.loop;
		this.source.buffer = this.buffer;
		this.source.onended = function() {
			_gthis.stopped = true;
		};
		this.gain = kha_js_MobileWebAudio._context.createGain();
		this.source.connect(this.gain);
		this.gain.connect(kha_js_MobileWebAudio._context.destination);
	}
	,play: function() {
		if(this.paused || this.stopped) {
			this.createSource();
		}
		this.stopped = false;
		if(this.paused) {
			this.paused = false;
			this.startTime = kha_js_MobileWebAudio._context.currentTime - this.pauseTime;
			this.source.start(0,this.pauseTime);
		} else {
			this.startTime = kha_js_MobileWebAudio._context.currentTime;
			this.source.start();
		}
	}
	,set_volume: function(value) {
		return this.gain.gain.value = value;
	}
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_js_MobileWebAudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume"}
};
var kha_js_MobileWebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		kha_js_MobileWebAudio._context.decodeAudioData(_gthis.compressedData.b.bufferValue,function(buffer) {
			_gthis._buffer = buffer;
			done(_gthis);
		},function() {
			failed({ url : filename, error : "Audio format not supported"});
		});
	};
	request.send(null);
};
$hxClasses["kha.js.MobileWebAudioSound"] = kha_js_MobileWebAudioSound;
kha_js_MobileWebAudioSound.__name__ = "kha.js.MobileWebAudioSound";
kha_js_MobileWebAudioSound.__super__ = kha_Sound;
kha_js_MobileWebAudioSound.prototype = $extend(kha_Sound.prototype,{
	uncompress: function(done) {
		done();
	}
	,__class__: kha_js_MobileWebAudioSound
});
var kha_js_Sound = function(filenames,done,failed) {
	kha_Sound.call(this);
	this.done = done;
	this.failed = failed;
	kha_js_Sound.loading.push(this);
	this.element = window.document.createElement("audio");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("audio/ogg") != "" && StringTools.endsWith(filename,".ogg")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplay",$bind(this,this.canPlayThroughListener),false);
	this.element.src = this.filenames[0];
	this.element.preload = "auto";
	this.element.load();
};
$hxClasses["kha.js.Sound"] = kha_js_Sound;
kha_js_Sound.__name__ = "kha.js.Sound";
kha_js_Sound.__super__ = kha_Sound;
kha_js_Sound.prototype = $extend(kha_Sound.prototype,{
	errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g = 0;
			var _g1 = this.filenames.length - 1;
			while(_g < _g1) {
				var i = _g++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		this.failed({ url : this.element.src});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		this.done(this);
		HxOverrides.remove(kha_js_Sound.loading,this);
	}
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_Sound
});
var kha_js_WebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		done(_gthis);
	};
	request.send(null);
};
$hxClasses["kha.js.WebAudioSound"] = kha_js_WebAudioSound;
kha_js_WebAudioSound.__name__ = "kha.js.WebAudioSound";
kha_js_WebAudioSound.__super__ = kha_Sound;
kha_js_WebAudioSound.prototype = $extend(kha_Sound.prototype,{
	superUncompress: function(done) {
		kha_Sound.prototype.uncompress.call(this,done);
	}
	,uncompress: function(done) {
		var _gthis = this;
		kha_audio2_Audio._context.decodeAudioData(this.compressedData.b.bufferValue,function(buffer) {
			var ch0 = buffer.getChannelData(0);
			var len = ch0.length;
			var this1 = new Float32Array(len * 2);
			_gthis.uncompressedData = this1;
			if(buffer.numberOfChannels == 1) {
				var idx = 0;
				var i = 0;
				var lidx = len * 2;
				var uncompressInner = function() {
				};
				uncompressInner = function() {
					var chk_len = idx + 11025;
					var next_chk = chk_len > lidx ? lidx : chk_len;
					while(idx < next_chk) {
						_gthis.uncompressedData[idx] = ch0[i];
						_gthis.uncompressedData[idx + 1] = ch0[i];
						idx += 2;
						i += 1;
					}
					if(idx < lidx) {
						window.setTimeout(uncompressInner,0);
					} else {
						_gthis.compressedData = null;
					}
				};
				uncompressInner();
				window.setTimeout(done,250);
			} else {
				var ch1 = buffer.getChannelData(1);
				var idx1 = 0;
				var i1 = 0;
				var lidx1 = len * 2;
				var uncompressInner1 = function() {
				};
				uncompressInner1 = function() {
					var chk_len1 = idx1 + 11025;
					var next_chk1 = chk_len1 > lidx1 ? lidx1 : chk_len1;
					while(idx1 < next_chk1) {
						_gthis.uncompressedData[idx1] = ch0[i1];
						_gthis.uncompressedData[idx1 + 1] = ch1[i1];
						idx1 += 2;
						i1 += 1;
					}
					if(idx1 < lidx1) {
						window.setTimeout(uncompressInner1,0);
					} else {
						_gthis.compressedData = null;
					}
				};
				uncompressInner1();
				window.setTimeout(done,250);
			}
		},function() {
			_gthis.superUncompress(done);
		});
	}
	,__class__: kha_js_WebAudioSound
});
var kha_js_graphics4_ConstantLocation = function(value,type) {
	this.value = value;
	this.type = type;
};
$hxClasses["kha.js.graphics4.ConstantLocation"] = kha_js_graphics4_ConstantLocation;
kha_js_graphics4_ConstantLocation.__name__ = "kha.js.graphics4.ConstantLocation";
kha_js_graphics4_ConstantLocation.__interfaces__ = [kha_graphics4_ConstantLocation];
kha_js_graphics4_ConstantLocation.prototype = {
	__class__: kha_js_graphics4_ConstantLocation
};
var kha_js_graphics4_Graphics = function(renderTarget) {
	this.matrix3Cache = new Float32Array(9);
	this.matrixCache = new Float32Array(16);
	this.isDepthAttachment = false;
	this.isCubeMap = false;
	this.colorMaskAlpha = true;
	this.colorMaskBlue = true;
	this.colorMaskGreen = true;
	this.colorMaskRed = true;
	this.depthMask = false;
	this.depthTest = false;
	this.currentPipeline = null;
	this.renderTarget = renderTarget;
	this.init();
	if(kha_SystemImpl.gl2) {
		this.instancedExtension = true;
	} else {
		this.instancedExtension = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		this.blendMinMaxExtension = kha_SystemImpl.gl.getExtension("EXT_blend_minmax");
	}
};
$hxClasses["kha.js.graphics4.Graphics"] = kha_js_graphics4_Graphics;
kha_js_graphics4_Graphics.__name__ = "kha.js.graphics4.Graphics";
kha_js_graphics4_Graphics.__interfaces__ = [kha_graphics4_Graphics];
kha_js_graphics4_Graphics.getBlendFunc = function(factor) {
	switch(factor) {
	case 1:
		return 1;
	case 0:case 2:
		return 0;
	case 3:
		return 770;
	case 4:
		return 772;
	case 5:
		return 771;
	case 6:
		return 773;
	case 7:
		return 768;
	case 8:
		return 774;
	case 9:
		return 769;
	case 10:
		return 775;
	}
};
kha_js_graphics4_Graphics.getBlendOp = function(op) {
	switch(op) {
	case 0:
		return 32774;
	case 1:
		return 32778;
	case 2:
		return 32779;
	case 3:
		return 32775;
	case 4:
		return 32776;
	}
};
kha_js_graphics4_Graphics.prototype = {
	init: function() {
		if(this.renderTarget == null) {
			return;
		}
		this.isCubeMap = ((this.renderTarget) instanceof kha_graphics4_CubeMap);
		if(this.isCubeMap) {
			var cubeMap = js_Boot.__cast(this.renderTarget , kha_graphics4_CubeMap);
			this.renderTargetFrameBuffer = cubeMap.frameBuffer;
			this.renderTargetTexture = cubeMap.texture;
			this.isDepthAttachment = cubeMap.isDepthAttachment;
		} else {
			var image = js_Boot.__cast(this.renderTarget , kha_WebGLImage);
			this.renderTargetFrameBuffer = image.frameBuffer;
			this.renderTargetTexture = image.texture;
		}
	}
	,begin: function(additionalRenderTargets) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth(),kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
			if(additionalRenderTargets != null) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL,3553,this.renderTargetTexture,0);
				var _g = 0;
				var _g1 = additionalRenderTargets.length;
				while(_g < _g1) {
					var i = _g++;
					kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1,3553,(js_Boot.__cast(additionalRenderTargets[i] , kha_WebGLImage)).texture,0);
				}
				var attachments = [kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL];
				var _g2 = 0;
				var _g3 = additionalRenderTargets.length;
				while(_g2 < _g3) {
					var i1 = _g2++;
					attachments.push(kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i1 + 1);
				}
				if(kha_SystemImpl.gl2) {
					kha_SystemImpl.gl.drawBuffers(attachments);
				} else {
					kha_SystemImpl.drawBuffers.drawBuffersWEBGL(attachments);
				}
			}
		}
	}
	,beginFace: function(face) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,this.isDepthAttachment ? 36096 : 36064,34069 + face,this.renderTargetTexture,0);
		kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
	}
	,end: function() {
	}
	,clear: function(color,depth,stencil) {
		var clearMask = 0;
		if(color != null) {
			clearMask |= 16384;
			kha_SystemImpl.gl.colorMask(true,true,true,true);
			kha_SystemImpl.gl.clearColor(((color & 16711680) >>> 16) * 0.00392156862745098,((color & 65280) >>> 8) * 0.00392156862745098,(color & 255) * 0.00392156862745098,(color >>> 24) * 0.00392156862745098);
		}
		if(depth != null) {
			clearMask |= 256;
			kha_SystemImpl.gl.enable(2929);
			kha_SystemImpl.gl.depthMask(true);
			kha_SystemImpl.gl.clearDepth(depth);
		}
		if(stencil != null) {
			clearMask |= 1024;
			kha_SystemImpl.gl.enable(2960);
			kha_SystemImpl.gl.stencilMask(255);
			kha_SystemImpl.gl.clearStencil(stencil);
		}
		kha_SystemImpl.gl.clear(clearMask);
		kha_SystemImpl.gl.colorMask(this.colorMaskRed,this.colorMaskGreen,this.colorMaskBlue,this.colorMaskAlpha);
		if(this.depthTest) {
			kha_SystemImpl.gl.enable(2929);
		} else {
			kha_SystemImpl.gl.disable(2929);
		}
		kha_SystemImpl.gl.depthMask(this.depthMask);
	}
	,viewport: function(x,y,width,height) {
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.viewport(x,kha_System.windowHeight(0) - y - height,width,height);
		} else {
			kha_SystemImpl.gl.viewport(x,y,width,height);
		}
	}
	,scissor: function(x,y,width,height) {
		kha_SystemImpl.gl.enable(3089);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.scissor(x,kha_System.windowHeight(0) - y - height,width,height);
		} else {
			kha_SystemImpl.gl.scissor(x,y,width,height);
		}
	}
	,disableScissor: function() {
		kha_SystemImpl.gl.disable(3089);
	}
	,renderTargetsInvertedY: function() {
		return true;
	}
	,setDepthMode: function(write,mode) {
		switch(mode) {
		case 0:
			if(write) {
				kha_SystemImpl.gl.enable(2929);
			} else {
				kha_SystemImpl.gl.disable(2929);
			}
			this.depthTest = write;
			kha_SystemImpl.gl.depthFunc(519);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(512);
			break;
		case 2:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(514);
			break;
		case 3:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(517);
			break;
		case 4:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(513);
			break;
		case 5:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(515);
			break;
		case 6:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(516);
			break;
		case 7:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(518);
			break;
		}
		kha_SystemImpl.gl.depthMask(write);
		this.depthMask = write;
	}
	,setBlendingMode: function(source,destination,operation,alphaSource,alphaDestination,alphaOperation) {
		if(source == 1 && destination == 2) {
			kha_SystemImpl.gl.disable(3042);
		} else {
			kha_SystemImpl.gl.enable(3042);
			kha_SystemImpl.gl.blendFuncSeparate(kha_js_graphics4_Graphics.getBlendFunc(source),kha_js_graphics4_Graphics.getBlendFunc(destination),kha_js_graphics4_Graphics.getBlendFunc(alphaSource),kha_js_graphics4_Graphics.getBlendFunc(alphaDestination));
			kha_SystemImpl.gl.blendEquationSeparate(kha_js_graphics4_Graphics.getBlendOp(operation),kha_js_graphics4_Graphics.getBlendOp(alphaOperation));
		}
	}
	,setVertexBuffer: function(vertexBuffer) {
		(js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(0);
	}
	,setVertexBuffers: function(vertexBuffers) {
		var offset = 0;
		var _g = 0;
		while(_g < vertexBuffers.length) {
			var vertexBuffer = vertexBuffers[_g];
			++_g;
			offset += (js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(offset);
		}
	}
	,setIndexBuffer: function(indexBuffer) {
		this.indicesCount = indexBuffer.count();
		(js_Boot.__cast(indexBuffer , kha_graphics4_IndexBuffer)).set();
	}
	,setTexture: function(stage,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast(texture , kha_WebGLImage)).set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setTextureDepth: function(stage,texture) {
		(js_Boot.__cast(texture , kha_WebGLImage)).setDepth((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
	}
	,setImageTexture: function(unit,texture) {
	}
	,setTextureParameters: function(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(texunit , kha_js_graphics4_TextureUnit)).value);
		switch(uAddressing) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10242,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10242,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			break;
		}
		switch(vAddressing) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10243,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10243,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			break;
		}
		switch(minificationFilter) {
		case 0:
			switch(mipmapFilter) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9984);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9986);
				break;
			}
			break;
		case 1:case 2:
			switch(mipmapFilter) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9729);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9985);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9987);
				break;
			}
			if(minificationFilter == 2) {
				kha_SystemImpl.gl.texParameteri(3553,kha_SystemImpl.anisotropicFilter.TEXTURE_MAX_ANISOTROPY_EXT,4);
			}
			break;
		}
		switch(magnificationFilter) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10240,9728);
			break;
		case 1:case 2:
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			break;
		}
	}
	,setTexture3DParameters: function(texunit,uAddressing,vAddressing,wAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
	}
	,setTextureCompareMode: function(texunit,enabled) {
		if(enabled) {
			kha_SystemImpl.gl.texParameteri(3553,34892,34894);
			kha_SystemImpl.gl.texParameteri(3553,34893,515);
		} else {
			kha_SystemImpl.gl.texParameteri(3553,34892,0);
		}
	}
	,setCubeMapCompareMode: function(texunit,enabled) {
		if(enabled) {
			kha_SystemImpl.gl.texParameteri(34067,34892,34894);
			kha_SystemImpl.gl.texParameteri(34067,34893,515);
		} else {
			kha_SystemImpl.gl.texParameteri(34067,34892,0);
		}
	}
	,setCubeMap: function(stage,cubeMap) {
		if(cubeMap == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(34067,null);
		} else {
			cubeMap.set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setCubeMapDepth: function(stage,cubeMap) {
		cubeMap.setDepth((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
	}
	,setCullMode: function(mode) {
		switch(mode) {
		case 0:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1029);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1028);
			break;
		case 2:
			kha_SystemImpl.gl.disable(2884);
			break;
		}
	}
	,setPipeline: function(pipe) {
		this.setCullMode(pipe.cullMode);
		this.setDepthMode(pipe.depthWrite,pipe.depthMode);
		this.setStencilParameters(pipe.stencilMode,pipe.stencilBothPass,pipe.stencilDepthFail,pipe.stencilFail,pipe.stencilReferenceValue,pipe.stencilReadMask,pipe.stencilWriteMask);
		this.setBlendingMode(pipe.blendSource,pipe.blendDestination,pipe.blendOperation,pipe.alphaBlendSource,pipe.alphaBlendDestination,pipe.alphaBlendOperation);
		this.currentPipeline = pipe;
		pipe.set();
		this.colorMaskRed = pipe.colorWriteMasksRed[0];
		this.colorMaskGreen = pipe.colorWriteMasksGreen[0];
		this.colorMaskBlue = pipe.colorWriteMasksBlue[0];
		this.colorMaskAlpha = pipe.colorWriteMasksAlpha[0];
	}
	,setBool: function(location,value) {
		kha_SystemImpl.gl.uniform1i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value ? 1 : 0);
	}
	,setInt: function(location,value) {
		kha_SystemImpl.gl.uniform1i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setFloat: function(location,value) {
		kha_SystemImpl.gl.uniform1f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setFloat2: function(location,value1,value2) {
		kha_SystemImpl.gl.uniform2f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2);
	}
	,setFloat3: function(location,value1,value2,value3) {
		kha_SystemImpl.gl.uniform3f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3);
	}
	,setFloat4: function(location,value1,value2,value3,value4) {
		kha_SystemImpl.gl.uniform4f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3,value4);
	}
	,setFloats: function(location,values) {
		var webglLocation = js_Boot.__cast(location , kha_js_graphics4_ConstantLocation);
		switch(webglLocation.type) {
		case 35664:
			kha_SystemImpl.gl.uniform2fv(webglLocation.value,values);
			break;
		case 35665:
			kha_SystemImpl.gl.uniform3fv(webglLocation.value,values);
			break;
		case 35666:
			kha_SystemImpl.gl.uniform4fv(webglLocation.value,values);
			break;
		case 35676:
			kha_SystemImpl.gl.uniformMatrix4fv(webglLocation.value,false,values);
			break;
		default:
			kha_SystemImpl.gl.uniform1fv(webglLocation.value,values);
		}
	}
	,setMatrix: function(location,matrix) {
		this.matrixCache[0] = matrix._00;
		this.matrixCache[1] = matrix._01;
		this.matrixCache[2] = matrix._02;
		this.matrixCache[3] = matrix._03;
		this.matrixCache[4] = matrix._10;
		this.matrixCache[5] = matrix._11;
		this.matrixCache[6] = matrix._12;
		this.matrixCache[7] = matrix._13;
		this.matrixCache[8] = matrix._20;
		this.matrixCache[9] = matrix._21;
		this.matrixCache[10] = matrix._22;
		this.matrixCache[11] = matrix._23;
		this.matrixCache[12] = matrix._30;
		this.matrixCache[13] = matrix._31;
		this.matrixCache[14] = matrix._32;
		this.matrixCache[15] = matrix._33;
		kha_SystemImpl.gl.uniformMatrix4fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrixCache);
	}
	,setMatrix3: function(location,matrix) {
		this.matrix3Cache[0] = matrix._00;
		this.matrix3Cache[1] = matrix._01;
		this.matrix3Cache[2] = matrix._02;
		this.matrix3Cache[3] = matrix._10;
		this.matrix3Cache[4] = matrix._11;
		this.matrix3Cache[5] = matrix._12;
		this.matrix3Cache[6] = matrix._20;
		this.matrix3Cache[7] = matrix._21;
		this.matrix3Cache[8] = matrix._22;
		kha_SystemImpl.gl.uniformMatrix3fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrix3Cache);
	}
	,drawIndexedVertices: function(start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
		var size = type == 5123 ? 2 : 4;
		kha_SystemImpl.gl.drawElements(4,count == -1 ? this.indicesCount : count,type,start * size);
	}
	,convertStencilAction: function(action) {
		switch(action) {
		case 0:
			return 7680;
		case 1:
			return 0;
		case 2:
			return 7681;
		case 3:
			return 7682;
		case 4:
			return 34055;
		case 5:
			return 7683;
		case 6:
			return 34056;
		case 7:
			return 5386;
		}
	}
	,convertCompareMode: function(compareMode) {
		switch(compareMode) {
		case 0:
			return 519;
		case 1:
			return 512;
		case 2:
			return 514;
		case 3:
			return 517;
		case 4:
			return 513;
		case 5:
			return 515;
		case 6:
			return 516;
		case 7:
			return 518;
		}
	}
	,setStencilParameters: function(compareMode,bothPass,depthFail,stencilFail,referenceValue,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		if(compareMode == 0 && bothPass == 0 && depthFail == 0 && stencilFail == 0) {
			kha_SystemImpl.gl.disable(2960);
		} else {
			kha_SystemImpl.gl.enable(2960);
			var stencilFunc = this.convertCompareMode(compareMode);
			kha_SystemImpl.gl.stencilMask(writeMask);
			kha_SystemImpl.gl.stencilOp(this.convertStencilAction(stencilFail),this.convertStencilAction(depthFail),this.convertStencilAction(bothPass));
			switch(referenceValue._hx_index) {
			case 0:
				kha_SystemImpl.gl.stencilFunc(stencilFunc,0,readMask);
				break;
			case 1:
				var value = referenceValue.value;
				kha_SystemImpl.gl.stencilFunc(stencilFunc,value,readMask);
				break;
			}
		}
	}
	,drawIndexedVerticesInstanced: function(instanceCount,start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		if(this.instancedRenderingAvailable()) {
			var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
			var typeSize = kha_SystemImpl.elementIndexUint == null ? 2 : 4;
			if(kha_SystemImpl.gl2) {
				kha_SystemImpl.gl.drawElementsInstanced(4,count == -1 ? this.indicesCount : count,type,start * typeSize,instanceCount);
			} else {
				this.instancedExtension.drawElementsInstancedANGLE(4,count == -1 ? this.indicesCount : count,type,start * typeSize,instanceCount);
			}
		}
	}
	,instancedRenderingAvailable: function() {
		return this.instancedExtension;
	}
	,__class__: kha_js_graphics4_Graphics
};
var kha_js_graphics4_Graphics2 = function(canvas) {
	kha_graphics4_Graphics2.call(this,canvas);
};
$hxClasses["kha.js.graphics4.Graphics2"] = kha_js_graphics4_Graphics2;
kha_js_graphics4_Graphics2.__name__ = "kha.js.graphics4.Graphics2";
kha_js_graphics4_Graphics2.__super__ = kha_graphics4_Graphics2;
kha_js_graphics4_Graphics2.prototype = $extend(kha_graphics4_Graphics2.prototype,{
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		kha_SystemImpl.gl.colorMask(true,true,true,true);
		kha_SystemImpl.gl.disable(2929);
		kha_SystemImpl.gl.depthFunc(519);
		kha_graphics4_Graphics2.prototype.begin.call(this,clear,clearColor);
	}
	,__class__: kha_js_graphics4_Graphics2
});
var kha_js_graphics4_TextureUnit = function(value) {
	this.value = value;
};
$hxClasses["kha.js.graphics4.TextureUnit"] = kha_js_graphics4_TextureUnit;
kha_js_graphics4_TextureUnit.__name__ = "kha.js.graphics4.TextureUnit";
kha_js_graphics4_TextureUnit.__interfaces__ = [kha_graphics4_TextureUnit];
kha_js_graphics4_TextureUnit.prototype = {
	__class__: kha_js_graphics4_TextureUnit
};
var kha_vr_VrInterface = function() {
};
$hxClasses["kha.vr.VrInterface"] = kha_vr_VrInterface;
kha_vr_VrInterface.__name__ = "kha.vr.VrInterface";
kha_vr_VrInterface.prototype = {
	IsVrEnabled: function() {
		return false;
	}
	,__class__: kha_vr_VrInterface
};
var kha_js_vr_VrInterface = function() {
	this.vrHeight = 0;
	this.vrWidth = 0;
	this.height = 0;
	this.width = 0;
	this.vrEnabled = false;
	kha_vr_VrInterface.call(this);
	var displayEnabled = false;
	if(displayEnabled) {
		this.vrEnabled = true;
		this.getVRDisplays();
		haxe_Log.trace("Display enabled.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 39, className : "kha.js.vr.VrInterface", methodName : "new"});
	}
};
$hxClasses["kha.js.vr.VrInterface"] = kha_js_vr_VrInterface;
kha_js_vr_VrInterface.__name__ = "kha.js.vr.VrInterface";
kha_js_vr_VrInterface.__super__ = kha_vr_VrInterface;
kha_js_vr_VrInterface.prototype = $extend(kha_vr_VrInterface.prototype,{
	getVRDisplays: function() {
		var _gthis = this;
		var vrDisplayInstance = navigator.getVRDisplays();
		vrDisplayInstance.then(function(displays) {
			if(displays.length > 0) {
				_gthis.frameData = new VRFrameData();
				_gthis.vrDisplay = displays[0];
				_gthis.vrDisplay.depthNear = 0.1;
				_gthis.vrDisplay.depthFar = 1024.0;
				var leftEye = _gthis.vrDisplay.getEyeParameters("left");
				var rightEye = _gthis.vrDisplay.getEyeParameters("right");
				_gthis.width = kha_SystemImpl.khanvas.width;
				_gthis.height = kha_SystemImpl.khanvas.height;
				_gthis.vrWidth = Math.max(leftEye.renderWidth,rightEye.renderWidth) * 2 | 0;
				_gthis.vrHeight = Math.max(leftEye.renderHeight,rightEye.renderHeight) | 0;
			} else {
				haxe_Log.trace("There are no VR displays connected.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 59, className : "kha.js.vr.VrInterface", methodName : "getVRDisplays"});
			}
		});
	}
	,IsVrEnabled: function() {
		return this.vrEnabled;
	}
	,__class__: kha_js_vr_VrInterface
});
var kha_math_FastVector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.FastVector2"] = kha_math_FastVector2;
kha_math_FastVector2.__name__ = "kha.math.FastVector2";
kha_math_FastVector2.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	,__class__: kha_math_FastVector2
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_netsync_ControllerBuilder = function() { };
$hxClasses["kha.netsync.ControllerBuilder"] = kha_netsync_ControllerBuilder;
kha_netsync_ControllerBuilder.__name__ = "kha.netsync.ControllerBuilder";
var kha_netsync_Session = function(maxPlayers,address,port) {
	this.controllers = new haxe_ds_IntMap();
	kha_netsync_Session.instance = this;
	this.maxPlayers = maxPlayers;
	this.address = address;
	this.port = port;
};
$hxClasses["kha.netsync.Session"] = kha_netsync_Session;
kha_netsync_Session.__name__ = "kha.netsync.Session";
kha_netsync_Session.the = function() {
	return kha_netsync_Session.instance;
};
kha_netsync_Session.prototype = {
	sendControllerUpdate: function(id,bytes) {
		if(this.controllers.h.hasOwnProperty(id)) {
			if(this.controllers.h[id]._inputBuffer.length < this.controllers.h[id]._inputBufferIndex + 4 + bytes.length) {
				var newBuffer = new haxe_io_Bytes(new ArrayBuffer(this.controllers.h[id]._inputBufferIndex + 4 + bytes.length));
				newBuffer.blit(0,this.controllers.h[id]._inputBuffer,0,this.controllers.h[id]._inputBufferIndex);
				this.controllers.h[id]._inputBuffer = newBuffer;
			}
			this.controllers.h[id]._inputBuffer.setInt32(this.controllers.h[id]._inputBufferIndex,bytes.length);
			this.controllers.h[id]._inputBuffer.blit(this.controllers.h[id]._inputBufferIndex + 4,bytes,0,bytes.length);
			this.controllers.h[id]._inputBufferIndex += 4 + bytes.length;
		}
	}
	,__class__: kha_netsync_Session
};
var zui_Handle = function(ops) {
	this.changed = false;
	this.dragY = 0;
	this.dragX = 0;
	this.dragEnabled = false;
	this.dragging = false;
	this.lastMaxY = 0.0;
	this.lastMaxX = 0.0;
	this.layout = 0;
	this.scrollEnabled = false;
	this.scrollOffset = 0.0;
	this.scrolling = false;
	this.redraws = 2;
	this.texture = null;
	this.text = "";
	this.value = 0.0;
	this.color = -1;
	this.position = 0;
	this.selected = false;
	if(ops != null) {
		if(ops.selected != null) {
			this.selected = ops.selected;
		}
		if(ops.position != null) {
			this.position = ops.position;
		}
		if(ops.value != null) {
			this.value = ops.value;
		}
		if(ops.text != null) {
			this.text = ops.text;
		}
		if(ops.color != null) {
			this.color = ops.color;
		}
		if(ops.layout != null) {
			this.layout = ops.layout;
		}
	}
};
$hxClasses["zui.Handle"] = zui_Handle;
zui_Handle.__name__ = "zui.Handle";
zui_Handle.prototype = {
	nest: function(i,ops) {
		if(this.children == null) {
			this.children = [];
		}
		while(this.children.length <= i) this.children.push(null);
		if(this.children[i] == null) {
			this.children[i] = new zui_Handle(ops);
		}
		return this.children[i];
	}
	,__class__: zui_Handle
};
var zui_Canvas = function() { };
$hxClasses["zui.Canvas"] = zui_Canvas;
zui_Canvas.__name__ = "zui.Canvas";
zui_Canvas.draw = function(ui,canvas,g) {
	if(zui_Canvas.screenW == -1) {
		zui_Canvas.screenW = kha_System.windowWidth();
		zui_Canvas.screenH = kha_System.windowHeight();
	}
	zui_Canvas.events = [];
	zui_Canvas._ui = ui;
	g.end();
	ui.begin(g);
	g.begin(false);
	ui.g = g;
	var _g = 0;
	var _g1 = canvas.elements;
	while(_g < _g1.length) {
		var elem = _g1[_g];
		++_g;
		if(elem.parent == null) {
			zui_Canvas.drawElement(ui,canvas,elem);
		}
	}
	g.end();
	ui.end();
	g.begin(false);
	return zui_Canvas.events;
};
zui_Canvas.drawElement = function(ui,canvas,element,px,py) {
	if(py == null) {
		py = 0.0;
	}
	if(px == null) {
		px = 0.0;
	}
	if(element == null || element.visible == false) {
		return;
	}
	ui._x = canvas.x + (element.x * zui_Canvas._ui.SCALE | 0) + (px * zui_Canvas._ui.SCALE | 0);
	ui._y = canvas.y + (element.y * zui_Canvas._ui.SCALE | 0) + (py * zui_Canvas._ui.SCALE | 0);
	ui._w = element.width * zui_Canvas._ui.SCALE | 0;
	var cw = canvas.width * zui_Canvas._ui.SCALE | 0;
	var ch = canvas.height * zui_Canvas._ui.SCALE | 0;
	switch(element.anchor) {
	case 1:
		ui._x -= (cw - zui_Canvas.screenW) / 2;
		break;
	case 2:
		ui._x -= cw - zui_Canvas.screenW;
		break;
	case 3:
		ui._y -= (ch - zui_Canvas.screenH) / 2;
		break;
	case 4:
		ui._x -= (cw - zui_Canvas.screenW) / 2;
		ui._y -= (ch - zui_Canvas.screenH) / 2;
		break;
	case 5:
		ui._x -= cw - zui_Canvas.screenW;
		ui._y -= (ch - zui_Canvas.screenH) / 2;
		break;
	case 6:
		ui._y -= ch - zui_Canvas.screenH;
		break;
	case 7:
		ui._x -= (cw - zui_Canvas.screenW) / 2;
		ui._y -= ch - zui_Canvas.screenH;
		break;
	case 8:
		ui._x -= cw - zui_Canvas.screenW;
		ui._y -= ch - zui_Canvas.screenH;
		break;
	}
	var rotated = element.rotation != null && element.rotation != 0;
	if(rotated) {
		ui.g.pushRotation(element.rotation,ui._x + (element.width * zui_Canvas._ui.SCALE | 0) / 2,ui._y + (element.height * zui_Canvas._ui.SCALE | 0) / 2);
	}
	switch(element.type) {
	case 0:
		var font = ui.ops.font;
		var size = ui.fontSize;
		var tcol = ui.t.TEXT_COL;
		var fontAsset = element.asset != null && StringTools.endsWith(element.asset,".ttf");
		if(fontAsset) {
			ui.ops.font = zui_Canvas.getAsset(canvas,element.asset);
		}
		ui.fontSize = element.height * zui_Canvas._ui.SCALE | 0;
		ui.t.TEXT_COL = element.color;
		ui.text(element.text);
		ui.ops.font = font;
		ui.fontSize = size;
		ui.t.TEXT_COL = tcol;
		break;
	case 1:
		var image = zui_Canvas.getAsset(canvas,element.asset);
		var fontAsset1 = element.asset != null && StringTools.endsWith(element.asset,".ttf");
		if(image != null && !fontAsset1) {
			ui.imageScrollAlign = false;
			var tint = element.color != null ? element.color : -1;
			if(ui.image(image,tint,element.height * zui_Canvas._ui.SCALE | 0) == 3) {
				var e = element.event;
				if(e != null && e != "") {
					zui_Canvas.events.push(e);
				}
			}
			ui.imageScrollAlign = true;
		}
		break;
	case 2:
		var bh = ui.t.BUTTON_H;
		ui.t.BUTTON_H = element.height * zui_Canvas._ui.SCALE | 0;
		if(ui.button(element.text)) {
			var e1 = element.event;
			if(e1 != null && e1 != "") {
				zui_Canvas.events.push(e1);
			}
		}
		ui.t.BUTTON_H = bh;
		break;
	case 3:
		break;
	case 6:
		ui.check(zui_Canvas.h.nest(element.id),element.text);
		break;
	case 7:
		ui.inlineRadio(zui_Canvas.h.nest(element.id),element.text.split(";"));
		break;
	case 8:
		ui.combo(zui_Canvas.h.nest(element.id),element.text.split(";"));
		break;
	case 9:
		var col = ui.g.get_color();
		ui.g.set_color(element.color);
		ui.g.fillRect(ui._x,ui._y,ui._w,element.height * zui_Canvas._ui.SCALE | 0);
		ui.g.set_color(col);
		break;
	case 10:
		ui.slider(zui_Canvas.h.nest(element.id),element.text,0.0,1.0,true);
		break;
	case 11:
		ui.textInput(zui_Canvas.h.nest(element.id),element.text);
		break;
	}
	if(element.children != null) {
		var _g2 = 0;
		var _g3 = element.children;
		while(_g2 < _g3.length) {
			var id = _g3[_g2];
			++_g2;
			zui_Canvas.drawElement(ui,canvas,zui_Canvas.elemById(canvas,id),element.x + px,element.y + py);
		}
	}
	if(rotated) {
		ui.g.popTransformation();
	}
};
zui_Canvas.getAsset = function(canvas,asset) {
	var _g = 0;
	var _g1 = canvas.assets;
	while(_g < _g1.length) {
		var a = _g1[_g];
		++_g;
		if(a.name == asset) {
			return zui_Canvas.assetMap.h[a.id];
		}
	}
	return null;
};
zui_Canvas.elemById = function(canvas,id) {
	var _g = 0;
	var _g1 = canvas.elements;
	while(_g < _g1.length) {
		var e = _g1[_g];
		++_g;
		if(e.id == id) {
			return e;
		}
	}
	return null;
};
var zui_Themes = function() { };
$hxClasses["zui.Themes"] = zui_Themes;
zui_Themes.__name__ = "zui.Themes";
var zui_Zui = function(ops) {
	this.restoreY = -1.0;
	this.restoreX = -1.0;
	this.checkSelectImage = null;
	this.elementsBaked = false;
	this.tabScroll = 0.0;
	this.tabHandle = null;
	this.tabNames = null;
	this.tooltipTime = 0.0;
	this.tooltipShown = false;
	this.tooltipY = 0.0;
	this.tooltipX = 0.0;
	this.tooltipInvertY = false;
	this.tooltipImg = null;
	this.tooltipText = "";
	this.comboToSubmit = 0;
	this.submitComboHandle = null;
	this.comboSelectedWindow = null;
	this.comboSelectedHandle = null;
	this.tabPressedHandle = null;
	this.tabPressed = false;
	this.textToSubmit = "";
	this.submitTextHandle = null;
	this.textSelectedHandle = null;
	this.windowHeader = 0.0;
	this.scrollingHandle = null;
	this.windowEnded = true;
	this._windowY = 0.0;
	this._windowX = 0.0;
	this.imageScrollAlign = true;
	this.scrollAlign = 0.0;
	this.curRatio = -1;
	this.highlightAnchor = 0;
	this.cursorY = 0;
	this.cursorX = 0;
	this.key = null;
	this.isAltDown = false;
	this.isCtrlDown = false;
	this.isShiftDown = false;
	this.isKeyDown = false;
	this.inputWheelDelta = 0;
	this.inputEnabled = true;
	this.inputRegistered = false;
	this.scrollEnabled = true;
	this.imageInvertY = false;
	this.alwaysRedraw = false;
	this.changed = false;
	this.isReleased = false;
	this.isHovered = false;
	this.isPushed = false;
	this.isStarted = false;
	this.isTyping = false;
	this.isScrolling = false;
	if(ops.theme == null) {
		ops.theme = zui_Themes.dark;
	}
	this.t = ops.theme;
	if(ops.khaWindowId == null) {
		ops.khaWindowId = 0;
	}
	if(ops.scaleFactor == null) {
		ops.scaleFactor = 1.0;
	}
	if(ops.scaleTexture == null) {
		ops.scaleTexture = 1.0;
	}
	if(ops.autoNotifyInput == null) {
		ops.autoNotifyInput = true;
	}
	this.ops = ops;
	this.setScale(ops.scaleFactor);
	if(ops.autoNotifyInput) {
		this.registerInput();
	}
};
$hxClasses["zui.Zui"] = zui_Zui;
zui_Zui.__name__ = "zui.Zui";
zui_Zui.prototype = {
	setScale: function(factor) {
		this.ops.scaleFactor = factor;
		this.SCALE = this.ops.scaleFactor * this.ops.scaleTexture;
		this.fontSize = this.t.FONT_SIZE * this.ops.scaleFactor | 0;
		var fontHeight = this.ops.font.height(this.fontSize);
		this.fontOffsetY = (this.t.ELEMENT_H * this.SCALE - fontHeight) / 2;
		this.arrowOffsetY = (this.t.ELEMENT_H * this.SCALE - this.t.ARROW_SIZE * this.SCALE) / 2;
		this.arrowOffsetX = this.arrowOffsetY;
		this.titleOffsetX = (this.arrowOffsetX * 2 + this.t.ARROW_SIZE * this.SCALE) / this.SCALE;
		this.buttonOffsetY = (this.t.ELEMENT_H * this.SCALE - this.t.BUTTON_H * this.SCALE) / 2;
		this.checkOffsetY = (this.t.ELEMENT_H * this.SCALE - this.t.CHECK_SIZE * this.SCALE) / 2;
		this.checkOffsetX = this.checkOffsetY;
		this.checkSelectOffsetY = (this.t.CHECK_SIZE * this.SCALE - this.t.CHECK_SELECT_SIZE * this.SCALE) / 2;
		this.checkSelectOffsetX = this.checkSelectOffsetY;
		this.radioOffsetY = (this.t.ELEMENT_H * this.SCALE - this.t.CHECK_SIZE * this.SCALE) / 2;
		this.radioOffsetX = this.radioOffsetY;
		this.radioSelectOffsetY = (this.t.CHECK_SIZE * this.SCALE - this.t.CHECK_SELECT_SIZE * this.SCALE) / 2;
		this.radioSelectOffsetX = this.radioSelectOffsetY;
		this.elementsBaked = false;
	}
	,bakeElements: function() {
		if(this.checkSelectImage != null) {
			this.checkSelectImage.unload();
		}
		this.checkSelectImage = kha_Image.createRenderTarget(this.t.CHECK_SELECT_SIZE * this.SCALE | 0,this.t.CHECK_SELECT_SIZE * this.SCALE | 0,null,0,1,this.ops.khaWindowId);
		var g = this.checkSelectImage.get_g2();
		g.begin(true,0);
		g.set_color(this.t.ACCENT_SELECT_COL);
		g.drawLine(0,0,this.checkSelectImage.get_width(),this.checkSelectImage.get_height(),2 * this.SCALE);
		g.drawLine(this.checkSelectImage.get_width(),0,0,this.checkSelectImage.get_height(),2 * this.SCALE);
		g.end();
		this.elementsBaked = true;
	}
	,registerInput: function() {
		kha_input_Mouse.get().notifyWindowed(this.ops.khaWindowId,$bind(this,this.onMouseDown),$bind(this,this.onMouseUp),$bind(this,this.onMouseMove),$bind(this,this.onMouseWheel));
		kha_input_Keyboard.get().notify($bind(this,this.onKeyDown),$bind(this,this.onKeyUp),$bind(this,this.onKeyPress));
		kha_System.notifyOnCutCopyPaste($bind(this,this.onCut),$bind(this,this.onCopy),$bind(this,this.onPaste));
		this.inputRegistered = true;
	}
	,begin: function(g) {
		if(!this.elementsBaked) {
			this.bakeElements();
		}
		this.changed = false;
		this.globalG = g;
		this._x = 0;
		this._y = 0;
		this._w = 0;
		this._h = 0;
	}
	,end: function(last) {
		if(last == null) {
			last = true;
		}
		if(!this.windowEnded) {
			this.endWindow();
		}
		if(this.comboSelectedHandle != null) {
			this.drawCombo();
		}
		if(last) {
			this.endInput();
		}
		if(this.tabPressedHandle != null) {
			this.tabPressedHandle = null;
		}
	}
	,endInput: function() {
		this.isKeyDown = false;
		this.inputStarted = false;
		this.inputStartedR = false;
		this.inputReleased = false;
		this.inputReleasedR = false;
		this.inputDX = 0;
		this.inputDY = 0;
		this.inputWheelDelta = 0;
		zui_Zui.textToPaste = "";
		zui_Zui.isCut = false;
	}
	,beginLayout: function(g,x,y,w) {
		if(!this.elementsBaked) {
			this.bakeElements();
		}
		this.currentWindow = null;
		this.g = g;
		this._windowX = 0;
		this._windowY = 0;
		this._windowW = w;
		this._x = x;
		this._y = y;
		this._w = w;
	}
	,endLayout: function(last) {
		if(last == null) {
			last = true;
		}
		if(last) {
			this.endInput();
		}
	}
	,inputChanged: function() {
		if(!(this.inputDX != 0 || this.inputDY != 0 || this.inputWheelDelta != 0 || this.inputStarted || this.inputStartedR || this.inputReleased || this.inputReleasedR || this.inputDown || this.inputDownR)) {
			return this.isKeyDown;
		} else {
			return true;
		}
	}
	,windowDirty: function(handle,x,y,w,h) {
		var wx = x + handle.dragX;
		var wy = y + handle.dragY;
		var inputChanged = this.getInputInRect(wx,wy,w,h) && this.inputChanged();
		if(!(this.alwaysRedraw || this.isScrolling || this.isTyping)) {
			return inputChanged;
		} else {
			return true;
		}
	}
	,window: function(handle,x,y,w,h,drag) {
		if(drag == null) {
			drag = false;
		}
		if(handle.texture == null || w != handle.texture.get_width() || h != handle.texture.get_height()) {
			this.resize(handle,w,h,this.ops.khaWindowId);
		}
		if(!this.windowEnded) {
			this.endWindow();
		}
		this.windowEnded = false;
		this.g = handle.texture.get_g2();
		this.currentWindow = handle;
		this._windowX = x + handle.dragX;
		this._windowY = y + handle.dragY;
		this._windowW = w;
		this._windowH = h;
		this.windowHeader = 0;
		if(this.windowDirty(handle,x,y,w,h)) {
			handle.redraws = 2;
		}
		if(handle.redraws == 0) {
			return false;
		}
		this._x = 0;
		this._y = handle.scrollOffset;
		if(handle.layout == 1) {
			w = this.t.ELEMENT_W * this.SCALE | 0;
		}
		this._w = !handle.scrollEnabled ? w : w - (this.t.SCROLL_W * this.SCALE | 0);
		this._h = h;
		this.tooltipText = "";
		this.tooltipImg = null;
		this.tabNames = null;
		if(this.t.FILL_WINDOW_BG) {
			this.g.begin(true,this.t.WINDOW_BG_COL);
		} else {
			this.g.begin(true,0);
			this.g.set_color(this.t.WINDOW_BG_COL);
			this.g.fillRect(this._x,this._y - handle.scrollOffset,handle.lastMaxX,handle.lastMaxY);
		}
		handle.dragEnabled = drag;
		if(drag) {
			if(this.inputStarted && this.getInputInRect(this._windowX,this._windowY,this._windowW,15)) {
				handle.dragging = true;
			} else if(this.inputReleased) {
				handle.dragging = false;
			}
			if(handle.dragging) {
				handle.redraws = 2;
				handle.dragX += this.inputDX | 0;
				handle.dragY += this.inputDY | 0;
			}
			this._y += 15;
			this.windowHeader += 15;
		}
		return true;
	}
	,endWindow: function(bindGlobalG) {
		if(bindGlobalG == null) {
			bindGlobalG = true;
		}
		var handle = this.currentWindow;
		if(handle == null) {
			return;
		}
		if(handle.redraws > 0 || this.isScrolling || this.isTyping) {
			if(this.tabNames != null) {
				this.drawTabs();
			}
			if(handle.dragEnabled) {
				this.g.set_color(this.t.SEPARATOR_COL);
				this.g.fillRect(0,0,this._windowW,15);
			}
			var fullHeight = this._y - handle.scrollOffset;
			if(fullHeight < this._windowH || handle.layout == 1 || !this.scrollEnabled) {
				handle.scrollEnabled = false;
				handle.scrollOffset = 0;
			} else {
				handle.scrollEnabled = true;
				if(this.tabScroll < 0) {
					handle.scrollOffset = this.tabScroll;
					this.tabScroll = 0;
				}
				var amountToScroll = fullHeight - this._windowH;
				var amountScrolled = -handle.scrollOffset;
				var ratio = amountScrolled / amountToScroll;
				var barH = this._windowH * Math.abs(this._windowH / fullHeight);
				barH = Math.max(barH,this.t.ELEMENT_H * this.SCALE);
				var totalScrollableArea = this._windowH - barH;
				var e = amountToScroll / totalScrollableArea;
				var barY = totalScrollableArea * ratio;
				if(this.inputStarted && this.getInputInRect(this._windowX + this._windowW - (this.t.SCROLL_W * this.SCALE | 0),barY + this._windowY,this.t.SCROLL_W * this.SCALE | 0,barH)) {
					handle.scrolling = true;
					this.scrollingHandle = handle;
					this.isScrolling = true;
				}
				if(handle.scrolling) {
					this.scroll(this.inputDY * e,fullHeight);
				} else if(this.inputWheelDelta != 0) {
					this.scroll(this.inputWheelDelta * (this.t.ELEMENT_H * this.SCALE),fullHeight);
				}
				if(handle.scrollOffset > 0) {
					handle.scrollOffset = 0;
				} else if(fullHeight + handle.scrollOffset < this._windowH) {
					handle.scrollOffset = this._windowH - fullHeight;
				}
				this.g.set_color(this.t.WINDOW_BG_COL);
				this.g.fillRect(this._windowW - (this.t.SCROLL_W * this.SCALE | 0),this._windowY,this.t.SCROLL_W * this.SCALE | 0,this._windowH);
				this.g.set_color(this.t.ACCENT_COL);
				this.g.fillRect(this._windowW - (this.t.SCROLL_W * this.SCALE | 0) - this.scrollAlign,barY,this.t.SCROLL_W * this.SCALE | 0,barH);
			}
			handle.lastMaxX = this._x;
			handle.lastMaxY = this._y;
			if(handle.layout == 0) {
				handle.lastMaxX += this._windowW;
			} else {
				handle.lastMaxY += this._windowH;
			}
			handle.redraws--;
			this.g.end();
		}
		this.windowEnded = true;
		if(bindGlobalG) {
			this.globalG.begin(false);
		}
		this.globalG.set_color(this.t.WINDOW_TINT_COL);
		this.globalG.drawScaledImage(handle.texture,this._windowX,this._windowY,handle.texture.get_width() / this.ops.scaleTexture,handle.texture.get_height() / this.ops.scaleTexture);
		if(this.tooltipText != "" || this.tooltipImg != null) {
			if(!this.tooltipShown) {
				this.tooltipShown = true;
				this.tooltipX = this.inputX;
				this.tooltipTime = kha_Scheduler.time();
			}
			if(kha_Scheduler.time() - this.tooltipTime > this.t.TOOLTIP_DELAY) {
				if(this.tooltipText != "") {
					this.drawTooltip();
				} else {
					this.drawTooltipImage();
				}
			}
		} else {
			this.tooltipShown = false;
		}
		if(bindGlobalG) {
			this.globalG.end();
		}
	}
	,scroll: function(delta,fullHeight) {
		this.currentWindow.scrollOffset -= delta;
	}
	,tab: function(handle,text) {
		if(this.tabNames == null) {
			this.tabNames = [];
			this.tabHandle = handle;
			this.windowHeader += this.buttonOffsetY + this.t.BUTTON_H * this.SCALE;
			this.restoreX = this.inputX;
			this.restoreY = this.inputY;
			if(this.getInputInRect(this._windowX,this._windowY,this._windowW,this.windowHeader)) {
				this.inputX = this.inputY = -1;
			}
		}
		this.tabNames.push(text);
		var selected = handle.position == this.tabNames.length - 1;
		if(selected) {
			this.endElement();
		}
		return selected;
	}
	,drawTabs: function() {
		this.inputX = this.restoreX;
		this.inputY = this.restoreY;
		if(this.currentWindow == null) {
			return;
		}
		var tabX = 0.0;
		var origy = this._y;
		this._y = this.currentWindow.dragEnabled ? 15 : 0;
		this.g.set_color(this.t.WINDOW_BG_COL);
		this.g.fillRect(0,this._y,this._windowW,this.buttonOffsetY + this.t.BUTTON_H * this.SCALE);
		this.g.set_color(this.t.ACCENT_COL);
		this.g.fillRect(this.buttonOffsetY,this._y + this.buttonOffsetY + this.t.BUTTON_H * this.SCALE,this._windowW - this.buttonOffsetY * 2,this.t.LINE_STRENGTH * this.SCALE);
		var _g = 0;
		var _g1 = this.tabNames.length;
		while(_g < _g1) {
			var i = _g++;
			this._x = tabX;
			this._w = this.ops.font.width(this.fontSize,this.tabNames[i]) + this.buttonOffsetY * 2 + 14 * this.SCALE | 0;
			var released = this.getReleased();
			var pushed = this.getPushed();
			var hover = this.getHover();
			if(released) {
				var h = this.tabHandle.nest(this.tabHandle.position);
				h.scrollOffset = this.currentWindow.scrollOffset;
				h = this.tabHandle.nest(i);
				this.tabScroll = h.scrollOffset;
				this.tabHandle.position = i;
				this.currentWindow.redraws = 3;
			}
			var selected = this.tabHandle.position == i;
			this.g.set_color(pushed ? this.t.ACCENT_HOVER_COL : hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
			tabX += this._w + 5;
			var g = this.g;
			var x = this._x + this.buttonOffsetY;
			var y = this._y + this.buttonOffsetY;
			var w = this._w;
			var h1 = this.t.BUTTON_H * this.SCALE;
			var strength = 0.0;
			if(strength == 0.0) {
				strength = this.t.LINE_STRENGTH * this.SCALE;
			}
			if(!selected) {
				g.fillRect(x,y,w,h1);
			} else {
				g.drawRect(x,y,w,h1,strength);
			}
			this.g.set_color(this.t.BUTTON_TEXT_COL);
			this.drawString(this.g,this.tabNames[i],this.t.TEXT_OFFSET,0,0);
			if(selected) {
				this.g.set_color(this.t.WINDOW_BG_COL);
				this.g.fillRect(this._x + this.buttonOffsetY + 1,this._y + this.buttonOffsetY + this.t.BUTTON_H * this.SCALE,this._w - 1,this.t.LINE_STRENGTH * this.SCALE);
			}
		}
		this._x = 0;
		this._y = origy;
		this._w = (!this.currentWindow.scrollEnabled ? this._windowW : this._windowW - (this.t.SCROLL_W * this.SCALE | 0)) | 0;
	}
	,panel: function(handle,text,accent,isTree) {
		if(isTree == null) {
			isTree = false;
		}
		if(accent == null) {
			accent = 0;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.SCALE)) {
			this.endElement();
			return handle.selected;
		}
		if(this.getReleased()) {
			handle.selected = !handle.selected;
		}
		if(accent > 0) {
			this.g.set_color(this.t.PANEL_BG_COL);
			this.g.fillRect(this._x,this._y,this._w,this.t.ELEMENT_H * this.SCALE);
		}
		if(isTree) {
			this.drawTree(handle.selected);
		} else {
			this.drawArrow(handle.selected);
		}
		this.g.set_color(this.t.PANEL_TEXT_COL);
		this.g.set_opacity(1.0);
		this.drawString(this.g,text,this.titleOffsetX,0);
		this.endElement();
		return handle.selected;
	}
	,image: function(image,tint,h) {
		if(tint == null) {
			tint = -1;
		}
		var iw = image.get_width() * this.SCALE;
		var ih = image.get_height() * this.SCALE;
		var w = Math.min(iw,this._w);
		var x = this._x;
		if(this.imageScrollAlign) {
			w = Math.min(iw,this._w - this.buttonOffsetY * 2);
			x += this.buttonOffsetY;
			var scroll = this.currentWindow != null && this.currentWindow.scrollEnabled;
			if(!scroll) {
				var r = this.curRatio == -1 ? 1.0 : this.ratios[this.curRatio];
				w -= (this.t.SCROLL_W * this.SCALE | 0) * r;
				x += (this.t.SCROLL_W * this.SCALE | 0) * r / 2;
			}
		}
		var ratio = h == null ? w / iw : h / ih;
		if(h == null) {
			h = ih * ratio;
		} else {
			w = iw * ratio;
		}
		if(!this.isVisible(h)) {
			this.endElement(h);
			return 0;
		}
		var started = this.getStarted(h);
		var down = this.getPushed(h);
		var released = this.getReleased(h);
		var hover = this.getHover();
		this.g.set_color(tint);
		var h_float = h;
		if(this.imageInvertY) {
			this.g.drawScaledImage(image,x,this._y + h_float,w,-h_float);
		} else {
			this.g.drawScaledImage(image,x,this._y,w,h_float);
		}
		this.endElement(h);
		if(started) {
			return 1;
		} else if(released) {
			return 3;
		} else if(down) {
			return 2;
		} else {
			return 0;
		}
	}
	,text: function(text,align,bg) {
		if(bg == null) {
			bg = 0;
		}
		if(align == null) {
			align = 0;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.SCALE)) {
			this.endElement();
			return;
		}
		this.getReleased();
		if(bg != 0) {
			this.g.set_color(bg);
			this.g.fillRect(this._x + this.buttonOffsetY,this._y + this.buttonOffsetY,this._w - this.buttonOffsetY * 2,this.t.BUTTON_H * this.SCALE);
		}
		this.g.set_color(this.t.TEXT_COL);
		this.drawString(this.g,text,this.t.TEXT_OFFSET,0,align);
		this.endElement();
	}
	,startTextEdit: function(handle) {
		this.isTyping = true;
		this.submitTextHandle = this.textSelectedHandle;
		this.textToSubmit = this.textSelectedCurrentText;
		this.textSelectedHandle = handle;
		this.textSelectedCurrentText = handle.text;
		this.tabPressed = false;
		this.tabPressedHandle = handle;
		this.cursorX = handle.text.length;
		this.cursorY = 0;
		this.highlightAnchor = 0;
		if(kha_input_Keyboard.get() != null) {
			kha_input_Keyboard.get().show();
		}
	}
	,submitTextEdit: function() {
		this.submitTextHandle.text = this.textToSubmit;
		this.submitTextHandle.changed = this.changed = true;
		this.submitTextHandle = null;
		this.textToSubmit = "";
		this.textSelectedCurrentText = "";
	}
	,updateTextEdit: function(align) {
		if(align == null) {
			align = 0;
		}
		var text = this.textSelectedCurrentText;
		if(this.isKeyDown) {
			if(this.key == 37) {
				if(this.cursorX > 0) {
					this.cursorX--;
				}
			} else if(this.key == 39) {
				if(this.cursorX < text.length) {
					this.cursorX++;
				}
			} else if(this.key == 8) {
				if(this.cursorX > 0 && this.highlightAnchor == this.cursorX) {
					text = HxOverrides.substr(text,0,this.cursorX - 1) + HxOverrides.substr(text,this.cursorX,text.length);
					this.cursorX--;
				} else if(this.highlightAnchor < this.cursorX) {
					text = HxOverrides.substr(text,0,this.highlightAnchor) + HxOverrides.substr(text,this.cursorX,text.length);
					this.cursorX = this.highlightAnchor;
				} else {
					text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.highlightAnchor,text.length);
				}
			} else if(this.key == 46) {
				if(this.highlightAnchor == this.cursorX) {
					text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.cursorX + 1,null);
				} else if(this.highlightAnchor < this.cursorX) {
					text = HxOverrides.substr(text,0,this.highlightAnchor) + HxOverrides.substr(text,this.cursorX,text.length);
					this.cursorX = this.highlightAnchor;
				} else {
					text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.highlightAnchor,text.length);
				}
			} else if(this.key == 13) {
				this.deselectText();
			} else if(this.key == 27) {
				this.textSelectedCurrentText = this.textSelectedHandle.text;
				this.deselectText();
			} else if(this.key == 9) {
				this.tabPressed = true;
				this.deselectText();
				this.key = null;
			} else if(this.key == 36) {
				this.cursorX = 0;
			} else if(this.key == 35) {
				this.cursorX = text.length;
			} else if(this.key != 16 && this.key != 20 && this.key != 17 && this.key != 18) {
				if(this.char != null && this.char != "" && HxOverrides.cca(this.char,0) >= 32 && HxOverrides.cca(this.char,0) != 127) {
					text = HxOverrides.substr(text,0,this.highlightAnchor) + this.char + HxOverrides.substr(text,this.cursorX,null);
					this.cursorX++;
				}
			}
			var selecting = this.isShiftDown && (this.key == 37 || this.key == 39);
			if(!selecting && !this.isCtrlDown) {
				this.highlightAnchor = this.cursorX;
			}
		}
		if(zui_Zui.textToPaste != "") {
			text = HxOverrides.substr(text,0,this.highlightAnchor) + zui_Zui.textToPaste + HxOverrides.substr(text,this.cursorX,null);
			this.cursorX += zui_Zui.textToPaste.length;
			this.highlightAnchor = this.cursorX;
			zui_Zui.textToPaste = "";
		}
		if(this.highlightAnchor == this.cursorX) {
			zui_Zui.textToCopy = text;
		} else if(this.highlightAnchor < this.cursorX) {
			zui_Zui.textToCopy = text.substring(this.highlightAnchor,this.cursorX);
		} else {
			zui_Zui.textToCopy = text.substring(this.cursorX,this.highlightAnchor);
		}
		if(zui_Zui.isCut) {
			if(this.highlightAnchor == this.cursorX) {
				text = "";
			} else if(this.highlightAnchor < this.cursorX) {
				text = HxOverrides.substr(text,0,this.highlightAnchor) + HxOverrides.substr(text,this.cursorX,text.length);
				this.cursorX = this.highlightAnchor;
			} else {
				text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.highlightAnchor,text.length);
			}
		}
		var off = this.t.TEXT_OFFSET;
		var lineHeight = this.t.ELEMENT_H * this.SCALE;
		var cursorHeight = lineHeight - this.buttonOffsetY * 3.0;
		if(this.highlightAnchor != this.cursorX) {
			var istart = this.cursorX;
			var iend = this.highlightAnchor;
			if(this.highlightAnchor < this.cursorX) {
				istart = this.highlightAnchor;
				iend = this.cursorX;
			}
			var hlstr = HxOverrides.substr(text,istart,iend - istart);
			var hlstrw = this.g.get_font().width(this.g.get_fontSize(),hlstr);
			var startoff = this.g.get_font().width(this.g.get_fontSize(),HxOverrides.substr(text,0,istart));
			var hlStart = align == 0 ? this._x + startoff + off : this._x + this._w - hlstrw - off;
			if(align == 2) {
				hlStart -= this.g.get_font().width(this.g.get_fontSize(),HxOverrides.substr(text,iend,text.length));
			}
			this.g.fillRect(hlStart,this._y + this.cursorY * lineHeight + this.buttonOffsetY * 1.5,hlstrw * this.SCALE,cursorHeight);
		}
		var time = kha_Scheduler.time();
		if(time % (this.t.FLASH_SPEED * 2.0) < this.t.FLASH_SPEED) {
			this.g.set_color(this.t.TEXT_COL);
			var str = align == 0 ? HxOverrides.substr(text,0,this.cursorX) : text.substring(this.cursorX,text.length);
			var strw = this.g.get_font().width(this.g.get_fontSize(),str);
			var cursorX = align == 0 ? this._x + strw + off : this._x + this._w - strw - off;
			this.g.fillRect(cursorX,this._y + this.cursorY * lineHeight + this.buttonOffsetY * 1.5,this.SCALE,cursorHeight);
		}
		this.textSelectedCurrentText = text;
	}
	,textInput: function(handle,label,align) {
		if(align == null) {
			align = 0;
		}
		if(label == null) {
			label = "";
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.SCALE)) {
			this.endElement();
			return handle.text;
		}
		var hover = this.getHover();
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		var g = this.g;
		var x = this._x + this.buttonOffsetY;
		var y = this._y + this.buttonOffsetY;
		var w = this._w - this.buttonOffsetY * 2;
		var h = this.t.BUTTON_H * this.SCALE;
		var strength = 0.0;
		if(strength == 0.0) {
			strength = this.t.LINE_STRENGTH * this.SCALE;
		}
		if(this.t.FILL_ACCENT_BG) {
			g.fillRect(x,y,w,h);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		var startEdit = this.getReleased() || this.tabPressed;
		if(this.textSelectedHandle != handle && startEdit) {
			this.startTextEdit(handle);
		}
		if(this.textSelectedHandle == handle) {
			this.updateTextEdit(align);
		}
		if(this.submitTextHandle == handle) {
			this.submitTextEdit();
		} else {
			handle.changed = false;
		}
		if(label != "") {
			this.g.set_color(this.t.LABEL_COL);
			var labelAlign = align == 2 ? 0 : 2;
			var xOffset = labelAlign == 0 ? 7 : 0;
			this.drawString(this.g,label,xOffset,0,labelAlign);
		}
		this.g.set_color(this.t.TEXT_COL);
		if(this.textSelectedHandle != handle) {
			this.drawString(this.g,handle.text,null,0,align);
		} else {
			this.drawString(this.g,this.textSelectedCurrentText,null,0,align);
		}
		this.endElement();
		return handle.text;
	}
	,deselectText: function() {
		this.submitTextHandle = this.textSelectedHandle;
		this.textToSubmit = this.textSelectedCurrentText;
		this.textSelectedHandle = null;
		this.isTyping = false;
		if(this.currentWindow != null) {
			this.currentWindow.redraws = 2;
		}
		if(kha_input_Keyboard.get() != null) {
			kha_input_Keyboard.get().hide();
		}
		this.highlightAnchor = this.cursorX;
	}
	,button: function(text,align) {
		if(align == null) {
			align = 1;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.SCALE)) {
			this.endElement();
			return false;
		}
		var released = this.getReleased();
		var pushed = this.getPushed();
		var hover = this.getHover();
		this.g.set_color(pushed ? this.t.BUTTON_PRESSED_COL : hover ? this.t.BUTTON_HOVER_COL : this.t.BUTTON_COL);
		var g = this.g;
		var x = this._x + this.buttonOffsetY;
		var y = this._y + this.buttonOffsetY;
		var w = this._w - this.buttonOffsetY * 2;
		var h = this.t.BUTTON_H * this.SCALE;
		var strength = 0.0;
		if(strength == 0.0) {
			strength = this.t.LINE_STRENGTH * this.SCALE;
		}
		if(this.t.FILL_BUTTON_BG) {
			g.fillRect(x,y,w,h);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		this.g.set_color(this.t.BUTTON_TEXT_COL);
		this.drawString(this.g,text,this.t.TEXT_OFFSET,0,align);
		this.endElement();
		return released;
	}
	,check: function(handle,text) {
		if(!this.isVisible(this.t.ELEMENT_H * this.SCALE)) {
			this.endElement();
			return handle.selected;
		}
		if(this.getReleased()) {
			handle.selected = !handle.selected;
			handle.changed = this.changed = true;
		} else {
			handle.changed = false;
		}
		var hover = this.getHover();
		this.drawCheck(handle.selected,hover);
		this.g.set_color(this.t.TEXT_COL);
		this.drawString(this.g,text,this.titleOffsetX,0,0);
		this.endElement();
		return handle.selected;
	}
	,inlineRadio: function(handle,texts) {
		if(!this.isVisible(this.t.ELEMENT_H * this.SCALE)) {
			this.endElement();
			return handle.position;
		}
		if(this.getReleased()) {
			if(++handle.position >= texts.length) {
				handle.position = 0;
			}
			handle.changed = this.changed = true;
		} else {
			handle.changed = false;
		}
		var hover = this.getHover();
		this.drawInlineRadio(texts[handle.position],hover);
		this.endElement();
		return handle.position;
	}
	,combo: function(handle,texts,label,showLabel,align) {
		if(align == null) {
			align = 0;
		}
		if(showLabel == null) {
			showLabel = false;
		}
		if(label == null) {
			label = "";
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.SCALE)) {
			this.endElement();
			return handle.position;
		}
		if(this.getReleased()) {
			if(this.comboSelectedHandle == null) {
				this.inputEnabled = false;
				this.comboSelectedHandle = handle;
				this.comboSelectedWindow = this.currentWindow;
				this.comboSelectedAlign = align;
				this.comboSelectedTexts = texts;
				this.comboSelectedLabel = label;
				this.comboSelectedX = this._x + this._windowX | 0;
				this.comboSelectedY = this._y + this._windowY + this.t.ELEMENT_H * this.SCALE + this.t.ELEMENT_OFFSET * this.SCALE | 0;
				this.comboSelectedW = this._w | 0;
			}
		}
		if(handle == this.submitComboHandle) {
			handle.position = this.comboToSubmit;
			this.submitComboHandle = null;
			handle.changed = this.changed = true;
		} else {
			handle.changed = false;
		}
		var hover = this.getHover();
		if(hover) {
			this.g.set_color(this.t.ACCENT_HOVER_COL);
			var g = this.g;
			var x = this._x + this.buttonOffsetY;
			var y = this._y + this.buttonOffsetY;
			var w = this._w - this.buttonOffsetY * 2;
			var h = this.t.BUTTON_H * this.SCALE;
			var strength = 0.0;
			if(strength == 0.0) {
				strength = this.t.LINE_STRENGTH * this.SCALE;
			}
			if(this.t.FILL_ACCENT_BG) {
				g.fillRect(x,y,w,h);
			} else {
				g.drawRect(x,y,w,h,strength);
			}
		} else {
			this.g.set_color(this.t.ACCENT_COL);
			var g1 = this.g;
			var x1 = this._x + this.buttonOffsetY;
			var y1 = this._y + this.buttonOffsetY;
			var w1 = this._w - this.buttonOffsetY * 2;
			var h1 = this.t.BUTTON_H * this.SCALE;
			var strength1 = 0.0;
			if(strength1 == 0.0) {
				strength1 = this.t.LINE_STRENGTH * this.SCALE;
			}
			if(this.t.FILL_ACCENT_BG) {
				g1.fillRect(x1,y1,w1,h1);
			} else {
				g1.drawRect(x1,y1,w1,h1,strength1);
			}
		}
		var x2 = this._x + this._w - this.arrowOffsetX - 8;
		var y2 = this._y + this.arrowOffsetY + 3;
		this.g.fillTriangle(x2,y2,x2 + this.t.ARROW_SIZE * this.SCALE,y2,x2 + this.t.ARROW_SIZE * this.SCALE / 2,y2 + this.t.ARROW_SIZE * this.SCALE / 2);
		this.g.set_color(this.t.TEXT_COL);
		if(showLabel && label != "") {
			if(align == 0) {
				this._x -= 15;
			}
			this.drawString(this.g,label,null,0,align == 0 ? 2 : 0);
			if(align == 0) {
				this._x += 15;
			}
		}
		if(align == 2) {
			this._x -= 15;
		}
		this.drawString(this.g,texts[handle.position],null,0,align);
		if(align == 2) {
			this._x += 15;
		}
		this.endElement();
		return handle.position;
	}
	,slider: function(handle,text,from,to,filled,precision,displayValue,align,textEdit) {
		if(textEdit == null) {
			textEdit = true;
		}
		if(align == null) {
			align = 2;
		}
		if(displayValue == null) {
			displayValue = true;
		}
		if(precision == null) {
			precision = 100;
		}
		if(filled == null) {
			filled = false;
		}
		if(to == null) {
			to = 1.0;
		}
		if(from == null) {
			from = 0.0;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.SCALE)) {
			this.endElement();
			return handle.value;
		}
		if(this.getStarted()) {
			handle.scrolling = true;
			this.scrollingHandle = handle;
			this.isScrolling = true;
		}
		handle.changed = false;
		if(handle.scrolling) {
			var range = to - from;
			var sliderX = this._x + this._windowX + this.buttonOffsetY;
			var sliderW = this._w - this.buttonOffsetY * 2;
			var step = range / sliderW;
			var value = from + (this.inputX - sliderX) * step;
			handle.value = Math.round(value * precision) / precision;
			if(handle.value < from) {
				handle.value = from;
			} else if(handle.value > to) {
				handle.value = to;
			}
			handle.changed = this.changed = true;
		}
		var hover = this.getHover();
		this.drawSlider(handle.value,from,to,filled,hover);
		var startEdit = (this.getReleased() || this.tabPressed) && textEdit;
		if(startEdit) {
			handle.text = handle.value + "";
			this.startTextEdit(handle);
		}
		var lalign = align == 0 ? 2 : 0;
		if(this.textSelectedHandle == handle) {
			this.updateTextEdit(lalign);
		}
		if(this.submitTextHandle == handle) {
			this.submitTextEdit();
			handle.value = parseFloat(handle.text);
		}
		this.g.set_color(this.t.LABEL_COL);
		this.drawString(this.g,text,null,0,align);
		if(displayValue) {
			this.g.set_color(this.t.TEXT_COL);
			if(this.textSelectedHandle != handle) {
				this.drawString(this.g,handle.value + "",null,0,lalign);
			} else {
				this.drawString(this.g,this.textSelectedCurrentText,null,0,lalign);
			}
		}
		this.endElement();
		return handle.value;
	}
	,separator: function(h,fill) {
		if(fill == null) {
			fill = true;
		}
		if(h == null) {
			h = 4;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.SCALE)) {
			this._y += h * this.SCALE;
			return;
		}
		if(fill) {
			this.g.set_color(this.t.SEPARATOR_COL);
			this.g.fillRect(this._x,this._y,this._w,h * this.SCALE);
		}
		this._y += h * this.SCALE;
	}
	,drawArrow: function(selected) {
		var x = this._x + this.arrowOffsetX;
		var y = this._y + this.arrowOffsetY;
		this.g.set_color(this.t.ARROW_COL);
		if(selected) {
			this.g.fillTriangle(x,y,x + this.t.ARROW_SIZE * this.SCALE,y,x + this.t.ARROW_SIZE * this.SCALE / 2,y + this.t.ARROW_SIZE * this.SCALE);
		} else {
			this.g.fillTriangle(x,y,x,y + this.t.ARROW_SIZE * this.SCALE,x + this.t.ARROW_SIZE * this.SCALE,y + this.t.ARROW_SIZE * this.SCALE / 2);
		}
	}
	,drawTree: function(selected) {
		var SIGN_W = 7;
		var x = this._x + this.arrowOffsetX + 1;
		var y = this._y + this.arrowOffsetY + 1;
		this.g.set_color(this.t.ARROW_COL);
		if(selected) {
			this.g.fillRect(x,y + SIGN_W / 2 - 1,SIGN_W,SIGN_W / 8);
		} else {
			this.g.fillRect(x,y + SIGN_W / 2 - 1,SIGN_W,SIGN_W / 8);
			this.g.fillRect(x + SIGN_W / 2 - 1,y,SIGN_W / 8,SIGN_W);
		}
	}
	,drawCheck: function(selected,hover) {
		var x = this._x + this.checkOffsetX;
		var y = this._y + this.checkOffsetY;
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		var g = this.g;
		var w = this.t.CHECK_SIZE * this.SCALE;
		var h = this.t.CHECK_SIZE * this.SCALE;
		var strength = 0.0;
		if(strength == 0.0) {
			strength = this.t.LINE_STRENGTH * this.SCALE;
		}
		if(this.t.FILL_ACCENT_BG) {
			g.fillRect(x,y,w,h);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		if(selected) {
			this.g.set_color(-1);
			this.g.drawImage(this.checkSelectImage,x + this.checkSelectOffsetX,y + this.checkSelectOffsetY);
		}
	}
	,drawInlineRadio: function(text,hover) {
		if(hover) {
			this.g.set_color(this.t.ACCENT_HOVER_COL);
			this.g.fillRect(this._x + this.buttonOffsetY,this._y + this.buttonOffsetY,this._w - this.buttonOffsetY * 2,this.t.BUTTON_H * this.SCALE);
		} else {
			this.g.set_color(this.t.ACCENT_COL);
			this.g.drawRect(this._x + this.buttonOffsetY,this._y + this.buttonOffsetY,this._w - this.buttonOffsetY * 2,this.t.BUTTON_H * this.SCALE);
		}
		this.g.set_color(this.t.TEXT_COL);
		this.drawString(this.g,text,this.titleOffsetX,0,1);
	}
	,drawSlider: function(value,from,to,filled,hover) {
		var x = this._x + this.buttonOffsetY;
		var y = this._y + this.buttonOffsetY;
		var w = this._w - this.buttonOffsetY * 2;
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		var g = this.g;
		var h = this.t.BUTTON_H * this.SCALE;
		var strength = 0.0;
		if(strength == 0.0) {
			strength = this.t.LINE_STRENGTH * this.SCALE;
		}
		if(this.t.FILL_ACCENT_BG) {
			g.fillRect(x,y,w,h);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		var offset = (value - from) / (to - from);
		var barW = 8 * this.SCALE;
		var sliderX = filled ? x : x + (w - barW) * offset;
		var sliderW = filled ? w * offset : barW;
		sliderW = Math.min(sliderW,w);
		this.g.fillRect(sliderX,y,sliderW,this.t.BUTTON_H * this.SCALE);
	}
	,drawCombo: function() {
		var _g = this.g;
		this.globalG.set_color(-14540254);
		var elementSize = this.t.ELEMENT_H * this.SCALE + this.t.ELEMENT_OFFSET * this.SCALE;
		this.globalG.begin(false);
		this.globalG.fillRect(this.comboSelectedX,this.comboSelectedY,this.comboSelectedW,(this.comboSelectedTexts.length + 1) * elementSize);
		this.beginLayout(this.globalG,this.comboSelectedX,this.comboSelectedY,this.comboSelectedW);
		this.inputEnabled = true;
		var _g1 = 0;
		var _g11 = this.comboSelectedTexts.length;
		while(_g1 < _g11) {
			var i = _g1++;
			if(this.button(this.comboSelectedTexts[i],this.comboSelectedAlign)) {
				this.comboToSubmit = i;
				this.submitComboHandle = this.comboSelectedHandle;
				if(this.comboSelectedWindow != null) {
					this.comboSelectedWindow.redraws = 2;
				}
				break;
			}
		}
		this.text(this.comboSelectedLabel);
		if(this.inputReleased && !zui_Zui.comboFirst) {
			this.comboSelectedHandle = null;
			zui_Zui.comboFirst = true;
		} else {
			zui_Zui.comboFirst = false;
		}
		this.inputEnabled = this.comboSelectedHandle == null;
		this.endLayout(false);
		this.globalG.end();
		this.g = _g;
	}
	,drawTooltip: function() {
		this.globalG.set_color(this.t.TEXT_COL);
		var lines = this.tooltipText.split("\n");
		var tooltipW = 0.0;
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			var lineTooltipW = this.ops.font.width(this.fontSize,line);
			if(lineTooltipW > tooltipW) {
				tooltipW = lineTooltipW;
			}
		}
		this.tooltipX = Math.min(this.tooltipX,kha_System.windowWidth() - tooltipW - 20);
		this.globalG.fillRect(this.tooltipX,this.tooltipY,tooltipW + 20,this.t.ELEMENT_H * this.SCALE * lines.length * 0.6);
		this.globalG.set_font(this.ops.font);
		this.globalG.set_fontSize(this.fontSize);
		this.globalG.set_color(this.t.ACCENT_COL);
		var _g1 = 0;
		var _g2 = lines.length;
		while(_g1 < _g2) {
			var i = _g1++;
			this.globalG.drawString(lines[i],this.tooltipX + 5,this.tooltipY + i * this.fontSize);
		}
	}
	,drawTooltipImage: function() {
		this.tooltipX = Math.min(this.tooltipX,kha_System.windowWidth() - this.tooltipImg.get_width() - 20);
		this.globalG.set_color(-16777216);
		this.globalG.fillRect(this.tooltipX,this.tooltipY,this.tooltipImg.get_width(),this.tooltipImg.get_height());
		this.globalG.set_color(-1);
		if(this.tooltipInvertY) {
			this.globalG.drawScaledImage(this.tooltipImg,this.tooltipX,this.tooltipY + this.tooltipImg.get_height(),this.tooltipImg.get_width(),-this.tooltipImg.get_height());
		} else {
			this.globalG.drawImage(this.tooltipImg,this.tooltipX,this.tooltipY);
		}
	}
	,drawString: function(g,text,xOffset,yOffset,align) {
		if(align == null) {
			align = 0;
		}
		if(yOffset == null) {
			yOffset = 0;
		}
		var maxChars = this._w / (this.fontSize / 2 | 0) | 0;
		if(text.length > maxChars) {
			text = text.substring(0,maxChars) + "..";
		}
		if(xOffset == null) {
			xOffset = this.t.TEXT_OFFSET;
		}
		xOffset *= this.SCALE;
		g.set_font(this.ops.font);
		g.set_fontSize(this.fontSize);
		if(align == 1) {
			xOffset = this._w / 2 - this.ops.font.width(this.fontSize,text) / 2;
		} else if(align == 2) {
			xOffset = this._w - this.ops.font.width(this.fontSize,text) - this.t.TEXT_OFFSET;
		}
		g.drawString(text,this._x + xOffset,this._y + this.fontOffsetY + yOffset);
	}
	,endElement: function(elementSize) {
		if(this.currentWindow == null) {
			this._y += this.t.ELEMENT_H * this.SCALE + this.t.ELEMENT_OFFSET * this.SCALE;
			return;
		}
		if(this.currentWindow.layout == 0) {
			if(this.curRatio == -1 || this.ratios != null && this.curRatio == this.ratios.length - 1) {
				if(elementSize == null) {
					elementSize = this.t.ELEMENT_H * this.SCALE + this.t.ELEMENT_OFFSET * this.SCALE;
				}
				this._y += elementSize;
				if(this.ratios != null && this.curRatio == this.ratios.length - 1) {
					this.curRatio = -1;
					this.ratios = null;
					this._x = this.xBeforeSplit;
					this._w = this.wBeforeSplit;
				}
			} else {
				this.curRatio++;
				this._x += this._w;
				this._w = this.wBeforeSplit * this.ratios[this.curRatio] | 0;
			}
		} else {
			this._x += this._w + this.t.ELEMENT_OFFSET * this.SCALE;
		}
	}
	,row: function(ratios) {
		this.ratios = ratios;
		this.curRatio = 0;
		this.xBeforeSplit = this._x;
		this.wBeforeSplit = this._w;
		this._w = this._w * ratios[this.curRatio] | 0;
	}
	,indent: function() {
		this._x += this.t.TAB_W * this.SCALE | 0;
		this._w -= this.t.TAB_W * this.SCALE | 0;
	}
	,unindent: function() {
		this._x -= this.t.TAB_W * this.SCALE | 0;
		this._w += this.t.TAB_W * this.SCALE | 0;
	}
	,isVisible: function(elemH) {
		if(this.currentWindow == null) {
			return true;
		}
		if(this._y + elemH > 0) {
			return this._y < this.currentWindow.texture.get_height();
		} else {
			return false;
		}
	}
	,getReleased: function(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		this.isReleased = this.inputEnabled && this.inputReleased && this.getHover(elemH) && this.getInitialHover(elemH);
		return this.isReleased;
	}
	,getPushed: function(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		this.isPushed = this.inputEnabled && this.inputDown && this.getHover(elemH) && this.getInitialHover(elemH);
		return this.isPushed;
	}
	,getStarted: function(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		this.isStarted = this.inputEnabled && this.inputStarted && this.getHover(elemH);
		return this.isStarted;
	}
	,getInitialHover: function(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		if(elemH == -1.0) {
			elemH = this.t.ELEMENT_H * this.SCALE;
		}
		if(this.inputEnabled && this.inputInitialX >= this._windowX + this._x && this.inputInitialX < this._windowX + this._x + this._w && this.inputInitialY >= this._windowY + this._y) {
			return this.inputInitialY < this._windowY + this._y + elemH;
		} else {
			return false;
		}
	}
	,getHover: function(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		if(elemH == -1.0) {
			elemH = this.t.ELEMENT_H * this.SCALE;
		}
		this.isHovered = this.inputEnabled && this.inputX >= this._windowX + this._x && this.inputX < this._windowX + this._x + this._w && this.inputY >= this._windowY + this._y && this.inputY < this._windowY + this._y + elemH;
		return this.isHovered;
	}
	,getInputInRect: function(x,y,w,h,scale) {
		if(scale == null) {
			scale = 1.0;
		}
		if(this.inputEnabled && this.inputX >= x * scale && this.inputX < (x + w) * scale && this.inputY >= y * scale) {
			return this.inputY < (y + h) * scale;
		} else {
			return false;
		}
	}
	,onMouseDown: function(button,x,y) {
		if(button == 0) {
			this.inputStarted = true;
		} else {
			this.inputStartedR = true;
		}
		if(button == 0) {
			this.inputDown = true;
		} else {
			this.inputDownR = true;
		}
		var sx = x * this.ops.scaleTexture | 0;
		var sy = y * this.ops.scaleTexture | 0;
		this.setInputPosition(sx,sy);
		this.inputInitialX = sx;
		this.inputInitialY = sy;
	}
	,onMouseUp: function(button,x,y) {
		if(button == 0) {
			if(this.isScrolling) {
				this.isScrolling = false;
				if(this.scrollingHandle != null) {
					this.scrollingHandle.scrolling = false;
				}
				if(x == this.inputInitialX && y == this.inputInitialY) {
					this.inputReleased = true;
				}
			} else {
				this.inputReleased = true;
			}
		} else if(button == 1) {
			this.inputReleasedR = true;
		}
		if(button == 0) {
			this.inputDown = false;
		} else {
			this.inputDownR = false;
		}
		this.setInputPosition(x * this.ops.scaleTexture | 0,y * this.ops.scaleTexture | 0);
		this.deselectText();
	}
	,onMouseMove: function(x,y,movementX,movementY) {
		this.setInputPosition(x * this.ops.scaleTexture | 0,y * this.ops.scaleTexture | 0);
	}
	,onMouseWheel: function(delta) {
		this.inputWheelDelta = delta;
	}
	,setInputPosition: function(x,y) {
		this.inputDX += x - this.inputX;
		this.inputDY += y - this.inputY;
		this.inputX = x;
		this.inputY = y;
	}
	,onKeyDown: function(code) {
		this.key = code;
		this.isKeyDown = true;
		switch(code) {
		case 16:
			this.isShiftDown = true;
			break;
		case 17:
			this.isCtrlDown = true;
			break;
		case 18:
			this.isAltDown = true;
			break;
		case 32:
			this.char = " ";
			break;
		default:
		}
	}
	,onKeyUp: function(code) {
		switch(code) {
		case 16:
			this.isShiftDown = false;
			break;
		case 17:
			this.isCtrlDown = false;
			break;
		case 18:
			this.isAltDown = false;
			break;
		default:
		}
	}
	,onKeyPress: function(char) {
		this.char = char;
		this.isKeyDown = true;
	}
	,onCut: function() {
		zui_Zui.isCut = true;
		return this.onCopy();
	}
	,onCopy: function() {
		return zui_Zui.textToCopy;
	}
	,onPaste: function(s) {
		zui_Zui.textToPaste = s;
	}
	,resize: function(handle,w,h,khaWindowId) {
		if(khaWindowId == null) {
			khaWindowId = 0;
		}
		handle.redraws = 2;
		if(handle.texture != null) {
			handle.texture.unload();
		}
		handle.texture = kha_Image.createRenderTarget(w,h,0,0,1,khaWindowId);
		handle.texture.get_g2().set_imageScaleQuality(kha_graphics2_ImageScaleQuality.High);
	}
	,__class__: zui_Zui
};
var $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html__$ArrayBuffer_ArrayBufferCompat.sliceImpl;
}
arm_PlayerObject.cameraPitchMaxUp_Absolute = 160 * (Math.PI / 180);
arm_PlayerObject.cameraPitchMaxDown_Absolute = 35 * (Math.PI / 180);
armory_renderpath_Inc.superSample = 1.0;
armory_renderpath_Inc.pointIndex = 0;
armory_renderpath_Inc.spotIndex = 0;
armory_renderpath_RenderPathCreator.drawMeshes = armory_renderpath_RenderPathDeferred.drawMeshes;
armory_system_Event.events = new haxe_ds_StringMap();
armory_trait_WalkNavigation.enabled = true;
armory_trait_WalkNavigation.speed = 5.0;
armory_trait_WalkNavigation.keyUp = "w";
armory_trait_WalkNavigation.keyDown = "s";
armory_trait_WalkNavigation.keyLeft = "a";
armory_trait_WalkNavigation.keyRight = "d";
armory_trait_WalkNavigation.keyStrafeUp = "e";
armory_trait_WalkNavigation.keyStrafeDown = "q";
iron_App.traitInits = [];
iron_App.traitUpdates = [];
iron_App.traitLateUpdates = [];
iron_App.traitRenders = [];
iron_App.traitRenders2D = [];
iron_App.pauseUpdates = false;
iron_App.lastw = -1;
iron_App.lasth = -1;
iron_data_Data.cachedSceneRaws = new haxe_ds_StringMap();
iron_data_Data.cachedMeshes = new haxe_ds_StringMap();
iron_data_Data.cachedLights = new haxe_ds_StringMap();
iron_data_Data.cachedCameras = new haxe_ds_StringMap();
iron_data_Data.cachedMaterials = new haxe_ds_StringMap();
iron_data_Data.cachedParticles = new haxe_ds_StringMap();
iron_data_Data.cachedWorlds = new haxe_ds_StringMap();
iron_data_Data.cachedShaders = new haxe_ds_StringMap();
iron_data_Data.cachedBlobs = new haxe_ds_StringMap();
iron_data_Data.cachedImages = new haxe_ds_StringMap();
iron_data_Data.cachedSounds = new haxe_ds_StringMap();
iron_data_Data.cachedFonts = new haxe_ds_StringMap();
iron_data_Data.dataPath = "";
iron_data_Data.loadingMeshes = new haxe_ds_StringMap();
iron_data_Data.loadingLights = new haxe_ds_StringMap();
iron_data_Data.loadingCameras = new haxe_ds_StringMap();
iron_data_Data.loadingMaterials = new haxe_ds_StringMap();
iron_data_Data.loadingParticles = new haxe_ds_StringMap();
iron_data_Data.loadingWorlds = new haxe_ds_StringMap();
iron_data_Data.loadingShaders = new haxe_ds_StringMap();
iron_data_Data.loadingSceneRaws = new haxe_ds_StringMap();
iron_data_Data.assetsLoaded = 0;
iron_data_Data.loadingBlobs = new haxe_ds_StringMap();
iron_data_Data.loadingImages = new haxe_ds_StringMap();
iron_data_Data.loadingSounds = new haxe_ds_StringMap();
iron_data_Data.loadingFonts = new haxe_ds_StringMap();
iron_system_Input.occupied = false;
iron_system_Input.gamepads = [];
iron_system_Input.registered = false;
iron_object_Object.uidCounter = 0;
iron_object_Object.seed = 1;
iron_Scene.uidCounter = 0;
iron_Scene.framePassed = true;
iron_system_Time.scale = 1.0;
iron_system_Time.last = 0.0;
iron_system_Time.realDelta = 0.0;
armory_trait_internal_Bridge.App = iron_App;
armory_trait_internal_Bridge.Scene = iron_Scene;
armory_trait_internal_Bridge.Time = iron_system_Time;
armory_trait_internal_Bridge.Input = iron_system_Input;
armory_trait_internal_Bridge.Object = iron_object_Object;
armory_trait_internal_Bridge.Data = iron_data_Data;
armory_trait_internal_DebugConsole.lrow = [0.5,0.5];
armory_trait_internal_DebugConsole.row4 = [0.25,0.25,0.25,0.25];
armory_trait_internal_DebugConsole.f = 1.0;
armory_trait_internal_DebugConsole.watchNodes = [];
armory_trait_internal_DebugConsole.lastTraces = [""];
armory_trait_internal_DebugDraw.vx = new iron_math_Vec4();
armory_trait_internal_DebugDraw.vy = new iron_math_Vec4();
armory_trait_internal_DebugDraw.vz = new iron_math_Vec4();
armory_trait_internal_DebugDraw.v1 = new iron_math_Vec4();
armory_trait_internal_DebugDraw.v2 = new iron_math_Vec4();
armory_trait_internal_DebugDraw.t = new iron_math_Vec4();
armory_trait_physics_bullet_PhysicsWorld.sceneRemoved = false;
armory_trait_physics_bullet_PhysicsWorld.nullvec = true;
armory_trait_physics_bullet_PhysicsWorld.physTime = 0.0;
iron_math_Mat4.helpVec = new iron_math_Vec4();
iron_math_Mat4.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_math_Quat.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
armory_trait_physics_bullet_RigidBody.nextId = 0;
armory_trait_physics_bullet_RigidBody.ammoArray = -1;
armory_trait_physics_bullet_RigidBody.nullvec = true;
armory_trait_physics_bullet_RigidBody.quat = new iron_math_Quat();
armory_trait_physics_bullet_RigidBody.convexHullCache = new haxe_ds_ObjectMap();
armory_trait_physics_bullet_RigidBody.triangleMeshCache = new haxe_ds_ObjectMap();
armory_trait_physics_bullet_RigidBody.usersCache = new haxe_ds_ObjectMap();
custom_$lib_CustomGame.canSpawnThings = true;
custom_$lib_CustomGame.playerInvincible = false;
custom_$lib_CustomGame.superArrowDamage = false;
custom_$lib_CustomGame.playerRapidArrow = false;
custom_$lib_CustomGame.playerSpeedy = false;
custom_$lib_CustomGame.playerSuperJump = false;
custom_$lib_CustomGame.arcadeModeDuration = 180;
custom_$lib_CustomGame.gameEndTime = 0;
custom_$lib_CustomGame.playerSpeedFactor = 1.0;
custom_$lib_CustomGame.currentGameMode = 0;
custom_$lib_CustomGame.currentEnemyCount = 0;
custom_$lib_CustomGame.currentAllyCount = 0;
custom_$lib_CustomGame.currentSceneName = "";
custom_$lib_CustomGame.currentSceneStartTime = 0;
custom_$lib_CustomGame.aryStr_resource_person_materialList = ["player_mat","ally_mat","enemy_mat"];
custom_$lib_CustomGame.aryStr_resource_arrow_materialList = ["player_arrow_mat","ally_arrow_mat","enemy_arrow_mat"];
custom_$lib_CustomLib.tempQ = new iron_math_Quat();
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
iron_RenderPath.drawCalls = 0;
iron_RenderPath.batchBuckets = 0;
iron_RenderPath.batchCalls = 0;
iron_RenderPath.culled = 0;
iron_RenderPath.numTrisMesh = 0;
iron_RenderPath.numTrisShadow = 0;
iron_data_ConstData.skydomeIndices = [0,1,2,0,3,4,3,5,6,5,7,8,7,9,10,9,11,12,13,14,15,11,16,17,13,18,2,14,2,19,2,1,20,1,4,21,4,6,22,6,8,23,8,10,24,10,12,25,14,26,15,17,27,25,22,23,28,24,29,28,24,25,30,26,31,15,25,27,32,26,19,33,19,20,34,20,21,35,21,22,36,33,34,37,34,35,38,35,36,39,36,28,40,28,29,41,30,42,41,31,43,15,30,32,44,31,33,45,40,41,46,42,47,46,43,48,15,42,44,49,43,45,50,45,37,51,37,38,52,39,53,52,39,40,54,50,51,55,51,52,56,53,57,56,53,54,58,46,59,58,46,47,60,48,61,15,47,49,62,48,50,63,59,64,65,59,60,66,61,67,15,60,62,68,61,63,69,63,55,70,56,71,70,56,57,72,57,58,65,70,71,73,71,72,74,72,65,75,64,76,75,64,66,77,67,78,15,68,79,77,67,69,80,69,70,81,76,77,82,78,83,15,77,79,84,80,85,83,80,81,86,81,73,87,74,88,87,74,75,89,76,90,89,87,88,91,88,89,92,90,93,92,90,82,94,83,95,15,82,84,96,83,85,97,86,98,97,86,87,99,95,100,15,96,101,102,95,97,103,97,98,104,98,99,105,91,106,105,91,92,107,93,108,107,93,94,102,105,106,109,106,107,110,108,111,110,108,102,112,100,113,15,102,101,114,100,103,115,103,104,116,104,105,117,114,118,119,113,115,120,115,116,121,117,122,121,109,123,122,109,110,124,111,125,124,111,112,119,113,126,15,123,124,127,125,128,127,125,119,129,126,130,15,119,118,131,126,120,132,121,133,132,121,122,134,122,123,135,130,132,136,132,133,137,133,134,138,134,135,139,135,127,140,128,141,140,128,129,142,130,143,15,129,131,144,139,140,145,141,146,145,141,142,147,143,148,15,142,144,149,143,136,150,137,151,150,138,152,151,138,139,153,150,151,154,152,155,154,153,156,155,153,145,157,146,158,157,146,147,159,148,160,15,147,149,161,148,150,162,158,163,164,158,159,165,160,166,15,161,167,165,160,162,168,162,154,169,155,170,169,156,171,170,156,157,164,169,170,172,171,173,172,171,164,174,163,175,174,163,165,176,166,177,15,165,167,178,166,168,179,168,169,180,176,181,182,177,183,15,176,178,184,177,179,185,179,180,186,172,187,186,173,188,187,173,174,189,175,182,189,187,190,191,188,192,190,188,189,193,182,194,193,182,181,195,183,196,15,181,184,197,183,185,198,185,186,191,194,195,199,196,200,15,195,197,201,196,198,202,198,191,203,190,204,203,192,205,204,192,193,206,194,207,206,205,208,209,205,206,210,207,211,210,207,199,212,200,213,15,199,201,214,202,215,213,202,203,216,204,209,216,213,217,15,214,218,219,215,220,217,215,216,221,209,222,221,209,208,223,208,210,224,211,225,224,211,212,219,223,226,227,223,224,228,225,229,228,225,219,230,217,231,15,218,232,230,220,233,231,220,221,234,222,227,234,230,232,235,231,233,236,233,234,237,227,238,237,227,226,239,226,228,240,229,241,240,229,230,242,231,243,15,239,240,244,241,245,244,241,242,246,243,247,15,235,248,246,243,236,249,237,250,249,238,251,250,239,252,251,249,250,253,250,251,254,252,255,254,252,244,256,245,257,256,245,246,258,247,259,15,248,260,258,247,249,261,257,262,263,258,264,262,259,265,15,258,260,266,259,261,267,261,253,268,253,254,269,255,270,269,255,256,263,268,271,272,269,273,271,270,274,273,270,263,275,262,276,275,262,264,277,265,278,15,264,266,279,267,272,278,276,280,281,276,277,282,278,283,15,277,279,284,278,272,285,272,271,286,271,273,287,274,288,287,274,275,281,287,3,0,288,5,3,281,7,5,280,9,7,282,11,9,283,13,15,282,284,16,285,18,13,286,0,18,0,2,18,0,4,1,3,6,4,5,8,6,7,10,8,9,12,10,11,17,12,13,2,14,14,19,26,2,20,19,1,21,20,4,22,21,6,23,22,8,24,23,10,25,24,17,25,12,22,28,36,24,28,23,24,30,29,25,32,30,26,33,31,19,34,33,20,35,34,21,36,35,33,37,45,34,38,37,35,39,38,36,40,39,28,41,40,30,41,29,30,44,42,31,45,43,40,46,54,42,46,41,42,49,47,43,50,48,45,51,50,37,52,51,39,52,38,39,54,53,50,55,63,51,56,55,53,56,52,53,58,57,46,58,54,46,60,59,47,62,60,48,63,61,59,65,58,59,66,64,60,68,66,61,69,67,63,70,69,56,70,55,56,72,71,57,65,72,70,73,81,71,74,73,72,75,74,64,75,65,64,77,76,68,77,66,67,80,78,69,81,80,76,82,90,77,84,82,80,83,78,80,86,85,81,87,86,74,87,73,74,89,88,76,89,75,87,91,99,88,92,91,90,92,89,90,94,93,82,96,94,83,97,95,86,97,85,86,99,98,96,102,94,95,103,100,97,104,103,98,105,104,91,105,99,91,107,106,93,107,92,93,102,108,105,109,117,106,110,109,108,110,107,108,112,111,102,114,112,100,115,113,103,116,115,104,117,116,114,119,112,113,120,126,115,121,120,117,121,116,109,122,117,109,124,123,111,124,110,111,119,125,123,127,135,125,127,124,125,129,128,119,131,129,126,132,130,121,132,120,121,134,133,122,135,134,130,136,143,132,137,136,133,138,137,134,139,138,135,140,139,128,140,127,128,142,141,129,144,142,139,145,153,141,145,140,141,147,146,142,149,147,143,150,148,137,150,136,138,151,137,138,153,152,150,154,162,152,154,151,153,155,152,153,157,156,146,157,145,146,159,158,147,161,159,148,162,160,158,164,157,158,165,163,161,165,159,160,168,166,162,169,168,155,169,154,156,170,155,156,164,171,169,172,180,171,172,170,171,174,173,163,174,164,163,176,175,165,178,176,166,179,177,168,180,179,176,182,175,176,184,181,177,185,183,179,186,185,172,186,180,173,187,172,173,189,188,175,189,174,187,191,186,188,190,187,188,193,192,182,193,189,182,195,194,181,197,195,183,198,196,185,191,198,194,199,207,195,201,199,196,202,200,198,203,202,190,203,191,192,204,190,192,206,205,194,206,193,205,209,204,205,210,208,207,210,206,207,212,211,199,214,212,202,213,200,202,216,215,204,216,203,214,219,212,215,217,213,215,221,220,209,221,216,209,223,222,208,224,223,211,224,210,211,219,225,223,227,222,223,228,226,225,228,224,225,230,229,218,230,219,220,231,217,220,234,233,222,234,221,230,235,242,231,236,243,233,237,236,227,237,234,227,239,238,226,240,239,229,240,228,229,242,241,239,244,252,241,244,240,241,246,245,235,246,242,243,249,247,237,249,236,238,250,237,239,251,238,249,253,261,250,254,253,252,254,251,252,256,255,245,256,244,245,258,257,248,258,246,247,261,259,257,263,256,258,262,257,258,266,264,259,267,265,261,268,267,253,269,268,255,269,254,255,263,270,268,272,267,269,271,268,270,273,269,270,275,274,262,275,263,262,277,276,264,279,277,267,278,265,276,281,275,276,282,280,277,284,282,278,285,283,272,286,285,271,287,286,274,287,273,274,281,288,287,0,286,288,3,287,281,5,288,280,7,281,282,9,280,282,16,11,285,13,283,286,18,285,84,289,96,96,289,101,101,289,114,114,289,118,118,289,131,144,131,289,149,144,289,149,289,161,161,289,167,167,289,178,178,289,184,184,289,197,197,289,201,201,289,214,214,289,218,218,289,232,232,289,235,235,289,248,260,248,289,260,289,266,266,289,279,279,289,284,284,289,16,16,289,17,27,17,289,27,289,32,44,32,289,44,289,49,49,289,62,62,289,68,68,289,79,79,289,84];
iron_data_ConstData.skydomePos = [-0.55557,0.0,0.83147,-0.544895,0.108386,0.83147,-0.37533,0.074658,0.92388,-0.707107,0.0,0.707107,-0.69352,0.13795,0.707107,-0.83147,0.0,0.55557,-0.815493,0.162212,0.55557,-0.92388,0.0,0.382683,-0.906127,0.18024,0.382683,-0.980785,0.0,0.19509,-0.96194,0.191342,0.19509,-1.0,0.0,0.0,-0.980785,0.19509,0.0,-0.19509,0.0,0.980785,-0.191342,0.03806,0.980785,0.0,0.0,1.,-0.980785,0.0,-0.28234,-0.96194,0.191342,-0.28234,-0.382683,0.0,0.92388,-0.353553,0.146447,0.92388,-0.51328,0.212608,0.83147,-0.653281,0.270598,0.707107,-0.768178,0.31819,0.55557,-0.853553,0.353553,0.382683,-0.906127,0.37533,0.19509,-0.923879,0.382684,0.0,-0.18024,0.074658,0.980785,-0.906127,0.37533,-0.28234,-0.768178,0.51328,0.382683,-0.815493,0.544895,0.19509,-0.831469,0.55557,0.0,-0.162212,0.108387,0.980785,-0.815493,0.544895,-0.28234,-0.31819,0.212608,0.92388,-0.46194,0.308658,0.83147,-0.587938,0.392848,0.707107,-0.691342,0.46194,0.55557,-0.392847,0.392848,0.83147,-0.5,0.5,0.707107,-0.587938,0.587938,0.55557,-0.653281,0.653282,0.382683,-0.69352,0.69352,0.19509,-0.707107,0.707107,0.0,-0.13795,0.13795,0.980785,-0.69352,0.69352,-0.28234,-0.270598,0.270598,0.92388,-0.544895,0.815493,0.19509,-0.55557,0.83147,0.0,-0.108386,0.162212,0.980785,-0.544895,0.815493,-0.28234,-0.212607,0.31819,0.92388,-0.308658,0.46194,0.83147,-0.392847,0.587938,0.707107,-0.46194,0.691342,0.55557,-0.51328,0.768178,0.382683,-0.212607,0.51328,0.83147,-0.270598,0.653282,0.707107,-0.318189,0.768178,0.55557,-0.353553,0.853554,0.382683,-0.37533,0.906128,0.19509,-0.382683,0.92388,0.0,-0.074658,0.18024,0.980785,-0.37533,0.906128,-0.28234,-0.146446,0.353554,0.92388,-0.191341,0.96194,0.19509,-0.18024,0.906128,0.382683,-0.19509,0.980785,0.0,-0.03806,0.191342,0.980785,-0.191341,0.96194,-0.28234,-0.074658,0.375331,0.92388,-0.108386,0.544895,0.83147,-0.137949,0.69352,0.707107,-0.162211,0.815493,0.55557,0.0,0.707107,0.707107,0.0,0.83147,0.55557,0.0,0.92388,0.382683,0.0,0.980785,0.19509,0.0,1.,0.0,0.0,0.195091,0.980785,0.0,0.980785,-0.28234,0.0,0.382684,0.92388,0.0,0.55557,0.83147,0.195091,0.980785,0.0,0.038061,0.191342,0.980785,0.191342,0.96194,-0.28234,0.074658,0.375331,0.92388,0.108387,0.544895,0.83147,0.13795,0.69352,0.707107,0.162212,0.815493,0.55557,0.18024,0.906128,0.382683,0.191342,0.96194,0.19509,0.31819,0.768178,0.55557,0.353554,0.853554,0.382683,0.375331,0.906127,0.19509,0.382684,0.92388,0.0,0.074658,0.18024,0.980785,0.375331,0.906127,-0.28234,0.146447,0.353554,0.92388,0.212608,0.51328,0.83147,0.270598,0.653282,0.707107,0.108387,0.162212,0.980785,0.544895,0.815493,-0.28234,0.555571,0.83147,0.0,0.212608,0.31819,0.92388,0.308659,0.46194,0.83147,0.392848,0.587938,0.707107,0.46194,0.691342,0.55557,0.51328,0.768178,0.382683,0.544895,0.815493,0.19509,0.587938,0.587938,0.55557,0.653282,0.653282,0.382683,0.69352,0.69352,0.19509,0.707107,0.707107,0.0,0.13795,0.13795,0.980785,0.69352,0.69352,-0.28234,0.270599,0.270598,0.92388,0.392848,0.392848,0.83147,0.5,0.5,0.707107,0.815493,0.544895,-0.28234,0.83147,0.55557,0.0,0.31819,0.212608,0.92388,0.46194,0.308658,0.83147,0.587938,0.392848,0.707107,0.691342,0.46194,0.55557,0.768178,0.51328,0.382683,0.815493,0.544895,0.19509,0.162212,0.108386,0.980785,0.853554,0.353553,0.382683,0.906128,0.37533,0.19509,0.92388,0.382683,0.0,0.18024,0.074658,0.980785,0.906128,0.37533,-0.28234,0.353554,0.146447,0.92388,0.51328,0.212608,0.83147,0.653282,0.270598,0.707107,0.768178,0.31819,0.55557,0.375331,0.074658,0.92388,0.544896,0.108386,0.83147,0.69352,0.13795,0.707107,0.815493,0.162212,0.55557,0.906128,0.18024,0.382683,0.96194,0.191342,0.19509,0.980786,0.19509,0.0,0.191342,0.03806,0.980785,0.96194,0.191342,-0.28234,0.92388,0.0,0.382683,0.980785,0.0,0.19509,1.,0.0,0.0,0.195091,0.0,0.980785,0.980785,0.0,-0.28234,0.382684,0.0,0.92388,0.555571,0.0,0.83147,0.707107,0.0,0.707107,0.83147,0.0,0.55557,0.544896,-0.108386,0.83147,0.69352,-0.13795,0.707107,0.815493,-0.162212,0.55557,0.906128,-0.18024,0.382683,0.96194,-0.191342,0.19509,0.980786,-0.19509,0.0,0.191342,-0.03806,0.980785,0.96194,-0.191342,-0.28234,0.375331,-0.074658,0.92388,0.906127,-0.37533,0.19509,0.853554,-0.353553,0.382683,0.92388,-0.382684,0.0,0.18024,-0.074658,0.980785,0.906127,-0.37533,-0.28234,0.353554,-0.146447,0.92388,0.51328,-0.212608,0.83147,0.653282,-0.270598,0.707107,0.768178,-0.31819,0.55557,0.587938,-0.392847,0.707107,0.691342,-0.46194,0.55557,0.768178,-0.51328,0.382683,0.815493,-0.544895,0.19509,0.83147,-0.55557,0.0,0.162212,-0.108386,0.980785,0.815493,-0.544895,-0.28234,0.31819,-0.212608,0.92388,0.46194,-0.308658,0.83147,0.707107,-0.707107,0.0,0.69352,-0.69352,0.19509,0.13795,-0.13795,0.980785,0.69352,-0.69352,-0.28234,0.270598,-0.270598,0.92388,0.392848,-0.392848,0.83147,0.5,-0.5,0.707107,0.587938,-0.587938,0.55557,0.653282,-0.653281,0.382683,0.392848,-0.587938,0.707107,0.308659,-0.46194,0.83147,0.46194,-0.691342,0.55557,0.51328,-0.768178,0.382683,0.544895,-0.815493,0.19509,0.55557,-0.83147,0.0,0.108387,-0.162212,0.980785,0.544895,-0.815493,-0.28234,0.212608,-0.31819,0.92388,0.382684,-0.92388,0.0,0.074658,-0.18024,0.980785,0.37533,-0.906127,-0.28234,0.146447,-0.353553,0.92388,0.212608,-0.51328,0.83147,0.270598,-0.653281,0.707107,0.31819,-0.768177,0.55557,0.353554,-0.853553,0.382683,0.37533,-0.906127,0.19509,0.162212,-0.815493,0.55557,0.13795,-0.69352,0.707107,0.18024,-0.906127,0.382683,0.191342,-0.961939,0.19509,0.19509,-0.980785,0.0,0.038061,-0.191342,0.980785,0.191342,-0.961939,-0.28234,0.074658,-0.37533,0.92388,0.108387,-0.544895,0.83147,0.0,-0.19509,0.980785,0.0,-0.980785,-0.28234,0.0,-1.0,0.0,0.0,-0.382683,0.92388,0.0,-0.55557,0.83147,0.0,-0.707107,0.707107,0.0,-0.831469,0.55557,0.0,-0.923879,0.382683,0.0,-0.980785,0.19509,-0.162211,-0.815493,0.55557,-0.137949,-0.69352,0.707107,-0.18024,-0.906127,0.382683,-0.191342,-0.961939,0.19509,-0.19509,-0.980785,0.0,-0.03806,-0.191342,0.980785,-0.191342,-0.961939,-0.28234,-0.074658,-0.37533,0.92388,-0.108386,-0.544895,0.83147,-0.37533,-0.906127,-0.28234,-0.146446,-0.353553,0.92388,-0.212607,-0.51328,0.83147,-0.270598,-0.653281,0.707107,-0.318189,-0.768177,0.55557,-0.353553,-0.853553,0.382683,-0.37533,-0.906127,0.19509,-0.382683,-0.923879,0.0,-0.074658,-0.18024,0.980785,-0.51328,-0.768178,0.382683,-0.544895,-0.815493,0.19509,-0.55557,-0.831469,0.0,-0.108386,-0.162212,0.980785,-0.544895,-0.815493,-0.28234,-0.212607,-0.31819,0.92388,-0.308658,-0.46194,0.83147,-0.392847,-0.587938,0.707107,-0.461939,-0.691341,0.55557,-0.392847,-0.392847,0.83147,-0.5,-0.5,0.707107,-0.587937,-0.587937,0.55557,-0.653281,-0.653281,0.382683,-0.693519,-0.693519,0.19509,-0.707106,-0.707106,0.0,-0.137949,-0.13795,0.980785,-0.693519,-0.693519,-0.28234,-0.270598,-0.270598,0.92388,-0.815492,-0.544895,0.19509,-0.768177,-0.51328,0.382683,-0.831469,-0.55557,0.0,-0.162211,-0.108386,0.980785,-0.815492,-0.544895,-0.28234,-0.318189,-0.212607,0.92388,-0.461939,-0.308658,0.83147,-0.587937,-0.392847,0.707107,-0.691341,-0.461939,0.55557,-0.51328,-0.212607,0.83147,-0.353553,-0.146447,0.92388,-0.653281,-0.270598,0.707107,-0.768177,-0.318189,0.55557,-0.853553,-0.353553,0.382683,-0.906127,-0.37533,0.19509,-0.923879,-0.382683,0.0,-0.18024,-0.074658,0.980785,-0.906127,-0.37533,-0.28234,-0.961939,-0.191341,0.19509,-0.906127,-0.18024,0.382683,-0.980785,-0.19509,0.0,-0.191342,-0.03806,0.980785,-0.961939,-0.191341,-0.28234,-0.37533,-0.074658,0.92388,-0.544895,-0.108386,0.83147,-0.69352,-0.13795,0.707107,-0.815492,-0.162211,0.55557,0.0,0.0,-0.860043];
iron_data_ConstData.skydomeNor = [0.559771,0.0,-0.828639,0.548997,-0.109195,-0.828639,0.380413,-0.075655,-0.92169,0.710135,0.0,-0.704031,0.696493,-0.138524,-0.704031,0.833338,0.0,-0.552751,0.817316,-0.162572,-0.552751,0.924741,0.0,-0.380535,0.90698,-0.180395,-0.380535,0.980987,0.0,-0.193915,0.962157,-0.191382,-0.193915,0.999878,0.0,-0.015015,0.980651,-0.195044,-0.015015,0.200964,0.0,-0.979583,0.197089,-0.039186,-0.979583,0.0,0.0,-1.0,0.858486,0.0,0.512803,0.841975,-0.167455,0.512803,0.38786,0.0,-0.92169,0.358348,-0.148412,-0.92169,0.517136,-0.214209,-0.828639,0.656056,-0.271737,-0.704031,0.76989,-0.318888,-0.552751,0.854366,-0.353862,-0.380535,0.906339,-0.375408,-0.193915,0.923765,-0.382611,-0.015015,0.185644,-0.076907,-0.979583,0.793146,-0.328532,0.512803,0.768914,-0.513749,-0.380535,0.815668,-0.545,-0.193915,0.831355,-0.555498,-0.015015,0.167089,-0.111637,-0.979583,0.713797,-0.476943,0.512803,0.322489,-0.215491,-0.92169,0.465407,-0.310984,-0.828639,0.590442,-0.394513,-0.704031,0.692892,-0.462966,-0.552751,0.395795,-0.395795,-0.828639,0.502121,-0.502121,-0.704031,0.589251,-0.589251,-0.552751,0.65389,-0.65389,-0.380535,0.693655,-0.693655,-0.193915,0.707022,-0.707022,-0.015015,0.142094,-0.142094,-0.979583,0.607044,-0.607044,0.512803,0.27427,-0.27427,-0.92169,0.545,-0.815668,-0.193915,0.555498,-0.831355,-0.015015,0.111637,-0.167089,-0.979583,0.476943,-0.713797,0.512803,0.215491,-0.322489,-0.92169,0.310984,-0.465407,-0.828639,0.394513,-0.590442,-0.704031,0.462966,-0.692892,-0.552751,0.513749,-0.768914,-0.380535,0.214209,-0.517136,-0.828639,0.271737,-0.656056,-0.704031,0.318888,-0.76989,-0.552751,0.353862,-0.854366,-0.380535,0.375408,-0.906339,-0.193915,0.382611,-0.923765,-0.015015,0.076907,-0.185644,-0.979583,0.328532,-0.793146,0.512803,0.148412,-0.358348,-0.92169,0.191382,-0.962157,-0.193915,0.180395,-0.90698,-0.380535,0.195044,-0.980651,-0.015015,0.039186,-0.197089,-0.979583,0.167455,-0.841975,0.512803,0.075655,-0.380413,-0.92169,0.109195,-0.548997,-0.828639,0.138524,-0.696493,-0.704031,0.162572,-0.817316,-0.552751,0.0,-0.710135,-0.704031,0.0,-0.833338,-0.552751,0.0,-0.924741,-0.380535,0.0,-0.980987,-0.193915,0.0,-0.999878,-0.015015,0.0,-0.200964,-0.979583,0.0,-0.858486,0.512803,0.0,-0.38786,-0.92169,0.0,-0.559771,-0.828639,-0.195044,-0.980651,-0.015015,-0.039186,-0.197089,-0.979583,-0.167455,-0.841975,0.512803,-0.075655,-0.380413,-0.92169,-0.109195,-0.548997,-0.828639,-0.138524,-0.696493,-0.704031,-0.162572,-0.817316,-0.552751,-0.180395,-0.90698,-0.380535,-0.191382,-0.962157,-0.193915,-0.318888,-0.76989,-0.552751,-0.353862,-0.854366,-0.380535,-0.375408,-0.906339,-0.193915,-0.382611,-0.923765,-0.015015,-0.076907,-0.185644,-0.979583,-0.328532,-0.793146,0.512803,-0.148412,-0.358348,-0.92169,-0.214209,-0.517136,-0.828639,-0.271737,-0.656056,-0.704031,-0.111637,-0.167089,-0.979583,-0.476943,-0.713797,0.512803,-0.555498,-0.831355,-0.015015,-0.215491,-0.322489,-0.92169,-0.310984,-0.465407,-0.828639,-0.394513,-0.590442,-0.704031,-0.462966,-0.692892,-0.552751,-0.513749,-0.768914,-0.380535,-0.545,-0.815668,-0.193915,-0.589251,-0.589251,-0.552751,-0.65389,-0.65389,-0.380535,-0.693655,-0.693655,-0.193915,-0.707022,-0.707022,-0.015015,-0.142094,-0.142094,-0.979583,-0.607044,-0.607044,0.512803,-0.27427,-0.27427,-0.92169,-0.395795,-0.395795,-0.828639,-0.502121,-0.502121,-0.704031,-0.713797,-0.476943,0.512803,-0.831355,-0.555498,-0.015015,-0.322489,-0.215491,-0.92169,-0.465407,-0.310984,-0.828639,-0.590442,-0.394513,-0.704031,-0.692892,-0.462966,-0.552751,-0.768914,-0.513749,-0.380535,-0.815668,-0.545,-0.193915,-0.167089,-0.111637,-0.979583,-0.854366,-0.353862,-0.380535,-0.906339,-0.375408,-0.193915,-0.923765,-0.382611,-0.015015,-0.185644,-0.076907,-0.979583,-0.793146,-0.328532,0.512803,-0.358348,-0.148412,-0.92169,-0.517136,-0.214209,-0.828639,-0.656056,-0.271737,-0.704031,-0.76989,-0.318888,-0.552751,-0.380413,-0.075655,-0.92169,-0.548997,-0.109195,-0.828639,-0.696493,-0.138524,-0.704031,-0.817316,-0.162572,-0.552751,-0.90698,-0.180395,-0.380535,-0.962157,-0.191382,-0.193915,-0.980651,-0.195044,-0.015015,-0.197089,-0.039186,-0.979583,-0.841975,-0.167455,0.512803,-0.924741,0.0,-0.380535,-0.980987,0.0,-0.193915,-0.999878,0.0,-0.015015,-0.200964,0.0,-0.979583,-0.858486,0.0,0.512803,-0.38786,0.0,-0.92169,-0.559771,0.0,-0.828639,-0.710135,0.0,-0.704031,-0.833338,0.0,-0.552751,-0.548997,0.109195,-0.828639,-0.696493,0.138524,-0.704031,-0.817316,0.162572,-0.552751,-0.90698,0.180395,-0.380535,-0.962157,0.191382,-0.193915,-0.980651,0.195044,-0.015015,-0.197089,0.039186,-0.979583,-0.841975,0.167455,0.512803,-0.380413,0.075655,-0.92169,-0.906339,0.375408,-0.193915,-0.854366,0.353862,-0.380535,-0.923765,0.382611,-0.015015,-0.185644,0.076907,-0.979583,-0.793146,0.328532,0.512803,-0.358348,0.148412,-0.92169,-0.517136,0.214209,-0.828639,-0.656056,0.271737,-0.704031,-0.76989,0.318888,-0.552751,-0.590442,0.394513,-0.704031,-0.692892,0.462966,-0.552751,-0.768914,0.513749,-0.380535,-0.815668,0.545,-0.193915,-0.831355,0.555498,-0.015015,-0.167089,0.111637,-0.979583,-0.713797,0.476943,0.512803,-0.322489,0.215491,-0.92169,-0.465407,0.310984,-0.828639,-0.707022,0.707022,-0.015015,-0.693655,0.693655,-0.193915,-0.142094,0.142094,-0.979583,-0.607044,0.607044,0.512803,-0.27427,0.27427,-0.92169,-0.395795,0.395795,-0.828639,-0.502121,0.502121,-0.704031,-0.589251,0.589251,-0.552751,-0.65389,0.65389,-0.380535,-0.394513,0.590442,-0.704031,-0.310984,0.465407,-0.828639,-0.462966,0.692892,-0.552751,-0.513749,0.768914,-0.380535,-0.545,0.815668,-0.193915,-0.555498,0.831355,-0.015015,-0.111637,0.167089,-0.979583,-0.476943,0.713797,0.512803,-0.215491,0.322489,-0.92169,-0.382611,0.923765,-0.015015,-0.076907,0.185644,-0.979583,-0.328532,0.793146,0.512803,-0.148412,0.358348,-0.92169,-0.214209,0.517136,-0.828639,-0.271737,0.656056,-0.704031,-0.318888,0.76989,-0.552751,-0.353862,0.854366,-0.380535,-0.375408,0.906339,-0.193915,-0.162572,0.817316,-0.552751,-0.138524,0.696493,-0.704031,-0.180395,0.90698,-0.380535,-0.191382,0.962157,-0.193915,-0.195044,0.980651,-0.015015,-0.039186,0.197089,-0.979583,-0.167455,0.841975,0.512803,-0.075655,0.380413,-0.92169,-0.109195,0.548997,-0.828639,0.0,0.200964,-0.979583,0.0,0.858486,0.512803,0.0,0.999878,-0.015015,0.0,0.38786,-0.92169,0.0,0.559771,-0.828639,0.0,0.710135,-0.704031,0.0,0.833338,-0.552751,0.0,0.924741,-0.380535,0.0,0.980987,-0.193915,0.162572,0.817316,-0.552751,0.138524,0.696493,-0.704031,0.180395,0.90698,-0.380535,0.191382,0.962157,-0.193915,0.195044,0.980651,-0.015015,0.039186,0.197089,-0.979583,0.167455,0.841975,0.512803,0.075655,0.380413,-0.92169,0.109195,0.548997,-0.828639,0.328532,0.793146,0.512803,0.148412,0.358348,-0.92169,0.214209,0.517136,-0.828639,0.271737,0.656056,-0.704031,0.318888,0.76989,-0.552751,0.353862,0.854366,-0.380535,0.375408,0.906339,-0.193915,0.382611,0.923765,-0.015015,0.076907,0.185644,-0.979583,0.513749,0.768914,-0.380535,0.545,0.815668,-0.193915,0.555498,0.831355,-0.015015,0.111637,0.167089,-0.979583,0.476943,0.713797,0.512803,0.215491,0.322489,-0.92169,0.310984,0.465407,-0.828639,0.394513,0.590442,-0.704031,0.462966,0.692892,-0.552751,0.395795,0.395795,-0.828639,0.502121,0.502121,-0.704031,0.589251,0.589251,-0.552751,0.65389,0.65389,-0.380535,0.693655,0.693655,-0.193915,0.707022,0.707022,-0.015015,0.142094,0.142094,-0.979583,0.607044,0.607044,0.512803,0.27427,0.27427,-0.92169,0.815668,0.545,-0.193915,0.768914,0.513749,-0.380535,0.831355,0.555498,-0.015015,0.167089,0.111637,-0.979583,0.713797,0.476943,0.512803,0.322489,0.215491,-0.92169,0.465407,0.310984,-0.828639,0.590442,0.394513,-0.704031,0.692892,0.462966,-0.552751,0.517136,0.214209,-0.828639,0.358348,0.148412,-0.92169,0.656056,0.271737,-0.704031,0.76989,0.318888,-0.552751,0.854366,0.353862,-0.380535,0.906339,0.375408,-0.193915,0.923765,0.382611,-0.015015,0.185644,0.076907,-0.979583,0.793146,0.328532,0.512803,0.962157,0.191382,-0.193915,0.90698,0.180395,-0.380535,0.980651,0.195044,-0.015015,0.197089,0.039186,-0.979583,0.841975,0.167486,0.512803,0.380413,0.075655,-0.92169,0.548997,0.109195,-0.828639,0.696493,0.138524,-0.704031,0.817316,0.162572,-0.552751,0.0,0.0,0.999969];
iron_data_MaterialData.uidCounter = 0;
iron_data_MaterialContext.num = 0;
iron_math_RayCaster.VPInv = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_math_RayCaster.PInv = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_math_RayCaster.VInv = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Animation.m1 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Animation.m2 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Animation.vpos = new iron_math_Vec4();
iron_object_Animation.vpos2 = new iron_math_Vec4();
iron_object_Animation.vscl = new iron_math_Vec4();
iron_object_Animation.vscl2 = new iron_math_Vec4();
iron_object_Animation.q1 = new iron_math_Quat();
iron_object_Animation.q2 = new iron_math_Quat();
iron_object_Animation.q3 = new iron_math_Quat();
iron_object_Animation.vp = new iron_math_Vec4();
iron_object_Animation.vs = new iron_math_Vec4();
iron_object_Animation.animationTime = 0.0;
iron_object_Animation.startTime = 0.0;
iron_object_BoneAnimation.skinMaxBones = 50;
iron_object_BoneAnimation.m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_BoneAnimation.m1 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_BoneAnimation.m2 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_BoneAnimation.vpos = new iron_math_Vec4();
iron_object_BoneAnimation.vscl = new iron_math_Vec4();
iron_object_BoneAnimation.q1 = new iron_math_Quat();
iron_object_BoneAnimation.q2 = new iron_math_Quat();
iron_object_BoneAnimation.q3 = new iron_math_Quat();
iron_object_BoneAnimation.vpos2 = new iron_math_Vec4();
iron_object_BoneAnimation.vscl2 = new iron_math_Vec4();
iron_object_BoneAnimation.v1 = new iron_math_Vec4();
iron_object_BoneAnimation.v2 = new iron_math_Vec4();
iron_object_CameraObject.temp = new iron_math_Vec4();
iron_object_CameraObject.sphereCenter = new iron_math_Vec4();
iron_object_CameraObject.vcenter = new iron_math_Vec4();
iron_object_CameraObject.vup = new iron_math_Vec4();
iron_object_LightObject.cascadeCount = 1;
iron_object_LightObject.cascadeSplitFactor = 0.8;
iron_object_LightObject.cascadeBounds = 1.0;
iron_object_LightObject.slicesX = 16;
iron_object_LightObject.slicesY = 16;
iron_object_LightObject.slicesZ = 16;
iron_object_LightObject.lpos = new iron_math_Vec4();
iron_object_LightObject.m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_LightObject.eye = new iron_math_Vec4();
iron_object_Transform.temp = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Transform.q = new iron_math_Quat();
iron_object_Uniforms.biasMat = new iron_math_Mat4(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat2 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat3 = new iron_math_Mat3(1,0,0,0,1,0,0,0,1);
iron_object_Uniforms.helpVec = new iron_math_Vec4();
iron_object_Uniforms.helpVec2 = new iron_math_Vec4();
iron_object_Uniforms.helpQuat = new iron_math_Quat();
iron_system_Mouse.buttons = ["left","right","middle"];
iron_system_Keyboard.keys = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","period","comma","space","backspace","tab","enter","shift","control","alt","escape","delete","back","up","right","left","down","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12"];
iron_system_Gamepad.buttonsPS = ["cross","circle","square","triangle","l1","r1","l2","r2","share","options","l3","r3","up","down","left","right","home","touchpad"];
iron_system_Gamepad.buttons = iron_system_Gamepad.buttonsPS;
iron_system_Tween.eases = [iron_system_Tween.easeLinear,iron_system_Tween.easeSineIn,iron_system_Tween.easeSineOut,iron_system_Tween.easeSineInOut,iron_system_Tween.easeQuadIn,iron_system_Tween.easeQuadOut,iron_system_Tween.easeQuadInOut,iron_system_Tween.easeCubicIn,iron_system_Tween.easeCubicOut,iron_system_Tween.easeCubicInOut,iron_system_Tween.easeQuartIn,iron_system_Tween.easeQuartOut,iron_system_Tween.easeQuartInOut,iron_system_Tween.easeQuintIn,iron_system_Tween.easeQuintOut,iron_system_Tween.easeQuintInOut,iron_system_Tween.easeExpoIn,iron_system_Tween.easeExpoOut,iron_system_Tween.easeExpoInOut,iron_system_Tween.easeCircIn,iron_system_Tween.easeCircOut,iron_system_Tween.easeCircInOut,iron_system_Tween.easeBackIn,iron_system_Tween.easeBackOut,iron_system_Tween.easeBackInOut];
iron_system_Tween.anims = [];
iron_system_Tween.registered = false;
js_Boot.__toStr = ({ }).toString;
kha_Assets.fonts = new kha__$Assets_FontList();
kha__$Color_Color_$Impl_$.Black = -16777216;
kha__$Color_Color_$Impl_$.White = -1;
kha__$Color_Color_$Impl_$.Red = -65536;
kha__$Color_Color_$Impl_$.Blue = -16776961;
kha__$Color_Color_$Impl_$.Green = -16711936;
kha__$Color_Color_$Impl_$.Magenta = -65281;
kha__$Color_Color_$Impl_$.Yellow = -256;
kha__$Color_Color_$Impl_$.Cyan = -16711681;
kha__$Color_Color_$Impl_$.Purple = -8388480;
kha__$Color_Color_$Impl_$.Pink = -16181;
kha__$Color_Color_$Impl_$.Orange = -23296;
kha__$Color_Color_$Impl_$.Transparent = 0;
kha__$Color_Color_$Impl_$.invMaxChannelValue = 0.00392156862745098;
kha_CompilerDefines.canvas_id = "khanvas";
kha_Display.instance = new kha_Display();
kha_Scheduler.DIF_COUNT = 3;
kha_Scheduler.maxframetime = 0.5;
kha_Scheduler.startTime = 0;
kha_Shaders.CheckboxMat_mesh_fragData0 = "s1820:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjAwNDcxNTAzOTg2MDQ1NzE4MTkzMDU0MTk5MjE4NzUsIDAuODM0Mzk2NTQxMTE4NjIxODI2MTcxODc1LCAwLjAwMDMxNTYzNzE1MzEwNzY3MjkyOTc2Mzc5Mzk0NTMxMjUpOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC4wOwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjMwMDAwMDAxMTkyMDkyODk1NTA3ODEyNTsKICAgIGhpZ2hwIGZsb2F0IG9jY2x1c2lvbiA9IDEuMDsKICAgIGhpZ2hwIGZsb2F0IHNwZWN1bGFyID0gMC44NTAwMDAwMjM4NDE4NTc5MTAxNTYyNTsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC42OTk5OTk5ODgwNzkwNzEwNDQ5MjE4NzU7CiAgICBuIC89IHZlYzMoKGFicyhuLngpICsgYWJzKG4ueSkpICsgYWJzKG4ueikpOwogICAgaGlnaHAgdmVjMiBfOTc7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfOTcgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF85NyA9IG9jdGFoZWRyb25XcmFwKG4ueHkpOwogICAgfQogICAgbiA9IHZlYzMoXzk3LngsIF85Ny55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.MARKER_spawnAllyMat_999_mesh_fragData0 = "s1672:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjgwMDAwMDA3MTUyNTU3MzczMDQ2ODc1LCAwLjc5NDUyNDkwODA2NTc5NTg5ODQzNzUsIDAuMCk7CiAgICBoaWdocCBmbG9hdCByb3VnaG5lc3MgPSAwLjU7CiAgICBoaWdocCBmbG9hdCBtZXRhbGxpYyA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IG9jY2x1c2lvbiA9IDEuMDsKICAgIGhpZ2hwIGZsb2F0IHNwZWN1bGFyID0gMC41OwogICAgaGlnaHAgZmxvYXQgZW1pc3Npb24gPSAwLjA7CiAgICBuIC89IHZlYzMoKGFicyhuLngpICsgYWJzKG4ueSkpICsgYWJzKG4ueikpOwogICAgaGlnaHAgdmVjMiBfOTQ7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfOTQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF85NCA9IG9jdGFoZWRyb25XcmFwKG4ueHkpOwogICAgfQogICAgbiA9IHZlYzMoXzk0LngsIF85NC55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.MARKER_spawnEnemyMat_999_mesh_fragData0 = "s1683:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjAsIDAuMDAyNDcxMDI2OTY0NDg1NjQ1Mjk0MTg5NDUzMTI1LCAwLjgwMDAwMDA3MTUyNTU3MzczMDQ2ODc1KTsKICAgIGhpZ2hwIGZsb2F0IHJvdWdobmVzcyA9IDAuNTsKICAgIGhpZ2hwIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgaGlnaHAgZmxvYXQgc3BlY3VsYXIgPSAwLjU7CiAgICBoaWdocCBmbG9hdCBlbWlzc2lvbiA9IDAuMDsKICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF85NDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF85NCA9IG4ueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzk0ID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfOTQueCwgXzk0LnksIG4ueik7CiAgICBoaWdocCBmbG9hdCBtYXRpZCA9IDAuMDsKICAgIGlmIChlbWlzc2lvbiA%IDAuMCkKICAgIHsKICAgICAgICBtYXRpZCA9IDEuMDsKICAgIH0KICAgIGZyYWdDb2xvclswXSA9IHZlYzQobi54eSwgcGFja0Zsb2F0KG1ldGFsbGljLCByb3VnaG5lc3MpLCBtYXRpZCk7CiAgICBmcmFnQ29sb3JbMV0gPSB2ZWM0KGJhc2Vjb2wsIHBhY2tGbG9hdDIob2NjbHVzaW9uLCBzcGVjdWxhcikpOwp9Cgo";
kha_Shaders.MARKER_spawnPlayerMat_999_mesh_fragData0 = "s1690:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjgwMDAwMDA3MTUyNTU3MzczMDQ2ODc1LCAwLjAwMDIwNzM5NzA1MzYwMDI4ODkyNzU1NTA4NDIyODUxNTYzLCAwLjApOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuNTsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzk0OwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzk0ID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfOTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF85NC54LCBfOTQueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.Material_mesh_fragData0 = "s1632:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjgwMDAwMDAxMTkyMDkyODk1NTA3ODEyNSk7CiAgICBoaWdocCBmbG9hdCByb3VnaG5lc3MgPSAwLjU7CiAgICBoaWdocCBmbG9hdCBtZXRhbGxpYyA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IG9jY2x1c2lvbiA9IDEuMDsKICAgIGhpZ2hwIGZsb2F0IHNwZWN1bGFyID0gMC41OwogICAgaGlnaHAgZmxvYXQgZW1pc3Npb24gPSAwLjA7CiAgICBuIC89IHZlYzMoKGFicyhuLngpICsgYWJzKG4ueSkpICsgYWJzKG4ueikpOwogICAgaGlnaHAgdmVjMiBfOTM7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfOTMgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF85MyA9IG9jdGFoZWRyb25XcmFwKG4ueHkpOwogICAgfQogICAgbiA9IHZlYzMoXzkzLngsIF85My55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.StoneWall_045_mesh_fragData0 = "s1635:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjIyMDUyODU1Nzg5NjYxNDA3NDcwNzAzMTI1KTsKICAgIGhpZ2hwIGZsb2F0IHJvdWdobmVzcyA9IDAuNTsKICAgIGhpZ2hwIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgaGlnaHAgZmxvYXQgc3BlY3VsYXIgPSAwLjU7CiAgICBoaWdocCBmbG9hdCBlbWlzc2lvbiA9IDAuMDsKICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF85MzsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF85MyA9IG4ueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzkzID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfOTMueCwgXzkzLnksIG4ueik7CiAgICBoaWdocCBmbG9hdCBtYXRpZCA9IDAuMDsKICAgIGlmIChlbWlzc2lvbiA%IDAuMCkKICAgIHsKICAgICAgICBtYXRpZCA9IDEuMDsKICAgIH0KICAgIGZyYWdDb2xvclswXSA9IHZlYzQobi54eSwgcGFja0Zsb2F0KG1ldGFsbGljLCByb3VnaG5lc3MpLCBtYXRpZCk7CiAgICBmcmFnQ29sb3JbMV0gPSB2ZWM0KGJhc2Vjb2wsIHBhY2tGbG9hdDIob2NjbHVzaW9uLCBzcGVjdWxhcikpOwp9Cgo";
kha_Shaders.StoneWall_050_mesh_fragData0 = "s1635:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjIyMDUyODU1Nzg5NjYxNDA3NDcwNzAzMTI1KTsKICAgIGhpZ2hwIGZsb2F0IHJvdWdobmVzcyA9IDAuNTsKICAgIGhpZ2hwIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgaGlnaHAgZmxvYXQgc3BlY3VsYXIgPSAwLjU7CiAgICBoaWdocCBmbG9hdCBlbWlzc2lvbiA9IDAuMDsKICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF85MzsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF85MyA9IG4ueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzkzID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfOTMueCwgXzkzLnksIG4ueik7CiAgICBoaWdocCBmbG9hdCBtYXRpZCA9IDAuMDsKICAgIGlmIChlbWlzc2lvbiA%IDAuMCkKICAgIHsKICAgICAgICBtYXRpZCA9IDEuMDsKICAgIH0KICAgIGZyYWdDb2xvclswXSA9IHZlYzQobi54eSwgcGFja0Zsb2F0KG1ldGFsbGljLCByb3VnaG5lc3MpLCBtYXRpZCk7CiAgICBmcmFnQ29sb3JbMV0gPSB2ZWM0KGJhc2Vjb2wsIHBhY2tGbG9hdDIob2NjbHVzaW9uLCBzcGVjdWxhcikpOwp9Cgo";
kha_Shaders.StoneWall_999_mesh_fragData0 = "s1635:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjIyMDUyODU1Nzg5NjYxNDA3NDcwNzAzMTI1KTsKICAgIGhpZ2hwIGZsb2F0IHJvdWdobmVzcyA9IDAuNTsKICAgIGhpZ2hwIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgaGlnaHAgZmxvYXQgc3BlY3VsYXIgPSAwLjU7CiAgICBoaWdocCBmbG9hdCBlbWlzc2lvbiA9IDAuMDsKICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF85MzsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF85MyA9IG4ueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzkzID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfOTMueCwgXzkzLnksIG4ueik7CiAgICBoaWdocCBmbG9hdCBtYXRpZCA9IDAuMDsKICAgIGlmIChlbWlzc2lvbiA%IDAuMCkKICAgIHsKICAgICAgICBtYXRpZCA9IDEuMDsKICAgIH0KICAgIGZyYWdDb2xvclswXSA9IHZlYzQobi54eSwgcGFja0Zsb2F0KG1ldGFsbGljLCByb3VnaG5lc3MpLCBtYXRpZCk7CiAgICBmcmFnQ29sb3JbMV0gPSB2ZWM0KGJhc2Vjb2wsIHBhY2tGbG9hdDIob2NjbHVzaW9uLCBzcGVjdWxhcikpOwp9Cgo";
kha_Shaders.TextMat_mesh_fragData0 = "s1655:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygxLjAsIDAuMCwgMC4wMDEwNDY4Mjc1Mjg2MjU3MjY2OTk4MjkxMDE1NjI1KTsKICAgIGhpZ2hwIGZsb2F0IHJvdWdobmVzcyA9IDAuNTsKICAgIGhpZ2hwIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgaGlnaHAgZmxvYXQgc3BlY3VsYXIgPSAxLjA7CiAgICBoaWdocCBmbG9hdCBlbWlzc2lvbiA9IDAuMDsKICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF85MzsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF85MyA9IG4ueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzkzID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfOTMueCwgXzkzLnksIG4ueik7CiAgICBoaWdocCBmbG9hdCBtYXRpZCA9IDAuMDsKICAgIGlmIChlbWlzc2lvbiA%IDAuMCkKICAgIHsKICAgICAgICBtYXRpZCA9IDEuMDsKICAgIH0KICAgIGZyYWdDb2xvclswXSA9IHZlYzQobi54eSwgcGFja0Zsb2F0KG1ldGFsbGljLCByb3VnaG5lc3MpLCBtYXRpZCk7CiAgICBmcmFnQ29sb3JbMV0gPSB2ZWM0KGJhc2Vjb2wsIHBhY2tGbG9hdDIob2NjbHVzaW9uLCBzcGVjdWxhcikpOwp9Cgo";
kha_Shaders.Water_mesh_fragData0 = "s1947:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjE2MzU3ODI3MTg2NTg0NDcyNjU2MjUsIDAuMjY1NTAxNzA3NzkyMjgyMTA0NDkyMTg3NSwgMC44MDAwMDAwNzE1MjU1NzM3MzA0Njg3NSk7CiAgICBoaWdocCBmbG9hdCByb3VnaG5lc3MgPSAwLjA5ODI3ODgxMzA2NDA5ODM1ODE1NDI5Njg3NTsKICAgIGhpZ2hwIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgaGlnaHAgZmxvYXQgc3BlY3VsYXIgPSAwLjIyODMzODY1ODgwOTY2MTg2NTIzNDM3NTsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb3BhY2l0eSA9IDAuNzk1NTI3MTYwMTY3Njk0MDkxNzk2ODc1OwogICAgaWYgKG9wYWNpdHkgPCAwLjk5OTg5OTk4MzQwNjA2Njg5NDUzMTI1KQogICAgewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBuIC89IHZlYzMoKGFicyhuLngpICsgYWJzKG4ueSkpICsgYWJzKG4ueikpOwogICAgaGlnaHAgdmVjMiBfMTA0OwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzEwNCA9IG4ueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzEwNCA9IG9jdGFoZWRyb25XcmFwKG4ueHkpOwogICAgfQogICAgbiA9IHZlYzMoXzEwNC54LCBfMTA0LnksIG4ueik7CiAgICBoaWdocCBmbG9hdCBtYXRpZCA9IDAuMDsKICAgIGlmIChlbWlzc2lvbiA%IDAuMCkKICAgIHsKICAgICAgICBtYXRpZCA9IDEuMDsKICAgIH0KICAgIGZyYWdDb2xvclswXSA9IHZlYzQobi54eSwgcGFja0Zsb2F0KG1ldGFsbGljLCByb3VnaG5lc3MpLCBtYXRpZCk7CiAgICBmcmFnQ29sb3JbMV0gPSB2ZWM0KGJhc2Vjb2wsIHBhY2tGbG9hdDIob2NjbHVzaW9uLCBzcGVjdWxhcikpOwp9Cgo";
kha_Shaders.Water_shadowmap_fragData0 = "s248:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgZmxvYXQgb3BhY2l0eSA9IDAuNzk1NTI3MTYwMTY3Njk0MDkxNzk2ODc1OwogICAgaWYgKG9wYWNpdHkgPCAxLjApCiAgICB7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KfQoK";
kha_Shaders.Water_translucent_fragData0 = "s18306:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWM0IGNhc0RhdGFbMjBdOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXJDdWJlU2hhZG93IHNoYWRvd01hcFBvaW50WzRdOwp1bmlmb3JtIGhpZ2hwIHZlYzIgbGlnaHRQcm9qOwp1bmlmb3JtIGhpZ2hwIHZlYzQgc2hpcnJbN107CnVuaWZvcm0gaGlnaHAgdmVjMyBiYWNrZ3JvdW5kQ29sOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IGVudm1hcFN0cmVuZ3RoOwp1bmlmb3JtIGhpZ2hwIHZlYzMgc3VuRGlyOwp1bmlmb3JtIGJvb2wgcmVjZWl2ZVNoYWRvdzsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkRTaGFkb3cgc2hhZG93TWFwOwp1bmlmb3JtIGhpZ2hwIHZlYzMgZXllOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHNoYWRvd3NCaWFzOwp1bmlmb3JtIGhpZ2hwIHZlYzMgc3VuQ29sOwp1bmlmb3JtIGhpZ2hwIHZlYzIgY2FtZXJhUHJvajsKdW5pZm9ybSBoaWdocCB2ZWMyIGNhbWVyYVBsYW5lOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBjbHVzdGVyc0RhdGE7CnVuaWZvcm0gaGlnaHAgdmVjNCBsaWdodHNBcnJheVszMl07CgppbiBoaWdocCB2ZWMzIHdub3JtYWw7CmluIGhpZ2hwIHZlYzMgZXllRGlyOwppbiBoaWdocCB2ZWMzIHdwb3NpdGlvbjsKaW4gaGlnaHAgdmVjNCB3dnBwb3NpdGlvbjsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yWzJdOwoKaGlnaHAgdmVjMyBzdXJmYWNlQWxiZWRvKGhpZ2hwIHZlYzMgYmFzZUNvbG9yLCBoaWdocCBmbG9hdCBtZXRhbG5lc3MpCnsKICAgIHJldHVybiBtaXgoYmFzZUNvbG9yLCB2ZWMzKDAuMCksIHZlYzMobWV0YWxuZXNzKSk7Cn0KCmhpZ2hwIHZlYzMgc3VyZmFjZUYwKGhpZ2hwIHZlYzMgYmFzZUNvbG9yLCBoaWdocCBmbG9hdCBtZXRhbG5lc3MpCnsKICAgIHJldHVybiBtaXgodmVjMygwLjAzOTk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSksIGJhc2VDb2xvciwgdmVjMyhtZXRhbG5lc3MpKTsKfQoKaGlnaHAgdmVjMyBzaElycmFkaWFuY2UoaGlnaHAgdmVjMyBub3IpCnsKICAgIGhpZ2hwIHZlYzMgY2wwMCA9IHZlYzMoc2hpcnJbMF0ueCwgc2hpcnJbMF0ueSwgc2hpcnJbMF0ueik7CiAgICBoaWdocCB2ZWMzIGNsMW0xID0gdmVjMyhzaGlyclswXS53LCBzaGlyclsxXS54LCBzaGlyclsxXS55KTsKICAgIGhpZ2hwIHZlYzMgY2wxMCA9IHZlYzMoc2hpcnJbMV0ueiwgc2hpcnJbMV0udywgc2hpcnJbMl0ueCk7CiAgICBoaWdocCB2ZWMzIGNsMTEgPSB2ZWMzKHNoaXJyWzJdLnksIHNoaXJyWzJdLnosIHNoaXJyWzJdLncpOwogICAgaGlnaHAgdmVjMyBjbDJtMiA9IHZlYzMoc2hpcnJbM10ueCwgc2hpcnJbM10ueSwgc2hpcnJbM10ueik7CiAgICBoaWdocCB2ZWMzIGNsMm0xID0gdmVjMyhzaGlyclszXS53LCBzaGlycls0XS54LCBzaGlycls0XS55KTsKICAgIGhpZ2hwIHZlYzMgY2wyMCA9IHZlYzMoc2hpcnJbNF0ueiwgc2hpcnJbNF0udywgc2hpcnJbNV0ueCk7CiAgICBoaWdocCB2ZWMzIGNsMjEgPSB2ZWMzKHNoaXJyWzVdLnksIHNoaXJyWzVdLnosIHNoaXJyWzVdLncpOwogICAgaGlnaHAgdmVjMyBjbDIyID0gdmVjMyhzaGlycls2XS54LCBzaGlycls2XS55LCBzaGlycls2XS56KTsKICAgIHJldHVybiAoKCgoKCgoKCgoY2wyMiAqIDAuNDI5MDQyOTk0OTc2MDQzNzAxMTcxODc1KSAqICgobm9yLnkgKiBub3IueSkgLSAoKC1ub3IueikgKiAoLW5vci56KSkpKSArICgoKGNsMjAgKiAwLjc0MzEyNTAyMTQ1NzY3MjExOTE0MDYyNSkgKiBub3IueCkgKiBub3IueCkpICsgKGNsMDAgKiAwLjg4NjIyNzAxMTY4MDYwMzAyNzM0Mzc1KSkgLSAoY2wyMCAqIDAuMjQ3NzA3OTkyNzkyMTI5NTE2NjAxNTYyNSkpICsgKCgoY2wybTIgKiAwLjg1ODA4NTk4OTk1MjA4NzQwMjM0Mzc1KSAqIG5vci55KSAqICgtbm9yLnopKSkgKyAoKChjbDIxICogMC44NTgwODU5ODk5NTIwODc0MDIzNDM3NSkgKiBub3IueSkgKiBub3IueCkpICsgKCgoY2wybTEgKiAwLjg1ODA4NTk4OTk1MjA4NzQwMjM0Mzc1KSAqICgtbm9yLnopKSAqIG5vci54KSkgKyAoKGNsMTEgKiAxLjAyMzMyNzk0NjY2MjkwMjgzMjAzMTI1KSAqIG5vci55KSkgKyAoKGNsMW0xICogMS4wMjMzMjc5NDY2NjI5MDI4MzIwMzEyNSkgKiAoLW5vci56KSkpICsgKChjbDEwICogMS4wMjMzMjc5NDY2NjI5MDI4MzIwMzEyNSkgKiBub3IueCk7Cn0KCmhpZ2hwIG1hdDQgZ2V0Q2FzY2FkZU1hdChoaWdocCBmbG9hdCBkLCBpbm91dCBpbnQgY2FzaSwgaW5vdXQgaW50IGNhc0luZGV4KQp7CiAgICBoaWdocCB2ZWM0IGNvbXAgPSB2ZWM0KGZsb2F0KGQgPiBjYXNEYXRhWzE2XS54KSwgZmxvYXQoZCA%IGNhc0RhdGFbMTZdLnkpLCBmbG9hdChkID4gY2FzRGF0YVsxNl0ueiksIGZsb2F0KGQgPiBjYXNEYXRhWzE2XS53KSk7CiAgICBjYXNpID0gaW50KG1pbihkb3QodmVjNCgxLjApLCBjb21wKSwgNC4wKSk7CiAgICBjYXNJbmRleCA9IGNhc2kgKiA0OwogICAgcmV0dXJuIG1hdDQodmVjNChjYXNEYXRhW2Nhc0luZGV4ICsgMF0pLCB2ZWM0KGNhc0RhdGFbY2FzSW5kZXggKyAxXSksIHZlYzQoY2FzRGF0YVtjYXNJbmRleCArIDJdKSwgdmVjNChjYXNEYXRhW2Nhc0luZGV4ICsgM10pKTsKfQoKaGlnaHAgZmxvYXQgUENGKGhpZ2hwIHNhbXBsZXIyRFNoYWRvdyBzaGFkb3dNYXBfMSwgaGlnaHAgdmVjMiB1diwgaGlnaHAgZmxvYXQgY29tcGFyZSwgaGlnaHAgdmVjMiBzbVNpemUpCnsKICAgIGhpZ2hwIHZlYzMgXzIyMSA9IHZlYzModXYgKyAodmVjMigtMS4wKSAvIHNtU2l6ZSksIGNvbXBhcmUpOwogICAgaGlnaHAgZmxvYXQgcmVzdWx0ID0gdGV4dHVyZShzaGFkb3dNYXBfMSwgdmVjMyhfMjIxLnh5LCBfMjIxLnopKTsKICAgIGhpZ2hwIHZlYzMgXzIzMCA9IHZlYzModXYgKyAodmVjMigtMS4wLCAwLjApIC8gc21TaXplKSwgY29tcGFyZSk7CiAgICByZXN1bHQgKz0gdGV4dHVyZShzaGFkb3dNYXBfMSwgdmVjMyhfMjMwLnh5LCBfMjMwLnopKTsKICAgIGhpZ2hwIHZlYzMgXzI0MSA9IHZlYzModXYgKyAodmVjMigtMS4wLCAxLjApIC8gc21TaXplKSwgY29tcGFyZSk7CiAgICByZXN1bHQgKz0gdGV4dHVyZShzaGFkb3dNYXBfMSwgdmVjMyhfMjQxLnh5LCBfMjQxLnopKTsKICAgIGhpZ2hwIHZlYzMgXzI1MiA9IHZlYzModXYgKyAodmVjMigwLjAsIC0xLjApIC8gc21TaXplKSwgY29tcGFyZSk7CiAgICByZXN1bHQgKz0gdGV4dHVyZShzaGFkb3dNYXBfMSwgdmVjMyhfMjUyLnh5LCBfMjUyLnopKTsKICAgIGhpZ2hwIHZlYzMgXzI2MCA9IHZlYzModXYsIGNvbXBhcmUpOwogICAgcmVzdWx0ICs9IHRleHR1cmUoc2hhZG93TWFwXzEsIHZlYzMoXzI2MC54eSwgXzI2MC56KSk7CiAgICBoaWdocCB2ZWMzIF8yNzEgPSB2ZWMzKHV2ICsgKHZlYzIoMC4wLCAxLjApIC8gc21TaXplKSwgY29tcGFyZSk7CiAgICByZXN1bHQgKz0gdGV4dHVyZShzaGFkb3dNYXBfMSwgdmVjMyhfMjcxLnh5LCBfMjcxLnopKTsKICAgIGhpZ2hwIHZlYzMgXzI4MiA9IHZlYzModXYgKyAodmVjMigxLjAsIC0xLjApIC8gc21TaXplKSwgY29tcGFyZSk7CiAgICByZXN1bHQgKz0gdGV4dHVyZShzaGFkb3dNYXBfMSwgdmVjMyhfMjgyLnh5LCBfMjgyLnopKTsKICAgIGhpZ2hwIHZlYzMgXzI5MyA9IHZlYzModXYgKyAodmVjMigxLjAsIDAuMCkgLyBzbVNpemUpLCBjb21wYXJlKTsKICAgIHJlc3VsdCArPSB0ZXh0dXJlKHNoYWRvd01hcF8xLCB2ZWMzKF8yOTMueHksIF8yOTMueikpOwogICAgaGlnaHAgdmVjMyBfMzA0ID0gdmVjMyh1diArICh2ZWMyKDEuMCkgLyBzbVNpemUpLCBjb21wYXJlKTsKICAgIHJlc3VsdCArPSB0ZXh0dXJlKHNoYWRvd01hcF8xLCB2ZWMzKF8zMDQueHksIF8zMDQueikpOwogICAgcmV0dXJuIHJlc3VsdCAvIDkuMDsKfQoKaGlnaHAgZmxvYXQgc2hhZG93VGVzdENhc2NhZGUoaGlnaHAgc2FtcGxlcjJEU2hhZG93IHNoYWRvd01hcF8xLCBoaWdocCB2ZWMzIGV5ZV8xLCBoaWdocCB2ZWMzIHAsIGhpZ2hwIGZsb2F0IHNoYWRvd3NCaWFzXzEpCnsKICAgIGhpZ2hwIGZsb2F0IGQgPSBkaXN0YW5jZShleWVfMSwgcCk7CiAgICBpbnQgcGFyYW07CiAgICBpbnQgcGFyYW1fMTsKICAgIGhpZ2hwIG1hdDQgXzU1NiA9IGdldENhc2NhZGVNYXQoZCwgcGFyYW0sIHBhcmFtXzEpOwogICAgaW50IGNhc2kgPSBwYXJhbTsKICAgIGludCBjYXNJbmRleCA9IHBhcmFtXzE7CiAgICBoaWdocCBtYXQ0IExXVlAgPSBfNTU2OwogICAgaGlnaHAgdmVjNCBsUG9zID0gTFdWUCAqIHZlYzQocCwgMS4wKTsKICAgIGhpZ2hwIHZlYzMgXzU3MSA9IGxQb3MueHl6IC8gdmVjMyhsUG9zLncpOwogICAgbFBvcyA9IHZlYzQoXzU3MS54LCBfNTcxLnksIF81NzEueiwgbFBvcy53KTsKICAgIGhpZ2hwIGZsb2F0IHZpc2liaWxpdHkgPSAxLjA7CiAgICBpZiAobFBvcy53ID4gMC4wKQogICAgewogICAgICAgIHZpc2liaWxpdHkgPSBQQ0Yoc2hhZG93TWFwXzEsIGxQb3MueHksIGxQb3MueiAtIHNoYWRvd3NCaWFzXzEsIHZlYzIoNDA5Ni4wLCAxMDI0LjApKTsKICAgIH0KICAgIGhpZ2hwIGZsb2F0IG5leHRTcGxpdCA9IGNhc0RhdGFbMTZdW2Nhc2ldOwogICAgaGlnaHAgZmxvYXQgXzU5NjsKICAgIGlmIChjYXNpID09IDApCiAgICB7CiAgICAgICAgXzU5NiA9IG5leHRTcGxpdDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfNTk2ID0gbmV4dFNwbGl0IC0gKGNhc0RhdGFbMTZdW2Nhc2kgLSAxXSk7CiAgICB9CiAgICBoaWdocCBmbG9hdCBzcGxpdFNpemUgPSBfNTk2OwogICAgaGlnaHAgZmxvYXQgc3BsaXREaXN0ID0gKG5leHRTcGxpdCAtIGQpIC8gc3BsaXRTaXplOwogICAgaWYgKChzcGxpdERpc3QgPD0gMC4xNTAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1KSAmJiAoY2FzaSAhPSAzKSkKICAgIHsKICAgICAgICBpbnQgY2FzSW5kZXgyID0gY2FzSW5kZXggKyA0OwogICAgICAgIGhpZ2hwIG1hdDQgTFdWUDIgPSBtYXQ0KHZlYzQoY2FzRGF0YVtjYXNJbmRleDIgKyAwXSksIHZlYzQoY2FzRGF0YVtjYXNJbmRleDIgKyAxXSksIHZlYzQoY2FzRGF0YVtjYXNJbmRleDIgKyAyXSksIHZlYzQoY2FzRGF0YVtjYXNJbmRleDIgKyAzXSkpOwogICAgICAgIGhpZ2hwIHZlYzQgbFBvczIgPSBMV1ZQMiAqIHZlYzQocCwgMS4wKTsKICAgICAgICBoaWdocCB2ZWMzIF82NzUgPSBsUG9zMi54eXogLyB2ZWMzKGxQb3MyLncpOwogICAgICAgIGxQb3MyID0gdmVjNChfNjc1LngsIF82NzUueSwgXzY3NS56LCBsUG9zMi53KTsKICAgICAgICBoaWdocCBmbG9hdCB2aXNpYmlsaXR5MiA9IDEuMDsKICAgICAgICBpZiAobFBvczIudyA%IDAuMCkKICAgICAgICB7CiAgICAgICAgICAgIHZpc2liaWxpdHkyID0gUENGKHNoYWRvd01hcF8xLCBsUG9zMi54eSwgbFBvczIueiAtIHNoYWRvd3NCaWFzXzEsIHZlYzIoNDA5Ni4wLCAxMDI0LjApKTsKICAgICAgICB9CiAgICAgICAgaGlnaHAgZmxvYXQgbGVycEFtdCA9IHNtb290aHN0ZXAoMC4wLCAwLjE1MDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUsIHNwbGl0RGlzdCk7CiAgICAgICAgcmV0dXJuIG1peCh2aXNpYmlsaXR5MiwgdmlzaWJpbGl0eSwgbGVycEFtdCk7CiAgICB9CiAgICByZXR1cm4gdmlzaWJpbGl0eTsKfQoKaGlnaHAgdmVjMyBsYW1iZXJ0RGlmZnVzZUJSREYoaGlnaHAgdmVjMyBhbGJlZG8sIGhpZ2hwIGZsb2F0IG5sKQp7CiAgICByZXR1cm4gYWxiZWRvICogbWF4KDAuMCwgbmwpOwp9CgpoaWdocCBmbG9hdCBkX2dneChoaWdocCBmbG9hdCBuaCwgaGlnaHAgZmxvYXQgYSkKewogICAgaGlnaHAgZmxvYXQgYTIgPSBhICogYTsKICAgIGhpZ2hwIGZsb2F0IGRlbm9tID0gcG93KCgobmggKiBuaCkgKiAoYTIgLSAxLjApKSArIDEuMCwgMi4wKTsKICAgIHJldHVybiAoYTIgKiAwLjMxODMwOTg3MzM0MjUxNDAzODA4NTkzNzUpIC8gZGVub207Cn0KCmhpZ2hwIGZsb2F0IHZfc21pdGhzY2hsaWNrKGhpZ2hwIGZsb2F0IG5sLCBoaWdocCBmbG9hdCBudiwgaGlnaHAgZmxvYXQgYSkKewogICAgcmV0dXJuIDEuMCAvICgoKG5sICogKDEuMCAtIGEpKSArIGEpICogKChudiAqICgxLjAgLSBhKSkgKyBhKSk7Cn0KCmhpZ2hwIHZlYzMgZl9zY2hsaWNrKGhpZ2hwIHZlYzMgZjAsIGhpZ2hwIGZsb2F0IHZoKQp7CiAgICByZXR1cm4gZjAgKyAoKHZlYzMoMS4wKSAtIGYwKSAqIGV4cDIoKCgoLTUuNTU0NzI5OTM4NTA3MDgwMDc4MTI1KSAqIHZoKSAtIDYuOTgzMTYwMDE4OTIwODk4NDM3NSkgKiB2aCkpOwp9CgpoaWdocCB2ZWMzIHNwZWN1bGFyQlJERihoaWdocCB2ZWMzIGYwLCBoaWdocCBmbG9hdCByb3VnaG5lc3MsIGhpZ2hwIGZsb2F0IG5sLCBoaWdocCBmbG9hdCBuaCwgaGlnaHAgZmxvYXQgbnYsIGhpZ2hwIGZsb2F0IHZoKQp7CiAgICBoaWdocCBmbG9hdCBhID0gcm91Z2huZXNzICogcm91Z2huZXNzOwogICAgcmV0dXJuIChmX3NjaGxpY2soZjAsIHZoKSAqIChkX2dneChuaCwgYSkgKiBjbGFtcCh2X3NtaXRoc2NobGljayhubCwgbnYsIGEpLCAwLjAsIDEuMCkpKSAvIHZlYzMoNC4wKTsKfQoKaGlnaHAgZmxvYXQgbGluZWFyaXplKGhpZ2hwIGZsb2F0IGRlcHRoLCBoaWdocCB2ZWMyIGNhbWVyYVByb2pfMSkKewogICAgcmV0dXJuIGNhbWVyYVByb2pfMS55IC8gKGRlcHRoIC0gY2FtZXJhUHJval8xLngpOwp9CgppbnQgZ2V0Q2x1c3RlckkoaGlnaHAgdmVjMiB0YywgaGlnaHAgZmxvYXQgdmlld3osIGhpZ2hwIHZlYzIgY2FtZXJhUGxhbmVfMSkKewogICAgaW50IHNsaWNlWiA9IDA7CiAgICBoaWdocCBmbG9hdCBjbmVhciA9IDMuMCArIGNhbWVyYVBsYW5lXzEueDsKICAgIGlmICh2aWV3eiA%%IDAuMCkKICAgIHsKICAgICAgICBkaXJlY3QgPSB2ZWMzKDAuMCk7CiAgICAgICAgaW5kaXJlY3QgKz0gYmFzZWNvbDsKICAgIH0KICAgIGhpZ2hwIHZlYzQgcHJlbXVsdGlwbGllZFJlZmxlY3QgPSB2ZWM0KHZlYzMoZGlyZWN0ICsgKGluZGlyZWN0ICogMC41KSkgKiBvcGFjaXR5LCBvcGFjaXR5KTsKICAgIGhpZ2hwIGZsb2F0IHcgPSBjbGFtcCgocG93KG1pbigxLjAsIHByZW11bHRpcGxpZWRSZWZsZWN0LncgKiAxMC4wKSArIDAuMDA5OTk5OTk5Nzc2NDgyNTgyMDkyMjg1MTU2MjUsIDMuMCkgKiAxMDAwMDAwMDAuMCkgKiBwb3coMS4wIC0gKGdsX0ZyYWdDb29yZC56ICogMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSksIDMuMCksIDAuMDA5OTk5OTk5Nzc2NDgyNTgyMDkyMjg1MTU2MjUsIDMwMDAuMCk7CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KHByZW11bHRpcGxpZWRSZWZsZWN0Lnh5eiAqIHcsIHByZW11bHRpcGxpZWRSZWZsZWN0LncpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChwcmVtdWx0aXBsaWVkUmVmbGVjdC53ICogdywgMC4wLCAwLjAsIDEuMCk7Cn0KCg";
kha_Shaders.Water_translucent_vertData0 = "s556:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgVzsKdW5pZm9ybSBtYXQzIE47CnVuaWZvcm0gbWF0NCBXVlA7CnVuaWZvcm0gdmVjMyBleWU7CgppbiB2ZWM0IHBvczsKb3V0IHZlYzMgd3Bvc2l0aW9uOwpvdXQgdmVjMyB3bm9ybWFsOwppbiB2ZWMyIG5vcjsKb3V0IHZlYzMgZXllRGlyOwpvdXQgdmVjNCB3dnBwb3NpdGlvbjsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgc3BvcyA9IHZlYzQocG9zLnh5eiwgMS4wKTsKICAgIHdwb3NpdGlvbiA9IHZlYzQoVyAqIHNwb3MpLnh5ejsKICAgIHdub3JtYWwgPSBub3JtYWxpemUoTiAqIHZlYzMobm9yLCBwb3MudykpOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiBzcG9zOwogICAgZXllRGlyID0gZXllIC0gd3Bvc2l0aW9uOwogICAgd3ZwcG9zaXRpb24gPSBnbF9Qb3NpdGlvbjsKfQoK";
kha_Shaders.Wood_mesh_fragData0 = "s1679:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjIwMTg4MTU4NzUwNTM0MDU3NjE3MTg3NSwgMC4wNTg5MDc0MDQ1NDE5NjkyOTkzMTY0MDYyNSwgMC4wKTsKICAgIGhpZ2hwIGZsb2F0IHJvdWdobmVzcyA9IDAuNTsKICAgIGhpZ2hwIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgaGlnaHAgZmxvYXQgc3BlY3VsYXIgPSAwLjU7CiAgICBoaWdocCBmbG9hdCBlbWlzc2lvbiA9IDAuMDsKICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF85NDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF85NCA9IG4ueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzk0ID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfOTQueCwgXzk0LnksIG4ueik7CiAgICBoaWdocCBmbG9hdCBtYXRpZCA9IDAuMDsKICAgIGlmIChlbWlzc2lvbiA%IDAuMCkKICAgIHsKICAgICAgICBtYXRpZCA9IDEuMDsKICAgIH0KICAgIGZyYWdDb2xvclswXSA9IHZlYzQobi54eSwgcGFja0Zsb2F0KG1ldGFsbGljLCByb3VnaG5lc3MpLCBtYXRpZCk7CiAgICBmcmFnQ29sb3JbMV0gPSB2ZWM0KGJhc2Vjb2wsIHBhY2tGbG9hdDIob2NjbHVzaW9uLCBzcGVjdWxhcikpOwp9Cgo";
kha_Shaders.ally_arrow_mat_mesh_fragData0 = "s2226:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgaWYgKCFnbF9Gcm9udEZhY2luZykKICAgIHsKICAgICAgICBuICo9ICgtMS4wKTsKICAgIH0KICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF8xMjI7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfMTIyID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTIyID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfMTIyLngsIF8xMjIueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.ally_arrow_mat_mesh_vertData0 = "s422:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIGZsb2F0IHRleFVucGFjazsKdW5pZm9ybSBtYXQzIE47CnVuaWZvcm0gbWF0NCBXVlA7CgppbiB2ZWM0IHBvczsKb3V0IHZlYzIgdGV4Q29vcmQ7CmluIHZlYzIgdGV4OwpvdXQgdmVjMyB3bm9ybWFsOwppbiB2ZWMyIG5vcjsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgc3BvcyA9IHZlYzQocG9zLnh5eiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4ICogdGV4VW5wYWNrOwogICAgd25vcm1hbCA9IG5vcm1hbGl6ZShOICogdmVjMyhub3IsIHBvcy53KSk7CiAgICBnbF9Qb3NpdGlvbiA9IFdWUCAqIHNwb3M7Cn0KCg";
kha_Shaders.ally_mat_017_mesh_fragData0 = "s2148:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzExNDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMTQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMTQueCwgXzExNC55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.ally_mat_armskin_mesh_fragData0 = "s2148:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzExNDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMTQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMTQueCwgXzExNC55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.ally_mat_armskin_mesh_vertData0 = "s2448:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIHZlYzQgc2tpbkJvbmVzWzM0XTsKdW5pZm9ybSBmbG9hdCB0ZXhVbnBhY2s7CnVuaWZvcm0gZmxvYXQgcG9zVW5wYWNrOwp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBtYXQ0IFdWUDsKCmluIHZlYzQgcG9zOwpvdXQgdmVjMiB0ZXhDb29yZDsKaW4gdmVjMiB0ZXg7CmluIHZlYzQgYm9uZTsKaW4gdmVjNCB3ZWlnaHQ7Cm91dCB2ZWMzIHdub3JtYWw7CmluIHZlYzIgbm9yOwoKdm9pZCBnZXRTa2lubmluZ0R1YWxRdWF0KGl2ZWM0IGJvbmVfMSwgaW5vdXQgdmVjNCB3ZWlnaHRfMSwgaW5vdXQgdmVjNCBBLCBpbm91dCB2ZWM0IEIpCnsKICAgIGl2ZWM0IGJvbmVpID0gYm9uZV8xICogaXZlYzQoMik7CiAgICBtYXQ0IG1hdEEgPSBtYXQ0KHZlYzQoc2tpbkJvbmVzW2JvbmVpLnhdKSwgdmVjNChza2luQm9uZXNbYm9uZWkueV0pLCB2ZWM0KHNraW5Cb25lc1tib25laS56XSksIHZlYzQoc2tpbkJvbmVzW2JvbmVpLnddKSk7CiAgICBtYXQ0IG1hdEIgPSBtYXQ0KHZlYzQoc2tpbkJvbmVzW2JvbmVpLnggKyAxXSksIHZlYzQoc2tpbkJvbmVzW2JvbmVpLnkgKyAxXSksIHZlYzQoc2tpbkJvbmVzW2JvbmVpLnogKyAxXSksIHZlYzQoc2tpbkJvbmVzW2JvbmVpLncgKyAxXSkpOwogICAgdmVjMyBfMTI5ID0gd2VpZ2h0XzEueHl6ICogc2lnbihtYXRBWzNdICogbWF0QSkueHl6OwogICAgd2VpZ2h0XzEgPSB2ZWM0KF8xMjkueCwgXzEyOS55LCBfMTI5LnosIHdlaWdodF8xLncpOwogICAgQSA9IG1hdEEgKiB3ZWlnaHRfMTsKICAgIEIgPSBtYXRCICogd2VpZ2h0XzE7CiAgICBmbG9hdCBpbnZOb3JtQSA9IDEuMCAvIGxlbmd0aChBKTsKICAgIEEgKj0gaW52Tm9ybUE7CiAgICBCICo9IGludk5vcm1BOwp9Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWM0IHNwb3MgPSB2ZWM0KHBvcy54eXosIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleCAqIHRleFVucGFjazsKICAgIHZlYzQgcGFyYW0gPSB3ZWlnaHQ7CiAgICB2ZWM0IHNraW5COwogICAgdmVjNCBwYXJhbV8yID0gc2tpbkI7CiAgICB2ZWM0IHBhcmFtXzE7CiAgICBnZXRTa2lubmluZ0R1YWxRdWF0KGl2ZWM0KGJvbmUgKiAzMjc2Ny4wKSwgcGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgdmVjNCBza2luQSA9IHBhcmFtXzE7CiAgICBza2luQiA9IHBhcmFtXzI7CiAgICB2ZWMzIF8xODggPSBzcG9zLnh5eiAqIHBvc1VucGFjazsKICAgIHNwb3MgPSB2ZWM0KF8xODgueCwgXzE4OC55LCBfMTg4LnosIHNwb3Mudyk7CiAgICB2ZWMzIF8yMDkgPSBzcG9zLnh5eiArIChjcm9zcyhza2luQS54eXosIGNyb3NzKHNraW5BLnh5eiwgc3Bvcy54eXopICsgKHNwb3MueHl6ICogc2tpbkEudykpICogMi4wKTsKICAgIHNwb3MgPSB2ZWM0KF8yMDkueCwgXzIwOS55LCBfMjA5LnosIHNwb3Mudyk7CiAgICB2ZWMzIF8yMzIgPSBzcG9zLnh5eiArICgoKChza2luQi54eXogKiBza2luQS53KSAtIChza2luQS54eXogKiBza2luQi53KSkgKyBjcm9zcyhza2luQS54eXosIHNraW5CLnh5eikpICogMi4wKTsKICAgIHNwb3MgPSB2ZWM0KF8yMzIueCwgXzIzMi55LCBfMjMyLnosIHNwb3Mudyk7CiAgICB2ZWMzIF8yMzkgPSBzcG9zLnh5eiAvIHZlYzMocG9zVW5wYWNrKTsKICAgIHNwb3MgPSB2ZWM0KF8yMzkueCwgXzIzOS55LCBfMjM5LnosIHNwb3Mudyk7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKE4gKiAodmVjMyhub3IsIHBvcy53KSArIChjcm9zcyhza2luQS54eXosIGNyb3NzKHNraW5BLnh5eiwgdmVjMyhub3IsIHBvcy53KSkgKyAodmVjMyhub3IsIHBvcy53KSAqIHNraW5BLncpKSAqIDIuMCkpKTsKICAgIGdsX1Bvc2l0aW9uID0gV1ZQICogc3BvczsKfQoK";
kha_Shaders.ally_mat_armskin_shadowmap_vertData0 = "s2079:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIHZlYzQgc2tpbkJvbmVzWzM0XTsKdW5pZm9ybSBmbG9hdCBwb3NVbnBhY2s7CnVuaWZvcm0gbWF0NCBMV1ZQOwoKaW4gdmVjNCBwb3M7CmluIHZlYzQgYm9uZTsKaW4gdmVjNCB3ZWlnaHQ7Cgp2b2lkIGdldFNraW5uaW5nRHVhbFF1YXQoaXZlYzQgYm9uZV8xLCBpbm91dCB2ZWM0IHdlaWdodF8xLCBpbm91dCB2ZWM0IEEsIGlub3V0IHZlYzQgQikKewogICAgaXZlYzQgYm9uZWkgPSBib25lXzEgKiBpdmVjNCgyKTsKICAgIG1hdDQgbWF0QSA9IG1hdDQodmVjNChza2luQm9uZXNbYm9uZWkueF0pLCB2ZWM0KHNraW5Cb25lc1tib25laS55XSksIHZlYzQoc2tpbkJvbmVzW2JvbmVpLnpdKSwgdmVjNChza2luQm9uZXNbYm9uZWkud10pKTsKICAgIG1hdDQgbWF0QiA9IG1hdDQodmVjNChza2luQm9uZXNbYm9uZWkueCArIDFdKSwgdmVjNChza2luQm9uZXNbYm9uZWkueSArIDFdKSwgdmVjNChza2luQm9uZXNbYm9uZWkueiArIDFdKSwgdmVjNChza2luQm9uZXNbYm9uZWkudyArIDFdKSk7CiAgICB2ZWMzIF8xMjkgPSB3ZWlnaHRfMS54eXogKiBzaWduKG1hdEFbM10gKiBtYXRBKS54eXo7CiAgICB3ZWlnaHRfMSA9IHZlYzQoXzEyOS54LCBfMTI5LnksIF8xMjkueiwgd2VpZ2h0XzEudyk7CiAgICBBID0gbWF0QSAqIHdlaWdodF8xOwogICAgQiA9IG1hdEIgKiB3ZWlnaHRfMTsKICAgIGZsb2F0IGludk5vcm1BID0gMS4wIC8gbGVuZ3RoKEEpOwogICAgQSAqPSBpbnZOb3JtQTsKICAgIEIgKj0gaW52Tm9ybUE7Cn0KCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgc3BvcyA9IHZlYzQocG9zLnh5eiwgMS4wKTsKICAgIHZlYzQgcGFyYW0gPSB3ZWlnaHQ7CiAgICB2ZWM0IHNraW5COwogICAgdmVjNCBwYXJhbV8yID0gc2tpbkI7CiAgICB2ZWM0IHBhcmFtXzE7CiAgICBnZXRTa2lubmluZ0R1YWxRdWF0KGl2ZWM0KGJvbmUgKiAzMjc2Ny4wKSwgcGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgdmVjNCBza2luQSA9IHBhcmFtXzE7CiAgICBza2luQiA9IHBhcmFtXzI7CiAgICB2ZWMzIF8xNzkgPSBzcG9zLnh5eiAqIHBvc1VucGFjazsKICAgIHNwb3MgPSB2ZWM0KF8xNzkueCwgXzE3OS55LCBfMTc5LnosIHNwb3Mudyk7CiAgICB2ZWMzIF8yMDAgPSBzcG9zLnh5eiArIChjcm9zcyhza2luQS54eXosIGNyb3NzKHNraW5BLnh5eiwgc3Bvcy54eXopICsgKHNwb3MueHl6ICogc2tpbkEudykpICogMi4wKTsKICAgIHNwb3MgPSB2ZWM0KF8yMDAueCwgXzIwMC55LCBfMjAwLnosIHNwb3Mudyk7CiAgICB2ZWMzIF8yMjMgPSBzcG9zLnh5eiArICgoKChza2luQi54eXogKiBza2luQS53KSAtIChza2luQS54eXogKiBza2luQi53KSkgKyBjcm9zcyhza2luQS54eXosIHNraW5CLnh5eikpICogMi4wKTsKICAgIHNwb3MgPSB2ZWM0KF8yMjMueCwgXzIyMy55LCBfMjIzLnosIHNwb3Mudyk7CiAgICB2ZWMzIF8yMzAgPSBzcG9zLnh5eiAvIHZlYzMocG9zVW5wYWNrKTsKICAgIHNwb3MgPSB2ZWM0KF8yMzAueCwgXzIzMC55LCBfMjMwLnosIHNwb3Mudyk7CiAgICBnbF9Qb3NpdGlvbiA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.ally_mat_mesh_fragData0 = "s2148:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzExNDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMTQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMTQueCwgXzExNC55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.armdefault_mesh_fragData0 = "s1634:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjgwMDAwMDAxMTkyMDkyODk1NTA3ODEyNSk7CiAgICBoaWdocCBmbG9hdCByb3VnaG5lc3MgPSAwLjI1OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuNTsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzk0OwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzk0ID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfOTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF85NC54LCBfOTQueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.armdefault_mesh_vertData0 = "s303:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBtYXQ0IFdWUDsKCmluIHZlYzQgcG9zOwpvdXQgdmVjMyB3bm9ybWFsOwppbiB2ZWMyIG5vcjsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgc3BvcyA9IHZlYzQocG9zLnh5eiwgMS4wKTsKICAgIHdub3JtYWwgPSBub3JtYWxpemUoTiAqIHZlYzMobm9yLCBwb3MudykpOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.armdefault_shadowmap_fragData0 = "s107:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdm9pZCBtYWluKCkKewp9Cgo";
kha_Shaders.armdefault_shadowmap_vertData0 = "s180:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgTFdWUDsKCmluIHZlYzQgcG9zOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MueHl6LCAxLjApOwogICAgZ2xfUG9zaXRpb24gPSBMV1ZQICogc3BvczsKfQoK";
kha_Shaders.blur_edge_pass_fragData0 = "s3175:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlcjA7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBoaWdocCB2ZWMyIGRpckludjsKCmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cm91dCBoaWdocCBmbG9hdCBmcmFnQ29sb3I7CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIHZlYzMgZ2V0Tm9yKGhpZ2hwIHZlYzIgZW5jKQp7CiAgICBoaWdocCB2ZWMzIG47CiAgICBuLnogPSAoMS4wIC0gYWJzKGVuYy54KSkgLSBhYnMoZW5jLnkpOwogICAgaGlnaHAgdmVjMiBfNTM7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfNTMgPSBlbmM7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzUzID0gb2N0YWhlZHJvbldyYXAoZW5jKTsKICAgIH0KICAgIG4gPSB2ZWMzKF81My54LCBfNTMueSwgbi56KTsKICAgIG4gPSBub3JtYWxpemUobik7CiAgICByZXR1cm4gbjsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBub3IgPSBnZXROb3IodGV4dHVyZUxvZChnYnVmZmVyMCwgdGV4Q29vcmQsIDAuMCkueHkpOwogICAgZnJhZ0NvbG9yID0gdGV4dHVyZUxvZCh0ZXgsIHRleENvb3JkLCAwLjApLnggKiAwLjEzMjU3MTk5NTI1ODMzMTI5ODgyODEyNTsKICAgIGhpZ2hwIGZsb2F0IHdlaWdodCA9IDAuMTMyNTcxOTk1MjU4MzMxMjk4ODI4MTI1OwogICAgZm9yIChpbnQgaSA9IDE7IGkgPCA4OyBpKyspCiAgICB7CiAgICAgICAgaGlnaHAgZmxvYXQgcG9zYWRkID0gZmxvYXQoaSk7CiAgICAgICAgaGlnaHAgdmVjMyBub3IyID0gZ2V0Tm9yKHRleHR1cmVMb2QoZ2J1ZmZlcjAsIHRleENvb3JkICsgKGRpckludiAqIGZsb2F0KGkpKSwgMC4wKS54eSk7CiAgICAgICAgaGlnaHAgZmxvYXQgaW5mbHVlbmNlRmFjdG9yID0gc3RlcCgwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSwgZG90KG5vcjIsIG5vcikpOwogICAgICAgIGhpZ2hwIGZsb2F0IGNvbCA9IHRleHR1cmVMb2QodGV4LCB0ZXhDb29yZCArIChkaXJJbnYgKiBwb3NhZGQpLCAwLjApLng7CiAgICAgICAgaGlnaHAgZmxvYXQgaW5kZXhhYmxlWzEwXSA9IGZsb2F0W10oMC4xMzI1NzE5OTUyNTgzMzEyOTg4MjgxMjUsIDAuMTI1NDcxOTk0MjgwODE1MTI0NTExNzE4NzUsIDAuMTA2MzcyOTk3MTY0NzI2MjU3MzI0MjE4NzUsIDAuMDgwNzc5OTk5NDk0NTUyNjEyMzA0Njg3NSwgMC4wNTQ5NDk5OTg4NTU1OTA4MjAzMTI1LCAwLjAzMzQ4MjAwMDIzMTc0Mjg1ODg4NjcxODc1LCAwLjAxODI3NTAwMDE1NDk3MjA3NjQxNjAxNTYyNSwgMC4wMDg5MzM5OTk1NzU2NzQ1MzM4NDM5OTQxNDA2MjUsIDAuMDAzOTExOTk5OTg1NTc1Njc1OTY0MzU1NDY4NzUsIDAuMDAxNTM1MDAwMDQ2NzE1MTQwMzQyNzEyNDAyMzQzNzUpOwogICAgICAgIGhpZ2hwIGZsb2F0IHcgPSBpbmRleGFibGVbaV0gKiBpbmZsdWVuY2VGYWN0b3I7CiAgICAgICAgZnJhZ0NvbG9yICs9IChjb2wgKiB3KTsKICAgICAgICB3ZWlnaHQgKz0gdzsKICAgICAgICBub3IyID0gZ2V0Tm9yKHRleHR1cmVMb2QoZ2J1ZmZlcjAsIHRleENvb3JkIC0gKGRpckludiAqIGZsb2F0KGkpKSwgMC4wKS54eSk7CiAgICAgICAgaW5mbHVlbmNlRmFjdG9yID0gc3RlcCgwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSwgZG90KG5vcjIsIG5vcikpOwogICAgICAgIGNvbCA9IHRleHR1cmVMb2QodGV4LCB0ZXhDb29yZCAtIChkaXJJbnYgKiBwb3NhZGQpLCAwLjApLng7CiAgICAgICAgaGlnaHAgZmxvYXQgaW5kZXhhYmxlXzFbMTBdID0gZmxvYXRbXSgwLjEzMjU3MTk5NTI1ODMzMTI5ODgyODEyNSwgMC4xMjU0NzE5OTQyODA4MTUxMjQ1MTE3MTg3NSwgMC4xMDYzNzI5OTcxNjQ3MjYyNTczMjQyMTg3NSwgMC4wODA3Nzk5OTk0OTQ1NTI2MTIzMDQ2ODc1LCAwLjA1NDk0OTk5ODg1NTU5MDgyMDMxMjUsIDAuMDMzNDgyMDAwMjMxNzQyODU4ODg2NzE4NzUsIDAuMDE4Mjc1MDAwMTU0OTcyMDc2NDE2MDE1NjI1LCAwLjAwODkzMzk5OTU3NTY3NDUzMzg0Mzk5NDE0MDYyNSwgMC4wMDM5MTE5OTk5ODU1NzU2NzU5NjQzNTU0Njg3NSwgMC4wMDE1MzUwMDAwNDY3MTUxNDAzNDI3MTI0MDIzNDM3NSk7CiAgICAgICAgdyA9IGluZGV4YWJsZV8xW2ldICogaW5mbHVlbmNlRmFjdG9yOwogICAgICAgIGZyYWdDb2xvciArPSAoY29sICogdyk7CiAgICAgICAgd2VpZ2h0ICs9IHc7CiAgICB9CiAgICBmcmFnQ29sb3IgLz0gd2VpZ2h0Owp9Cgo";
kha_Shaders.bow_mat_004_mesh_fragData0 = "s2226:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgaWYgKCFnbF9Gcm9udEZhY2luZykKICAgIHsKICAgICAgICBuICo9ICgtMS4wKTsKICAgIH0KICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF8xMjI7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfMTIyID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTIyID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfMTIyLngsIF8xMjIueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.bow_mat_005_mesh_fragData0 = "s2226:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgaWYgKCFnbF9Gcm9udEZhY2luZykKICAgIHsKICAgICAgICBuICo9ICgtMS4wKTsKICAgIH0KICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF8xMjI7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfMTIyID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTIyID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfMTIyLngsIF8xMjIueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.bow_mat_006_mesh_fragData0 = "s2226:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgaWYgKCFnbF9Gcm9udEZhY2luZykKICAgIHsKICAgICAgICBuICo9ICgtMS4wKTsKICAgIH0KICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF8xMjI7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfMTIyID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTIyID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfMTIyLngsIF8xMjIueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.bow_mat_mesh_fragData0 = "s2226:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgaWYgKCFnbF9Gcm9udEZhY2luZykKICAgIHsKICAgICAgICBuICo9ICgtMS4wKTsKICAgIH0KICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF8xMjI7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfMTIyID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTIyID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfMTIyLngsIF8xMjIueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.compositor_pass_fragData0 = "s956:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwoKaGlnaHAgdmVjMyB0b25lbWFwRmlsbWljKGhpZ2hwIHZlYzMgY29sb3IpCnsKICAgIGhpZ2hwIHZlYzMgeCA9IG1heCh2ZWMzKDAuMCksIGNvbG9yIC0gdmVjMygwLjAwNDAwMDAwMDE4OTk4OTgwNTIyMTU1NzYxNzE4NzUpKTsKICAgIHJldHVybiAoeCAqICgoeCAqIDYuMTk5OTk5ODA5MjY1MTM2NzE4NzUpICsgdmVjMygwLjUpKSkgLyAoKHggKiAoKHggKiA2LjE5OTk5OTgwOTI2NTEzNjcxODc1KSArIHZlYzMoMS43MDAwMDAwNDc2ODM3MTU4MjAzMTI1KSkpICsgdmVjMygwLjA1OTk5OTk5ODY1ODg5NTQ5MjU1MzcxMDkzNzUpKTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMiB0ZXhDbyA9IHRleENvb3JkOwogICAgaGlnaHAgdmVjMyBfNTcgPSB0ZXh0dXJlTG9kKHRleCwgdGV4Q28sIDAuMCkueHl6OwogICAgZnJhZ0NvbG9yID0gdmVjNChfNTcueCwgXzU3LnksIF81Ny56LCBmcmFnQ29sb3Iudyk7CiAgICBoaWdocCB2ZWMzIF82MiA9IHRvbmVtYXBGaWxtaWMoZnJhZ0NvbG9yLnh5eik7CiAgICBmcmFnQ29sb3IgPSB2ZWM0KF82Mi54LCBfNjIueSwgXzYyLnosIGZyYWdDb2xvci53KTsKfQoK";
kha_Shaders.compositor_pass_vertData0 = "s203:I3ZlcnNpb24gMzAwIGVzCgpvdXQgdmVjMiB0ZXhDb29yZDsKaW4gdmVjMiBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.deferred_light_fragData0 = "s19366:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWM0IGNhc0RhdGFbMjBdOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXJDdWJlU2hhZG93IHNoYWRvd01hcFBvaW50WzRdOwp1bmlmb3JtIGhpZ2hwIHZlYzIgbGlnaHRQcm9qOwp1bmlmb3JtIGhpZ2hwIHZlYzQgc2hpcnJbN107CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGdidWZmZXIwOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBnYnVmZmVyMTsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CnVuaWZvcm0gaGlnaHAgdmVjMyBleWU7CnVuaWZvcm0gaGlnaHAgdmVjMyBleWVMb29rOwp1bmlmb3JtIGhpZ2hwIHZlYzIgY2FtZXJhUHJvajsKdW5pZm9ybSBoaWdocCB2ZWMzIGJhY2tncm91bmRDb2w7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZW52bWFwU3RyZW5ndGg7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHNzYW90ZXg7CnVuaWZvcm0gaGlnaHAgdmVjMyBzdW5EaXI7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEU2hhZG93IHNoYWRvd01hcDsKdW5pZm9ybSBoaWdocCBmbG9hdCBzaGFkb3dzQmlhczsKdW5pZm9ybSBoaWdocCB2ZWMzIHN1bkNvbDsKdW5pZm9ybSBoaWdocCB2ZWMyIGNhbWVyYVBsYW5lOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBjbHVzdGVyc0RhdGE7CnVuaWZvcm0gaGlnaHAgdmVjNCBsaWdodHNBcnJheVszMl07CgppbiBoaWdocCB2ZWMyIHRleENvb3JkOwppbiBoaWdocCB2ZWMzIHZpZXdSYXk7Cm91dCBoaWdocCB2ZWM0IGZyYWdDb2xvcjsKCmhpZ2hwIHZlYzIgb2N0YWhlZHJvbldyYXAoaGlnaHAgdmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSwgKHYueSA%PSAwLjApID8gMS4wIDogKC0xLjApKTsKfQoKaGlnaHAgdmVjMiB1bnBhY2tGbG9hdChoaWdocCBmbG9hdCBmKQp7CiAgICByZXR1cm4gdmVjMihmbG9vcihmKSAvIDEwMC4wLCBmcmFjdChmKSk7Cn0KCmhpZ2hwIHZlYzIgdW5wYWNrRmxvYXQyKGhpZ2hwIGZsb2F0IGYpCnsKICAgIHJldHVybiB2ZWMyKGZsb29yKGYpIC8gMjU1LjAsIGZyYWN0KGYpKTsKfQoKaGlnaHAgdmVjMyBzdXJmYWNlQWxiZWRvKGhpZ2hwIHZlYzMgYmFzZUNvbG9yLCBoaWdocCBmbG9hdCBtZXRhbG5lc3MpCnsKICAgIHJldHVybiBtaXgoYmFzZUNvbG9yLCB2ZWMzKDAuMCksIHZlYzMobWV0YWxuZXNzKSk7Cn0KCmhpZ2hwIHZlYzMgc3VyZmFjZUYwKGhpZ2hwIHZlYzMgYmFzZUNvbG9yLCBoaWdocCBmbG9hdCBtZXRhbG5lc3MpCnsKICAgIHJldHVybiBtaXgodmVjMygwLjAzOTk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSksIGJhc2VDb2xvciwgdmVjMyhtZXRhbG5lc3MpKTsKfQoKaGlnaHAgdmVjMyBnZXRQb3MoaGlnaHAgdmVjMyBleWVfMSwgaGlnaHAgdmVjMyBleWVMb29rXzEsIGhpZ2hwIHZlYzMgdmlld1JheV8xLCBoaWdocCBmbG9hdCBkZXB0aCwgaGlnaHAgdmVjMiBjYW1lcmFQcm9qXzEpCnsKICAgIGhpZ2hwIGZsb2F0IGxpbmVhckRlcHRoID0gY2FtZXJhUHJval8xLnkgLyAoKChkZXB0aCAqIDAuNSkgKyAwLjUpIC0gY2FtZXJhUHJval8xLngpOwogICAgaGlnaHAgZmxvYXQgdmlld1pEaXN0ID0gZG90KGV5ZUxvb2tfMSwgdmlld1JheV8xKTsKICAgIGhpZ2hwIHZlYzMgd3Bvc2l0aW9uID0gZXllXzEgKyAodmlld1JheV8xICogKGxpbmVhckRlcHRoIC8gdmlld1pEaXN0KSk7CiAgICByZXR1cm4gd3Bvc2l0aW9uOwp9CgpoaWdocCB2ZWMzIHNoSXJyYWRpYW5jZShoaWdocCB2ZWMzIG5vcikKewogICAgaGlnaHAgdmVjMyBjbDAwID0gdmVjMyhzaGlyclswXS54LCBzaGlyclswXS55LCBzaGlyclswXS56KTsKICAgIGhpZ2hwIHZlYzMgY2wxbTEgPSB2ZWMzKHNoaXJyWzBdLncsIHNoaXJyWzFdLngsIHNoaXJyWzFdLnkpOwogICAgaGlnaHAgdmVjMyBjbDEwID0gdmVjMyhzaGlyclsxXS56LCBzaGlyclsxXS53LCBzaGlyclsyXS54KTsKICAgIGhpZ2hwIHZlYzMgY2wxMSA9IHZlYzMoc2hpcnJbMl0ueSwgc2hpcnJbMl0ueiwgc2hpcnJbMl0udyk7CiAgICBoaWdocCB2ZWMzIGNsMm0yID0gdmVjMyhzaGlyclszXS54LCBzaGlyclszXS55LCBzaGlyclszXS56KTsKICAgIGhpZ2hwIHZlYzMgY2wybTEgPSB2ZWMzKHNoaXJyWzNdLncsIHNoaXJyWzRdLngsIHNoaXJyWzRdLnkpOwogICAgaGlnaHAgdmVjMyBjbDIwID0gdmVjMyhzaGlycls0XS56LCBzaGlycls0XS53LCBzaGlycls1XS54KTsKICAgIGhpZ2hwIHZlYzMgY2wyMSA9IHZlYzMoc2hpcnJbNV0ueSwgc2hpcnJbNV0ueiwgc2hpcnJbNV0udyk7CiAgICBoaWdocCB2ZWMzIGNsMjIgPSB2ZWMzKHNoaXJyWzZdLngsIHNoaXJyWzZdLnksIHNoaXJyWzZdLnopOwogICAgcmV0dXJuICgoKCgoKCgoKChjbDIyICogMC40MjkwNDI5OTQ5NzYwNDM3MDExNzE4NzUpICogKChub3IueSAqIG5vci55KSAtICgoLW5vci56KSAqICgtbm9yLnopKSkpICsgKCgoY2wyMCAqIDAuNzQzMTI1MDIxNDU3NjcyMTE5MTQwNjI1KSAqIG5vci54KSAqIG5vci54KSkgKyAoY2wwMCAqIDAuODg2MjI3MDExNjgwNjAzMDI3MzQzNzUpKSAtIChjbDIwICogMC4yNDc3MDc5OTI3OTIxMjk1MTY2MDE1NjI1KSkgKyAoKChjbDJtMiAqIDAuODU4MDg1OTg5OTUyMDg3NDAyMzQzNzUpICogbm9yLnkpICogKC1ub3IueikpKSArICgoKGNsMjEgKiAwLjg1ODA4NTk4OTk1MjA4NzQwMjM0Mzc1KSAqIG5vci55KSAqIG5vci54KSkgKyAoKChjbDJtMSAqIDAuODU4MDg1OTg5OTUyMDg3NDAyMzQzNzUpICogKC1ub3IueikpICogbm9yLngpKSArICgoY2wxMSAqIDEuMDIzMzI3OTQ2NjYyOTAyODMyMDMxMjUpICogbm9yLnkpKSArICgoY2wxbTEgKiAxLjAyMzMyNzk0NjY2MjkwMjgzMjAzMTI1KSAqICgtbm9yLnopKSkgKyAoKGNsMTAgKiAxLjAyMzMyNzk0NjY2MjkwMjgzMjAzMTI1KSAqIG5vci54KTsKfQoKaGlnaHAgdmVjMyBsYW1iZXJ0RGlmZnVzZUJSREYoaGlnaHAgdmVjMyBhbGJlZG8sIGhpZ2hwIGZsb2F0IG5sKQp7CiAgICByZXR1cm4gYWxiZWRvICogbWF4KDAuMCwgbmwpOwp9CgpoaWdocCBmbG9hdCBkX2dneChoaWdocCBmbG9hdCBuaCwgaGlnaHAgZmxvYXQgYSkKewogICAgaGlnaHAgZmxvYXQgYTIgPSBhICogYTsKICAgIGhpZ2hwIGZsb2F0IGRlbm9tID0gcG93KCgobmggKiBuaCkgKiAoYTIgLSAxLjApKSArIDEuMCwgMi4wKTsKICAgIHJldHVybiAoYTIgKiAwLjMxODMwOTg3MzM0MjUxNDAzODA4NTkzNzUpIC8gZGVub207Cn0KCmhpZ2hwIGZsb2F0IHZfc21pdGhzY2hsaWNrKGhpZ2hwIGZsb2F0IG5sLCBoaWdocCBmbG9hdCBudiwgaGlnaHAgZmxvYXQgYSkKewogICAgcmV0dXJuIDEuMCAvICgoKG5sICogKDEuMCAtIGEpKSArIGEpICogKChudiAqICgxLjAgLSBhKSkgKyBhKSk7Cn0KCmhpZ2hwIHZlYzMgZl9zY2hsaWNrKGhpZ2hwIHZlYzMgZjAsIGhpZ2hwIGZsb2F0IHZoKQp7CiAgICByZXR1cm4gZjAgKyAoKHZlYzMoMS4wKSAtIGYwKSAqIGV4cDIoKCgoLTUuNTU0NzI5OTM4NTA3MDgwMDc4MTI1KSAqIHZoKSAtIDYuOTgzMTYwMDE4OTIwODk4NDM3NSkgKiB2aCkpOwp9CgpoaWdocCB2ZWMzIHNwZWN1bGFyQlJERihoaWdocCB2ZWMzIGYwLCBoaWdocCBmbG9hdCByb3VnaG5lc3MsIGhpZ2hwIGZsb2F0IG5sLCBoaWdocCBmbG9hdCBuaCwgaGlnaHAgZmxvYXQgbnYsIGhpZ2hwIGZsb2F0IHZoKQp7CiAgICBoaWdocCBmbG9hdCBhID0gcm91Z2huZXNzICogcm91Z2huZXNzOwogICAgcmV0dXJuIChmX3NjaGxpY2soZjAsIHZoKSAqIChkX2dneChuaCwgYSkgKiBjbGFtcCh2X3NtaXRoc2NobGljayhubCwgbnYsIGEpLCAwLjAsIDEuMCkpKSAvIHZlYzMoNC4wKTsKfQoKaGlnaHAgbWF0NCBnZXRDYXNjYWRlTWF0KGhpZ2hwIGZsb2F0IGQsIGlub3V0IGludCBjYXNpLCBpbm91dCBpbnQgY2FzSW5kZXgpCnsKICAgIGhpZ2hwIHZlYzQgY29tcCA9IHZlYzQoZmxvYXQoZCA%IGNhc0RhdGFbMTZdLngpLCBmbG9hdChkID4gY2FzRGF0YVsxNl0ueSksIGZsb2F0KGQgPiBjYXNEYXRhWzE2XS56KSwgZmxvYXQoZCA%%PSAwLjApCiAgICB7CiAgICAgICAgXzEwOTAgPSBnMC54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTA5MCA9IG9jdGFoZWRyb25XcmFwKGcwLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMDkwLngsIF8xMDkwLnksIG4ueik7CiAgICBuID0gbm9ybWFsaXplKG4pOwogICAgaGlnaHAgdmVjMiBtZXRyb3VnaCA9IHVucGFja0Zsb2F0KGcwLnopOwogICAgaGlnaHAgdmVjNCBnMSA9IHRleHR1cmVMb2QoZ2J1ZmZlcjEsIHRleENvb3JkLCAwLjApOwogICAgaGlnaHAgdmVjMiBvY2NzcGVjID0gdW5wYWNrRmxvYXQyKGcxLncpOwogICAgaGlnaHAgdmVjMyBhbGJlZG8gPSBzdXJmYWNlQWxiZWRvKGcxLnh5eiwgbWV0cm91Z2gueCk7CiAgICBoaWdocCB2ZWMzIGYwID0gc3VyZmFjZUYwKGcxLnh5eiwgbWV0cm91Z2gueCk7CiAgICBoaWdocCBmbG9hdCBkZXB0aCA9ICh0ZXh0dXJlTG9kKGdidWZmZXJELCB0ZXhDb29yZCwgMC4wKS54ICogMi4wKSAtIDEuMDsKICAgIGhpZ2hwIHZlYzMgcCA9IGdldFBvcyhleWUsIGV5ZUxvb2ssIG5vcm1hbGl6ZSh2aWV3UmF5KSwgZGVwdGgsIGNhbWVyYVByb2opOwogICAgaGlnaHAgdmVjMyB2ID0gbm9ybWFsaXplKGV5ZSAtIHApOwogICAgaGlnaHAgZmxvYXQgZG90TlYgPSBtYXgoZG90KG4sIHYpLCAwLjApOwogICAgaGlnaHAgdmVjMyBlbnZsID0gc2hJcnJhZGlhbmNlKG4pOwogICAgZW52bCAqPSBhbGJlZG87CiAgICBlbnZsICs9IChiYWNrZ3JvdW5kQ29sICogc3VyZmFjZUYwKGcxLnh5eiwgbWV0cm91Z2gueCkpOwogICAgZW52bCAqPSAoZW52bWFwU3RyZW5ndGggKiBvY2NzcGVjLngpOwogICAgZnJhZ0NvbG9yID0gdmVjNChlbnZsLngsIGVudmwueSwgZW52bC56LCBmcmFnQ29sb3Iudyk7CiAgICBoaWdocCB2ZWMzIF8xMTk2ID0gZnJhZ0NvbG9yLnh5eiAqIHRleHR1cmVMb2Qoc3Nhb3RleCwgdGV4Q29vcmQsIDAuMCkueDsKICAgIGZyYWdDb2xvciA9IHZlYzQoXzExOTYueCwgXzExOTYueSwgXzExOTYueiwgZnJhZ0NvbG9yLncpOwogICAgaWYgKGcwLncgPT0gMS4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzMgXzEyMDggPSBmcmFnQ29sb3IueHl6ICsgZzEueHl6OwogICAgICAgIGZyYWdDb2xvciA9IHZlYzQoXzEyMDgueCwgXzEyMDgueSwgXzEyMDgueiwgZnJhZ0NvbG9yLncpOwogICAgICAgIGFsYmVkbyA9IHZlYzMoMC4wKTsKICAgIH0KICAgIGhpZ2hwIHZlYzMgc2ggPSBub3JtYWxpemUodiArIHN1bkRpcik7CiAgICBoaWdocCBmbG9hdCBzZG90TkggPSBkb3Qobiwgc2gpOwogICAgaGlnaHAgZmxvYXQgc2RvdFZIID0gZG90KHYsIHNoKTsKICAgIGhpZ2hwIGZsb2F0IHNkb3ROTCA9IGRvdChuLCBzdW5EaXIpOwogICAgaGlnaHAgZmxvYXQgc3Zpc2liaWxpdHkgPSAxLjA7CiAgICBoaWdocCB2ZWMzIHNkaXJlY3QgPSBsYW1iZXJ0RGlmZnVzZUJSREYoYWxiZWRvLCBzZG90TkwpICsgKHNwZWN1bGFyQlJERihmMCwgbWV0cm91Z2gueSwgc2RvdE5MLCBzZG90TkgsIGRvdE5WLCBzZG90VkgpICogb2Njc3BlYy55KTsKICAgIHN2aXNpYmlsaXR5ID0gc2hhZG93VGVzdENhc2NhZGUoc2hhZG93TWFwLCBleWUsIHAgKyAoKG4gKiBzaGFkb3dzQmlhcykgKiAxMC4wKSwgc2hhZG93c0JpYXMpOwogICAgaGlnaHAgdmVjMyBfMTI2NiA9IGZyYWdDb2xvci54eXogKyAoKHNkaXJlY3QgKiBzdmlzaWJpbGl0eSkgKiBzdW5Db2wpOwogICAgZnJhZ0NvbG9yID0gdmVjNChfMTI2Ni54LCBfMTI2Ni55LCBfMTI2Ni56LCBmcmFnQ29sb3Iudyk7CiAgICBoaWdocCB2ZWMyIHBhcmFtID0gY2FtZXJhUHJvajsKICAgIGhpZ2hwIGZsb2F0IHZpZXd6ID0gbGluZWFyaXplKChkZXB0aCAqIDAuNSkgKyAwLjUsIHBhcmFtKTsKICAgIGhpZ2hwIHZlYzIgcGFyYW1fMSA9IHRleENvb3JkOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMiA9IHZpZXd6OwogICAgaGlnaHAgdmVjMiBwYXJhbV8zID0gY2FtZXJhUGxhbmU7CiAgICBpbnQgY2x1c3RlckkgPSBnZXRDbHVzdGVySShwYXJhbV8xLCBwYXJhbV8yLCBwYXJhbV8zKTsKICAgIGludCBudW1MaWdodHMgPSBpbnQodGV4ZWxGZXRjaChjbHVzdGVyc0RhdGEsIGl2ZWMyKGNsdXN0ZXJJLCAwKSwgMCkueCAqIDI1NS4wKTsKICAgIGZvciAoaW50IGkgPSAwOyBpIDwgbWluKG51bUxpZ2h0cywgNCk7IGkrKykKICAgIHsKICAgICAgICBpbnQgbGkgPSBpbnQodGV4ZWxGZXRjaChjbHVzdGVyc0RhdGEsIGl2ZWMyKGNsdXN0ZXJJLCBpICsgMSksIDApLnggKiAyNTUuMCk7CiAgICAgICAgaW50IHBhcmFtXzQgPSBsaTsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV81ID0gbGlnaHRzQXJyYXlbbGkgKiAyXS53OwogICAgICAgIGhpZ2hwIHZlYzMgXzEzNTIgPSBmcmFnQ29sb3IueHl6ICsgc2FtcGxlTGlnaHQocCwgbiwgdiwgZG90TlYsIChsaWdodHNBcnJheVtsaSAqIDJdKS54eXosIChsaWdodHNBcnJheVsobGkgKiAyKSArIDFdKS54eXosIGFsYmVkbywgbWV0cm91Z2gueSwgb2Njc3BlYy55LCBmMCwgcGFyYW1fNCwgcGFyYW1fNSk7CiAgICAgICAgZnJhZ0NvbG9yID0gdmVjNChfMTM1Mi54LCBfMTM1Mi55LCBfMTM1Mi56LCBmcmFnQ29sb3Iudyk7CiAgICB9Cn0KCg";
kha_Shaders.enemy_arrow_mat_mesh_fragData0 = "s2226:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgaWYgKCFnbF9Gcm9udEZhY2luZykKICAgIHsKICAgICAgICBuICo9ICgtMS4wKTsKICAgIH0KICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF8xMjI7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfMTIyID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTIyID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfMTIyLngsIF8xMjIueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.enemy_mat_armskin_mesh_fragData0 = "s2148:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzExNDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMTQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMTQueCwgXzExNC55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.enemy_mat_mesh_fragData0 = "s2148:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzExNDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMTQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMTQueCwgXzExNC55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.grassMat_mesh_fragData0 = "s1718:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjAwMzM3MjMzMzk0Mzg0Mzg0MTU1MjczNDM3NSwgMC4xNzg0OTg5MDg4NzczNzI3NDE2OTkyMTg3NSwgMC4wKTsKICAgIGhpZ2hwIGZsb2F0IHJvdWdobmVzcyA9IDEuMDsKICAgIGhpZ2hwIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgaGlnaHAgZmxvYXQgc3BlY3VsYXIgPSAwLjA3NDk0MTQ0ODg2NzMyMTAxNDQwNDI5Njg3NTsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzk0OwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzk0ID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfOTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF85NC54LCBfOTQueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.line_deferred_fragData0 = "s284:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yWzJdOwppbiBoaWdocCB2ZWMzIGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZnJhZ0NvbG9yWzBdID0gdmVjNCgxLjAsIDEuMCwgMC4wLCAxLjApOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChjb2xvciwgMS4wKTsKfQoK";
kha_Shaders.line_fragData0 = "s216:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwppbiBoaWdocCB2ZWMzIGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZnJhZ0NvbG9yID0gdmVjNChjb2xvciwgMS4wKTsKfQoK";
kha_Shaders.line_vertData0 = "s202:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgVlA7CgpvdXQgdmVjMyBjb2xvcjsKaW4gdmVjMyBjb2w7CmluIHZlYzMgcG9zOwoKdm9pZCBtYWluKCkKewogICAgY29sb3IgPSBjb2w7CiAgICBnbF9Qb3NpdGlvbiA9IFZQICogdmVjNChwb3MsIDEuMCk7Cn0KCg";
kha_Shaders.painter_colored_fragData0 = "s223:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSBmcmFnbWVudENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData0 = "s311:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData0 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData0 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_fragData0 = "s367:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSB2ZWM0KGZyYWdtZW50Q29sb3IueHl6LCB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_vertData0 = "s402:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBmcmFnbWVudENvbG9yOwppbiB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_video_fragData0 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData0 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.pass_vertData0 = "s203:I3ZlcnNpb24gMzAwIGVzCgpvdXQgdmVjMiB0ZXhDb29yZDsKaW4gdmVjMiBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.pass_viewray_vertData0 = "s504:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgaW52VlA7CnVuaWZvcm0gdmVjMyBleWU7CgpvdXQgdmVjMiB0ZXhDb29yZDsKaW4gdmVjMiBwb3M7Cm91dCB2ZWMzIHZpZXdSYXk7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwogICAgdmVjNCB2ID0gdmVjNChwb3MueCwgcG9zLnksIDEuMCwgMS4wKTsKICAgIHYgPSB2ZWM0KGludlZQICogdik7CiAgICB2ZWMzIF82MiA9IHYueHl6IC8gdmVjMyh2LncpOwogICAgdiA9IHZlYzQoXzYyLngsIF82Mi55LCBfNjIueiwgdi53KTsKICAgIHZpZXdSYXkgPSB2Lnh5eiAtIGV5ZTsKfQoK";
kha_Shaders.player_arrow_mat_006_mesh_fragData0 = "s2226:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgaWYgKCFnbF9Gcm9udEZhY2luZykKICAgIHsKICAgICAgICBuICo9ICgtMS4wKTsKICAgIH0KICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF8xMjI7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfMTIyID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTIyID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfMTIyLngsIF8xMjIueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.player_arrow_mat_008_mesh_fragData0 = "s2226:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgaWYgKCFnbF9Gcm9udEZhY2luZykKICAgIHsKICAgICAgICBuICo9ICgtMS4wKTsKICAgIH0KICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF8xMjI7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfMTIyID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTIyID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfMTIyLngsIF8xMjIueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.player_arrow_mat_009_mesh_fragData0 = "s2226:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgaWYgKCFnbF9Gcm9udEZhY2luZykKICAgIHsKICAgICAgICBuICo9ICgtMS4wKTsKICAgIH0KICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF8xMjI7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfMTIyID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTIyID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfMTIyLngsIF8xMjIueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.player_arrow_mat_mesh_fragData0 = "s2226:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgaWYgKCFnbF9Gcm9udEZhY2luZykKICAgIHsKICAgICAgICBuICo9ICgtMS4wKTsKICAgIH0KICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF8xMjI7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfMTIyID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTIyID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfMTIyLngsIF8xMjIueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.player_mat_001_mesh_fragData0 = "s2148:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzExNDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMTQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMTQueCwgXzExNC55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.player_mat_002_mesh_fragData0 = "s2148:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzExNDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMTQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMTQueCwgXzExNC55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.player_mat_003_mesh_fragData0 = "s2148:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzExNDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMTQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMTQueCwgXzExNC55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.player_mat_armskin_mesh_fragData0 = "s2148:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzExNDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMTQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMTQueCwgXzExNC55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.player_mat_mesh_fragData0 = "s2148:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgSW1hZ2VUZXh0dXJlOwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjNCBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHRleHR1cmUoSW1hZ2VUZXh0dXJlLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF84MCA9IHBvdyhJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXosIHZlYzMoMi4yMDAwMDAwNDc2ODM3MTU4MjAzMTI1KSk7CiAgICBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZSA9IHZlYzQoXzgwLngsIF84MC55LCBfODAueiwgSW1hZ2VUZXh0dXJlX3RleHJlYWRfc3RvcmUudyk7CiAgICBoaWdocCB2ZWMzIEltYWdlVGV4dHVyZV9Db2xvcl9yZXMgPSBJbWFnZVRleHR1cmVfdGV4cmVhZF9zdG9yZS54eXo7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBJbWFnZVRleHR1cmVfQ29sb3JfcmVzOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC41OwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMC4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzExNDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMTQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMTQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMTQueCwgXzExNC55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.sky_mat_mesh_fragData0 = "s7780:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgc25vaXNlMjU2OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMzIGJwb3NpdGlvbjsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yWzJdOwoKaGlnaHAgZmxvYXQgaGFzaChoaWdocCBmbG9hdCBuKQp7CiAgICByZXR1cm4gZnJhY3Qoc2luKG4pICogMTAwMDAuMCk7Cn0KCmhpZ2hwIGZsb2F0IHRleF9ub2lzZV9mKGhpZ2hwIHZlYzMgeCkKewogICAgaGlnaHAgdmVjMyBpID0gZmxvb3IoeCk7CiAgICBoaWdocCB2ZWMzIGYgPSBmcmFjdCh4KTsKICAgIGhpZ2hwIGZsb2F0IG4gPSBkb3QoaSwgdmVjMygxMTAuMCwgMjQxLjAsIDE3MS4wKSk7CiAgICBoaWdocCB2ZWMzIHUgPSAoZiAqIGYpICogKHZlYzMoMy4wKSAtIChmICogMi4wKSk7CiAgICBoaWdocCBmbG9hdCBwYXJhbSA9IG4gKyAwLjA7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8xID0gbiArIDExMC4wOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMiA9IG4gKyAyNDEuMDsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzMgPSBuICsgMzUxLjA7CiAgICBoaWdocCBmbG9hdCBwYXJhbV80ID0gbiArIDE3MS4wOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fNSA9IG4gKyAyODEuMDsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzYgPSBuICsgNDEyLjA7CiAgICBoaWdocCBmbG9hdCBwYXJhbV83ID0gbiArIDUyMi4wOwogICAgcmV0dXJuIG1peChtaXgobWl4KGhhc2gocGFyYW0pLCBoYXNoKHBhcmFtXzEpLCB1LngpLCBtaXgoaGFzaChwYXJhbV8yKSwgaGFzaChwYXJhbV8zKSwgdS54KSwgdS55KSwgbWl4KG1peChoYXNoKHBhcmFtXzQpLCBoYXNoKHBhcmFtXzUpLCB1LngpLCBtaXgoaGFzaChwYXJhbV82KSwgaGFzaChwYXJhbV83KSwgdS54KSwgdS55KSwgdS56KTsKfQoKaGlnaHAgZmxvYXQgdGV4X25vaXNlKGlub3V0IGhpZ2hwIHZlYzMgcCkKewogICAgcCAqPSAxLjI1OwogICAgaGlnaHAgdmVjMyBwYXJhbSA9IHA7CiAgICBoaWdocCBmbG9hdCBmID0gMC41ICogdGV4X25vaXNlX2YocGFyYW0pOwogICAgcCAqPSAyLjAwOTk5OTk5MDQ2MzI1NjgzNTkzNzU7CiAgICBoaWdocCB2ZWMzIHBhcmFtXzEgPSBwOwogICAgZiArPSAoMC4yNSAqIHRleF9ub2lzZV9mKHBhcmFtXzEpKTsKICAgIHAgKj0gMi4wMTk5OTk5ODA5MjY1MTM2NzE4NzU7CiAgICBoaWdocCB2ZWMzIHBhcmFtXzIgPSBwOwogICAgZiArPSAoMC4xMjUgKiB0ZXhfbm9pc2VfZihwYXJhbV8yKSk7CiAgICBwICo9IDIuMDI5OTk5OTcxMzg5NzcwNTA3ODEyNTsKICAgIGhpZ2hwIHZlYzMgcGFyYW1fMyA9IHA7CiAgICBmICs9ICgwLjA2MjUgKiB0ZXhfbm9pc2VfZihwYXJhbV8zKSk7CiAgICByZXR1cm4gMS4wIC0gZjsKfQoKaGlnaHAgdmVjNCB0ZXhfdm9yb25vaShoaWdocCB2ZWMzIHgpCnsKICAgIGhpZ2hwIHZlYzMgcCA9IGZsb29yKHgpOwogICAgaGlnaHAgdmVjMyBmID0gZnJhY3QoeCk7CiAgICBoaWdocCBmbG9hdCBpZCA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IHJlcyA9IDEwMC4wOwogICAgZm9yIChpbnQgayA9IC0xOyBrIDw9IDE7IGsrKykKICAgIHsKICAgICAgICBmb3IgKGludCBqID0gLTE7IGogPD0gMTsgaisrKQogICAgICAgIHsKICAgICAgICAgICAgZm9yIChpbnQgaSA9IC0xOyBpIDw9IDE7IGkrKykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaGlnaHAgdmVjMyBiID0gdmVjMyhmbG9hdChpKSwgZmxvYXQoaiksIGZsb2F0KGspKTsKICAgICAgICAgICAgICAgIGhpZ2hwIHZlYzMgcGIgPSBwICsgYjsKICAgICAgICAgICAgICAgIGhpZ2hwIHZlYzMgciA9ICh2ZWMzKGIpIC0gZikgKyB0ZXh0dXJlKHNub2lzZTI1NiwgKChwYi54eSArICh2ZWMyKDMuMCwgMS4wKSAqIHBiLnopKSArIHZlYzIoMC41KSkgLyB2ZWMyKDI1Ni4wKSkueHl6OwogICAgICAgICAgICAgICAgaGlnaHAgZmxvYXQgZCA9IGRvdChyLCByKTsKICAgICAgICAgICAgICAgIGlmIChkIDwgcmVzKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGlkID0gZG90KHAgKyBiLCB2ZWMzKDEuMCwgNTcuMCwgMTEzLjApKTsKICAgICAgICAgICAgICAgICAgICByZXMgPSBkOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgaGlnaHAgdmVjMyBjb2wgPSB2ZWMzKDAuNSkgKyAoY29zKHZlYzMoaWQgKiAwLjM0OTk5OTk5NDAzOTUzNTUyMjQ2MDkzNzUpICsgdmVjMygwLjAsIDEuMCwgMi4wKSkgKiAwLjUpOwogICAgcmV0dXJuIHZlYzQoY29sLCBzcXJ0KHJlcykpOwp9CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBUZXh0dXJlQ29vcmRpbmF0ZV9HZW5lcmF0ZWRfcmVzID0gYnBvc2l0aW9uOwogICAgaGlnaHAgdmVjMyBNYXBwaW5nX1ZlY3Rvcl9yZXMgPSBUZXh0dXJlQ29vcmRpbmF0ZV9HZW5lcmF0ZWRfcmVzOwogICAgaGlnaHAgdmVjMyBwYXJhbSA9IE1hcHBpbmdfVmVjdG9yX3JlcyAqIDQuMDk5OTk5OTA0NjMyNTY4MzU5Mzc1OwogICAgaGlnaHAgZmxvYXQgXzM0MiA9IHRleF9ub2lzZShwYXJhbSk7CiAgICBoaWdocCB2ZWMzIHBhcmFtXzEgPSAoTWFwcGluZ19WZWN0b3JfcmVzICogNC4wOTk5OTk5MDQ2MzI1NjgzNTkzNzUpICsgdmVjMygwLjMzMDAwMDAxMzExMzAyMTg1MDU4NTkzNzUpOwogICAgaGlnaHAgZmxvYXQgXzM0OSA9IHRleF9ub2lzZShwYXJhbV8xKTsKICAgIGhpZ2hwIHZlYzMgcGFyYW1fMiA9IChNYXBwaW5nX1ZlY3Rvcl9yZXMgKiA0LjA5OTk5OTkwNDYzMjU2ODM1OTM3NSkgKyB2ZWMzKDAuNjYwMDAwMDI2MjI2MDQzNzAxMTcxODc1KTsKICAgIGhpZ2hwIGZsb2F0IF8zNTYgPSB0ZXhfbm9pc2UocGFyYW1fMik7CiAgICBoaWdocCB2ZWMzIE5vaXNlVGV4dHVyZV9Db2xvcl9yZXMgPSB2ZWMzKF8zNDIsIF8zNDksIF8zNTYpOwogICAgaGlnaHAgdmVjMyBDb2xvclJhbXBfY29sc1syXTsKICAgIENvbG9yUmFtcF9jb2xzWzBdID0gdmVjMygwLjApOwogICAgQ29sb3JSYW1wX2NvbHNbMV0gPSB2ZWMzKDEuMCk7CiAgICBoaWdocCBmbG9hdCBDb2xvclJhbXBfZmFjID0gTm9pc2VUZXh0dXJlX0NvbG9yX3Jlcy54OwogICAgaW50IENvbG9yUmFtcF9pID0gMCArIGludChDb2xvclJhbXBfZmFjID4gMS4wKTsKICAgIGhpZ2hwIGZsb2F0IENvbG9yUmFtcF9mYWNzWzJdOwogICAgQ29sb3JSYW1wX2ZhY3NbMF0gPSAwLjA7CiAgICBDb2xvclJhbXBfZmFjc1sxXSA9IDEuMDsKICAgIGhpZ2hwIHZlYzMgQ29sb3JSYW1wX0NvbG9yX3JlcyA9IG1peChDb2xvclJhbXBfY29sc1tDb2xvclJhbXBfaV0sIENvbG9yUmFtcF9jb2xzW0NvbG9yUmFtcF9pICsgMV0sIHZlYzMoKENvbG9yUmFtcF9mYWMgLSBDb2xvclJhbXBfZmFjc1tDb2xvclJhbXBfaV0pICogKDEuMCAvICgoQ29sb3JSYW1wX2ZhY3NbQ29sb3JSYW1wX2kgKyAxXSkgLSBDb2xvclJhbXBfZmFjc1tDb2xvclJhbXBfaV0pKSkpOwogICAgaGlnaHAgdmVjMyBNYXBwaW5nXzAwMV9WZWN0b3JfcmVzID0gQ29sb3JSYW1wX0NvbG9yX3JlczsKICAgIGhpZ2hwIHZlYzMgVm9yb25vaVRleHR1cmVfQ29sb3JfcmVzID0gdmVjMyh0ZXhfdm9yb25vaShNYXBwaW5nXzAwMV9WZWN0b3JfcmVzICogKC0xLjEwMDAwMDAyMzg0MTg1NzkxMDE1NjI1KSkudyk7CiAgICBoaWdocCB2ZWMzIENvbG9yUmFtcF8wMDFfY29sc1s0XTsKICAgIENvbG9yUmFtcF8wMDFfY29sc1swXSA9IHZlYzMoMC4wLCAwLjE2NTczNjg5ODc3OTg2OTA3OTU4OTg0Mzc1LCAxLjApOwogICAgQ29sb3JSYW1wXzAwMV9jb2xzWzFdID0gdmVjMygwLjAsIDAuMTY1NzM2ODk4Nzc5ODY5MDc5NTg5ODQzNzUsIDEuMCk7CiAgICBDb2xvclJhbXBfMDAxX2NvbHNbMl0gPSB2ZWMzKDAuOTk1NzQ3Njg1NDMyNDM0MDgyMDMxMjUpOwogICAgQ29sb3JSYW1wXzAwMV9jb2xzWzNdID0gdmVjMygwLjk4ODY2OTQ1NTA1MTQyMjExOTE0MDYyNSwgMC45OTM2ODk3MTU4NjIyNzQxNjk5MjE4NzUsIDEuMCk7CiAgICBoaWdocCBmbG9hdCBDb2xvclJhbXBfMDAxX2ZhYyA9IFZvcm9ub2lUZXh0dXJlX0NvbG9yX3Jlcy54OwogICAgaW50IENvbG9yUmFtcF8wMDFfaSA9ICgoMCArIGludChDb2xvclJhbXBfMDAxX2ZhYyA%IDAuNDUzNjgxOTE1OTk4NDU4ODYyMzA0Njg3NSkpICsgaW50KENvbG9yUmFtcF8wMDFfZmFjID4gMC45NTQ1NDgyMzk3MDc5NDY3NzczNDM3NSkpICsgaW50KENvbG9yUmFtcF8wMDFfZmFjID4gMS4wKTsKICAgIGhpZ2hwIGZsb2F0IENvbG9yUmFtcF8wMDFfZmFjc1s0XTsKICAgIENvbG9yUmFtcF8wMDFfZmFjc1swXSA9IDAuMDsKICAgIENvbG9yUmFtcF8wMDFfZmFjc1sxXSA9IDAuNDUzNjgxOTE1OTk4NDU4ODYyMzA0Njg3NTsKICAgIENvbG9yUmFtcF8wMDFfZmFjc1syXSA9IDAuOTU0NTQ4MjM5NzA3OTQ2Nzc3MzQzNzU7CiAgICBDb2xvclJhbXBfMDAxX2ZhY3NbM10gPSAxLjA7CiAgICBoaWdocCB2ZWMzIENvbG9yUmFtcF8wMDFfQ29sb3JfcmVzID0gbWl4KENvbG9yUmFtcF8wMDFfY29sc1tDb2xvclJhbXBfMDAxX2ldLCBDb2xvclJhbXBfMDAxX2NvbHNbQ29sb3JSYW1wXzAwMV9pICsgMV0sIHZlYzMoKENvbG9yUmFtcF8wMDFfZmFjIC0gQ29sb3JSYW1wXzAwMV9mYWNzW0NvbG9yUmFtcF8wMDFfaV0pICogKDEuMCAvICgoQ29sb3JSYW1wXzAwMV9mYWNzW0NvbG9yUmFtcF8wMDFfaSArIDFdKSAtIENvbG9yUmFtcF8wMDFfZmFjc1tDb2xvclJhbXBfMDAxX2ldKSkpKTsKICAgIGhpZ2hwIHZlYzMgYmFzZWNvbCA9IENvbG9yUmFtcF8wMDFfQ29sb3JfcmVzICogMS4wOwogICAgaGlnaHAgZmxvYXQgcm91Z2huZXNzID0gMC4wOwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDEuMDsKICAgIGhpZ2hwIGZsb2F0IGVtaXNzaW9uID0gMS4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzUwNzsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF81MDcgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF81MDcgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF81MDcueCwgXzUwNy55LCBuLnopOwogICAgaGlnaHAgZmxvYXQgbWF0aWQgPSAwLjA7CiAgICBpZiAoZW1pc3Npb24gPiAwLjApCiAgICB7CiAgICAgICAgbWF0aWQgPSAxLjA7CiAgICB9CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgbWF0aWQpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.sky_mat_mesh_vertData0 = "s486:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIGZsb2F0IHBvc1VucGFjazsKdW5pZm9ybSB2ZWMzIGhkaW07CnVuaWZvcm0gdmVjMyBkaW07CnVuaWZvcm0gbWF0MyBOOwp1bmlmb3JtIG1hdDQgV1ZQOwoKaW4gdmVjNCBwb3M7Cm91dCB2ZWMzIGJwb3NpdGlvbjsKb3V0IHZlYzMgd25vcm1hbDsKaW4gdmVjMiBub3I7Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWM0IHNwb3MgPSB2ZWM0KHBvcy54eXosIDEuMCk7CiAgICBicG9zaXRpb24gPSAoKHNwb3MueHl6ICogcG9zVW5wYWNrKSArIGhkaW0pIC8gZGltOwogICAgd25vcm1hbCA9IG5vcm1hbGl6ZShOICogdmVjMyhub3IsIHBvcy53KSk7CiAgICBnbF9Qb3NpdGlvbiA9IFdWUCAqIHNwb3M7Cn0KCg";
kha_Shaders.sky_mid_mat_mesh_fragData0 = "s7911:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgc25vaXNlMjU2OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMzIGJwb3NpdGlvbjsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yWzJdOwoKaGlnaHAgZmxvYXQgaGFzaChoaWdocCBmbG9hdCBuKQp7CiAgICByZXR1cm4gZnJhY3Qoc2luKG4pICogMTAwMDAuMCk7Cn0KCmhpZ2hwIGZsb2F0IHRleF9ub2lzZV9mKGhpZ2hwIHZlYzMgeCkKewogICAgaGlnaHAgdmVjMyBpID0gZmxvb3IoeCk7CiAgICBoaWdocCB2ZWMzIGYgPSBmcmFjdCh4KTsKICAgIGhpZ2hwIGZsb2F0IG4gPSBkb3QoaSwgdmVjMygxMTAuMCwgMjQxLjAsIDE3MS4wKSk7CiAgICBoaWdocCB2ZWMzIHUgPSAoZiAqIGYpICogKHZlYzMoMy4wKSAtIChmICogMi4wKSk7CiAgICBoaWdocCBmbG9hdCBwYXJhbSA9IG4gKyAwLjA7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8xID0gbiArIDExMC4wOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMiA9IG4gKyAyNDEuMDsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzMgPSBuICsgMzUxLjA7CiAgICBoaWdocCBmbG9hdCBwYXJhbV80ID0gbiArIDE3MS4wOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fNSA9IG4gKyAyODEuMDsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzYgPSBuICsgNDEyLjA7CiAgICBoaWdocCBmbG9hdCBwYXJhbV83ID0gbiArIDUyMi4wOwogICAgcmV0dXJuIG1peChtaXgobWl4KGhhc2gocGFyYW0pLCBoYXNoKHBhcmFtXzEpLCB1LngpLCBtaXgoaGFzaChwYXJhbV8yKSwgaGFzaChwYXJhbV8zKSwgdS54KSwgdS55KSwgbWl4KG1peChoYXNoKHBhcmFtXzQpLCBoYXNoKHBhcmFtXzUpLCB1LngpLCBtaXgoaGFzaChwYXJhbV82KSwgaGFzaChwYXJhbV83KSwgdS54KSwgdS55KSwgdS56KTsKfQoKaGlnaHAgZmxvYXQgdGV4X25vaXNlKGlub3V0IGhpZ2hwIHZlYzMgcCkKewogICAgcCAqPSAxLjI1OwogICAgaGlnaHAgdmVjMyBwYXJhbSA9IHA7CiAgICBoaWdocCBmbG9hdCBmID0gMC41ICogdGV4X25vaXNlX2YocGFyYW0pOwogICAgcCAqPSAyLjAwOTk5OTk5MDQ2MzI1NjgzNTkzNzU7CiAgICBoaWdocCB2ZWMzIHBhcmFtXzEgPSBwOwogICAgZiArPSAoMC4yNSAqIHRleF9ub2lzZV9mKHBhcmFtXzEpKTsKICAgIHAgKj0gMi4wMTk5OTk5ODA5MjY1MTM2NzE4NzU7CiAgICBoaWdocCB2ZWMzIHBhcmFtXzIgPSBwOwogICAgZiArPSAoMC4xMjUgKiB0ZXhfbm9pc2VfZihwYXJhbV8yKSk7CiAgICBwICo9IDIuMDI5OTk5OTcxMzg5NzcwNTA3ODEyNTsKICAgIGhpZ2hwIHZlYzMgcGFyYW1fMyA9IHA7CiAgICBmICs9ICgwLjA2MjUgKiB0ZXhfbm9pc2VfZihwYXJhbV8zKSk7CiAgICByZXR1cm4gMS4wIC0gZjsKfQoKaGlnaHAgdmVjNCB0ZXhfdm9yb25vaShoaWdocCB2ZWMzIHgpCnsKICAgIGhpZ2hwIHZlYzMgcCA9IGZsb29yKHgpOwogICAgaGlnaHAgdmVjMyBmID0gZnJhY3QoeCk7CiAgICBoaWdocCBmbG9hdCBpZCA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IHJlcyA9IDEwMC4wOwogICAgZm9yIChpbnQgayA9IC0xOyBrIDw9IDE7IGsrKykKICAgIHsKICAgICAgICBmb3IgKGludCBqID0gLTE7IGogPD0gMTsgaisrKQogICAgICAgIHsKICAgICAgICAgICAgZm9yIChpbnQgaSA9IC0xOyBpIDw9IDE7IGkrKykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaGlnaHAgdmVjMyBiID0gdmVjMyhmbG9hdChpKSwgZmxvYXQoaiksIGZsb2F0KGspKTsKICAgICAgICAgICAgICAgIGhpZ2hwIHZlYzMgcGIgPSBwICsgYjsKICAgICAgICAgICAgICAgIGhpZ2hwIHZlYzMgciA9ICh2ZWMzKGIpIC0gZikgKyB0ZXh0dXJlKHNub2lzZTI1NiwgKChwYi54eSArICh2ZWMyKDMuMCwgMS4wKSAqIHBiLnopKSArIHZlYzIoMC41KSkgLyB2ZWMyKDI1Ni4wKSkueHl6OwogICAgICAgICAgICAgICAgaGlnaHAgZmxvYXQgZCA9IGRvdChyLCByKTsKICAgICAgICAgICAgICAgIGlmIChkIDwgcmVzKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGlkID0gZG90KHAgKyBiLCB2ZWMzKDEuMCwgNTcuMCwgMTEzLjApKTsKICAgICAgICAgICAgICAgICAgICByZXMgPSBkOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgaGlnaHAgdmVjMyBjb2wgPSB2ZWMzKDAuNSkgKyAoY29zKHZlYzMoaWQgKiAwLjM0OTk5OTk5NDAzOTUzNTUyMjQ2MDkzNzUpICsgdmVjMygwLjAsIDEuMCwgMi4wKSkgKiAwLjUpOwogICAgcmV0dXJuIHZlYzQoY29sLCBzcXJ0KHJlcykpOwp9CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBUZXh0dXJlQ29vcmRpbmF0ZV9HZW5lcmF0ZWRfcmVzID0gYnBvc2l0aW9uOwogICAgaGlnaHAgdmVjMyBNYXBwaW5nX1ZlY3Rvcl9yZXMgPSBUZXh0dXJlQ29vcmRpbmF0ZV9HZW5lcmF0ZWRfcmVzOwogICAgaGlnaHAgdmVjMyBwYXJhbSA9IE1hcHBpbmdfVmVjdG9yX3JlcyAqIDQuMDk5OTk5OTA0NjMyNTY4MzU5Mzc1OwogICAgaGlnaHAgZmxvYXQgXzM0MiA9IHRleF9ub2lzZShwYXJhbSk7CiAgICBoaWdocCB2ZWMzIHBhcmFtXzEgPSAoTWFwcGluZ19WZWN0b3JfcmVzICogNC4wOTk5OTk5MDQ2MzI1NjgzNTkzNzUpICsgdmVjMygwLjMzMDAwMDAxMzExMzAyMTg1MDU4NTkzNzUpOwogICAgaGlnaHAgZmxvYXQgXzM0OSA9IHRleF9ub2lzZShwYXJhbV8xKTsKICAgIGhpZ2hwIHZlYzMgcGFyYW1fMiA9IChNYXBwaW5nX1ZlY3Rvcl9yZXMgKiA0LjA5OTk5OTkwNDYzMjU2ODM1OTM3NSkgKyB2ZWMzKDAuNjYwMDAwMDI2MjI2MDQzNzAxMTcxODc1KTsKICAgIGhpZ2hwIGZsb2F0IF8zNTYgPSB0ZXhfbm9pc2UocGFyYW1fMik7CiAgICBoaWdocCB2ZWMzIE5vaXNlVGV4dHVyZV9Db2xvcl9yZXMgPSB2ZWMzKF8zNDIsIF8zNDksIF8zNTYpOwogICAgaGlnaHAgdmVjMyBDb2xvclJhbXBfY29sc1syXTsKICAgIENvbG9yUmFtcF9jb2xzWzBdID0gdmVjMygwLjApOwogICAgQ29sb3JSYW1wX2NvbHNbMV0gPSB2ZWMzKDEuMCk7CiAgICBoaWdocCBmbG9hdCBDb2xvclJhbXBfZmFjID0gTm9pc2VUZXh0dXJlX0NvbG9yX3Jlcy54OwogICAgaW50IENvbG9yUmFtcF9pID0gMCArIGludChDb2xvclJhbXBfZmFjID4gMS4wKTsKICAgIGhpZ2hwIGZsb2F0IENvbG9yUmFtcF9mYWNzWzJdOwogICAgQ29sb3JSYW1wX2ZhY3NbMF0gPSAwLjA7CiAgICBDb2xvclJhbXBfZmFjc1sxXSA9IDEuMDsKICAgIGhpZ2hwIHZlYzMgQ29sb3JSYW1wX0NvbG9yX3JlcyA9IG1peChDb2xvclJhbXBfY29sc1tDb2xvclJhbXBfaV0sIENvbG9yUmFtcF9jb2xzW0NvbG9yUmFtcF9pICsgMV0sIHZlYzMoKENvbG9yUmFtcF9mYWMgLSBDb2xvclJhbXBfZmFjc1tDb2xvclJhbXBfaV0pICogKDEuMCAvICgoQ29sb3JSYW1wX2ZhY3NbQ29sb3JSYW1wX2kgKyAxXSkgLSBDb2xvclJhbXBfZmFjc1tDb2xvclJhbXBfaV0pKSkpOwogICAgaGlnaHAgdmVjMyBNYXBwaW5nXzAwMV9WZWN0b3JfcmVzID0gQ29sb3JSYW1wX0NvbG9yX3JlczsKICAgIGhpZ2hwIHZlYzMgVm9yb25vaVRleHR1cmVfQ29sb3JfcmVzID0gdmVjMyh0ZXhfdm9yb25vaShNYXBwaW5nXzAwMV9WZWN0b3JfcmVzICogKC0xLjEwMDAwMDAyMzg0MTg1NzkxMDE1NjI1KSkudyk7CiAgICBoaWdocCB2ZWMzIENvbG9yUmFtcF8wMDFfY29sc1s0XTsKICAgIENvbG9yUmFtcF8wMDFfY29sc1swXSA9IHZlYzMoMS4wLCAwLjA1ODk0Mjk0MDA4NjEyNjMyNzUxNDY0ODQzNzUsIDAuMCk7CiAgICBDb2xvclJhbXBfMDAxX2NvbHNbMV0gPSB2ZWMzKDAuODkwMDA1NDY5MzIyMjA0NTg5ODQzNzUsIDAuMDQ4MTM1NjcxNzY0NjEyMTk3ODc1OTc2NTYyNSwgMC4wKTsKICAgIENvbG9yUmFtcF8wMDFfY29sc1syXSA9IHZlYzMoMC43NDA5NjY2Nzc2NjU3MTA0NDkyMTg3NSwgMC4zOTYwNzc5NjA3Mjk1OTg5OTkwMjM0Mzc1LCAwLjM3NzEwNzYyMDIzOTI1NzgxMjUpOwogICAgQ29sb3JSYW1wXzAwMV9jb2xzWzNdID0gdmVjMygwLjgxNDQ4OTE4NTgxMDA4OTExMTMyODEyNSwgMC40NzQxODkwNDMwNDUwNDM5NDUzMTI1LCAwLjQ4MTY0NzEwNDAyNDg4NzA4NDk2MDkzNzUpOwogICAgaGlnaHAgZmxvYXQgQ29sb3JSYW1wXzAwMV9mYWMgPSBWb3Jvbm9pVGV4dHVyZV9Db2xvcl9yZXMueDsKICAgIGludCBDb2xvclJhbXBfMDAxX2kgPSAoKDAgKyBpbnQoQ29sb3JSYW1wXzAwMV9mYWMgPiAwLjUwNjAwNzQ5MjU0MjI2Njg0NTcwMzEyNSkpICsgaW50KENvbG9yUmFtcF8wMDFfZmFjID4gMC45NTQ1NDgyMzk3MDc5NDY3NzczNDM3NSkpICsgaW50KENvbG9yUmFtcF8wMDFfZmFjID4gMS4wKTsKICAgIGhpZ2hwIGZsb2F0IENvbG9yUmFtcF8wMDFfZmFjc1s0XTsKICAgIENvbG9yUmFtcF8wMDFfZmFjc1swXSA9IDAuMDsKICAgIENvbG9yUmFtcF8wMDFfZmFjc1sxXSA9IDAuNTA2MDA3NDkyNTQyMjY2ODQ1NzAzMTI1OwogICAgQ29sb3JSYW1wXzAwMV9mYWNzWzJdID0gMC45NTQ1NDgyMzk3MDc5NDY3NzczNDM3NTsKICAgIENvbG9yUmFtcF8wMDFfZmFjc1szXSA9IDEuMDsKICAgIGhpZ2hwIHZlYzMgQ29sb3JSYW1wXzAwMV9Db2xvcl9yZXMgPSBtaXgoQ29sb3JSYW1wXzAwMV9jb2xzW0NvbG9yUmFtcF8wMDFfaV0sIENvbG9yUmFtcF8wMDFfY29sc1tDb2xvclJhbXBfMDAxX2kgKyAxXSwgdmVjMygoQ29sb3JSYW1wXzAwMV9mYWMgLSBDb2xvclJhbXBfMDAxX2ZhY3NbQ29sb3JSYW1wXzAwMV9pXSkgKiAoMS4wIC8gKChDb2xvclJhbXBfMDAxX2ZhY3NbQ29sb3JSYW1wXzAwMV9pICsgMV0pIC0gQ29sb3JSYW1wXzAwMV9mYWNzW0NvbG9yUmFtcF8wMDFfaV0pKSkpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gQ29sb3JSYW1wXzAwMV9Db2xvcl9yZXMgKiAxLjA7CiAgICBoaWdocCBmbG9hdCByb3VnaG5lc3MgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBtZXRhbGxpYyA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IG9jY2x1c2lvbiA9IDEuMDsKICAgIGhpZ2hwIGZsb2F0IHNwZWN1bGFyID0gMS4wOwogICAgaGlnaHAgZmxvYXQgZW1pc3Npb24gPSAxLjA7CiAgICBuIC89IHZlYzMoKGFicyhuLngpICsgYWJzKG4ueSkpICsgYWJzKG4ueikpOwogICAgaGlnaHAgdmVjMiBfNTEzOwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzUxMyA9IG4ueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzUxMyA9IG9jdGFoZWRyb25XcmFwKG4ueHkpOwogICAgfQogICAgbiA9IHZlYzMoXzUxMy54LCBfNTEzLnksIG4ueik7CiAgICBoaWdocCBmbG9hdCBtYXRpZCA9IDAuMDsKICAgIGlmIChlbWlzc2lvbiA%IDAuMCkKICAgIHsKICAgICAgICBtYXRpZCA9IDEuMDsKICAgIH0KICAgIGZyYWdDb2xvclswXSA9IHZlYzQobi54eSwgcGFja0Zsb2F0KG1ldGFsbGljLCByb3VnaG5lc3MpLCBtYXRpZCk7CiAgICBmcmFnQ29sb3JbMV0gPSB2ZWM0KGJhc2Vjb2wsIHBhY2tGbG9hdDIob2NjbHVzaW9uLCBzcGVjdWxhcikpOwp9Cgo";
kha_Shaders.sky_night_mat_mesh_fragData0 = "s8038:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgc25vaXNlMjU2OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMzIGJwb3NpdGlvbjsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yWzJdOwoKaGlnaHAgZmxvYXQgaGFzaChoaWdocCBmbG9hdCBuKQp7CiAgICByZXR1cm4gZnJhY3Qoc2luKG4pICogMTAwMDAuMCk7Cn0KCmhpZ2hwIGZsb2F0IHRleF9ub2lzZV9mKGhpZ2hwIHZlYzMgeCkKewogICAgaGlnaHAgdmVjMyBpID0gZmxvb3IoeCk7CiAgICBoaWdocCB2ZWMzIGYgPSBmcmFjdCh4KTsKICAgIGhpZ2hwIGZsb2F0IG4gPSBkb3QoaSwgdmVjMygxMTAuMCwgMjQxLjAsIDE3MS4wKSk7CiAgICBoaWdocCB2ZWMzIHUgPSAoZiAqIGYpICogKHZlYzMoMy4wKSAtIChmICogMi4wKSk7CiAgICBoaWdocCBmbG9hdCBwYXJhbSA9IG4gKyAwLjA7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8xID0gbiArIDExMC4wOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMiA9IG4gKyAyNDEuMDsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzMgPSBuICsgMzUxLjA7CiAgICBoaWdocCBmbG9hdCBwYXJhbV80ID0gbiArIDE3MS4wOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fNSA9IG4gKyAyODEuMDsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzYgPSBuICsgNDEyLjA7CiAgICBoaWdocCBmbG9hdCBwYXJhbV83ID0gbiArIDUyMi4wOwogICAgcmV0dXJuIG1peChtaXgobWl4KGhhc2gocGFyYW0pLCBoYXNoKHBhcmFtXzEpLCB1LngpLCBtaXgoaGFzaChwYXJhbV8yKSwgaGFzaChwYXJhbV8zKSwgdS54KSwgdS55KSwgbWl4KG1peChoYXNoKHBhcmFtXzQpLCBoYXNoKHBhcmFtXzUpLCB1LngpLCBtaXgoaGFzaChwYXJhbV82KSwgaGFzaChwYXJhbV83KSwgdS54KSwgdS55KSwgdS56KTsKfQoKaGlnaHAgZmxvYXQgdGV4X25vaXNlKGlub3V0IGhpZ2hwIHZlYzMgcCkKewogICAgcCAqPSAxLjI1OwogICAgaGlnaHAgdmVjMyBwYXJhbSA9IHA7CiAgICBoaWdocCBmbG9hdCBmID0gMC41ICogdGV4X25vaXNlX2YocGFyYW0pOwogICAgcCAqPSAyLjAwOTk5OTk5MDQ2MzI1NjgzNTkzNzU7CiAgICBoaWdocCB2ZWMzIHBhcmFtXzEgPSBwOwogICAgZiArPSAoMC4yNSAqIHRleF9ub2lzZV9mKHBhcmFtXzEpKTsKICAgIHAgKj0gMi4wMTk5OTk5ODA5MjY1MTM2NzE4NzU7CiAgICBoaWdocCB2ZWMzIHBhcmFtXzIgPSBwOwogICAgZiArPSAoMC4xMjUgKiB0ZXhfbm9pc2VfZihwYXJhbV8yKSk7CiAgICBwICo9IDIuMDI5OTk5OTcxMzg5NzcwNTA3ODEyNTsKICAgIGhpZ2hwIHZlYzMgcGFyYW1fMyA9IHA7CiAgICBmICs9ICgwLjA2MjUgKiB0ZXhfbm9pc2VfZihwYXJhbV8zKSk7CiAgICByZXR1cm4gMS4wIC0gZjsKfQoKaGlnaHAgdmVjNCB0ZXhfdm9yb25vaShoaWdocCB2ZWMzIHgpCnsKICAgIGhpZ2hwIHZlYzMgcCA9IGZsb29yKHgpOwogICAgaGlnaHAgdmVjMyBmID0gZnJhY3QoeCk7CiAgICBoaWdocCBmbG9hdCBpZCA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IHJlcyA9IDEwMC4wOwogICAgZm9yIChpbnQgayA9IC0xOyBrIDw9IDE7IGsrKykKICAgIHsKICAgICAgICBmb3IgKGludCBqID0gLTE7IGogPD0gMTsgaisrKQogICAgICAgIHsKICAgICAgICAgICAgZm9yIChpbnQgaSA9IC0xOyBpIDw9IDE7IGkrKykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaGlnaHAgdmVjMyBiID0gdmVjMyhmbG9hdChpKSwgZmxvYXQoaiksIGZsb2F0KGspKTsKICAgICAgICAgICAgICAgIGhpZ2hwIHZlYzMgcGIgPSBwICsgYjsKICAgICAgICAgICAgICAgIGhpZ2hwIHZlYzMgciA9ICh2ZWMzKGIpIC0gZikgKyB0ZXh0dXJlKHNub2lzZTI1NiwgKChwYi54eSArICh2ZWMyKDMuMCwgMS4wKSAqIHBiLnopKSArIHZlYzIoMC41KSkgLyB2ZWMyKDI1Ni4wKSkueHl6OwogICAgICAgICAgICAgICAgaGlnaHAgZmxvYXQgZCA9IGRvdChyLCByKTsKICAgICAgICAgICAgICAgIGlmIChkIDwgcmVzKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGlkID0gZG90KHAgKyBiLCB2ZWMzKDEuMCwgNTcuMCwgMTEzLjApKTsKICAgICAgICAgICAgICAgICAgICByZXMgPSBkOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgaGlnaHAgdmVjMyBjb2wgPSB2ZWMzKDAuNSkgKyAoY29zKHZlYzMoaWQgKiAwLjM0OTk5OTk5NDAzOTUzNTUyMjQ2MDkzNzUpICsgdmVjMygwLjAsIDEuMCwgMi4wKSkgKiAwLjUpOwogICAgcmV0dXJuIHZlYzQoY29sLCBzcXJ0KHJlcykpOwp9CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdChoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDEwMC4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKaGlnaHAgZmxvYXQgcGFja0Zsb2F0MihoaWdocCBmbG9hdCBmMSwgaGlnaHAgZmxvYXQgZjIpCnsKICAgIHJldHVybiBmbG9vcihmMSAqIDI1NS4wKSArIG1pbihmMiwgMC45OTAwMDAwMDk1MzY3NDMxNjQwNjI1KTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBUZXh0dXJlQ29vcmRpbmF0ZV9HZW5lcmF0ZWRfcmVzID0gYnBvc2l0aW9uOwogICAgaGlnaHAgdmVjMyBNYXBwaW5nX1ZlY3Rvcl9yZXMgPSBUZXh0dXJlQ29vcmRpbmF0ZV9HZW5lcmF0ZWRfcmVzOwogICAgaGlnaHAgdmVjMyBwYXJhbSA9IE1hcHBpbmdfVmVjdG9yX3JlcyAqIDQuMDk5OTk5OTA0NjMyNTY4MzU5Mzc1OwogICAgaGlnaHAgZmxvYXQgXzM0MiA9IHRleF9ub2lzZShwYXJhbSk7CiAgICBoaWdocCB2ZWMzIHBhcmFtXzEgPSAoTWFwcGluZ19WZWN0b3JfcmVzICogNC4wOTk5OTk5MDQ2MzI1NjgzNTkzNzUpICsgdmVjMygwLjMzMDAwMDAxMzExMzAyMTg1MDU4NTkzNzUpOwogICAgaGlnaHAgZmxvYXQgXzM0OSA9IHRleF9ub2lzZShwYXJhbV8xKTsKICAgIGhpZ2hwIHZlYzMgcGFyYW1fMiA9IChNYXBwaW5nX1ZlY3Rvcl9yZXMgKiA0LjA5OTk5OTkwNDYzMjU2ODM1OTM3NSkgKyB2ZWMzKDAuNjYwMDAwMDI2MjI2MDQzNzAxMTcxODc1KTsKICAgIGhpZ2hwIGZsb2F0IF8zNTYgPSB0ZXhfbm9pc2UocGFyYW1fMik7CiAgICBoaWdocCB2ZWMzIE5vaXNlVGV4dHVyZV9Db2xvcl9yZXMgPSB2ZWMzKF8zNDIsIF8zNDksIF8zNTYpOwogICAgaGlnaHAgdmVjMyBDb2xvclJhbXBfY29sc1syXTsKICAgIENvbG9yUmFtcF9jb2xzWzBdID0gdmVjMygwLjApOwogICAgQ29sb3JSYW1wX2NvbHNbMV0gPSB2ZWMzKDEuMCk7CiAgICBoaWdocCBmbG9hdCBDb2xvclJhbXBfZmFjID0gTm9pc2VUZXh0dXJlX0NvbG9yX3Jlcy54OwogICAgaW50IENvbG9yUmFtcF9pID0gMCArIGludChDb2xvclJhbXBfZmFjID4gMS4wKTsKICAgIGhpZ2hwIGZsb2F0IENvbG9yUmFtcF9mYWNzWzJdOwogICAgQ29sb3JSYW1wX2ZhY3NbMF0gPSAwLjA7CiAgICBDb2xvclJhbXBfZmFjc1sxXSA9IDEuMDsKICAgIGhpZ2hwIHZlYzMgQ29sb3JSYW1wX0NvbG9yX3JlcyA9IG1peChDb2xvclJhbXBfY29sc1tDb2xvclJhbXBfaV0sIENvbG9yUmFtcF9jb2xzW0NvbG9yUmFtcF9pICsgMV0sIHZlYzMoKENvbG9yUmFtcF9mYWMgLSBDb2xvclJhbXBfZmFjc1tDb2xvclJhbXBfaV0pICogKDEuMCAvICgoQ29sb3JSYW1wX2ZhY3NbQ29sb3JSYW1wX2kgKyAxXSkgLSBDb2xvclJhbXBfZmFjc1tDb2xvclJhbXBfaV0pKSkpOwogICAgaGlnaHAgdmVjMyBNYXBwaW5nXzAwMV9WZWN0b3JfcmVzID0gQ29sb3JSYW1wX0NvbG9yX3JlczsKICAgIGhpZ2hwIHZlYzMgVm9yb25vaVRleHR1cmVfQ29sb3JfcmVzID0gdmVjMyh0ZXhfdm9yb25vaShNYXBwaW5nXzAwMV9WZWN0b3JfcmVzICogKC0xLjEwMDAwMDAyMzg0MTg1NzkxMDE1NjI1KSkudyk7CiAgICBoaWdocCB2ZWMzIENvbG9yUmFtcF8wMDFfY29sc1s0XTsKICAgIENvbG9yUmFtcF8wMDFfY29sc1swXSA9IHZlYzMoMC4wMDAzNzMxNjgwMDQ0NDM4Njg5OTQ3MTI4Mjk1ODk4NDM3NSwgMC4wLCAwLjAyOTYyNTU0MDU5OTIyNjk1MTU5OTEyMTA5Mzc1KTsKICAgIENvbG9yUmFtcF8wMDFfY29sc1sxXSA9IHZlYzMoMC4wMDExNjg1ODI5Mzc2ODAxODQ4NDExNTYwMDU4NTkzNzUsIDIuMzA1ODM2OTQzNjA1NzU0NjQwODg0Njk3NDM3Mjg2NGUtMDgsIDAuMDIzMzI1NDczMDcwMTQ0NjUzMzIwMzEyNSk7CiAgICBDb2xvclJhbXBfMDAxX2NvbHNbMl0gPSB2ZWMzKDAuMDAxNDkzNTg4NTU1NjA0MjE5NDM2NjQ1NTA3ODEyNSwgMC4wLCAwLjAwNzc4MDI4OTI3NzQzNDM0OTA2MDA1ODU5Mzc1KTsKICAgIENvbG9yUmFtcF8wMDFfY29sc1szXSA9IHZlYzMoMC4wMDI3ODIxMjAzNjkzNzQ3NTIwNDQ2Nzc3MzQzNzUsIDAuMDAwNTcyODQyNjA0MDE1MDIyNTE2MjUwNjEwMzUxNTYyNSwgMC4wMTAzMTQ5NDc5MjU1MDgwMjIzMDgzNDk2MDkzNzUpOwogICAgaGlnaHAgZmxvYXQgQ29sb3JSYW1wXzAwMV9mYWMgPSBWb3Jvbm9pVGV4dHVyZV9Db2xvcl9yZXMueDsKICAgIGludCBDb2xvclJhbXBfMDAxX2kgPSAoKDAgKyBpbnQoQ29sb3JSYW1wXzAwMV9mYWMgPiAwLjQ1MzY4MTkxNTk5ODQ1ODg2MjMwNDY4NzUpKSArIGludChDb2xvclJhbXBfMDAxX2ZhYyA%IDAuOTU0NTQ4MjM5NzA3OTQ2Nzc3MzQzNzUpKSArIGludChDb2xvclJhbXBfMDAxX2ZhYyA%IDEuMCk7CiAgICBoaWdocCBmbG9hdCBDb2xvclJhbXBfMDAxX2ZhY3NbNF07CiAgICBDb2xvclJhbXBfMDAxX2ZhY3NbMF0gPSAwLjA7CiAgICBDb2xvclJhbXBfMDAxX2ZhY3NbMV0gPSAwLjQ1MzY4MTkxNTk5ODQ1ODg2MjMwNDY4NzU7CiAgICBDb2xvclJhbXBfMDAxX2ZhY3NbMl0gPSAwLjk1NDU0ODIzOTcwNzk0Njc3NzM0Mzc1OwogICAgQ29sb3JSYW1wXzAwMV9mYWNzWzNdID0gMS4wOwogICAgaGlnaHAgdmVjMyBDb2xvclJhbXBfMDAxX0NvbG9yX3JlcyA9IG1peChDb2xvclJhbXBfMDAxX2NvbHNbQ29sb3JSYW1wXzAwMV9pXSwgQ29sb3JSYW1wXzAwMV9jb2xzW0NvbG9yUmFtcF8wMDFfaSArIDFdLCB2ZWMzKChDb2xvclJhbXBfMDAxX2ZhYyAtIENvbG9yUmFtcF8wMDFfZmFjc1tDb2xvclJhbXBfMDAxX2ldKSAqICgxLjAgLyAoKENvbG9yUmFtcF8wMDFfZmFjc1tDb2xvclJhbXBfMDAxX2kgKyAxXSkgLSBDb2xvclJhbXBfMDAxX2ZhY3NbQ29sb3JSYW1wXzAwMV9pXSkpKSk7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBDb2xvclJhbXBfMDAxX0NvbG9yX3JlcyAqIDEuMDsKICAgIGhpZ2hwIGZsb2F0IHJvdWdobmVzcyA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgaGlnaHAgZmxvYXQgc3BlY3VsYXIgPSAxLjA7CiAgICBoaWdocCBmbG9hdCBlbWlzc2lvbiA9IDEuMDsKICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF81MTQ7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfNTE0ID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfNTE0ID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfNTE0LngsIF81MTQueSwgbi56KTsKICAgIGhpZ2hwIGZsb2F0IG1hdGlkID0gMC4wOwogICAgaWYgKGVtaXNzaW9uID4gMC4wKQogICAgewogICAgICAgIG1hdGlkID0gMS4wOwogICAgfQogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIG1hdGlkKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.smaa_blend_weight_fragData0 = "s24270:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIHNjcmVlblNpemVJbnY7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGVkZ2VzVGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBhcmVhVGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzZWFyY2hUZXg7CnVuaWZvcm0gaGlnaHAgdmVjMiBzY3JlZW5TaXplOwoKaW4gaGlnaHAgdmVjNCBvZmZzZXQwOwppbiBoaWdocCB2ZWM0IG9mZnNldDI7CmluIGhpZ2hwIHZlYzQgb2Zmc2V0MTsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwppbiBoaWdocCB2ZWMyIHBpeGNvb3JkOwpoaWdocCB2ZWMyIGNkd19lbmQ7CgpoaWdocCB2ZWM0IHRleHR1cmVMb2RBKGhpZ2hwIHNhbXBsZXIyRCB0ZXgsIGhpZ2hwIHZlYzIgY29vcmQsIGhpZ2hwIGZsb2F0IGxvZCkKewogICAgcmV0dXJuIHRleHR1cmVMb2QodGV4LCBjb29yZCwgbG9kKTsKfQoKaGlnaHAgdmVjMiBTTUFBU2VhcmNoRGlhZzEoaGlnaHAgdmVjMiB0ZXhjb29yZCwgaGlnaHAgdmVjMiBkaXIpCnsKICAgIGhpZ2hwIHZlYzQgY29vcmQgPSB2ZWM0KHRleGNvb3JkLCAtMS4wLCAxLjApOwogICAgaGlnaHAgdmVjMyB0ID0gdmVjMyhzY3JlZW5TaXplSW52LCAxLjApOwogICAgaGlnaHAgZmxvYXQgY3cgPSBjb29yZC53OwogICAgd2hpbGUgKChjb29yZC56IDwgNy4wKSAmJiAoY3cgPiAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1KSkKICAgIHsKICAgICAgICBoaWdocCB2ZWMzIF8xODEgPSAodCAqIHZlYzMoZGlyLCAxLjApKSArIGNvb3JkLnh5ejsKICAgICAgICBjb29yZCA9IHZlYzQoXzE4MS54LCBfMTgxLnksIF8xODEueiwgY29vcmQudyk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbSA9IGNvb3JkLnh5OwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzEgPSAwLjA7CiAgICAgICAgY2R3X2VuZCA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbSwgcGFyYW1fMSkueHk7CiAgICAgICAgY3cgPSBkb3QoY2R3X2VuZCwgdmVjMigwLjUpKTsKICAgIH0KICAgIGNvb3JkLncgPSBjdzsKICAgIHJldHVybiBjb29yZC56dzsKfQoKaGlnaHAgdmVjNCBTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzKGlub3V0IGhpZ2hwIHZlYzQgZSkKewogICAgaGlnaHAgdmVjMiBfMTI5ID0gZS54eiAqIGFicygoZS54eiAqIDUuMCkgLSB2ZWMyKDMuNzUpKTsKICAgIGUgPSB2ZWM0KF8xMjkueCwgZS55LCBfMTI5LnksIGUudyk7CiAgICByZXR1cm4gZmxvb3IoZSArIHZlYzQoMC41KSk7Cn0KCmhpZ2hwIHZlYzIgU01BQUFyZWFEaWFnKGhpZ2hwIHZlYzIgZGlzdCwgaGlnaHAgdmVjMiBlLCBoaWdocCBmbG9hdCBvZmZzZXQpCnsKICAgIGhpZ2hwIHZlYzIgdGV4Y29vcmQgPSAodmVjMigyMC4wKSAqIGUpICsgZGlzdDsKICAgIHRleGNvb3JkID0gKHZlYzIoMC4wMDYyNTAwMDAwOTMxMzIyNTc0NjE1NDc4NTE1NjI1LCAwLjAwMTc4NTcxNDI5NTY5Mjc0MTg3MDg4MDEyNjk1MzEyNSkgKiB0ZXhjb29yZCkgKyB2ZWMyKDAuMDAzMTI1MDAwMDQ2NTY2MTI4NzMwNzczOTI1NzgxMjUsIDAuMDAwODkyODU3MTQ3ODQ2MzcwOTM1NDQwMDYzNDc2NTYyNSk7CiAgICB0ZXhjb29yZC54ICs9IDAuNTsKICAgIHRleGNvb3JkLnkgKz0gKDAuMTQyODU3MTQ5MjQzMzU0Nzk3MzYzMjgxMjUgKiBvZmZzZXQpOwogICAgcmV0dXJuIHRleHR1cmVMb2QoYXJlYVRleCwgdGV4Y29vcmQsIDAuMCkueHk7Cn0KCmhpZ2hwIHZlYzIgU01BQURlY29kZURpYWdCaWxpbmVhckFjY2Vzcyhpbm91dCBoaWdocCB2ZWMyIGUpCnsKICAgIGUueCAqPSBhYnMoKDUuMCAqIGUueCkgLSAzLjc1KTsKICAgIHJldHVybiBmbG9vcihlICsgdmVjMigwLjUpKTsKfQoKaGlnaHAgdmVjMiBTTUFBU2VhcmNoRGlhZzIoaGlnaHAgdmVjMiB0ZXhjb29yZCwgaGlnaHAgdmVjMiBkaXIpCnsKICAgIGhpZ2hwIHZlYzQgY29vcmQgPSB2ZWM0KHRleGNvb3JkLCAtMS4wLCAxLjApOwogICAgY29vcmQueCArPSAoMC4yNSAqIHNjcmVlblNpemVJbnYueCk7CiAgICBoaWdocCB2ZWMzIHQgPSB2ZWMzKHNjcmVlblNpemVJbnYsIDEuMCk7CiAgICBoaWdocCBmbG9hdCBjdyA9IGNvb3JkLnc7CiAgICB3aGlsZSAoKGNvb3JkLnogPCA3LjApICYmIChjdyA%IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzUpKQogICAgewogICAgICAgIGhpZ2hwIHZlYzMgXzI0NCA9ICh0ICogdmVjMyhkaXIsIDEuMCkpICsgY29vcmQueHl6OwogICAgICAgIGNvb3JkID0gdmVjNChfMjQ0LngsIF8yNDQueSwgXzI0NC56LCBjb29yZC53KTsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtID0gY29vcmQueHk7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IDAuMDsKICAgICAgICBjZHdfZW5kID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtLCBwYXJhbV8xKS54eTsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIgPSBjZHdfZW5kOwogICAgICAgIGhpZ2hwIHZlYzIgXzI1NSA9IFNNQUFEZWNvZGVEaWFnQmlsaW5lYXJBY2Nlc3MocGFyYW1fMik7CiAgICAgICAgY2R3X2VuZCA9IF8yNTU7CiAgICAgICAgY3cgPSBkb3QoY2R3X2VuZCwgdmVjMigwLjUpKTsKICAgIH0KICAgIGNvb3JkLncgPSBjdzsKICAgIHJldHVybiBjb29yZC56dzsKfQoKaGlnaHAgdmVjMiBTTUFBQ2FsY3VsYXRlRGlhZ1dlaWdodHMoaGlnaHAgdmVjMiB0ZXhjb29yZCwgaGlnaHAgdmVjMiBlLCBoaWdocCB2ZWM0IHN1YnNhbXBsZUluZGljZXMpCnsKICAgIGhpZ2hwIHZlYzIgd2VpZ2h0cyA9IHZlYzIoMC4wKTsKICAgIGhpZ2hwIHZlYzQgZDsKICAgIGlmIChlLnggPiAwLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbSA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMSA9IHZlYzIoLTEuMCwgMS4wKTsKICAgICAgICBoaWdocCB2ZWMyIF8zMTEgPSBTTUFBU2VhcmNoRGlhZzEocGFyYW0sIHBhcmFtXzEpOwogICAgICAgIGQgPSB2ZWM0KF8zMTEueCwgZC55LCBfMzExLnksIGQudyk7CiAgICAgICAgaGlnaHAgZmxvYXQgZGFkZCA9IGZsb2F0KGNkd19lbmQueSA%IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzUpOwogICAgICAgIGQueCArPSBkYWRkOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIGQgPSB2ZWM0KHZlYzIoMC4wKS54LCBkLnksIHZlYzIoMC4wKS55LCBkLncpOwogICAgfQogICAgaGlnaHAgdmVjMiBwYXJhbV8yID0gdGV4Y29vcmQ7CiAgICBoaWdocCB2ZWMyIHBhcmFtXzMgPSB2ZWMyKDEuMCwgLTEuMCk7CiAgICBoaWdocCB2ZWMyIF8zMzIgPSBTTUFBU2VhcmNoRGlhZzEocGFyYW1fMiwgcGFyYW1fMyk7CiAgICBkID0gdmVjNChkLngsIF8zMzIueCwgZC56LCBfMzMyLnkpOwogICAgaWYgKChkLnggKyBkLnkpID4gMi4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzQgY29vcmRzID0gKHZlYzQoKC1kLngpICsgMC4yNSwgZC54LCBkLnksICgtZC55KSAtIDAuMjUpICogc2NyZWVuU2l6ZUludi54eXh5KSArIHRleGNvb3JkLnh5eHk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV80ID0gY29vcmRzLnh5ICsgKHZlYzIoLTEuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzUgPSAwLjA7CiAgICAgICAgaGlnaHAgdmVjMiBfMzc0ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzQsIHBhcmFtXzUpLnh5OwogICAgICAgIGhpZ2hwIHZlYzQgYzsKICAgICAgICBjID0gdmVjNChfMzc0LngsIF8zNzQueSwgYy56LCBjLncpOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fNiA9IGNvb3Jkcy56dyArICh2ZWMyKDEuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzcgPSAwLjA7CiAgICAgICAgaGlnaHAgdmVjMiBfMzg2ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzYsIHBhcmFtXzcpLnh5OwogICAgICAgIGMgPSB2ZWM0KGMueCwgYy55LCBfMzg2LngsIF8zODYueSk7CiAgICAgICAgaGlnaHAgdmVjNCBwYXJhbV84ID0gYzsKICAgICAgICBoaWdocCB2ZWM0IF8zOTEgPSBTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzKHBhcmFtXzgpOwogICAgICAgIGMgPSB2ZWM0KF8zOTEueSwgXzM5MS54LCBfMzkxLncsIF8zOTEueik7CiAgICAgICAgaGlnaHAgdmVjMiBjYyA9ICh2ZWMyKDIuMCkgKiBjLnh6KSArIGMueXc7CiAgICAgICAgaGlnaHAgZmxvYXQgYTFjb25keCA9IHN0ZXAoMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSwgZC56KTsKICAgICAgICBoaWdocCBmbG9hdCBhMWNvbmR5ID0gc3RlcCgwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1LCBkLncpOwogICAgICAgIGlmIChhMWNvbmR4ID09IDEuMCkKICAgICAgICB7CiAgICAgICAgICAgIGNjLnggPSAwLjA7CiAgICAgICAgfQogICAgICAgIGlmIChhMWNvbmR5ID09IDEuMCkKICAgICAgICB7CiAgICAgICAgICAgIGNjLnkgPSAwLjA7CiAgICAgICAgfQogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fOSA9IGQueHk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xMCA9IGNjOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzExID0gc3Vic2FtcGxlSW5kaWNlcy56OwogICAgICAgIHdlaWdodHMgKz0gU01BQUFyZWFEaWFnKHBhcmFtXzksIHBhcmFtXzEwLCBwYXJhbV8xMSk7CiAgICB9CiAgICBoaWdocCB2ZWMyIHBhcmFtXzEyID0gdGV4Y29vcmQ7CiAgICBoaWdocCB2ZWMyIHBhcmFtXzEzID0gdmVjMigtMS4wKTsKICAgIGhpZ2hwIHZlYzIgXzQzNSA9IFNNQUFTZWFyY2hEaWFnMihwYXJhbV8xMiwgcGFyYW1fMTMpOwogICAgZCA9IHZlYzQoXzQzNS54LCBkLnksIF80MzUueSwgZC53KTsKICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTQgPSB0ZXhjb29yZCArICh2ZWMyKDEuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMTUgPSAwLjA7CiAgICBpZiAodGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzE0LCBwYXJhbV8xNSkueCA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzE2ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xNyA9IHZlYzIoMS4wKTsKICAgICAgICBoaWdocCB2ZWMyIF80NTMgPSBTTUFBU2VhcmNoRGlhZzIocGFyYW1fMTYsIHBhcmFtXzE3KTsKICAgICAgICBkID0gdmVjNChkLngsIF80NTMueCwgZC56LCBfNDUzLnkpOwogICAgICAgIGhpZ2hwIGZsb2F0IGRhZGRfMSA9IGZsb2F0KGNkd19lbmQueSA%%IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1OwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBfNzcxID0gXzc2NTsKICAgICAgICB9CiAgICAgICAgYm9vbCBfNzc3OwogICAgICAgIGlmIChfNzcxKQogICAgICAgIHsKICAgICAgICAgICAgXzc3NyA9IGUueSA9PSAwLjA7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIF83NzcgPSBfNzcxOwogICAgICAgIH0KICAgICAgICBpZiAoXzc3NykKICAgICAgICB7CiAgICAgICAgICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhjb29yZDsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IDAuMDsKICAgICAgICAgICAgZSA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbSwgcGFyYW1fMSkueHk7CiAgICAgICAgICAgIHRleGNvb3JkID0gKHZlYzIoMC4wLCAyLjApICogc2NyZWVuU2l6ZUludikgKyB0ZXhjb29yZDsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgIH0KICAgIGhpZ2hwIHZlYzIgcGFyYW1fMiA9IGUueXg7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8zID0gMC41OwogICAgaGlnaHAgZmxvYXQgb2Zmc2V0ID0gKCgtMi4wMDc4NzQwMTE5OTM0MDgyMDMxMjUpICogU01BQVNlYXJjaExlbmd0aChwYXJhbV8yLCBwYXJhbV8zKSkgKyAzLjI1OwogICAgcmV0dXJuICgoLXNjcmVlblNpemVJbnYueSkgKiBvZmZzZXQpICsgdGV4Y29vcmQueTsKfQoKaGlnaHAgdmVjMiBTTUFBRGV0ZWN0VmVydGljYWxDb3JuZXJQYXR0ZXJuKGlub3V0IGhpZ2hwIHZlYzIgd2VpZ2h0cywgaGlnaHAgdmVjNCB0ZXhjb29yZCwgaGlnaHAgdmVjMiBkKQp7CiAgICBoaWdocCB2ZWMyIGxlZnRSaWdodCA9IHN0ZXAoZCwgZC55eCk7CiAgICBoaWdocCB2ZWMyIHJvdW5kaW5nID0gbGVmdFJpZ2h0ICogMC43NTsKICAgIHJvdW5kaW5nIC89IHZlYzIobGVmdFJpZ2h0LnggKyBsZWZ0UmlnaHQueSk7CiAgICBoaWdocCB2ZWMyIGZhY3RvciA9IHZlYzIoMS4wKTsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhjb29yZC54eSArICh2ZWMyKDEuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IDAuMDsKICAgIGZhY3Rvci54IC09IChyb3VuZGluZy54ICogdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtLCBwYXJhbV8xKS55KTsKICAgIGhpZ2hwIHZlYzIgcGFyYW1fMiA9IHRleGNvb3JkLnp3ICsgKHZlYzIoMS4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMyA9IDAuMDsKICAgIGZhY3Rvci54IC09IChyb3VuZGluZy55ICogdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzIsIHBhcmFtXzMpLnkpOwogICAgaGlnaHAgdmVjMiBwYXJhbV80ID0gdGV4Y29vcmQueHkgKyAodmVjMigtMi4wLCAwLjApICogc2NyZWVuU2l6ZUludik7CiAgICBoaWdocCBmbG9hdCBwYXJhbV81ID0gMC4wOwogICAgZmFjdG9yLnkgLT0gKHJvdW5kaW5nLnggKiB0ZXh0dXJlTG9kQShlZGdlc1RleCwgcGFyYW1fNCwgcGFyYW1fNSkueSk7CiAgICBoaWdocCB2ZWMyIHBhcmFtXzYgPSB0ZXhjb29yZC56dyArICh2ZWMyKC0yLjAsIDEuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzcgPSAwLjA7CiAgICBmYWN0b3IueSAtPSAocm91bmRpbmcueSAqIHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbV82LCBwYXJhbV83KS55KTsKICAgIHdlaWdodHMgKj0gY2xhbXAoZmFjdG9yLCB2ZWMyKDAuMCksIHZlYzIoMS4wKSk7CiAgICByZXR1cm4gd2VpZ2h0czsKfQoKaGlnaHAgdmVjNCBTTUFBQmxlbmRpbmdXZWlnaHRDYWxjdWxhdGlvblBTKGhpZ2hwIHZlYzIgdGV4Y29vcmQsIGhpZ2hwIHZlYzIgcGl4Y29vcmRfMSwgaGlnaHAgdmVjNCBzdWJzYW1wbGVJbmRpY2VzKQp7CiAgICBoaWdocCB2ZWM0IHdlaWdodHMgPSB2ZWM0KDAuMCk7CiAgICBoaWdocCB2ZWMyIHBhcmFtID0gdGV4Y29vcmQ7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8xID0gMC4wOwogICAgaGlnaHAgdmVjMiBlID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtLCBwYXJhbV8xKS54eTsKICAgIGlmIChlLnkgPiAwLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8zID0gZTsKICAgICAgICBoaWdocCB2ZWM0IHBhcmFtXzQgPSBzdWJzYW1wbGVJbmRpY2VzOwogICAgICAgIGhpZ2hwIHZlYzIgXzEwMzkgPSBTTUFBQ2FsY3VsYXRlRGlhZ1dlaWdodHMocGFyYW1fMiwgcGFyYW1fMywgcGFyYW1fNCk7CiAgICAgICAgd2VpZ2h0cyA9IHZlYzQoXzEwMzkueCwgXzEwMzkueSwgd2VpZ2h0cy56LCB3ZWlnaHRzLncpOwogICAgICAgIGlmICh3ZWlnaHRzLnggPT0gKC13ZWlnaHRzLnkpKQogICAgICAgIHsKICAgICAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV81ID0gb2Zmc2V0MC54eTsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fNiA9IG9mZnNldDIueDsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgXzEwNjEgPSBTTUFBU2VhcmNoWExlZnQocGFyYW1fNSwgcGFyYW1fNik7CiAgICAgICAgICAgIGhpZ2hwIHZlYzMgY29vcmRzOwogICAgICAgICAgICBjb29yZHMueCA9IF8xMDYxOwogICAgICAgICAgICBjb29yZHMueSA9IG9mZnNldDEueTsKICAgICAgICAgICAgaGlnaHAgdmVjMiBkOwogICAgICAgICAgICBkLnggPSBjb29yZHMueDsKICAgICAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV83ID0gY29vcmRzLnh5OwogICAgICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV84ID0gMC4wOwogICAgICAgICAgICBoaWdocCBmbG9hdCBlMSA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbV83LCBwYXJhbV84KS54OwogICAgICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzkgPSBvZmZzZXQwLnp3OwogICAgICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8xMCA9IG9mZnNldDIueTsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgXzEwODQgPSBTTUFBU2VhcmNoWFJpZ2h0KHBhcmFtXzksIHBhcmFtXzEwKTsKICAgICAgICAgICAgY29vcmRzLnogPSBfMTA4NDsKICAgICAgICAgICAgZC55ID0gY29vcmRzLno7CiAgICAgICAgICAgIGQgPSBhYnMoZmxvb3IoKChzY3JlZW5TaXplLnh4ICogZCkgKyAoLXBpeGNvb3JkXzEueHgpKSArIHZlYzIoMC41KSkpOwogICAgICAgICAgICBoaWdocCB2ZWMyIHNxcnRfZCA9IHNxcnQoZCk7CiAgICAgICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTEgPSBjb29yZHMuenkgKyAodmVjMigxLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTIgPSAwLjA7CiAgICAgICAgICAgIGhpZ2hwIGZsb2F0IGUyID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzExLCBwYXJhbV8xMikueDsKICAgICAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xMyA9IHNxcnRfZDsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTQgPSBlMTsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTUgPSBlMjsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTYgPSBzdWJzYW1wbGVJbmRpY2VzLnk7CiAgICAgICAgICAgIGhpZ2hwIHZlYzIgXzExMjQgPSBTTUFBQXJlYShwYXJhbV8xMywgcGFyYW1fMTQsIHBhcmFtXzE1LCBwYXJhbV8xNik7CiAgICAgICAgICAgIHdlaWdodHMgPSB2ZWM0KF8xMTI0LngsIF8xMTI0LnksIHdlaWdodHMueiwgd2VpZ2h0cy53KTsKICAgICAgICAgICAgY29vcmRzLnkgPSB0ZXhjb29yZC55OwogICAgICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzE3ID0gd2VpZ2h0cy54eTsKICAgICAgICAgICAgaGlnaHAgdmVjNCBwYXJhbV8xOCA9IGNvb3Jkcy54eXp5OwogICAgICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzE5ID0gZDsKICAgICAgICAgICAgaGlnaHAgdmVjMiBfMTEzOCA9IFNNQUFEZXRlY3RIb3Jpem9udGFsQ29ybmVyUGF0dGVybihwYXJhbV8xNywgcGFyYW1fMTgsIHBhcmFtXzE5KTsKICAgICAgICAgICAgd2VpZ2h0cyA9IHZlYzQoXzExMzgueCwgXzExMzgueSwgd2VpZ2h0cy56LCB3ZWlnaHRzLncpOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBlLnggPSAwLjA7CiAgICAgICAgfQogICAgfQogICAgaWYgKGUueCA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIwID0gb2Zmc2V0MS54eTsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8yMSA9IG9mZnNldDIuejsKICAgICAgICBoaWdocCBmbG9hdCBfMTE1NSA9IFNNQUFTZWFyY2hZVXAocGFyYW1fMjAsIHBhcmFtXzIxKTsKICAgICAgICBoaWdocCB2ZWMzIGNvb3Jkc18xOwogICAgICAgIGNvb3Jkc18xLnkgPSBfMTE1NTsKICAgICAgICBjb29yZHNfMS54ID0gb2Zmc2V0MC54OwogICAgICAgIGhpZ2hwIHZlYzIgZF8xOwogICAgICAgIGRfMS54ID0gY29vcmRzXzEueTsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIyID0gY29vcmRzXzEueHk7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMjMgPSAwLjA7CiAgICAgICAgaGlnaHAgZmxvYXQgZTFfMSA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbV8yMiwgcGFyYW1fMjMpLnk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yNCA9IG9mZnNldDEuenc7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMjUgPSBvZmZzZXQyLnc7CiAgICAgICAgaGlnaHAgZmxvYXQgXzExNzcgPSBTTUFBU2VhcmNoWURvd24ocGFyYW1fMjQsIHBhcmFtXzI1KTsKICAgICAgICBjb29yZHNfMS56ID0gXzExNzc7CiAgICAgICAgZF8xLnkgPSBjb29yZHNfMS56OwogICAgICAgIGRfMSA9IGFicyhmbG9vcigoKHNjcmVlblNpemUueXkgKiBkXzEpICsgKC1waXhjb29yZF8xLnl5KSkgKyB2ZWMyKDAuNSkpKTsKICAgICAgICBoaWdocCB2ZWMyIHNxcnRfZF8xID0gc3FydChkXzEpOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMjYgPSBjb29yZHNfMS54eiArICh2ZWMyKDAuMCwgMS4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzI3ID0gMC4wOwogICAgICAgIGhpZ2hwIGZsb2F0IGUyXzEgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgcGFyYW1fMjYsIHBhcmFtXzI3KS55OwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMjggPSBzcXJ0X2RfMTsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8yOSA9IGUxXzE7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMzAgPSBlMl8xOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzMxID0gc3Vic2FtcGxlSW5kaWNlcy54OwogICAgICAgIGhpZ2hwIHZlYzIgXzEyMTYgPSBTTUFBQXJlYShwYXJhbV8yOCwgcGFyYW1fMjksIHBhcmFtXzMwLCBwYXJhbV8zMSk7CiAgICAgICAgd2VpZ2h0cyA9IHZlYzQod2VpZ2h0cy54LCB3ZWlnaHRzLnksIF8xMjE2LngsIF8xMjE2LnkpOwogICAgICAgIGNvb3Jkc18xLnggPSB0ZXhjb29yZC54OwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMzIgPSB3ZWlnaHRzLnp3OwogICAgICAgIGhpZ2hwIHZlYzQgcGFyYW1fMzMgPSBjb29yZHNfMS54eXh6OwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMzQgPSBkXzE7CiAgICAgICAgaGlnaHAgdmVjMiBfMTIzMCA9IFNNQUFEZXRlY3RWZXJ0aWNhbENvcm5lclBhdHRlcm4ocGFyYW1fMzIsIHBhcmFtXzMzLCBwYXJhbV8zNCk7CiAgICAgICAgd2VpZ2h0cyA9IHZlYzQod2VpZ2h0cy54LCB3ZWlnaHRzLnksIF8xMjMwLngsIF8xMjMwLnkpOwogICAgfQogICAgcmV0dXJuIHdlaWdodHM7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgIGhpZ2hwIHZlYzIgcGFyYW1fMSA9IHBpeGNvb3JkOwogICAgaGlnaHAgdmVjNCBwYXJhbV8yID0gdmVjNCgwLjApOwogICAgaGlnaHAgdmVjNCBfMTI0NiA9IFNNQUFCbGVuZGluZ1dlaWdodENhbGN1bGF0aW9uUFMocGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgZnJhZ0NvbG9yID0gXzEyNDY7Cn0KCg";
kha_Shaders.smaa_blend_weight_vertData0 = "s791:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZTsKdW5pZm9ybSB2ZWMyIHNjcmVlblNpemVJbnY7CgpvdXQgdmVjMiB0ZXhDb29yZDsKaW4gdmVjMiBwb3M7Cm91dCB2ZWMyIHBpeGNvb3JkOwpvdXQgdmVjNCBvZmZzZXQwOwpvdXQgdmVjNCBvZmZzZXQxOwpvdXQgdmVjNCBvZmZzZXQyOwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIHBpeGNvb3JkID0gdGV4Q29vcmQgKiBzY3JlZW5TaXplOwogICAgb2Zmc2V0MCA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiB2ZWM0KC0wLjI1LCAtMC4xMjUsIDEuMjUsIC0wLjEyNSkpICsgdGV4Q29vcmQueHl4eTsKICAgIG9mZnNldDEgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogdmVjNCgtMC4xMjUsIC0wLjI1LCAtMC4xMjUsIDEuMjUpKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQyID0gKHNjcmVlblNpemVJbnYueHh5eSAqIHZlYzQoLTMyLjAsIDMyLjAsIC0zMi4wLCAzMi4wKSkgKyB2ZWM0KG9mZnNldDAueHosIG9mZnNldDEueXcpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.smaa_edge_detect_fragData0 = "s2311:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgY29sb3JUZXg7CgppbiBoaWdocCB2ZWM0IG9mZnNldDA7CmluIGhpZ2hwIHZlYzQgb2Zmc2V0MTsKaW4gaGlnaHAgdmVjNCBvZmZzZXQyOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7CgpoaWdocCB2ZWMyIFNNQUFDb2xvckVkZ2VEZXRlY3Rpb25QUyhoaWdocCB2ZWMyIHRleGNvb3JkKQp7CiAgICBoaWdocCB2ZWMyIHRocmVzaG9sZCA9IHZlYzIoMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgaGlnaHAgdmVjMyBDID0gdGV4dHVyZUxvZChjb2xvclRleCwgdGV4Y29vcmQsIDAuMCkueHl6OwogICAgaGlnaHAgdmVjMyBDbGVmdCA9IHRleHR1cmVMb2QoY29sb3JUZXgsIG9mZnNldDAueHksIDAuMCkueHl6OwogICAgaGlnaHAgdmVjMyB0ID0gYWJzKEMgLSBDbGVmdCk7CiAgICBoaWdocCB2ZWM0IGRlbHRhOwogICAgZGVsdGEueCA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgaGlnaHAgdmVjMyBDdG9wID0gdGV4dHVyZUxvZChjb2xvclRleCwgb2Zmc2V0MC56dywgMC4wKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDdG9wKTsKICAgIGRlbHRhLnkgPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIGhpZ2hwIHZlYzIgZWRnZXMgPSBzdGVwKHRocmVzaG9sZCwgZGVsdGEueHkpOwogICAgaWYgKGRvdChlZGdlcywgdmVjMigxLjApKSA9PSAwLjApCiAgICB7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGhpZ2hwIHZlYzMgQ3JpZ2h0ID0gdGV4dHVyZUxvZChjb2xvclRleCwgb2Zmc2V0MS54eSwgMC4wKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDcmlnaHQpOwogICAgZGVsdGEueiA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgaGlnaHAgdmVjMyBDYm90dG9tID0gdGV4dHVyZUxvZChjb2xvclRleCwgb2Zmc2V0MS56dywgMC4wKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDYm90dG9tKTsKICAgIGRlbHRhLncgPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIGhpZ2hwIHZlYzIgbWF4RGVsdGEgPSBtYXgoZGVsdGEueHksIGRlbHRhLnp3KTsKICAgIGhpZ2hwIHZlYzMgQ2xlZnRsZWZ0ID0gdGV4dHVyZUxvZChjb2xvclRleCwgb2Zmc2V0Mi54eSwgMC4wKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDbGVmdGxlZnQpOwogICAgZGVsdGEueiA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgaGlnaHAgdmVjMyBDdG9wdG9wID0gdGV4dHVyZUxvZChjb2xvclRleCwgb2Zmc2V0Mi56dywgMC4wKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDdG9wdG9wKTsKICAgIGRlbHRhLncgPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIG1heERlbHRhID0gbWF4KG1heERlbHRhLCBkZWx0YS56dyk7CiAgICBoaWdocCBmbG9hdCBmaW5hbERlbHRhID0gbWF4KG1heERlbHRhLngsIG1heERlbHRhLnkpOwogICAgZWRnZXMgKj0gc3RlcCh2ZWMyKGZpbmFsRGVsdGEpLCBkZWx0YS54eSAqIDIuMCk7CiAgICByZXR1cm4gZWRnZXM7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgIGhpZ2hwIHZlYzIgXzIwNCA9IFNNQUFDb2xvckVkZ2VEZXRlY3Rpb25QUyhwYXJhbSk7CiAgICBmcmFnQ29sb3IgPSB2ZWM0KF8yMDQueCwgXzIwNC55LCBmcmFnQ29sb3IueiwgZnJhZ0NvbG9yLncpOwp9Cgo";
kha_Shaders.smaa_edge_detect_vertData0 = "s635:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZUludjsKCm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHBvczsKb3V0IHZlYzQgb2Zmc2V0MDsKb3V0IHZlYzQgb2Zmc2V0MTsKb3V0IHZlYzQgb2Zmc2V0MjsKCnZvaWQgbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIHZlYzIoMC41KSkgKyB2ZWMyKDAuNSk7CiAgICBvZmZzZXQwID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoLTEuMCwgMC4wLCAwLjAsIC0xLjApKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQxID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoMS4wLCAwLjAsIDAuMCwgMS4wKSkgKyB0ZXhDb29yZC54eXh5OwogICAgb2Zmc2V0MiA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiB2ZWM0KC0yLjAsIDAuMCwgMC4wLCAtMi4wKSkgKyB0ZXhDb29yZC54eXh5OwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.smaa_neighborhood_blend_fragData0 = "s2638:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgYmxlbmRUZXg7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGNvbG9yVGV4Owp1bmlmb3JtIGhpZ2hwIHZlYzIgc2NyZWVuU2l6ZUludjsKCm91dCBoaWdocCB2ZWM0IGZyYWdDb2xvcjsKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBvZmZzZXQ7CgpoaWdocCB2ZWM0IHRleHR1cmVMb2RBKGhpZ2hwIHNhbXBsZXIyRCB0ZXgsIGhpZ2hwIHZlYzIgY29vcmRzLCBoaWdocCBmbG9hdCBsb2QpCnsKICAgIHJldHVybiB0ZXh0dXJlTG9kKHRleCwgY29vcmRzLCBsb2QpOwp9CgpoaWdocCB2ZWM0IFNNQUFOZWlnaGJvcmhvb2RCbGVuZGluZ1BTKGhpZ2hwIHZlYzIgdGV4Y29vcmQsIGhpZ2hwIHZlYzQgb2Zmc2V0XzEpCnsKICAgIGhpZ2hwIHZlYzQgYTsKICAgIGEueCA9IHRleHR1cmVMb2QoYmxlbmRUZXgsIG9mZnNldF8xLnh5LCAwLjApLnc7CiAgICBhLnkgPSB0ZXh0dXJlTG9kKGJsZW5kVGV4LCBvZmZzZXRfMS56dywgMC4wKS55OwogICAgaGlnaHAgdmVjMiBfNTQgPSB0ZXh0dXJlTG9kKGJsZW5kVGV4LCB0ZXhjb29yZCwgMC4wKS54ejsKICAgIGEgPSB2ZWM0KGEueCwgYS55LCBfNTQueSwgXzU0LngpOwogICAgaWYgKGRvdChhLCB2ZWM0KDEuMCkpIDwgOS45OTk5OTk3NDczNzg3NTE2MzU1NTE0NTI2MzY3MTg4ZS0wNikKICAgIHsKICAgICAgICBoaWdocCB2ZWM0IGNvbG9yID0gdGV4dHVyZUxvZChjb2xvclRleCwgdGV4Y29vcmQsIDAuMCk7CiAgICAgICAgcmV0dXJuIGNvbG9yOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIGJvb2wgaCA9IG1heChhLngsIGEueikgPiBtYXgoYS55LCBhLncpOwogICAgICAgIGhpZ2hwIHZlYzQgYmxlbmRpbmdPZmZzZXQgPSB2ZWM0KDAuMCwgYS55LCAwLjAsIGEudyk7CiAgICAgICAgaGlnaHAgdmVjMiBibGVuZGluZ1dlaWdodCA9IGEueXc7CiAgICAgICAgaWYgKGgpCiAgICAgICAgewogICAgICAgICAgICBibGVuZGluZ09mZnNldC54ID0gYS54OwogICAgICAgICAgICBibGVuZGluZ09mZnNldC55ID0gMC4wOwogICAgICAgICAgICBibGVuZGluZ09mZnNldC56ID0gYS56OwogICAgICAgICAgICBibGVuZGluZ09mZnNldC53ID0gMC4wOwogICAgICAgICAgICBibGVuZGluZ1dlaWdodC54ID0gYS54OwogICAgICAgICAgICBibGVuZGluZ1dlaWdodC55ID0gYS56OwogICAgICAgIH0KICAgICAgICBibGVuZGluZ1dlaWdodCAvPSB2ZWMyKGRvdChibGVuZGluZ1dlaWdodCwgdmVjMigxLjApKSk7CiAgICAgICAgaGlnaHAgdmVjMiB0YyA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzQgYmxlbmRpbmdDb29yZCA9IChibGVuZGluZ09mZnNldCAqIHZlYzQoc2NyZWVuU2l6ZUludiwgLXNjcmVlblNpemVJbnYpKSArIHRjLnh5eHk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbSA9IGJsZW5kaW5nQ29vcmQueHk7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IDAuMDsKICAgICAgICBoaWdocCB2ZWM0IGNvbG9yXzEgPSB0ZXh0dXJlTG9kQShjb2xvclRleCwgcGFyYW0sIHBhcmFtXzEpICogYmxlbmRpbmdXZWlnaHQueDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIgPSBibGVuZGluZ0Nvb3JkLnp3OwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzMgPSAwLjA7CiAgICAgICAgY29sb3JfMSArPSAodGV4dHVyZUxvZEEoY29sb3JUZXgsIHBhcmFtXzIsIHBhcmFtXzMpICogYmxlbmRpbmdXZWlnaHQueSk7CiAgICAgICAgcmV0dXJuIGNvbG9yXzE7CiAgICB9CiAgICByZXR1cm4gdmVjNCgwLjApOwp9Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMyIHBhcmFtID0gdGV4Q29vcmQ7CiAgICBoaWdocCB2ZWM0IHBhcmFtXzEgPSBvZmZzZXQ7CiAgICBmcmFnQ29sb3IgPSBTTUFBTmVpZ2hib3Job29kQmxlbmRpbmdQUyhwYXJhbSwgcGFyYW1fMSk7Cn0KCg";
kha_Shaders.smaa_neighborhood_blend_vertData0 = "s368:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZUludjsKCm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHBvczsKb3V0IHZlYzQgb2Zmc2V0OwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIG9mZnNldCA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiB2ZWM0KDEuMCwgMC4wLCAwLjAsIDEuMCkpICsgdGV4Q29vcmQueHl4eTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTsKfQoK";
kha_Shaders.ssao_pass_fragData0 = "s3547:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGdidWZmZXIwOwp1bmlmb3JtIGhpZ2hwIHZlYzMgZXllTG9vazsKdW5pZm9ybSBoaWdocCB2ZWMyIGNhbWVyYVByb2o7CnVuaWZvcm0gaGlnaHAgdmVjMiBzY3JlZW5TaXplOwp1bmlmb3JtIGhpZ2hwIHZlYzMgZXllOwp1bmlmb3JtIGhpZ2hwIG1hdDQgaW52VlA7CgppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgZmxvYXQgZnJhZ0NvbG9yOwppbiBoaWdocCB2ZWMzIHZpZXdSYXk7CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIHZlYzMgZ2V0UG9zTm9FeWUoaGlnaHAgdmVjMyBleWVMb29rXzEsIGhpZ2hwIHZlYzMgdmlld1JheV8xLCBoaWdocCBmbG9hdCBkZXB0aCwgaGlnaHAgdmVjMiBjYW1lcmFQcm9qXzEpCnsKICAgIGhpZ2hwIGZsb2F0IGxpbmVhckRlcHRoID0gY2FtZXJhUHJval8xLnkgLyAoKChkZXB0aCAqIDAuNSkgKyAwLjUpIC0gY2FtZXJhUHJval8xLngpOwogICAgaGlnaHAgZmxvYXQgdmlld1pEaXN0ID0gZG90KGV5ZUxvb2tfMSwgdmlld1JheV8xKTsKICAgIGhpZ2hwIHZlYzMgd3Bvc2l0aW9uID0gdmlld1JheV8xICogKGxpbmVhckRlcHRoIC8gdmlld1pEaXN0KTsKICAgIHJldHVybiB3cG9zaXRpb247Cn0KCmhpZ2hwIHZlYzMgZ2V0UG9zMk5vRXllKGhpZ2hwIHZlYzMgZXllXzEsIGhpZ2hwIG1hdDQgaW52VlBfMSwgaGlnaHAgZmxvYXQgZGVwdGgsIGhpZ2hwIHZlYzIgY29vcmQpCnsKICAgIGhpZ2hwIHZlYzQgcG9zID0gdmVjNCgoY29vcmQgKiAyLjApIC0gdmVjMigxLjApLCBkZXB0aCwgMS4wKTsKICAgIHBvcyA9IGludlZQXzEgKiBwb3M7CiAgICBoaWdocCB2ZWMzIF84NyA9IHBvcy54eXogLyB2ZWMzKHBvcy53KTsKICAgIHBvcyA9IHZlYzQoXzg3LngsIF84Ny55LCBfODcueiwgcG9zLncpOwogICAgcmV0dXJuIHBvcy54eXogLSBleWVfMTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgZmxvYXQgZGVwdGggPSAodGV4dHVyZUxvZChnYnVmZmVyRCwgdGV4Q29vcmQsIDAuMCkueCAqIDIuMCkgLSAxLjA7CiAgICBpZiAoZGVwdGggPT0gMS4wKQogICAgewogICAgICAgIGZyYWdDb2xvciA9IDEuMDsKICAgICAgICByZXR1cm47CiAgICB9CiAgICBoaWdocCB2ZWMyIGVuYyA9IHRleHR1cmVMb2QoZ2J1ZmZlcjAsIHRleENvb3JkLCAwLjApLnh5OwogICAgaGlnaHAgdmVjMyBuOwogICAgbi56ID0gKDEuMCAtIGFicyhlbmMueCkpIC0gYWJzKGVuYy55KTsKICAgIGhpZ2hwIHZlYzIgXzEzNjsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMzYgPSBlbmM7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzEzNiA9IG9jdGFoZWRyb25XcmFwKGVuYyk7CiAgICB9CiAgICBuID0gdmVjMyhfMTM2LngsIF8xMzYueSwgbi56KTsKICAgIG4gPSBub3JtYWxpemUobik7CiAgICBoaWdocCB2ZWMzIHZyYXkgPSBub3JtYWxpemUodmlld1JheSk7CiAgICBoaWdocCB2ZWMzIGN1cnJlbnRQb3MgPSBnZXRQb3NOb0V5ZShleWVMb29rLCB2cmF5LCBkZXB0aCwgY2FtZXJhUHJvaik7CiAgICBoaWdocCBmbG9hdCBjdXJyZW50RGlzdGFuY2UgPSBsZW5ndGgoY3VycmVudFBvcyk7CiAgICBoaWdocCBmbG9hdCBjdXJyZW50RGlzdGFuY2VBID0gKGN1cnJlbnREaXN0YW5jZSAqIDIwLjApICogMS4wOwogICAgaGlnaHAgZmxvYXQgY3VycmVudERpc3RhbmNlQiA9IGN1cnJlbnREaXN0YW5jZSAqIDAuMDAwNTAwMDAwMDIzNzQ4NzI1NjUyNjk0NzAyMTQ4NDM3NTsKICAgIGl2ZWMyIHB4ID0gaXZlYzIodGV4Q29vcmQgKiBzY3JlZW5TaXplKTsKICAgIGhpZ2hwIGZsb2F0IHBoaSA9IGZsb2F0KCgoMyAqIHB4LngpIF4gKHB4LnkgKyAocHgueCAqIHB4LnkpKSkgKiAxMCk7CiAgICBmcmFnQ29sb3IgPSAwLjA7CiAgICBmb3IgKGludCBpID0gMDsgaSA8IDg7IGkrKykKICAgIHsKICAgICAgICBoaWdocCBmbG9hdCB0aGV0YSA9ICgwLjc4NTM5ODE4NTI1MzE0MzMxMDU0Njg3NSAqIChmbG9hdChpKSArIDAuNSkpICsgcGhpOwogICAgICAgIGhpZ2hwIHZlYzIgayA9IHZlYzIoY29zKHRoZXRhKSwgc2luKHRoZXRhKSkgLyB2ZWMyKGN1cnJlbnREaXN0YW5jZUEpOwogICAgICAgIGRlcHRoID0gKHRleHR1cmVMb2QoZ2J1ZmZlckQsIHRleENvb3JkICsgaywgMC4wKS54ICogMi4wKSAtIDEuMDsKICAgICAgICBoaWdocCB2ZWMzIHBvcyA9IGdldFBvczJOb0V5ZShleWUsIGludlZQLCBkZXB0aCwgdGV4Q29vcmQgKyBrKSAtIGN1cnJlbnRQb3M7CiAgICAgICAgZnJhZ0NvbG9yICs9IChtYXgoMC4wLCBkb3QocG9zLCBuKSAtIGN1cnJlbnREaXN0YW5jZUIpIC8gKGRvdChwb3MsIHBvcykgKyAwLjAxNDk5OTk5OTY2NDcyMzg3MzEzODQyNzczNDM3NSkpOwogICAgfQogICAgZnJhZ0NvbG9yICo9IDAuMDM3NTAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1OwogICAgZnJhZ0NvbG9yID0gMS4wIC0gZnJhZ0NvbG9yOwp9Cgo";
kha_Shaders.translucent_resolve_fragData0 = "s778:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlcjA7CnVuaWZvcm0gaGlnaHAgdmVjMiB0ZXhTaXplOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBnYnVmZmVyMTsKCmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cm91dCBoaWdocCB2ZWM0IGZyYWdDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgYWNjdW0gPSB0ZXhlbEZldGNoKGdidWZmZXIwLCBpdmVjMih0ZXhDb29yZCAqIHRleFNpemUpLCAwKTsKICAgIGhpZ2hwIGZsb2F0IHJldmVhbGFnZSA9IDEuMCAtIGFjY3VtLnc7CiAgICBpZiAocmV2ZWFsYWdlID09IDAuMCkKICAgIHsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgaGlnaHAgZmxvYXQgZiA9IHRleGVsRmV0Y2goZ2J1ZmZlcjEsIGl2ZWMyKHRleENvb3JkICogdGV4U2l6ZSksIDApLng7CiAgICBmcmFnQ29sb3IgPSB2ZWM0KGFjY3VtLnh5eiAvIHZlYzMoY2xhbXAoZiwgOS45OTk5OTk3NDczNzg3NTE2MzU1NTE0NTI2MzY3MTg4ZS0wNSwgNTAwMC4wKSksIHJldmVhbGFnZSk7Cn0KCg";
kha_Shaders.world_pass_fragData0 = "s334:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMzIGJhY2tncm91bmRDb2w7CgpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3I7CmluIGhpZ2hwIHZlYzMgbm9ybWFsOwoKdm9pZCBtYWluKCkKewogICAgZnJhZ0NvbG9yID0gdmVjNChiYWNrZ3JvdW5kQ29sLngsIGJhY2tncm91bmRDb2wueSwgYmFja2dyb3VuZENvbC56LCBmcmFnQ29sb3Iudyk7Cn0KCg";
kha_Shaders.world_pass_vertData0 = "s258:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgU01WUDsKCm91dCB2ZWMzIG5vcm1hbDsKaW4gdmVjMyBub3I7CmluIHZlYzMgcG9zOwoKdm9pZCBtYWluKCkKewogICAgbm9ybWFsID0gbm9yOwogICAgdmVjNCBwb3NpdGlvbiA9IFNNVlAgKiB2ZWM0KHBvcywgMS4wKTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3NpdGlvbik7Cn0KCg";
kha_System.renderListeners = [];
kha_System.foregroundListeners = [];
kha_System.backgroundListeners = [];
kha_System.shutdownListeners = [];
kha_SystemImpl.mobile = false;
kha_SystemImpl.ios = false;
kha_SystemImpl.mobileAudioPlaying = false;
kha_SystemImpl.chrome = false;
kha_SystemImpl.firefox = false;
kha_SystemImpl.ie = false;
kha_SystemImpl.insideInputEvent = false;
kha_SystemImpl.leftMouseCtrlDown = false;
kha_SystemImpl.minimumScroll = 999;
kha_SystemImpl.lastFirstTouchX = 0;
kha_SystemImpl.lastFirstTouchY = 0;
kha_SystemImpl.iosSoundEnabled = false;
kha_SystemImpl.soundEnabled = false;
kha_SystemImpl.iosTouchs = [];
kha_Window.windows = [];
kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE = [1.0649863e-07,1.1341951e-07,1.2079015e-07,1.2863978e-07,1.3699951e-07,1.4590251e-07,1.5538408e-07,1.6548181e-07,1.7623575e-07,1.8768855e-07,1.9988561e-07,2.1287530e-07,2.2670913e-07,2.4144197e-07,2.5713223e-07,2.7384213e-07,2.9163793e-07,3.1059021e-07,3.3077411e-07,3.5226968e-07,3.7516214e-07,3.9954229e-07,4.2550680e-07,4.5315863e-07,4.8260743e-07,5.1396998e-07,5.4737065e-07,5.8294187e-07,6.2082472e-07,6.6116941e-07,7.0413592e-07,7.4989464e-07,7.9862701e-07,8.5052630e-07,9.0579828e-07,9.6466216e-07,1.0273513e-06,1.0941144e-06,1.1652161e-06,1.2409384e-06,1.3215816e-06,1.4074654e-06,1.4989305e-06,1.5963394e-06,1.7000785e-06,1.8105592e-06,1.9282195e-06,2.0535261e-06,2.1869758e-06,2.3290978e-06,2.4804557e-06,2.6416497e-06,2.8133190e-06,2.9961443e-06,3.1908506e-06,3.3982101e-06,3.6190449e-06,3.8542308e-06,4.1047004e-06,4.3714470e-06,4.6555282e-06,4.9580707e-06,5.2802740e-06,5.6234160e-06,5.9888572e-06,6.3780469e-06,6.7925283e-06,7.2339451e-06,7.7040476e-06,8.2047000e-06,8.7378876e-06,9.3057248e-06,9.9104632e-06,1.0554501e-05,1.1240392e-05,1.1970856e-05,1.2748789e-05,1.3577278e-05,1.4459606e-05,1.5399272e-05,1.6400004e-05,1.7465768e-05,1.8600792e-05,1.9809576e-05,2.1096914e-05,2.2467911e-05,2.3928002e-05,2.5482978e-05,2.7139006e-05,2.8902651e-05,3.0780908e-05,3.2781225e-05,3.4911534e-05,3.7180282e-05,3.9596466e-05,4.2169667e-05,4.4910090e-05,4.7828601e-05,5.0936773e-05,5.4246931e-05,5.7772202e-05,6.1526565e-05,6.5524908e-05,6.9783085e-05,7.4317983e-05,7.9147585e-05,8.4291040e-05,8.9768747e-05,9.5602426e-05,0.00010181521,0.00010843174,0.00011547824,0.00012298267,0.00013097477,0.00013948625,0.00014855085,0.00015820453,0.00016848555,0.00017943469,0.00019109536,0.00020351382,0.00021673929,0.00023082423,0.00024582449,0.00026179955,0.00027881276,0.00029693158,0.00031622787,0.00033677814,0.00035866388,0.00038197188,0.00040679456,0.00043323036,0.00046138411,0.00049136745,0.00052329927,0.00055730621,0.00059352311,0.00063209358,0.00067317058,0.00071691700,0.00076350630,0.00081312324,0.00086596457,0.00092223983,0.00098217216,0.0010459992,0.0011139742,0.0011863665,0.0012634633,0.0013455702,0.0014330129,0.0015261382,0.0016253153,0.0017309374,0.0018434235,0.0019632195,0.0020908006,0.0022266726,0.0023713743,0.0025254795,0.0026895994,0.0028643847,0.0030505286,0.0032487691,0.0034598925,0.0036847358,0.0039241906,0.0041792066,0.0044507950,0.0047400328,0.0050480668,0.0053761186,0.0057254891,0.0060975636,0.0064938176,0.0069158225,0.0073652516,0.0078438871,0.0083536271,0.0088964928,0.009474637,0.010090352,0.010746080,0.011444421,0.012188144,0.012980198,0.013823725,0.014722068,0.015678791,0.016697687,0.017782797,0.018938423,0.020169149,0.021479854,0.022875735,0.024362330,0.025945531,0.027631618,0.029427276,0.031339626,0.033376252,0.035545228,0.037855157,0.040315199,0.042935108,0.045725273,0.048696758,0.051861348,0.055231591,0.058820850,0.062643361,0.066714279,0.071049749,0.075666962,0.080584227,0.085821044,0.091398179,0.097337747,0.10366330,0.11039993,0.11757434,0.12521498,0.13335215,0.14201813,0.15124727,0.16107617,0.17154380,0.18269168,0.19456402,0.20720788,0.22067342,0.23501402,0.25028656,0.26655159,0.28387361,0.30232132,0.32196786,0.34289114,0.36517414,0.38890521,0.41417847,0.44109412,0.46975890,0.50028648,0.53279791,0.56742212,0.60429640,0.64356699,0.68538959,0.72993007,0.77736504,0.82788260,0.88168307,0.9389798,1.0];
kha_graphics2_Graphics.fontGlyphs = (function($this) {
	var $r;
	var _g = [];
	{
		var _g1 = 32;
		while(_g1 < 256) {
			var i = _g1++;
			_g.push(i);
		}
	}
	$r = _g;
	return $r;
}(this));
kha_input_Gamepad.__meta__ = { statics : { sendConnectEvent : { input : null}, sendDisconnectEvent : { input : null}}, fields : { sendAxisEvent : { input : null}, sendButtonEvent : { input : null}}};
kha_input_Gamepad.instances = [];
kha_input_Gamepad.connectListeners = [];
kha_input_Gamepad.disconnectListeners = [];
kha_input_Keyboard.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendPressEvent : { input : null}}};
kha_input_Mouse.__meta__ = { fields : { sendLeaveEvent : { input : null}, sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendMoveEvent : { input : null}, sendWheelEvent : { input : null}}};
kha_internal_HdrFormat.exposurePattern = new EReg("EXPOSURE=\\s*([0-9]*[.][0-9]*)","i");
kha_internal_HdrFormat.formatPattern = new EReg("FORMAT=32-bit_rle_rgbe","i");
kha_internal_HdrFormat.widthHeightPattern = new EReg("-Y ([0-9]+) \\+X ([0-9]+)","i");
kha_js_AEAudioChannel.todo = [];
kha_js_Sound.loading = [];
kha_netsync_ControllerBuilder.nextId = 0;
zui_Handle.global = new zui_Handle();
zui_Canvas.assetMap = new haxe_ds_IntMap();
zui_Canvas.events = [];
zui_Canvas.screenW = -1;
zui_Canvas.screenH = -1;
zui_Canvas.h = new zui_Handle();
zui_Themes.dark = { FONT_SIZE : 13, ELEMENT_W : 100, ELEMENT_H : 22, ELEMENT_OFFSET : 2, ARROW_SIZE : 5, BUTTON_H : 17, CHECK_SIZE : 15, CHECK_SELECT_SIZE : 8, SCROLL_W : 8, TEXT_OFFSET : 8, TAB_W : 12, LINE_STRENGTH : 1, FLASH_SPEED : 0.5, TOOLTIP_DELAY : 1.0, FILL_WINDOW_BG : false, FILL_BUTTON_BG : true, FILL_ACCENT_BG : false, WINDOW_BG_COL : -14671840, WINDOW_TINT_COL : -1, ACCENT_COL : -12566464, ACCENT_HOVER_COL : -11513776, ACCENT_SELECT_COL : -10066330, PANEL_BG_COL : -16777216, PANEL_TEXT_COL : -1118482, BUTTON_COL : -13948117, BUTTON_TEXT_COL : -3487289, BUTTON_HOVER_COL : -12895429, BUTTON_PRESSED_COL : -15000805, TEXT_COL : -3487289, LABEL_COL : -5592406, ARROW_COL : -3487289, SEPARATOR_COL : -14277082};
zui_Themes.light = { FONT_SIZE : 26, ELEMENT_W : 200, ELEMENT_H : 44, ELEMENT_OFFSET : 4, ARROW_SIZE : 10, BUTTON_H : 34, CHECK_SIZE : 30, CHECK_SELECT_SIZE : 16, SCROLL_W : 16, TEXT_OFFSET : 16, TAB_W : 24, LINE_STRENGTH : 2, FLASH_SPEED : 0.5, TOOLTIP_DELAY : 1.0, FILL_WINDOW_BG : false, FILL_BUTTON_BG : true, FILL_ACCENT_BG : false, WINDOW_BG_COL : -1052689, WINDOW_TINT_COL : -14540254, ACCENT_COL : -1118482, ACCENT_HOVER_COL : -4473925, ACCENT_SELECT_COL : -5592406, PANEL_BG_COL : -1, PANEL_TEXT_COL : -14540254, BUTTON_COL : -3355444, BUTTON_TEXT_COL : -14540254, BUTTON_HOVER_COL : -5000269, BUTTON_PRESSED_COL : -5131855, TEXT_COL : -6710887, LABEL_COL : -5592406, ARROW_COL : -3487289, SEPARATOR_COL : -6710887};
zui_Zui.textToPaste = "";
zui_Zui.textToCopy = "";
zui_Zui.isCut = false;
zui_Zui.comboFirst = true;
// !!! MANUAL EDIT. REMOVED. Let me specify when to start the game instead.
//Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
